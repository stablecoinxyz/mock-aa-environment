{"id":"e0393f91c7d728ccc1ddc99495bc8619","_format":"hh-sol-build-info-1","solcVersion":"0.8.23","solcLongVersion":"0.8.23+commit.f704f362","input":{"language":"Solidity","sources":{"@account-abstraction/contracts/core/BasePaymaster.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.23;\n\n/* solhint-disable reason-string */\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport \"../interfaces/IPaymaster.sol\";\nimport \"../interfaces/IEntryPoint.sol\";\nimport \"./UserOperationLib.sol\";\n/**\n * Helper class for creating a paymaster.\n * provides helper methods for staking.\n * Validates that the postOp is called only by the entryPoint.\n */\nabstract contract BasePaymaster is IPaymaster, Ownable {\n    IEntryPoint public immutable entryPoint;\n\n    uint256 internal constant PAYMASTER_VALIDATION_GAS_OFFSET = UserOperationLib.PAYMASTER_VALIDATION_GAS_OFFSET;\n    uint256 internal constant PAYMASTER_POSTOP_GAS_OFFSET = UserOperationLib.PAYMASTER_POSTOP_GAS_OFFSET;\n    uint256 internal constant PAYMASTER_DATA_OFFSET = UserOperationLib.PAYMASTER_DATA_OFFSET;\n\n    constructor(IEntryPoint _entryPoint) Ownable(msg.sender) {\n        _validateEntryPointInterface(_entryPoint);\n        entryPoint = _entryPoint;\n    }\n\n    //sanity check: make sure this EntryPoint was compiled against the same\n    // IEntryPoint of this paymaster\n    function _validateEntryPointInterface(IEntryPoint _entryPoint) internal virtual {\n        require(IERC165(address(_entryPoint)).supportsInterface(type(IEntryPoint).interfaceId), \"IEntryPoint interface mismatch\");\n    }\n\n    /// @inheritdoc IPaymaster\n    function validatePaymasterUserOp(\n        PackedUserOperation calldata userOp,\n        bytes32 userOpHash,\n        uint256 maxCost\n    ) external override returns (bytes memory context, uint256 validationData) {\n        _requireFromEntryPoint();\n        return _validatePaymasterUserOp(userOp, userOpHash, maxCost);\n    }\n\n    /**\n     * Validate a user operation.\n     * @param userOp     - The user operation.\n     * @param userOpHash - The hash of the user operation.\n     * @param maxCost    - The maximum cost of the user operation.\n     */\n    function _validatePaymasterUserOp(\n        PackedUserOperation calldata userOp,\n        bytes32 userOpHash,\n        uint256 maxCost\n    ) internal virtual returns (bytes memory context, uint256 validationData);\n\n    /// @inheritdoc IPaymaster\n    function postOp(\n        PostOpMode mode,\n        bytes calldata context,\n        uint256 actualGasCost,\n        uint256 actualUserOpFeePerGas\n    ) external override {\n        _requireFromEntryPoint();\n        _postOp(mode, context, actualGasCost, actualUserOpFeePerGas);\n    }\n\n    /**\n     * Post-operation handler.\n     * (verified to be called only through the entryPoint)\n     * @dev If subclass returns a non-empty context from validatePaymasterUserOp,\n     *      it must also implement this method.\n     * @param mode          - Enum with the following options:\n     *                        opSucceeded - User operation succeeded.\n     *                        opReverted  - User op reverted. The paymaster still has to pay for gas.\n     *                        postOpReverted - never passed in a call to postOp().\n     * @param context       - The context value returned by validatePaymasterUserOp\n     * @param actualGasCost - Actual gas used so far (without this postOp call).\n     * @param actualUserOpFeePerGas - the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas\n     *                        and maxPriorityFee (and basefee)\n     *                        It is not the same as tx.gasprice, which is what the bundler pays.\n     */\n    function _postOp(\n        PostOpMode mode,\n        bytes calldata context,\n        uint256 actualGasCost,\n        uint256 actualUserOpFeePerGas\n    ) internal virtual {\n        (mode, context, actualGasCost, actualUserOpFeePerGas); // unused params\n        // subclass must override this method if validatePaymasterUserOp returns a context\n        revert(\"must override\");\n    }\n\n    /**\n     * Add a deposit for this paymaster, used for paying for transaction fees.\n     */\n    function deposit() public payable {\n        entryPoint.depositTo{value: msg.value}(address(this));\n    }\n\n    /**\n     * Withdraw value from the deposit.\n     * @param withdrawAddress - Target to send to.\n     * @param amount          - Amount to withdraw.\n     */\n    function withdrawTo(\n        address payable withdrawAddress,\n        uint256 amount\n    ) public onlyOwner {\n        entryPoint.withdrawTo(withdrawAddress, amount);\n    }\n\n    /**\n     * Add stake for this paymaster.\n     * This method can also carry eth value to add to the current stake.\n     * @param unstakeDelaySec - The unstake delay for this paymaster. Can only be increased.\n     */\n    function addStake(uint32 unstakeDelaySec) external payable onlyOwner {\n        entryPoint.addStake{value: msg.value}(unstakeDelaySec);\n    }\n\n    /**\n     * Return current paymaster's deposit on the entryPoint.\n     */\n    function getDeposit() public view returns (uint256) {\n        return entryPoint.balanceOf(address(this));\n    }\n\n    /**\n     * Unlock the stake, in order to withdraw it.\n     * The paymaster can't serve requests once unlocked, until it calls addStake again\n     */\n    function unlockStake() external onlyOwner {\n        entryPoint.unlockStake();\n    }\n\n    /**\n     * Withdraw the entire paymaster's stake.\n     * stake must be unlocked first (and then wait for the unstakeDelay to be over)\n     * @param withdrawAddress - The address to send withdrawn value.\n     */\n    function withdrawStake(address payable withdrawAddress) external onlyOwner {\n        entryPoint.withdrawStake(withdrawAddress);\n    }\n\n    /**\n     * Validate the call is made from a valid entrypoint\n     */\n    function _requireFromEntryPoint() internal virtual {\n        require(msg.sender == address(entryPoint), \"Sender not EntryPoint\");\n    }\n}\n"},"@account-abstraction/contracts/core/Helpers.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.23;\n\n/* solhint-disable no-inline-assembly */\n\n\n /*\n  * For simulation purposes, validateUserOp (and validatePaymasterUserOp)\n  * must return this value in case of signature failure, instead of revert.\n  */\nuint256 constant SIG_VALIDATION_FAILED = 1;\n\n\n/*\n * For simulation purposes, validateUserOp (and validatePaymasterUserOp)\n * return this value on success.\n */\nuint256 constant SIG_VALIDATION_SUCCESS = 0;\n\n\n/**\n * Returned data from validateUserOp.\n * validateUserOp returns a uint256, which is created by `_packedValidationData` and\n * parsed by `_parseValidationData`.\n * @param aggregator  - address(0) - The account validated the signature by itself.\n *                      address(1) - The account failed to validate the signature.\n *                      otherwise - This is an address of a signature aggregator that must\n *                                  be used to validate the signature.\n * @param validAfter  - This UserOp is valid only after this timestamp.\n * @param validaUntil - This UserOp is valid only up to this timestamp.\n */\nstruct ValidationData {\n    address aggregator;\n    uint48 validAfter;\n    uint48 validUntil;\n}\n\n/**\n * Extract sigFailed, validAfter, validUntil.\n * Also convert zero validUntil to type(uint48).max.\n * @param validationData - The packed validation data.\n */\nfunction _parseValidationData(\n    uint256 validationData\n) pure returns (ValidationData memory data) {\n    address aggregator = address(uint160(validationData));\n    uint48 validUntil = uint48(validationData >> 160);\n    if (validUntil == 0) {\n        validUntil = type(uint48).max;\n    }\n    uint48 validAfter = uint48(validationData >> (48 + 160));\n    return ValidationData(aggregator, validAfter, validUntil);\n}\n\n/**\n * Helper to pack the return value for validateUserOp.\n * @param data - The ValidationData to pack.\n */\nfunction _packValidationData(\n    ValidationData memory data\n) pure returns (uint256) {\n    return\n        uint160(data.aggregator) |\n        (uint256(data.validUntil) << 160) |\n        (uint256(data.validAfter) << (160 + 48));\n}\n\n/**\n * Helper to pack the return value for validateUserOp, when not using an aggregator.\n * @param sigFailed  - True for signature failure, false for success.\n * @param validUntil - Last timestamp this UserOperation is valid (or zero for infinite).\n * @param validAfter - First timestamp this UserOperation is valid.\n */\nfunction _packValidationData(\n    bool sigFailed,\n    uint48 validUntil,\n    uint48 validAfter\n) pure returns (uint256) {\n    return\n        (sigFailed ? 1 : 0) |\n        (uint256(validUntil) << 160) |\n        (uint256(validAfter) << (160 + 48));\n}\n\n/**\n * keccak function over calldata.\n * @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it.\n */\n    function calldataKeccak(bytes calldata data) pure returns (bytes32 ret) {\n        assembly (\"memory-safe\") {\n            let mem := mload(0x40)\n            let len := data.length\n            calldatacopy(mem, data.offset, len)\n            ret := keccak256(mem, len)\n        }\n    }\n\n\n/**\n * The minimum of two numbers.\n * @param a - First number.\n * @param b - Second number.\n */\n    function min(uint256 a, uint256 b) pure returns (uint256) {\n        return a < b ? a : b;\n    }\n"},"@account-abstraction/contracts/core/UserOperationLib.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.23;\n\n/* solhint-disable no-inline-assembly */\n\nimport \"../interfaces/PackedUserOperation.sol\";\nimport {calldataKeccak, min} from \"./Helpers.sol\";\n\n/**\n * Utility functions helpful when working with UserOperation structs.\n */\nlibrary UserOperationLib {\n\n    uint256 public constant PAYMASTER_VALIDATION_GAS_OFFSET = 20;\n    uint256 public constant PAYMASTER_POSTOP_GAS_OFFSET = 36;\n    uint256 public constant PAYMASTER_DATA_OFFSET = 52;\n    /**\n     * Get sender from user operation data.\n     * @param userOp - The user operation data.\n     */\n    function getSender(\n        PackedUserOperation calldata userOp\n    ) internal pure returns (address) {\n        address data;\n        //read sender from userOp, which is first userOp member (saves 800 gas...)\n        assembly {\n            data := calldataload(userOp)\n        }\n        return address(uint160(data));\n    }\n\n    /**\n     * Relayer/block builder might submit the TX with higher priorityFee,\n     * but the user should not pay above what he signed for.\n     * @param userOp - The user operation data.\n     */\n    function gasPrice(\n        PackedUserOperation calldata userOp\n    ) internal view returns (uint256) {\n        unchecked {\n            (uint256 maxPriorityFeePerGas, uint256 maxFeePerGas) = unpackUints(userOp.gasFees);\n            if (maxFeePerGas == maxPriorityFeePerGas) {\n                //legacy mode (for networks that don't support basefee opcode)\n                return maxFeePerGas;\n            }\n            return min(maxFeePerGas, maxPriorityFeePerGas + block.basefee);\n        }\n    }\n\n    /**\n     * Pack the user operation data into bytes for hashing.\n     * @param userOp - The user operation data.\n     */\n    function encode(\n        PackedUserOperation calldata userOp\n    ) internal pure returns (bytes memory ret) {\n        address sender = getSender(userOp);\n        uint256 nonce = userOp.nonce;\n        bytes32 hashInitCode = calldataKeccak(userOp.initCode);\n        bytes32 hashCallData = calldataKeccak(userOp.callData);\n        bytes32 accountGasLimits = userOp.accountGasLimits;\n        uint256 preVerificationGas = userOp.preVerificationGas;\n        bytes32 gasFees = userOp.gasFees;\n        bytes32 hashPaymasterAndData = calldataKeccak(userOp.paymasterAndData);\n\n        return abi.encode(\n            sender, nonce,\n            hashInitCode, hashCallData,\n            accountGasLimits, preVerificationGas, gasFees,\n            hashPaymasterAndData\n        );\n    }\n\n    function unpackUints(\n        bytes32 packed\n    ) internal pure returns (uint256 high128, uint256 low128) {\n        return (uint128(bytes16(packed)), uint128(uint256(packed)));\n    }\n\n    //unpack just the high 128-bits from a packed value\n    function unpackHigh128(bytes32 packed) internal pure returns (uint256) {\n        return uint256(packed) >> 128;\n    }\n\n    // unpack just the low 128-bits from a packed value\n    function unpackLow128(bytes32 packed) internal pure returns (uint256) {\n        return uint128(uint256(packed));\n    }\n\n    function unpackMaxPriorityFeePerGas(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return unpackHigh128(userOp.gasFees);\n    }\n\n    function unpackMaxFeePerGas(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return unpackLow128(userOp.gasFees);\n    }\n\n    function unpackVerificationGasLimit(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return unpackHigh128(userOp.accountGasLimits);\n    }\n\n    function unpackCallGasLimit(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return unpackLow128(userOp.accountGasLimits);\n    }\n\n    function unpackPaymasterVerificationGasLimit(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return uint128(bytes16(userOp.paymasterAndData[PAYMASTER_VALIDATION_GAS_OFFSET : PAYMASTER_POSTOP_GAS_OFFSET]));\n    }\n\n    function unpackPostOpGasLimit(PackedUserOperation calldata userOp)\n    internal pure returns (uint256) {\n        return uint128(bytes16(userOp.paymasterAndData[PAYMASTER_POSTOP_GAS_OFFSET : PAYMASTER_DATA_OFFSET]));\n    }\n\n    function unpackPaymasterStaticFields(\n        bytes calldata paymasterAndData\n    ) internal pure returns (address paymaster, uint256 validationGasLimit, uint256 postOpGasLimit) {\n        return (\n            address(bytes20(paymasterAndData[: PAYMASTER_VALIDATION_GAS_OFFSET])),\n            uint128(bytes16(paymasterAndData[PAYMASTER_VALIDATION_GAS_OFFSET : PAYMASTER_POSTOP_GAS_OFFSET])),\n            uint128(bytes16(paymasterAndData[PAYMASTER_POSTOP_GAS_OFFSET : PAYMASTER_DATA_OFFSET]))\n        );\n    }\n\n    /**\n     * Hash the user operation data.\n     * @param userOp - The user operation data.\n     */\n    function hash(\n        PackedUserOperation calldata userOp\n    ) internal pure returns (bytes32) {\n        return keccak256(encode(userOp));\n    }\n}\n"},"@account-abstraction/contracts/interfaces/IAggregator.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.7.5;\n\nimport \"./PackedUserOperation.sol\";\n\n/**\n * Aggregated Signatures validator.\n */\ninterface IAggregator {\n    /**\n     * Validate aggregated signature.\n     * Revert if the aggregated signature does not match the given list of operations.\n     * @param userOps   - Array of UserOperations to validate the signature for.\n     * @param signature - The aggregated signature.\n     */\n    function validateSignatures(\n        PackedUserOperation[] calldata userOps,\n        bytes calldata signature\n    ) external view;\n\n    /**\n     * Validate signature of a single userOp.\n     * This method should be called by bundler after EntryPointSimulation.simulateValidation() returns\n     * the aggregator this account uses.\n     * First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n     * @param userOp        - The userOperation received from the user.\n     * @return sigForUserOp - The value to put into the signature field of the userOp when calling handleOps.\n     *                        (usually empty, unless account and aggregator support some kind of \"multisig\".\n     */\n    function validateUserOpSignature(\n        PackedUserOperation calldata userOp\n    ) external view returns (bytes memory sigForUserOp);\n\n    /**\n     * Aggregate multiple signatures into a single value.\n     * This method is called off-chain to calculate the signature to pass with handleOps()\n     * bundler MAY use optimized custom code perform this aggregation.\n     * @param userOps              - Array of UserOperations to collect the signatures from.\n     * @return aggregatedSignature - The aggregated signature.\n     */\n    function aggregateSignatures(\n        PackedUserOperation[] calldata userOps\n    ) external view returns (bytes memory aggregatedSignature);\n}\n"},"@account-abstraction/contracts/interfaces/IEntryPoint.sol":{"content":"/**\n ** Account-Abstraction (EIP-4337) singleton EntryPoint implementation.\n ** Only one instance required on each chain.\n **/\n// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.7.5;\n\n/* solhint-disable avoid-low-level-calls */\n/* solhint-disable no-inline-assembly */\n/* solhint-disable reason-string */\n\nimport \"./PackedUserOperation.sol\";\nimport \"./IStakeManager.sol\";\nimport \"./IAggregator.sol\";\nimport \"./INonceManager.sol\";\n\ninterface IEntryPoint is IStakeManager, INonceManager {\n    /***\n     * An event emitted after each successful request.\n     * @param userOpHash    - Unique identifier for the request (hash its entire content, except signature).\n     * @param sender        - The account that generates this request.\n     * @param paymaster     - If non-null, the paymaster that pays for this request.\n     * @param nonce         - The nonce value from the request.\n     * @param success       - True if the sender transaction succeeded, false if reverted.\n     * @param actualGasCost - Actual amount paid (by account or paymaster) for this UserOperation.\n     * @param actualGasUsed - Total gas used by this UserOperation (including preVerification, creation,\n     *                        validation and execution).\n     */\n    event UserOperationEvent(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        address indexed paymaster,\n        uint256 nonce,\n        bool success,\n        uint256 actualGasCost,\n        uint256 actualGasUsed\n    );\n\n    /**\n     * Account \"sender\" was deployed.\n     * @param userOpHash - The userOp that deployed this account. UserOperationEvent will follow.\n     * @param sender     - The account that is deployed\n     * @param factory    - The factory used to deploy this account (in the initCode)\n     * @param paymaster  - The paymaster used by this UserOp\n     */\n    event AccountDeployed(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        address factory,\n        address paymaster\n    );\n\n    /**\n     * An event emitted if the UserOperation \"callData\" reverted with non-zero length.\n     * @param userOpHash   - The request unique identifier.\n     * @param sender       - The sender of this request.\n     * @param nonce        - The nonce used in the request.\n     * @param revertReason - The return bytes from the (reverted) call to \"callData\".\n     */\n    event UserOperationRevertReason(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        uint256 nonce,\n        bytes revertReason\n    );\n\n    /**\n     * An event emitted if the UserOperation Paymaster's \"postOp\" call reverted with non-zero length.\n     * @param userOpHash   - The request unique identifier.\n     * @param sender       - The sender of this request.\n     * @param nonce        - The nonce used in the request.\n     * @param revertReason - The return bytes from the (reverted) call to \"callData\".\n     */\n    event PostOpRevertReason(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        uint256 nonce,\n        bytes revertReason\n    );\n\n    /**\n     * UserOp consumed more than prefund. The UserOperation is reverted, and no refund is made.\n     * @param userOpHash   - The request unique identifier.\n     * @param sender       - The sender of this request.\n     * @param nonce        - The nonce used in the request.\n     */\n    event UserOperationPrefundTooLow(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        uint256 nonce\n    );\n\n    /**\n     * An event emitted by handleOps(), before starting the execution loop.\n     * Any event emitted before this event, is part of the validation.\n     */\n    event BeforeExecution();\n\n    /**\n     * Signature aggregator used by the following UserOperationEvents within this bundle.\n     * @param aggregator - The aggregator used for the following UserOperationEvents.\n     */\n    event SignatureAggregatorChanged(address indexed aggregator);\n\n    /**\n     * A custom revert error of handleOps, to identify the offending op.\n     * Should be caught in off-chain handleOps simulation and not happen on-chain.\n     * Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\n     * NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n     * @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n     * @param reason  - Revert reason. The string starts with a unique code \"AAmn\",\n     *                  where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n     *                  so a failure can be attributed to the correct entity.\n     */\n    error FailedOp(uint256 opIndex, string reason);\n\n    /**\n     * A custom revert error of handleOps, to report a revert by account or paymaster.\n     * @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n     * @param reason  - Revert reason. see FailedOp(uint256,string), above\n     * @param inner   - data from inner cought revert reason\n     * @dev note that inner is truncated to 2048 bytes\n     */\n    error FailedOpWithRevert(uint256 opIndex, string reason, bytes inner);\n\n    error PostOpReverted(bytes returnData);\n\n    /**\n     * Error case when a signature aggregator fails to verify the aggregated signature it had created.\n     * @param aggregator The aggregator that failed to verify the signature\n     */\n    error SignatureValidationFailed(address aggregator);\n\n    // Return value of getSenderAddress.\n    error SenderAddressResult(address sender);\n\n    // UserOps handled, per aggregator.\n    struct UserOpsPerAggregator {\n        PackedUserOperation[] userOps;\n        // Aggregator address\n        IAggregator aggregator;\n        // Aggregated signature\n        bytes signature;\n    }\n\n    /**\n     * Execute a batch of UserOperations.\n     * No signature aggregator is used.\n     * If any account requires an aggregator (that is, it returned an aggregator when\n     * performing simulateValidation), then handleAggregatedOps() must be used instead.\n     * @param ops         - The operations to execute.\n     * @param beneficiary - The address to receive the fees.\n     */\n    function handleOps(\n        PackedUserOperation[] calldata ops,\n        address payable beneficiary\n    ) external;\n\n    /**\n     * Execute a batch of UserOperation with Aggregators\n     * @param opsPerAggregator - The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\n     * @param beneficiary      - The address to receive the fees.\n     */\n    function handleAggregatedOps(\n        UserOpsPerAggregator[] calldata opsPerAggregator,\n        address payable beneficiary\n    ) external;\n\n    /**\n     * Generate a request Id - unique identifier for this request.\n     * The request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\n     * @param userOp - The user operation to generate the request ID for.\n     * @return hash the hash of this UserOperation\n     */\n    function getUserOpHash(\n        PackedUserOperation calldata userOp\n    ) external view returns (bytes32);\n\n    /**\n     * Gas and return values during simulation.\n     * @param preOpGas         - The gas used for validation (including preValidationGas)\n     * @param prefund          - The required prefund for this operation\n     * @param accountValidationData   - returned validationData from account.\n     * @param paymasterValidationData - return validationData from paymaster.\n     * @param paymasterContext - Returned by validatePaymasterUserOp (to be passed into postOp)\n     */\n    struct ReturnInfo {\n        uint256 preOpGas;\n        uint256 prefund;\n        uint256 accountValidationData;\n        uint256 paymasterValidationData;\n        bytes paymasterContext;\n    }\n\n    /**\n     * Returned aggregated signature info:\n     * The aggregator returned by the account, and its current stake.\n     */\n    struct AggregatorStakeInfo {\n        address aggregator;\n        StakeInfo stakeInfo;\n    }\n\n    /**\n     * Get counterfactual sender address.\n     * Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n     * This method always revert, and returns the address in SenderAddressResult error\n     * @param initCode - The constructor code to be passed into the UserOperation.\n     */\n    function getSenderAddress(bytes memory initCode) external;\n\n    error DelegateAndRevert(bool success, bytes ret);\n\n    /**\n     * Helper method for dry-run testing.\n     * @dev calling this method, the EntryPoint will make a delegatecall to the given data, and report (via revert) the result.\n     *  The method always revert, so is only useful off-chain for dry run calls, in cases where state-override to replace\n     *  actual EntryPoint code is less convenient.\n     * @param target a target contract to make a delegatecall from entrypoint\n     * @param data data to pass to target in a delegatecall\n     */\n    function delegateAndRevert(address target, bytes calldata data) external;\n}\n"},"@account-abstraction/contracts/interfaces/INonceManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.7.5;\n\ninterface INonceManager {\n\n    /**\n     * Return the next nonce for this sender.\n     * Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n     * But UserOp with different keys can come with arbitrary order.\n     *\n     * @param sender the account address\n     * @param key the high 192 bit of the nonce\n     * @return nonce a full nonce to pass for next UserOp with this sender.\n     */\n    function getNonce(address sender, uint192 key)\n    external view returns (uint256 nonce);\n\n    /**\n     * Manually increment the nonce of the sender.\n     * This method is exposed just for completeness..\n     * Account does NOT need to call it, neither during validation, nor elsewhere,\n     * as the EntryPoint will update the nonce regardless.\n     * Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n     * UserOperations will not pay extra for the first transaction with a given key.\n     */\n    function incrementNonce(uint192 key) external;\n}\n"},"@account-abstraction/contracts/interfaces/IPaymaster.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.7.5;\n\nimport \"./PackedUserOperation.sol\";\n\n/**\n * The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations.\n * A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\n */\ninterface IPaymaster {\n    enum PostOpMode {\n        // User op succeeded.\n        opSucceeded,\n        // User op reverted. Still has to pay for gas.\n        opReverted,\n        // Only used internally in the EntryPoint (cleanup after postOp reverts). Never calling paymaster with this value\n        postOpReverted\n    }\n\n    /**\n     * Payment validation: check if paymaster agrees to pay.\n     * Must verify sender is the entryPoint.\n     * Revert to reject this request.\n     * Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted).\n     * The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\n     * @param userOp          - The user operation.\n     * @param userOpHash      - Hash of the user's request data.\n     * @param maxCost         - The maximum cost of this transaction (based on maximum gas and gas price from userOp).\n     * @return context        - Value to send to a postOp. Zero length to signify postOp is not required.\n     * @return validationData - Signature and time-range of this operation, encoded the same as the return\n     *                          value of validateUserOperation.\n     *                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n     *                                                    other values are invalid for paymaster.\n     *                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n     *                          <6-byte> validAfter - first timestamp this operation is valid\n     *                          Note that the validation code cannot use block.timestamp (or block.number) directly.\n     */\n    function validatePaymasterUserOp(\n        PackedUserOperation calldata userOp,\n        bytes32 userOpHash,\n        uint256 maxCost\n    ) external returns (bytes memory context, uint256 validationData);\n\n    /**\n     * Post-operation handler.\n     * Must verify sender is the entryPoint.\n     * @param mode          - Enum with the following options:\n     *                        opSucceeded - User operation succeeded.\n     *                        opReverted  - User op reverted. The paymaster still has to pay for gas.\n     *                        postOpReverted - never passed in a call to postOp().\n     * @param context       - The context value returned by validatePaymasterUserOp\n     * @param actualGasCost - Actual gas used so far (without this postOp call).\n     * @param actualUserOpFeePerGas - the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas\n     *                        and maxPriorityFee (and basefee)\n     *                        It is not the same as tx.gasprice, which is what the bundler pays.\n     */\n    function postOp(\n        PostOpMode mode,\n        bytes calldata context,\n        uint256 actualGasCost,\n        uint256 actualUserOpFeePerGas\n    ) external;\n}\n"},"@account-abstraction/contracts/interfaces/IStakeManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.7.5;\n\n/**\n * Manage deposits and stakes.\n * Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account).\n * Stake is value locked for at least \"unstakeDelay\" by the staked entity.\n */\ninterface IStakeManager {\n    event Deposited(address indexed account, uint256 totalDeposit);\n\n    event Withdrawn(\n        address indexed account,\n        address withdrawAddress,\n        uint256 amount\n    );\n\n    // Emitted when stake or unstake delay are modified.\n    event StakeLocked(\n        address indexed account,\n        uint256 totalStaked,\n        uint256 unstakeDelaySec\n    );\n\n    // Emitted once a stake is scheduled for withdrawal.\n    event StakeUnlocked(address indexed account, uint256 withdrawTime);\n\n    event StakeWithdrawn(\n        address indexed account,\n        address withdrawAddress,\n        uint256 amount\n    );\n\n    /**\n     * @param deposit         - The entity's deposit.\n     * @param staked          - True if this entity is staked.\n     * @param stake           - Actual amount of ether staked for this entity.\n     * @param unstakeDelaySec - Minimum delay to withdraw the stake.\n     * @param withdrawTime    - First block timestamp where 'withdrawStake' will be callable, or zero if already locked.\n     * @dev Sizes were chosen so that deposit fits into one cell (used during handleOp)\n     *      and the rest fit into a 2nd cell (used during stake/unstake)\n     *      - 112 bit allows for 10^15 eth\n     *      - 48 bit for full timestamp\n     *      - 32 bit allows 150 years for unstake delay\n     */\n    struct DepositInfo {\n        uint256 deposit;\n        bool staked;\n        uint112 stake;\n        uint32 unstakeDelaySec;\n        uint48 withdrawTime;\n    }\n\n    // API struct used by getStakeInfo and simulateValidation.\n    struct StakeInfo {\n        uint256 stake;\n        uint256 unstakeDelaySec;\n    }\n\n    /**\n     * Get deposit info.\n     * @param account - The account to query.\n     * @return info   - Full deposit information of given account.\n     */\n    function getDepositInfo(\n        address account\n    ) external view returns (DepositInfo memory info);\n\n    /**\n     * Get account balance.\n     * @param account - The account to query.\n     * @return        - The deposit (for gas payment) of the account.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * Add to the deposit of the given account.\n     * @param account - The account to add to.\n     */\n    function depositTo(address account) external payable;\n\n    /**\n     * Add to the account's stake - amount and delay\n     * any pending unstake is first cancelled.\n     * @param _unstakeDelaySec - The new lock duration before the deposit can be withdrawn.\n     */\n    function addStake(uint32 _unstakeDelaySec) external payable;\n\n    /**\n     * Attempt to unlock the stake.\n     * The value can be withdrawn (using withdrawStake) after the unstake delay.\n     */\n    function unlockStake() external;\n\n    /**\n     * Withdraw from the (unlocked) stake.\n     * Must first call unlockStake and wait for the unstakeDelay to pass.\n     * @param withdrawAddress - The address to send withdrawn value.\n     */\n    function withdrawStake(address payable withdrawAddress) external;\n\n    /**\n     * Withdraw from the deposit.\n     * @param withdrawAddress - The address to send withdrawn value.\n     * @param withdrawAmount  - The amount to withdraw.\n     */\n    function withdrawTo(\n        address payable withdrawAddress,\n        uint256 withdrawAmount\n    ) external;\n}\n"},"@account-abstraction/contracts/interfaces/PackedUserOperation.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.7.5;\n\n/**\n * User Operation struct\n * @param sender                - The sender account of this request.\n * @param nonce                 - Unique value the sender uses to verify it is not a replay.\n * @param initCode              - If set, the account contract will be created by this constructor/\n * @param callData              - The method call to execute on this account.\n * @param accountGasLimits      - Packed gas limits for validateUserOp and gas limit passed to the callData method call.\n * @param preVerificationGas    - Gas not calculated by the handleOps method, but added to the gas paid.\n *                                Covers batch overhead.\n * @param gasFees               - packed gas fields maxPriorityFeePerGas and maxFeePerGas - Same as EIP-1559 gas parameters.\n * @param paymasterAndData      - If set, this field holds the paymaster address, verification gas limit, postOp gas limit and paymaster-specific extra data\n *                                The paymaster will pay for the transaction instead of the sender.\n * @param signature             - Sender-verified signature over the entire request, the EntryPoint address and the chain ID.\n */\nstruct PackedUserOperation {\n    address sender;\n    uint256 nonce;\n    bytes initCode;\n    bytes callData;\n    bytes32 accountGasLimits;\n    uint256 preVerificationGas;\n    bytes32 gasFees;\n    bytes paymasterAndData;\n    bytes signature;\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"contracts/SignatureVerifyingPaymaster.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@account-abstraction/contracts/core/BasePaymaster.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\n\n/**\n * @title VerifyingPaymaster\n * @dev A Paymaster contract for ERC-4337 that validates a signature.\n */\ncontract VerifyingPaymaster is BasePaymaster {\n    using ECDSA for bytes32;\n\n    // Address of the trusted signer (e.g., the paymaster service)\n    address public trustedSigner;\n\n    /**\n     * @dev Constructor to initialize the paymaster with the trusted signer and EntryPoint.\n     * @param _entryPoint The address of the EntryPoint contract.\n     * @param _trustedSigner The address of the trusted signer.\n     */\n    constructor(IEntryPoint _entryPoint, address _trustedSigner) BasePaymaster(_entryPoint) {\n        trustedSigner = _trustedSigner;\n    }\n\n    /**\n     * @dev Sets the trusted signer address.\n     * @param _trustedSigner The new trusted signer address.\n     */\n    function setTrustedSigner(address _trustedSigner) external onlyOwner {\n        trustedSigner = _trustedSigner;\n    }\n\n    /**\n     * @dev Validates the UserOperation by checking the signature.\n     * @param userOp The UserOperation struct.\n     * @param userOpHash The hash of the UserOperation.\n     * @param maxCost The maximum cost of the operation.\n     * @return context A context value to pass to postOp.\n     */\n    function _validatePaymasterUserOp(\n        PackedUserOperation calldata userOp,\n        bytes32 userOpHash,\n        uint256 maxCost\n    ) internal view override returns (bytes memory context, uint256 validationData) {\n        // Check if paymaster has enough deposit to cover the maximum gas cost\n        require(IEntryPoint(address(entryPoint)).balanceOf(address(this)) >= maxCost, \"Insufficient deposit for gas\");\n\n        // Extract the signature from the paymasterAndData field\n        bytes memory paymasterAndData = userOp.paymasterAndData;\n        require(paymasterAndData.length == 65, \"Invalid paymasterAndData length\");\n\n        bytes memory signature = new bytes(64);\n        for (uint i = 0; i < 64; i++) {\n            signature[i] = paymasterAndData[i + 1];\n        }\n\n        // Recreate the hash that was signed using standard Ethereum message format\n        bytes32 hash = keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", userOpHash));\n\n        // Verify the signature\n        address recoveredSigner = hash.recover(signature);\n        require(recoveredSigner == trustedSigner, \"Invalid signature\");\n\n        // Return both context and validationData\n        return (new bytes(0), 0);\n    }\n\n    /**\n     * @dev Handles post-operation logic. Ensures only the EntryPoint can call this function.\n     * @param mode The mode of the post-operation.\n     * @param context The context returned by _validatePaymasterUserOp.\n     * @param actualGasCost The actual gas cost of the operation.\n     */\n    function _postOp(\n        PostOpMode mode,\n        bytes calldata context,\n        uint256 actualGasCost\n    ) internal {\n        // No additional logic for postOp in this example\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@account-abstraction/contracts/core/BasePaymaster.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/core/BasePaymaster.sol","exportedSymbols":{"BasePaymaster":[270],"Context":[1384],"IAggregator":[840],"IERC165":[1744],"IEntryPoint":[1024],"INonceManager":[1043],"IPaymaster":[1080],"IStakeManager":[1184],"Ownable":[1354],"PackedUserOperation":[1206],"UserOperationLib":[806],"calldataKeccak":[431],"min":[449]},"id":271,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".23"],"nodeType":"PragmaDirective","src":"36:24:0"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":271,"sourceUnit":1355,"src":"99:52:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":271,"sourceUnit":1745,"src":"152:65:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/IPaymaster.sol","file":"../interfaces/IPaymaster.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":271,"sourceUnit":1081,"src":"218:38:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/IEntryPoint.sol","file":"../interfaces/IEntryPoint.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":271,"sourceUnit":1025,"src":"257:39:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/core/UserOperationLib.sol","file":"./UserOperationLib.sol","id":6,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":271,"sourceUnit":807,"src":"297:32:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":8,"name":"IPaymaster","nameLocations":["518:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":1080,"src":"518:10:0"},"id":9,"nodeType":"InheritanceSpecifier","src":"518:10:0"},{"baseName":{"id":10,"name":"Ownable","nameLocations":["530:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1354,"src":"530:7:0"},"id":11,"nodeType":"InheritanceSpecifier","src":"530:7:0"}],"canonicalName":"BasePaymaster","contractDependencies":[],"contractKind":"contract","documentation":{"id":7,"nodeType":"StructuredDocumentation","src":"330:152:0","text":" Helper class for creating a paymaster.\n provides helper methods for staking.\n Validates that the postOp is called only by the entryPoint."},"fullyImplemented":false,"id":270,"linearizedBaseContracts":[270,1354,1384,1080],"name":"BasePaymaster","nameLocation":"501:13:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"b0d691fe","id":14,"mutability":"immutable","name":"entryPoint","nameLocation":"573:10:0","nodeType":"VariableDeclaration","scope":270,"src":"544:39:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1024","typeString":"contract IEntryPoint"},"typeName":{"id":13,"nodeType":"UserDefinedTypeName","pathNode":{"id":12,"name":"IEntryPoint","nameLocations":["544:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":1024,"src":"544:11:0"},"referencedDeclaration":1024,"src":"544:11:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1024","typeString":"contract IEntryPoint"}},"visibility":"public"},{"constant":true,"id":18,"mutability":"constant","name":"PAYMASTER_VALIDATION_GAS_OFFSET","nameLocation":"616:31:0","nodeType":"VariableDeclaration","scope":270,"src":"590:108:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15,"name":"uint256","nodeType":"ElementaryTypeName","src":"590:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"expression":{"id":16,"name":"UserOperationLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"650:16:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UserOperationLib_$806_$","typeString":"type(library UserOperationLib)"}},"id":17,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"667:31:0","memberName":"PAYMASTER_VALIDATION_GAS_OFFSET","nodeType":"MemberAccess","referencedDeclaration":459,"src":"650:48:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":true,"id":22,"mutability":"constant","name":"PAYMASTER_POSTOP_GAS_OFFSET","nameLocation":"730:27:0","nodeType":"VariableDeclaration","scope":270,"src":"704:100:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"expression":{"id":20,"name":"UserOperationLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"760:16:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UserOperationLib_$806_$","typeString":"type(library UserOperationLib)"}},"id":21,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"777:27:0","memberName":"PAYMASTER_POSTOP_GAS_OFFSET","nodeType":"MemberAccess","referencedDeclaration":462,"src":"760:44:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":true,"id":26,"mutability":"constant","name":"PAYMASTER_DATA_OFFSET","nameLocation":"836:21:0","nodeType":"VariableDeclaration","scope":270,"src":"810:88:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23,"name":"uint256","nodeType":"ElementaryTypeName","src":"810:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"expression":{"id":24,"name":"UserOperationLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"860:16:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UserOperationLib_$806_$","typeString":"type(library UserOperationLib)"}},"id":25,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"877:21:0","memberName":"PAYMASTER_DATA_OFFSET","nodeType":"MemberAccess","referencedDeclaration":465,"src":"860:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"body":{"id":44,"nodeType":"Block","src":"962:92:0","statements":[{"expression":{"arguments":[{"id":37,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1001:11:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1024","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$1024","typeString":"contract IEntryPoint"}],"id":36,"name":"_validateEntryPointInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"972:28:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IEntryPoint_$1024_$returns$__$","typeString":"function (contract IEntryPoint)"}},"id":38,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"972:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":39,"nodeType":"ExpressionStatement","src":"972:41:0"},{"expression":{"id":42,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":40,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"1023:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1024","typeString":"contract IEntryPoint"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":41,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1036:11:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1024","typeString":"contract IEntryPoint"}},"src":"1023:24:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1024","typeString":"contract IEntryPoint"}},"id":43,"nodeType":"ExpressionStatement","src":"1023:24:0"}]},"id":45,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":32,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"950:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":33,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"954:6:0","memberName":"sender","nodeType":"MemberAccess","src":"950:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":34,"kind":"baseConstructorSpecifier","modifierName":{"id":31,"name":"Ownable","nameLocations":["942:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1354,"src":"942:7:0"},"nodeType":"ModifierInvocation","src":"942:19:0"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"_entryPoint","nameLocation":"929:11:0","nodeType":"VariableDeclaration","scope":45,"src":"917:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1024","typeString":"contract IEntryPoint"},"typeName":{"id":28,"nodeType":"UserDefinedTypeName","pathNode":{"id":27,"name":"IEntryPoint","nameLocations":["917:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":1024,"src":"917:11:0"},"referencedDeclaration":1024,"src":"917:11:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1024","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"916:25:0"},"returnParameters":{"id":35,"nodeType":"ParameterList","parameters":[],"src":"962:0:0"},"scope":270,"src":"905:149:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1253:138:0","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"arguments":[{"id":60,"name":"IEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"1324:11:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IEntryPoint_$1024_$","typeString":"type(contract IEntryPoint)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IEntryPoint_$1024_$","typeString":"type(contract IEntryPoint)"}],"id":59,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1319:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":61,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1319:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IEntryPoint_$1024","typeString":"type(contract IEntryPoint)"}},"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1337:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"1319:29:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"arguments":[{"arguments":[{"id":55,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"1287:11:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1024","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$1024","typeString":"contract IEntryPoint"}],"id":54,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1279:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":53,"name":"address","nodeType":"ElementaryTypeName","src":"1279:7:0","typeDescriptions":{}}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1279:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":52,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"1271:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1744_$","typeString":"type(contract IERC165)"}},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1271:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC165_$1744","typeString":"contract IERC165"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1301:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1743,"src":"1271:47:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view external returns (bool)"}},"id":63,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1271:78:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"49456e747279506f696e7420696e74657266616365206d69736d61746368","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1351:32:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_7960c93a5f91001fe3b3e9a56f8716da93c29bf7a3aa7adb703901f21a308af8","typeString":"literal_string \"IEntryPoint interface mismatch\""},"value":"IEntryPoint interface mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7960c93a5f91001fe3b3e9a56f8716da93c29bf7a3aa7adb703901f21a308af8","typeString":"literal_string \"IEntryPoint interface mismatch\""}],"id":51,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1263:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1263:121:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1263:121:0"}]},"id":68,"implemented":true,"kind":"function","modifiers":[],"name":"_validateEntryPointInterface","nameLocation":"1182:28:0","nodeType":"FunctionDefinition","parameters":{"id":49,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48,"mutability":"mutable","name":"_entryPoint","nameLocation":"1223:11:0","nodeType":"VariableDeclaration","scope":68,"src":"1211:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1024","typeString":"contract IEntryPoint"},"typeName":{"id":47,"nodeType":"UserDefinedTypeName","pathNode":{"id":46,"name":"IEntryPoint","nameLocations":["1211:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":1024,"src":"1211:11:0"},"referencedDeclaration":1024,"src":"1211:11:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1024","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"1210:25:0"},"returnParameters":{"id":50,"nodeType":"ParameterList","parameters":[],"src":"1253:0:0"},"scope":270,"src":"1173:218:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1066],"body":{"id":93,"nodeType":"Block","src":"1638:111:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"_requireFromEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"1648:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1648:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"ExpressionStatement","src":"1648:24:0"},{"expression":{"arguments":[{"id":88,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"1714:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},{"id":89,"name":"userOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"1722:10:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":90,"name":"maxCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":76,"src":"1734:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":87,"name":"_validatePaymasterUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":109,"src":"1689:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_PackedUserOperation_$1206_calldata_ptr_$_t_bytes32_$_t_uint256_$returns$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"function (struct PackedUserOperation calldata,bytes32,uint256) returns (bytes memory,uint256)"}},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1689:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"tuple(bytes memory,uint256)"}},"functionReturnParameters":83,"id":92,"nodeType":"Return","src":"1682:60:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1397:26:0","text":"@inheritdoc IPaymaster"},"functionSelector":"52b7512c","id":94,"implemented":true,"kind":"function","modifiers":[],"name":"validatePaymasterUserOp","nameLocation":"1437:23:0","nodeType":"FunctionDefinition","overrides":{"id":78,"nodeType":"OverrideSpecifier","overrides":[],"src":"1574:8:0"},"parameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":72,"mutability":"mutable","name":"userOp","nameLocation":"1499:6:0","nodeType":"VariableDeclaration","scope":94,"src":"1470:35:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":71,"nodeType":"UserDefinedTypeName","pathNode":{"id":70,"name":"PackedUserOperation","nameLocations":["1470:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":1206,"src":"1470:19:0"},"referencedDeclaration":1206,"src":"1470:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":74,"mutability":"mutable","name":"userOpHash","nameLocation":"1523:10:0","nodeType":"VariableDeclaration","scope":94,"src":"1515:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":73,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1515:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":76,"mutability":"mutable","name":"maxCost","nameLocation":"1551:7:0","nodeType":"VariableDeclaration","scope":94,"src":"1543:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":75,"name":"uint256","nodeType":"ElementaryTypeName","src":"1543:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1460:104:0"},"returnParameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":80,"mutability":"mutable","name":"context","nameLocation":"1605:7:0","nodeType":"VariableDeclaration","scope":94,"src":"1592:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":79,"name":"bytes","nodeType":"ElementaryTypeName","src":"1592:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":82,"mutability":"mutable","name":"validationData","nameLocation":"1622:14:0","nodeType":"VariableDeclaration","scope":94,"src":"1614:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":81,"name":"uint256","nodeType":"ElementaryTypeName","src":"1614:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1591:46:0"},"scope":270,"src":"1428:321:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":95,"nodeType":"StructuredDocumentation","src":"1755:218:0","text":" Validate a user operation.\n @param userOp     - The user operation.\n @param userOpHash - The hash of the user operation.\n @param maxCost    - The maximum cost of the user operation."},"id":109,"implemented":false,"kind":"function","modifiers":[],"name":"_validatePaymasterUserOp","nameLocation":"1987:24:0","nodeType":"FunctionDefinition","parameters":{"id":103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":98,"mutability":"mutable","name":"userOp","nameLocation":"2050:6:0","nodeType":"VariableDeclaration","scope":109,"src":"2021:35:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":97,"nodeType":"UserDefinedTypeName","pathNode":{"id":96,"name":"PackedUserOperation","nameLocations":["2021:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":1206,"src":"2021:19:0"},"referencedDeclaration":1206,"src":"2021:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":100,"mutability":"mutable","name":"userOpHash","nameLocation":"2074:10:0","nodeType":"VariableDeclaration","scope":109,"src":"2066:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":99,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2066:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":102,"mutability":"mutable","name":"maxCost","nameLocation":"2102:7:0","nodeType":"VariableDeclaration","scope":109,"src":"2094:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101,"name":"uint256","nodeType":"ElementaryTypeName","src":"2094:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2011:104:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":105,"mutability":"mutable","name":"context","nameLocation":"2155:7:0","nodeType":"VariableDeclaration","scope":109,"src":"2142:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":104,"name":"bytes","nodeType":"ElementaryTypeName","src":"2142:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":107,"mutability":"mutable","name":"validationData","nameLocation":"2172:14:0","nodeType":"VariableDeclaration","scope":109,"src":"2164:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":106,"name":"uint256","nodeType":"ElementaryTypeName","src":"2164:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2141:46:0"},"scope":270,"src":"1978:210:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1079],"body":{"id":133,"nodeType":"Block","src":"2392:111:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":123,"name":"_requireFromEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"2402:22:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2402:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":125,"nodeType":"ExpressionStatement","src":"2402:24:0"},{"expression":{"arguments":[{"id":127,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":113,"src":"2444:4:0","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1051","typeString":"enum IPaymaster.PostOpMode"}},{"id":128,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":115,"src":"2450:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":129,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"2459:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":130,"name":"actualUserOpFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"2474:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_PostOpMode_$1051","typeString":"enum IPaymaster.PostOpMode"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":126,"name":"_postOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"2436:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_PostOpMode_$1051_$_t_bytes_calldata_ptr_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (enum IPaymaster.PostOpMode,bytes calldata,uint256,uint256)"}},"id":131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2436:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":132,"nodeType":"ExpressionStatement","src":"2436:60:0"}]},"documentation":{"id":110,"nodeType":"StructuredDocumentation","src":"2194:26:0","text":"@inheritdoc IPaymaster"},"functionSelector":"7c627b21","id":134,"implemented":true,"kind":"function","modifiers":[],"name":"postOp","nameLocation":"2234:6:0","nodeType":"FunctionDefinition","overrides":{"id":121,"nodeType":"OverrideSpecifier","overrides":[],"src":"2383:8:0"},"parameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":113,"mutability":"mutable","name":"mode","nameLocation":"2261:4:0","nodeType":"VariableDeclaration","scope":134,"src":"2250:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1051","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":112,"nodeType":"UserDefinedTypeName","pathNode":{"id":111,"name":"PostOpMode","nameLocations":["2250:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":1051,"src":"2250:10:0"},"referencedDeclaration":1051,"src":"2250:10:0","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1051","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":115,"mutability":"mutable","name":"context","nameLocation":"2290:7:0","nodeType":"VariableDeclaration","scope":134,"src":"2275:22:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":114,"name":"bytes","nodeType":"ElementaryTypeName","src":"2275:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":117,"mutability":"mutable","name":"actualGasCost","nameLocation":"2315:13:0","nodeType":"VariableDeclaration","scope":134,"src":"2307:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":116,"name":"uint256","nodeType":"ElementaryTypeName","src":"2307:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":119,"mutability":"mutable","name":"actualUserOpFeePerGas","nameLocation":"2346:21:0","nodeType":"VariableDeclaration","scope":134,"src":"2338:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"2338:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2240:133:0"},"returnParameters":{"id":122,"nodeType":"ParameterList","parameters":[],"src":"2392:0:0"},"scope":270,"src":"2225:278:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":157,"nodeType":"Block","src":"3674:211:0","statements":[{"expression":{"components":[{"id":147,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"3685:4:0","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1051","typeString":"enum IPaymaster.PostOpMode"}},{"id":148,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"3691:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":149,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":142,"src":"3700:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":150,"name":"actualUserOpFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"3715:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":151,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3684:53:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_enum$_PostOpMode_$1051_$_t_bytes_calldata_ptr_$_t_uint256_$_t_uint256_$","typeString":"tuple(enum IPaymaster.PostOpMode,bytes calldata,uint256,uint256)"}},"id":152,"nodeType":"ExpressionStatement","src":"3684:53:0"},{"expression":{"arguments":[{"hexValue":"6d757374206f76657272696465","id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3862:15:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d","typeString":"literal_string \"must override\""},"value":"must override"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d","typeString":"literal_string \"must override\""}],"id":153,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3855:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3855:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":156,"nodeType":"ExpressionStatement","src":"3855:23:0"}]},"documentation":{"id":135,"nodeType":"StructuredDocumentation","src":"2509:993:0","text":" Post-operation handler.\n (verified to be called only through the entryPoint)\n @dev If subclass returns a non-empty context from validatePaymasterUserOp,\n      it must also implement this method.\n @param mode          - Enum with the following options:\n                        opSucceeded - User operation succeeded.\n                        opReverted  - User op reverted. The paymaster still has to pay for gas.\n                        postOpReverted - never passed in a call to postOp().\n @param context       - The context value returned by validatePaymasterUserOp\n @param actualGasCost - Actual gas used so far (without this postOp call).\n @param actualUserOpFeePerGas - the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas\n                        and maxPriorityFee (and basefee)\n                        It is not the same as tx.gasprice, which is what the bundler pays."},"id":158,"implemented":true,"kind":"function","modifiers":[],"name":"_postOp","nameLocation":"3516:7:0","nodeType":"FunctionDefinition","parameters":{"id":145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"mode","nameLocation":"3544:4:0","nodeType":"VariableDeclaration","scope":158,"src":"3533:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1051","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":137,"nodeType":"UserDefinedTypeName","pathNode":{"id":136,"name":"PostOpMode","nameLocations":["3533:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":1051,"src":"3533:10:0"},"referencedDeclaration":1051,"src":"3533:10:0","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1051","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":140,"mutability":"mutable","name":"context","nameLocation":"3573:7:0","nodeType":"VariableDeclaration","scope":158,"src":"3558:22:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":139,"name":"bytes","nodeType":"ElementaryTypeName","src":"3558:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":142,"mutability":"mutable","name":"actualGasCost","nameLocation":"3598:13:0","nodeType":"VariableDeclaration","scope":158,"src":"3590:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":141,"name":"uint256","nodeType":"ElementaryTypeName","src":"3590:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":144,"mutability":"mutable","name":"actualUserOpFeePerGas","nameLocation":"3629:21:0","nodeType":"VariableDeclaration","scope":158,"src":"3621:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":143,"name":"uint256","nodeType":"ElementaryTypeName","src":"3621:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3523:133:0"},"returnParameters":{"id":146,"nodeType":"ParameterList","parameters":[],"src":"3674:0:0"},"scope":270,"src":"3507:378:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":174,"nodeType":"Block","src":"4020:70:0","statements":[{"expression":{"arguments":[{"arguments":[{"id":170,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4077:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_BasePaymaster_$270","typeString":"contract BasePaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BasePaymaster_$270","typeString":"contract BasePaymaster"}],"id":169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4069:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":168,"name":"address","nodeType":"ElementaryTypeName","src":"4069:7:0","typeDescriptions":{}}},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4069:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":162,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"4030:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1024","typeString":"contract IEntryPoint"}},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4041:9:0","memberName":"depositTo","nodeType":"MemberAccess","referencedDeclaration":1159,"src":"4030:20:0","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$","typeString":"function (address) payable external"}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":165,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4058:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4062:5:0","memberName":"value","nodeType":"MemberAccess","src":"4058:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4030:38:0","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$value","typeString":"function (address) payable external"}},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4030:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":173,"nodeType":"ExpressionStatement","src":"4030:53:0"}]},"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"3891:90:0","text":" Add a deposit for this paymaster, used for paying for transaction fees."},"functionSelector":"d0e30db0","id":175,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"3995:7:0","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"4002:2:0"},"returnParameters":{"id":161,"nodeType":"ParameterList","parameters":[],"src":"4020:0:0"},"scope":270,"src":"3986:104:0","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":192,"nodeType":"Block","src":"4363:63:0","statements":[{"expression":{"arguments":[{"id":188,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"4395:15:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":189,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"4412:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":185,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"4373:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1024","typeString":"contract IEntryPoint"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4384:10:0","memberName":"withdrawTo","nodeType":"MemberAccess","referencedDeclaration":1183,"src":"4373:21:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256) external"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4373:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"ExpressionStatement","src":"4373:46:0"}]},"documentation":{"id":176,"nodeType":"StructuredDocumentation","src":"4096:154:0","text":" Withdraw value from the deposit.\n @param withdrawAddress - Target to send to.\n @param amount          - Amount to withdraw."},"functionSelector":"205c2878","id":193,"implemented":true,"kind":"function","modifiers":[{"id":183,"kind":"modifierInvocation","modifierName":{"id":182,"name":"onlyOwner","nameLocations":["4353:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":1265,"src":"4353:9:0"},"nodeType":"ModifierInvocation","src":"4353:9:0"}],"name":"withdrawTo","nameLocation":"4264:10:0","nodeType":"FunctionDefinition","parameters":{"id":181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"withdrawAddress","nameLocation":"4300:15:0","nodeType":"VariableDeclaration","scope":193,"src":"4284:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":177,"name":"address","nodeType":"ElementaryTypeName","src":"4284:15:0","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"amount","nameLocation":"4333:6:0","nodeType":"VariableDeclaration","scope":193,"src":"4325:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"4325:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4274:71:0"},"returnParameters":{"id":184,"nodeType":"ParameterList","parameters":[],"src":"4363:0:0"},"scope":270,"src":"4255:171:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":210,"nodeType":"Block","src":"4720:71:0","statements":[{"expression":{"arguments":[{"id":207,"name":"unstakeDelaySec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"4768:15:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":201,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"4730:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1024","typeString":"contract IEntryPoint"}},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4741:8:0","memberName":"addStake","nodeType":"MemberAccess","referencedDeclaration":1165,"src":"4730:19:0","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint32_$returns$__$","typeString":"function (uint32) payable external"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":204,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4757:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4761:5:0","memberName":"value","nodeType":"MemberAccess","src":"4757:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4730:37:0","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint32_$returns$__$value","typeString":"function (uint32) payable external"}},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4730:54:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":209,"nodeType":"ExpressionStatement","src":"4730:54:0"}]},"documentation":{"id":194,"nodeType":"StructuredDocumentation","src":"4432:214:0","text":" Add stake for this paymaster.\n This method can also carry eth value to add to the current stake.\n @param unstakeDelaySec - The unstake delay for this paymaster. Can only be increased."},"functionSelector":"0396cb60","id":211,"implemented":true,"kind":"function","modifiers":[{"id":199,"kind":"modifierInvocation","modifierName":{"id":198,"name":"onlyOwner","nameLocations":["4710:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":1265,"src":"4710:9:0"},"nodeType":"ModifierInvocation","src":"4710:9:0"}],"name":"addStake","nameLocation":"4660:8:0","nodeType":"FunctionDefinition","parameters":{"id":197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":196,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"4676:15:0","nodeType":"VariableDeclaration","scope":211,"src":"4669:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":195,"name":"uint32","nodeType":"ElementaryTypeName","src":"4669:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4668:24:0"},"returnParameters":{"id":200,"nodeType":"ParameterList","parameters":[],"src":"4720:0:0"},"scope":270,"src":"4651:140:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":225,"nodeType":"Block","src":"4926:59:0","statements":[{"expression":{"arguments":[{"arguments":[{"id":221,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4972:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_BasePaymaster_$270","typeString":"contract BasePaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BasePaymaster_$270","typeString":"contract BasePaymaster"}],"id":220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4964:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":219,"name":"address","nodeType":"ElementaryTypeName","src":"4964:7:0","typeDescriptions":{}}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4964:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":217,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"4943:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1024","typeString":"contract IEntryPoint"}},"id":218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4954:9:0","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1153,"src":"4943:20:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4943:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":216,"id":224,"nodeType":"Return","src":"4936:42:0"}]},"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"4797:72:0","text":" Return current paymaster's deposit on the entryPoint."},"functionSelector":"c399ec88","id":226,"implemented":true,"kind":"function","modifiers":[],"name":"getDeposit","nameLocation":"4883:10:0","nodeType":"FunctionDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"4893:2:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":226,"src":"4917:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":214,"name":"uint256","nodeType":"ElementaryTypeName","src":"4917:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4916:9:0"},"scope":270,"src":"4874:111:0","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":237,"nodeType":"Block","src":"5186:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":232,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"5196:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1024","typeString":"contract IEntryPoint"}},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5207:11:0","memberName":"unlockStake","nodeType":"MemberAccess","referencedDeclaration":1169,"src":"5196:22:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$__$","typeString":"function () external"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5196:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":236,"nodeType":"ExpressionStatement","src":"5196:24:0"}]},"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"4991:148:0","text":" Unlock the stake, in order to withdraw it.\n The paymaster can't serve requests once unlocked, until it calls addStake again"},"functionSelector":"bb9fe6bf","id":238,"implemented":true,"kind":"function","modifiers":[{"id":230,"kind":"modifierInvocation","modifierName":{"id":229,"name":"onlyOwner","nameLocations":["5176:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":1265,"src":"5176:9:0"},"nodeType":"ModifierInvocation","src":"5176:9:0"}],"name":"unlockStake","nameLocation":"5153:11:0","nodeType":"FunctionDefinition","parameters":{"id":228,"nodeType":"ParameterList","parameters":[],"src":"5164:2:0"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[],"src":"5186:0:0"},"scope":270,"src":"5144:83:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":252,"nodeType":"Block","src":"5523:58:0","statements":[{"expression":{"arguments":[{"id":249,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"5558:15:0","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"id":246,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"5533:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1024","typeString":"contract IEntryPoint"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5544:13:0","memberName":"withdrawStake","nodeType":"MemberAccess","referencedDeclaration":1175,"src":"5533:24:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$returns$__$","typeString":"function (address payable) external"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":251,"nodeType":"ExpressionStatement","src":"5533:41:0"}]},"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"5233:210:0","text":" Withdraw the entire paymaster's stake.\n stake must be unlocked first (and then wait for the unstakeDelay to be over)\n @param withdrawAddress - The address to send withdrawn value."},"functionSelector":"c23a5cea","id":253,"implemented":true,"kind":"function","modifiers":[{"id":244,"kind":"modifierInvocation","modifierName":{"id":243,"name":"onlyOwner","nameLocations":["5513:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":1265,"src":"5513:9:0"},"nodeType":"ModifierInvocation","src":"5513:9:0"}],"name":"withdrawStake","nameLocation":"5457:13:0","nodeType":"FunctionDefinition","parameters":{"id":242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"withdrawAddress","nameLocation":"5487:15:0","nodeType":"VariableDeclaration","scope":253,"src":"5471:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"5471:15:0","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"5470:33:0"},"returnParameters":{"id":245,"nodeType":"ParameterList","parameters":[],"src":"5523:0:0"},"scope":270,"src":"5448:133:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":268,"nodeType":"Block","src":"5711:84:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":258,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5729:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5733:6:0","memberName":"sender","nodeType":"MemberAccess","src":"5729:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":262,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"5751:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1024","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$1024","typeString":"contract IEntryPoint"}],"id":261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5743:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"5743:7:0","typeDescriptions":{}}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5743:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5729:33:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53656e646572206e6f7420456e747279506f696e74","id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5764:23:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9","typeString":"literal_string \"Sender not EntryPoint\""},"value":"Sender not EntryPoint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9","typeString":"literal_string \"Sender not EntryPoint\""}],"id":257,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5721:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5721:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":267,"nodeType":"ExpressionStatement","src":"5721:67:0"}]},"documentation":{"id":254,"nodeType":"StructuredDocumentation","src":"5587:68:0","text":" Validate the call is made from a valid entrypoint"},"id":269,"implemented":true,"kind":"function","modifiers":[],"name":"_requireFromEntryPoint","nameLocation":"5669:22:0","nodeType":"FunctionDefinition","parameters":{"id":255,"nodeType":"ParameterList","parameters":[],"src":"5691:2:0"},"returnParameters":{"id":256,"nodeType":"ParameterList","parameters":[],"src":"5711:0:0"},"scope":270,"src":"5660:135:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":271,"src":"483:5314:0","usedErrors":[1220,1225],"usedEvents":[1231]}],"src":"36:5762:0"},"id":0},"@account-abstraction/contracts/core/Helpers.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/core/Helpers.sol","exportedSymbols":{"SIG_VALIDATION_FAILED":[275],"SIG_VALIDATION_SUCCESS":[278],"ValidationData":[286],"_packValidationData":[383,421],"_parseValidationData":[346],"calldataKeccak":[431],"min":[449]},"id":450,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":272,"literals":["solidity","^","0.8",".23"],"nodeType":"PragmaDirective","src":"36:24:1"},{"constant":true,"id":275,"mutability":"constant","name":"SIG_VALIDATION_FAILED","nameLocation":"281:21:1","nodeType":"VariableDeclaration","scope":450,"src":"264:42:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":273,"name":"uint256","nodeType":"ElementaryTypeName","src":"264:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"305:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"id":278,"mutability":"constant","name":"SIG_VALIDATION_SUCCESS","nameLocation":"440:22:1","nodeType":"VariableDeclaration","scope":450,"src":"423:43:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":276,"name":"uint256","nodeType":"ElementaryTypeName","src":"423:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"465:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"canonicalName":"ValidationData","documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"470:640:1","text":" Returned data from validateUserOp.\n validateUserOp returns a uint256, which is created by `_packedValidationData` and\n parsed by `_parseValidationData`.\n @param aggregator  - address(0) - The account validated the signature by itself.\n                      address(1) - The account failed to validate the signature.\n                      otherwise - This is an address of a signature aggregator that must\n                                  be used to validate the signature.\n @param validAfter  - This UserOp is valid only after this timestamp.\n @param validaUntil - This UserOp is valid only up to this timestamp."},"id":286,"members":[{"constant":false,"id":281,"mutability":"mutable","name":"aggregator","nameLocation":"1147:10:1","nodeType":"VariableDeclaration","scope":286,"src":"1139:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":280,"name":"address","nodeType":"ElementaryTypeName","src":"1139:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"validAfter","nameLocation":"1170:10:1","nodeType":"VariableDeclaration","scope":286,"src":"1163:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":282,"name":"uint48","nodeType":"ElementaryTypeName","src":"1163:6:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":285,"mutability":"mutable","name":"validUntil","nameLocation":"1193:10:1","nodeType":"VariableDeclaration","scope":286,"src":"1186:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":284,"name":"uint48","nodeType":"ElementaryTypeName","src":"1186:6:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"ValidationData","nameLocation":"1118:14:1","nodeType":"StructDefinition","scope":450,"src":"1111:95:1","visibility":"public"},{"body":{"id":345,"nodeType":"Block","src":"1472:314:1","statements":[{"assignments":[296],"declarations":[{"constant":false,"id":296,"mutability":"mutable","name":"aggregator","nameLocation":"1486:10:1","nodeType":"VariableDeclaration","scope":345,"src":"1478:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":295,"name":"address","nodeType":"ElementaryTypeName","src":"1478:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":304,"initialValue":{"arguments":[{"arguments":[{"id":301,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"1515:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1507:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":299,"name":"uint160","nodeType":"ElementaryTypeName","src":"1507:7:1","typeDescriptions":{}}},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1507:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1499:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":297,"name":"address","nodeType":"ElementaryTypeName","src":"1499:7:1","typeDescriptions":{}}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1499:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1478:53:1"},{"assignments":[306],"declarations":[{"constant":false,"id":306,"mutability":"mutable","name":"validUntil","nameLocation":"1544:10:1","nodeType":"VariableDeclaration","scope":345,"src":"1537:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":305,"name":"uint48","nodeType":"ElementaryTypeName","src":"1537:6:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":313,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":309,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"1564:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313630","id":310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1582:3:1","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1564:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1557:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":307,"name":"uint48","nodeType":"ElementaryTypeName","src":"1557:6:1","typeDescriptions":{}}},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1557:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1537:49:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint48","typeString":"uint48"},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":314,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"1596:10:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1610:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1596:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":326,"nodeType":"IfStatement","src":"1592:67:1","trueBody":{"id":325,"nodeType":"Block","src":"1613:46:1","statements":[{"expression":{"id":323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":317,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"1623:10:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1641:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":319,"name":"uint48","nodeType":"ElementaryTypeName","src":"1641:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":318,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1636:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1649:3:1","memberName":"max","nodeType":"MemberAccess","src":"1636:16:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"1623:29:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"id":324,"nodeType":"ExpressionStatement","src":"1623:29:1"}]}},{"assignments":[328],"declarations":[{"constant":false,"id":328,"mutability":"mutable","name":"validAfter","nameLocation":"1671:10:1","nodeType":"VariableDeclaration","scope":345,"src":"1664:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":327,"name":"uint48","nodeType":"ElementaryTypeName","src":"1664:6:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"id":338,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":331,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"1691:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1710:2:1","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"313630","id":333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1715:3:1","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"1710:8:1","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":335,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1709:10:1","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"1691:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1684:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":329,"name":"uint48","nodeType":"ElementaryTypeName","src":"1684:6:1","typeDescriptions":{}}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1684:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"nodeType":"VariableDeclarationStatement","src":"1664:56:1"},{"expression":{"arguments":[{"id":340,"name":"aggregator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"1748:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":341,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"1760:10:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},{"id":342,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"1772:10:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint48","typeString":"uint48"},{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":339,"name":"ValidationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"1733:14:1","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ValidationData_$286_storage_ptr_$","typeString":"type(struct ValidationData storage pointer)"}},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1733:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$286_memory_ptr","typeString":"struct ValidationData memory"}},"functionReturnParameters":294,"id":344,"nodeType":"Return","src":"1726:57:1"}]},"documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"1208:161:1","text":" Extract sigFailed, validAfter, validUntil.\n Also convert zero validUntil to type(uint48).max.\n @param validationData - The packed validation data."},"id":346,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_parseValidationData","nameLocation":"1379:20:1","nodeType":"FunctionDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"mutability":"mutable","name":"validationData","nameLocation":"1413:14:1","nodeType":"VariableDeclaration","scope":346,"src":"1405:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":288,"name":"uint256","nodeType":"ElementaryTypeName","src":"1405:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1399:30:1"},"returnParameters":{"id":294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":293,"mutability":"mutable","name":"data","nameLocation":"1466:4:1","nodeType":"VariableDeclaration","scope":346,"src":"1444:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$286_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":292,"nodeType":"UserDefinedTypeName","pathNode":{"id":291,"name":"ValidationData","nameLocations":["1444:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":286,"src":"1444:14:1"},"referencedDeclaration":286,"src":"1444:14:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$286_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"1443:28:1"},"scope":450,"src":"1370:416:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":382,"nodeType":"Block","src":"1982:143:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":357,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"2011:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$286_memory_ptr","typeString":"struct ValidationData memory"}},"id":358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2016:10:1","memberName":"aggregator","nodeType":"MemberAccess","referencedDeclaration":281,"src":"2011:15:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2003:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":355,"name":"uint160","nodeType":"ElementaryTypeName","src":"2003:7:1","typeDescriptions":{}}},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2003:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":362,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"2047:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$286_memory_ptr","typeString":"struct ValidationData memory"}},"id":363,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2052:10:1","memberName":"validUntil","nodeType":"MemberAccess","referencedDeclaration":285,"src":"2047:15:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2039:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":360,"name":"uint256","nodeType":"ElementaryTypeName","src":"2039:7:1","typeDescriptions":{}}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2039:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2067:3:1","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2039:31:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":367,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2038:33:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2003:68:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":371,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"2091:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$286_memory_ptr","typeString":"struct ValidationData memory"}},"id":372,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2096:10:1","memberName":"validAfter","nodeType":"MemberAccess","referencedDeclaration":283,"src":"2091:15:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2083:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":369,"name":"uint256","nodeType":"ElementaryTypeName","src":"2083:7:1","typeDescriptions":{}}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2083:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2112:3:1","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2118:2:1","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"2112:8:1","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":377,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2111:10:1","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"2083:38:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":379,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2082:40:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2003:119:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":354,"id":381,"nodeType":"Return","src":"1988:134:1"}]},"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"1788:107:1","text":" Helper to pack the return value for validateUserOp.\n @param data - The ValidationData to pack."},"id":383,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"1905:19:1","nodeType":"FunctionDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":350,"mutability":"mutable","name":"data","nameLocation":"1952:4:1","nodeType":"VariableDeclaration","scope":383,"src":"1930:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$286_memory_ptr","typeString":"struct ValidationData"},"typeName":{"id":349,"nodeType":"UserDefinedTypeName","pathNode":{"id":348,"name":"ValidationData","nameLocations":["1930:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":286,"src":"1930:14:1"},"referencedDeclaration":286,"src":"1930:14:1","typeDescriptions":{"typeIdentifier":"t_struct$_ValidationData_$286_storage_ptr","typeString":"struct ValidationData"}},"visibility":"internal"}],"src":"1924:34:1"},"returnParameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":383,"src":"1973:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":352,"name":"uint256","nodeType":"ElementaryTypeName","src":"1973:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1972:9:1"},"scope":450,"src":"1896:229:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":420,"nodeType":"Block","src":"2568:128:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"condition":{"id":395,"name":"sigFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"2590:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2606:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2590:17:1","trueExpression":{"hexValue":"31","id":396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2602:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":399,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2589:19:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":402,"name":"validUntil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2628:10:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2620:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":400,"name":"uint256","nodeType":"ElementaryTypeName","src":"2620:7:1","typeDescriptions":{}}},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2620:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2643:3:1","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2620:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":406,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2619:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2589:58:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":410,"name":"validAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"2667:10:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint48","typeString":"uint48"}],"id":409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2659:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":408,"name":"uint256","nodeType":"ElementaryTypeName","src":"2659:7:1","typeDescriptions":{}}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2659:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"id":414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313630","id":412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2683:3:1","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3438","id":413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2689:2:1","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"2683:8:1","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}}],"id":415,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2682:10:1","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"}},"src":"2659:33:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":417,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2658:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2589:104:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":394,"id":419,"nodeType":"Return","src":"2574:119:1"}]},"documentation":{"id":384,"nodeType":"StructuredDocumentation","src":"2127:320:1","text":" Helper to pack the return value for validateUserOp, when not using an aggregator.\n @param sigFailed  - True for signature failure, false for success.\n @param validUntil - Last timestamp this UserOperation is valid (or zero for infinite).\n @param validAfter - First timestamp this UserOperation is valid."},"id":421,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"_packValidationData","nameLocation":"2457:19:1","nodeType":"FunctionDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"mutability":"mutable","name":"sigFailed","nameLocation":"2487:9:1","nodeType":"VariableDeclaration","scope":421,"src":"2482:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":385,"name":"bool","nodeType":"ElementaryTypeName","src":"2482:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"validUntil","nameLocation":"2509:10:1","nodeType":"VariableDeclaration","scope":421,"src":"2502:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":387,"name":"uint48","nodeType":"ElementaryTypeName","src":"2502:6:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"},{"constant":false,"id":390,"mutability":"mutable","name":"validAfter","nameLocation":"2532:10:1","nodeType":"VariableDeclaration","scope":421,"src":"2525:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":389,"name":"uint48","nodeType":"ElementaryTypeName","src":"2525:6:1","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"2476:68:1"},"returnParameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":421,"src":"2559:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":392,"name":"uint256","nodeType":"ElementaryTypeName","src":"2559:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2558:9:1"},"scope":450,"src":"2448:248:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":430,"nodeType":"Block","src":"2951:209:1","statements":[{"AST":{"nativeSrc":"2986:168:1","nodeType":"YulBlock","src":"2986:168:1","statements":[{"nativeSrc":"3000:22:1","nodeType":"YulVariableDeclaration","src":"3000:22:1","value":{"arguments":[{"kind":"number","nativeSrc":"3017:4:1","nodeType":"YulLiteral","src":"3017:4:1","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3011:5:1","nodeType":"YulIdentifier","src":"3011:5:1"},"nativeSrc":"3011:11:1","nodeType":"YulFunctionCall","src":"3011:11:1"},"variables":[{"name":"mem","nativeSrc":"3004:3:1","nodeType":"YulTypedName","src":"3004:3:1","type":""}]},{"nativeSrc":"3035:22:1","nodeType":"YulVariableDeclaration","src":"3035:22:1","value":{"name":"data.length","nativeSrc":"3046:11:1","nodeType":"YulIdentifier","src":"3046:11:1"},"variables":[{"name":"len","nativeSrc":"3039:3:1","nodeType":"YulTypedName","src":"3039:3:1","type":""}]},{"expression":{"arguments":[{"name":"mem","nativeSrc":"3083:3:1","nodeType":"YulIdentifier","src":"3083:3:1"},{"name":"data.offset","nativeSrc":"3088:11:1","nodeType":"YulIdentifier","src":"3088:11:1"},{"name":"len","nativeSrc":"3101:3:1","nodeType":"YulIdentifier","src":"3101:3:1"}],"functionName":{"name":"calldatacopy","nativeSrc":"3070:12:1","nodeType":"YulIdentifier","src":"3070:12:1"},"nativeSrc":"3070:35:1","nodeType":"YulFunctionCall","src":"3070:35:1"},"nativeSrc":"3070:35:1","nodeType":"YulExpressionStatement","src":"3070:35:1"},{"nativeSrc":"3118:26:1","nodeType":"YulAssignment","src":"3118:26:1","value":{"arguments":[{"name":"mem","nativeSrc":"3135:3:1","nodeType":"YulIdentifier","src":"3135:3:1"},{"name":"len","nativeSrc":"3140:3:1","nodeType":"YulIdentifier","src":"3140:3:1"}],"functionName":{"name":"keccak256","nativeSrc":"3125:9:1","nodeType":"YulIdentifier","src":"3125:9:1"},"nativeSrc":"3125:19:1","nodeType":"YulFunctionCall","src":"3125:19:1"},"variableNames":[{"name":"ret","nativeSrc":"3118:3:1","nodeType":"YulIdentifier","src":"3118:3:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":424,"isOffset":false,"isSlot":false,"src":"3046:11:1","suffix":"length","valueSize":1},{"declaration":424,"isOffset":true,"isSlot":false,"src":"3088:11:1","suffix":"offset","valueSize":1},{"declaration":427,"isOffset":false,"isSlot":false,"src":"3118:3:1","valueSize":1}],"flags":["memory-safe"],"id":429,"nodeType":"InlineAssembly","src":"2961:193:1"}]},"documentation":{"id":422,"nodeType":"StructuredDocumentation","src":"2698:176:1","text":" keccak function over calldata.\n @dev copy calldata into memory, do keccak and drop allocated memory. Strangely, this is more efficient than letting solidity do it."},"id":431,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"calldataKeccak","nameLocation":"2888:14:1","nodeType":"FunctionDefinition","parameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":424,"mutability":"mutable","name":"data","nameLocation":"2918:4:1","nodeType":"VariableDeclaration","scope":431,"src":"2903:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":423,"name":"bytes","nodeType":"ElementaryTypeName","src":"2903:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2902:21:1"},"returnParameters":{"id":428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":427,"mutability":"mutable","name":"ret","nameLocation":"2946:3:1","nodeType":"VariableDeclaration","scope":431,"src":"2938:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":426,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2938:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2937:13:1"},"scope":450,"src":"2879:281:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":448,"nodeType":"Block","src":"3321:37:1","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":441,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"3338:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":442,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"3342:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3338:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":445,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"3350:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3338:13:1","trueExpression":{"id":444,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"3346:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":440,"id":447,"nodeType":"Return","src":"3331:20:1"}]},"documentation":{"id":432,"nodeType":"StructuredDocumentation","src":"3163:95:1","text":" The minimum of two numbers.\n @param a - First number.\n @param b - Second number."},"id":449,"implemented":true,"kind":"freeFunction","modifiers":[],"name":"min","nameLocation":"3272:3:1","nodeType":"FunctionDefinition","parameters":{"id":437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"mutability":"mutable","name":"a","nameLocation":"3284:1:1","nodeType":"VariableDeclaration","scope":449,"src":"3276:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":433,"name":"uint256","nodeType":"ElementaryTypeName","src":"3276:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":436,"mutability":"mutable","name":"b","nameLocation":"3295:1:1","nodeType":"VariableDeclaration","scope":449,"src":"3287:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":435,"name":"uint256","nodeType":"ElementaryTypeName","src":"3287:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3275:22:1"},"returnParameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":449,"src":"3312:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":438,"name":"uint256","nodeType":"ElementaryTypeName","src":"3312:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3311:9:1"},"scope":450,"src":"3263:95:1","stateMutability":"pure","virtual":false,"visibility":"internal"}],"src":"36:3323:1"},"id":1},"@account-abstraction/contracts/core/UserOperationLib.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/core/UserOperationLib.sol","exportedSymbols":{"PackedUserOperation":[1206],"UserOperationLib":[806],"calldataKeccak":[431],"min":[449]},"id":807,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":451,"literals":["solidity","^","0.8",".23"],"nodeType":"PragmaDirective","src":"36:24:2"},{"absolutePath":"@account-abstraction/contracts/interfaces/PackedUserOperation.sol","file":"../interfaces/PackedUserOperation.sol","id":452,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":807,"sourceUnit":1207,"src":"104:47:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/core/Helpers.sol","file":"./Helpers.sol","id":455,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":807,"sourceUnit":450,"src":"152:50:2","symbolAliases":[{"foreign":{"id":453,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"160:14:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":454,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"176:3:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"UserOperationLib","contractDependencies":[],"contractKind":"library","documentation":{"id":456,"nodeType":"StructuredDocumentation","src":"204:77:2","text":" Utility functions helpful when working with UserOperation structs."},"fullyImplemented":true,"id":806,"linearizedBaseContracts":[806],"name":"UserOperationLib","nameLocation":"290:16:2","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"b29a8ff4","id":459,"mutability":"constant","name":"PAYMASTER_VALIDATION_GAS_OFFSET","nameLocation":"338:31:2","nodeType":"VariableDeclaration","scope":806,"src":"314:60:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":457,"name":"uint256","nodeType":"ElementaryTypeName","src":"314:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3230","id":458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"372:2:2","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"public"},{"constant":true,"functionSelector":"25093e1b","id":462,"mutability":"constant","name":"PAYMASTER_POSTOP_GAS_OFFSET","nameLocation":"404:27:2","nodeType":"VariableDeclaration","scope":806,"src":"380:56:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":460,"name":"uint256","nodeType":"ElementaryTypeName","src":"380:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3336","id":461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"434:2:2","typeDescriptions":{"typeIdentifier":"t_rational_36_by_1","typeString":"int_const 36"},"value":"36"},"visibility":"public"},{"constant":true,"functionSelector":"ede31502","id":465,"mutability":"constant","name":"PAYMASTER_DATA_OFFSET","nameLocation":"466:21:2","nodeType":"VariableDeclaration","scope":806,"src":"442:50:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":463,"name":"uint256","nodeType":"ElementaryTypeName","src":"442:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3532","id":464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"490:2:2","typeDescriptions":{"typeIdentifier":"t_rational_52_by_1","typeString":"int_const 52"},"value":"52"},"visibility":"public"},{"body":{"id":486,"nodeType":"Block","src":"708:221:2","statements":[{"assignments":[475],"declarations":[{"constant":false,"id":475,"mutability":"mutable","name":"data","nameLocation":"726:4:2","nodeType":"VariableDeclaration","scope":486,"src":"718:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":474,"name":"address","nodeType":"ElementaryTypeName","src":"718:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":476,"nodeType":"VariableDeclarationStatement","src":"718:12:2"},{"AST":{"nativeSrc":"832:52:2","nodeType":"YulBlock","src":"832:52:2","statements":[{"nativeSrc":"846:28:2","nodeType":"YulAssignment","src":"846:28:2","value":{"arguments":[{"name":"userOp","nativeSrc":"867:6:2","nodeType":"YulIdentifier","src":"867:6:2"}],"functionName":{"name":"calldataload","nativeSrc":"854:12:2","nodeType":"YulIdentifier","src":"854:12:2"},"nativeSrc":"854:20:2","nodeType":"YulFunctionCall","src":"854:20:2"},"variableNames":[{"name":"data","nativeSrc":"846:4:2","nodeType":"YulIdentifier","src":"846:4:2"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":475,"isOffset":false,"isSlot":false,"src":"846:4:2","valueSize":1},{"declaration":469,"isOffset":false,"isSlot":false,"src":"867:6:2","valueSize":1}],"id":477,"nodeType":"InlineAssembly","src":"823:61:2"},{"expression":{"arguments":[{"arguments":[{"id":482,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"916:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"908:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":480,"name":"uint160","nodeType":"ElementaryTypeName","src":"908:7:2","typeDescriptions":{}}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"908:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"900:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"900:7:2","typeDescriptions":{}}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"900:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":473,"id":485,"nodeType":"Return","src":"893:29:2"}]},"documentation":{"id":466,"nodeType":"StructuredDocumentation","src":"498:103:2","text":" Get sender from user operation data.\n @param userOp - The user operation data."},"id":487,"implemented":true,"kind":"function","modifiers":[],"name":"getSender","nameLocation":"615:9:2","nodeType":"FunctionDefinition","parameters":{"id":470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":469,"mutability":"mutable","name":"userOp","nameLocation":"663:6:2","nodeType":"VariableDeclaration","scope":487,"src":"634:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":468,"nodeType":"UserDefinedTypeName","pathNode":{"id":467,"name":"PackedUserOperation","nameLocations":["634:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1206,"src":"634:19:2"},"referencedDeclaration":1206,"src":"634:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"624:51:2"},"returnParameters":{"id":473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":487,"src":"699:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"699:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"698:9:2"},"scope":806,"src":"606:323:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":521,"nodeType":"Block","src":"1235:395:2","statements":[{"id":520,"nodeType":"UncheckedBlock","src":"1245:379:2","statements":[{"assignments":[497,499],"declarations":[{"constant":false,"id":497,"mutability":"mutable","name":"maxPriorityFeePerGas","nameLocation":"1278:20:2","nodeType":"VariableDeclaration","scope":520,"src":"1270:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":496,"name":"uint256","nodeType":"ElementaryTypeName","src":"1270:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":499,"mutability":"mutable","name":"maxFeePerGas","nameLocation":"1308:12:2","nodeType":"VariableDeclaration","scope":520,"src":"1300:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":498,"name":"uint256","nodeType":"ElementaryTypeName","src":"1300:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":504,"initialValue":{"arguments":[{"expression":{"id":501,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"1336:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1343:7:2","memberName":"gasFees","nodeType":"MemberAccess","referencedDeclaration":1201,"src":"1336:14:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":500,"name":"unpackUints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"1324:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256,uint256)"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1324:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"1269:82:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":505,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"1369:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":506,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"1385:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1369:36:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":511,"nodeType":"IfStatement","src":"1365:173:2","trueBody":{"id":510,"nodeType":"Block","src":"1407:131:2","statements":[{"expression":{"id":508,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"1511:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":495,"id":509,"nodeType":"Return","src":"1504:19:2"}]}},{"expression":{"arguments":[{"id":513,"name":"maxFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"1562:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":514,"name":"maxPriorityFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"1576:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":515,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1599:5:2","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1605:7:2","memberName":"basefee","nodeType":"MemberAccess","src":"1599:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1576:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":512,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"1558:3:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1558:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":495,"id":519,"nodeType":"Return","src":"1551:62:2"}]}]},"documentation":{"id":488,"nodeType":"StructuredDocumentation","src":"935:194:2","text":" Relayer/block builder might submit the TX with higher priorityFee,\n but the user should not pay above what he signed for.\n @param userOp - The user operation data."},"id":522,"implemented":true,"kind":"function","modifiers":[],"name":"gasPrice","nameLocation":"1143:8:2","nodeType":"FunctionDefinition","parameters":{"id":492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":491,"mutability":"mutable","name":"userOp","nameLocation":"1190:6:2","nodeType":"VariableDeclaration","scope":522,"src":"1161:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":490,"nodeType":"UserDefinedTypeName","pathNode":{"id":489,"name":"PackedUserOperation","nameLocations":["1161:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1206,"src":"1161:19:2"},"referencedDeclaration":1206,"src":"1161:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"1151:51:2"},"returnParameters":{"id":495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":522,"src":"1226:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":493,"name":"uint256","nodeType":"ElementaryTypeName","src":"1226:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1225:9:2"},"scope":806,"src":"1134:496:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":590,"nodeType":"Block","src":"1868:661:2","statements":[{"assignments":[532],"declarations":[{"constant":false,"id":532,"mutability":"mutable","name":"sender","nameLocation":"1886:6:2","nodeType":"VariableDeclaration","scope":590,"src":"1878:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"1878:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":536,"initialValue":{"arguments":[{"id":534,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"1905:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation calldata"}],"id":533,"name":"getSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"1895:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_PackedUserOperation_$1206_calldata_ptr_$returns$_t_address_$","typeString":"function (struct PackedUserOperation calldata) pure returns (address)"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1895:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1878:34:2"},{"assignments":[538],"declarations":[{"constant":false,"id":538,"mutability":"mutable","name":"nonce","nameLocation":"1930:5:2","nodeType":"VariableDeclaration","scope":590,"src":"1922:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":537,"name":"uint256","nodeType":"ElementaryTypeName","src":"1922:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":541,"initialValue":{"expression":{"id":539,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"1938:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1945:5:2","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":1191,"src":"1938:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1922:28:2"},{"assignments":[543],"declarations":[{"constant":false,"id":543,"mutability":"mutable","name":"hashInitCode","nameLocation":"1968:12:2","nodeType":"VariableDeclaration","scope":590,"src":"1960:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":542,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1960:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":548,"initialValue":{"arguments":[{"expression":{"id":545,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"1998:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2005:8:2","memberName":"initCode","nodeType":"MemberAccess","referencedDeclaration":1193,"src":"1998:15:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":544,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"1983:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1983:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1960:54:2"},{"assignments":[550],"declarations":[{"constant":false,"id":550,"mutability":"mutable","name":"hashCallData","nameLocation":"2032:12:2","nodeType":"VariableDeclaration","scope":590,"src":"2024:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":549,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2024:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":555,"initialValue":{"arguments":[{"expression":{"id":552,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"2062:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2069:8:2","memberName":"callData","nodeType":"MemberAccess","referencedDeclaration":1195,"src":"2062:15:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":551,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"2047:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2047:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2024:54:2"},{"assignments":[557],"declarations":[{"constant":false,"id":557,"mutability":"mutable","name":"accountGasLimits","nameLocation":"2096:16:2","nodeType":"VariableDeclaration","scope":590,"src":"2088:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":556,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2088:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":560,"initialValue":{"expression":{"id":558,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"2115:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2122:16:2","memberName":"accountGasLimits","nodeType":"MemberAccess","referencedDeclaration":1197,"src":"2115:23:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2088:50:2"},{"assignments":[562],"declarations":[{"constant":false,"id":562,"mutability":"mutable","name":"preVerificationGas","nameLocation":"2156:18:2","nodeType":"VariableDeclaration","scope":590,"src":"2148:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":561,"name":"uint256","nodeType":"ElementaryTypeName","src":"2148:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":565,"initialValue":{"expression":{"id":563,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"2177:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2184:18:2","memberName":"preVerificationGas","nodeType":"MemberAccess","referencedDeclaration":1199,"src":"2177:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2148:54:2"},{"assignments":[567],"declarations":[{"constant":false,"id":567,"mutability":"mutable","name":"gasFees","nameLocation":"2220:7:2","nodeType":"VariableDeclaration","scope":590,"src":"2212:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":566,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2212:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":570,"initialValue":{"expression":{"id":568,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"2230:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2237:7:2","memberName":"gasFees","nodeType":"MemberAccess","referencedDeclaration":1201,"src":"2230:14:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2212:32:2"},{"assignments":[572],"declarations":[{"constant":false,"id":572,"mutability":"mutable","name":"hashPaymasterAndData","nameLocation":"2262:20:2","nodeType":"VariableDeclaration","scope":590,"src":"2254:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":571,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2254:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":577,"initialValue":{"arguments":[{"expression":{"id":574,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"2300:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2307:16:2","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":1203,"src":"2300:23:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":573,"name":"calldataKeccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"2285:14:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (bytes calldata) pure returns (bytes32)"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2285:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2254:70:2"},{"expression":{"arguments":[{"id":580,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"2366:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":581,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"2374:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":582,"name":"hashInitCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"2393:12:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":583,"name":"hashCallData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"2407:12:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":584,"name":"accountGasLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"2433:16:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":585,"name":"preVerificationGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"2451:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":586,"name":"gasFees","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"2471:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":587,"name":"hashPaymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"2492:20:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":578,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2342:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2346:6:2","memberName":"encode","nodeType":"MemberAccess","src":"2342:10:2","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2342:180:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":530,"id":589,"nodeType":"Return","src":"2335:187:2"}]},"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"1636:119:2","text":" Pack the user operation data into bytes for hashing.\n @param userOp - The user operation data."},"id":591,"implemented":true,"kind":"function","modifiers":[],"name":"encode","nameLocation":"1769:6:2","nodeType":"FunctionDefinition","parameters":{"id":527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":526,"mutability":"mutable","name":"userOp","nameLocation":"1814:6:2","nodeType":"VariableDeclaration","scope":591,"src":"1785:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":525,"nodeType":"UserDefinedTypeName","pathNode":{"id":524,"name":"PackedUserOperation","nameLocations":["1785:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1206,"src":"1785:19:2"},"referencedDeclaration":1206,"src":"1785:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"1775:51:2"},"returnParameters":{"id":530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":529,"mutability":"mutable","name":"ret","nameLocation":"1863:3:2","nodeType":"VariableDeclaration","scope":591,"src":"1850:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":528,"name":"bytes","nodeType":"ElementaryTypeName","src":"1850:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1849:18:2"},"scope":806,"src":"1760:769:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":616,"nodeType":"Block","src":"2642:76:2","statements":[{"expression":{"components":[{"arguments":[{"arguments":[{"id":604,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"2676:6:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2668:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":602,"name":"bytes16","nodeType":"ElementaryTypeName","src":"2668:7:2","typeDescriptions":{}}},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2668:15:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"id":601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2660:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":600,"name":"uint128","nodeType":"ElementaryTypeName","src":"2660:7:2","typeDescriptions":{}}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2660:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"arguments":[{"arguments":[{"id":611,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"2702:6:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2694:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":609,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:2","typeDescriptions":{}}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2694:15:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2686:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":607,"name":"uint128","nodeType":"ElementaryTypeName","src":"2686:7:2","typeDescriptions":{}}},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2686:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"id":614,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2659:52:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint128_$_t_uint128_$","typeString":"tuple(uint128,uint128)"}},"functionReturnParameters":599,"id":615,"nodeType":"Return","src":"2652:59:2"}]},"id":617,"implemented":true,"kind":"function","modifiers":[],"name":"unpackUints","nameLocation":"2544:11:2","nodeType":"FunctionDefinition","parameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":593,"mutability":"mutable","name":"packed","nameLocation":"2573:6:2","nodeType":"VariableDeclaration","scope":617,"src":"2565:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":592,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2565:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2555:30:2"},"returnParameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":596,"mutability":"mutable","name":"high128","nameLocation":"2617:7:2","nodeType":"VariableDeclaration","scope":617,"src":"2609:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":595,"name":"uint256","nodeType":"ElementaryTypeName","src":"2609:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":598,"mutability":"mutable","name":"low128","nameLocation":"2634:6:2","nodeType":"VariableDeclaration","scope":617,"src":"2626:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":597,"name":"uint256","nodeType":"ElementaryTypeName","src":"2626:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2608:33:2"},"scope":806,"src":"2535:183:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":631,"nodeType":"Block","src":"2851:46:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":626,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"2876:6:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2868:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":624,"name":"uint256","nodeType":"ElementaryTypeName","src":"2868:7:2","typeDescriptions":{}}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2868:15:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2887:3:2","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"2868:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":623,"id":630,"nodeType":"Return","src":"2861:29:2"}]},"id":632,"implemented":true,"kind":"function","modifiers":[],"name":"unpackHigh128","nameLocation":"2789:13:2","nodeType":"FunctionDefinition","parameters":{"id":620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":619,"mutability":"mutable","name":"packed","nameLocation":"2811:6:2","nodeType":"VariableDeclaration","scope":632,"src":"2803:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":618,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2803:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2802:16:2"},"returnParameters":{"id":623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":632,"src":"2842:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":621,"name":"uint256","nodeType":"ElementaryTypeName","src":"2842:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:9:2"},"scope":806,"src":"2780:117:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":647,"nodeType":"Block","src":"3029:48:2","statements":[{"expression":{"arguments":[{"arguments":[{"id":643,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"3062:6:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3054:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":641,"name":"uint256","nodeType":"ElementaryTypeName","src":"3054:7:2","typeDescriptions":{}}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3054:15:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3046:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":639,"name":"uint128","nodeType":"ElementaryTypeName","src":"3046:7:2","typeDescriptions":{}}},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":638,"id":646,"nodeType":"Return","src":"3039:31:2"}]},"id":648,"implemented":true,"kind":"function","modifiers":[],"name":"unpackLow128","nameLocation":"2968:12:2","nodeType":"FunctionDefinition","parameters":{"id":635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"packed","nameLocation":"2989:6:2","nodeType":"VariableDeclaration","scope":648,"src":"2981:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":633,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2981:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2980:16:2"},"returnParameters":{"id":638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":648,"src":"3020:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":636,"name":"uint256","nodeType":"ElementaryTypeName","src":"3020:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3019:9:2"},"scope":806,"src":"2959:118:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":661,"nodeType":"Block","src":"3192:53:2","statements":[{"expression":{"arguments":[{"expression":{"id":657,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":651,"src":"3223:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3230:7:2","memberName":"gasFees","nodeType":"MemberAccess","referencedDeclaration":1201,"src":"3223:14:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":656,"name":"unpackHigh128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"3209:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3209:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":655,"id":660,"nodeType":"Return","src":"3202:36:2"}]},"id":662,"implemented":true,"kind":"function","modifiers":[],"name":"unpackMaxPriorityFeePerGas","nameLocation":"3092:26:2","nodeType":"FunctionDefinition","parameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":651,"mutability":"mutable","name":"userOp","nameLocation":"3148:6:2","nodeType":"VariableDeclaration","scope":662,"src":"3119:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":650,"nodeType":"UserDefinedTypeName","pathNode":{"id":649,"name":"PackedUserOperation","nameLocations":["3119:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1206,"src":"3119:19:2"},"referencedDeclaration":1206,"src":"3119:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"3118:37:2"},"returnParameters":{"id":655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":654,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":662,"src":"3183:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":653,"name":"uint256","nodeType":"ElementaryTypeName","src":"3183:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3182:9:2"},"scope":806,"src":"3083:162:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":675,"nodeType":"Block","src":"3352:52:2","statements":[{"expression":{"arguments":[{"expression":{"id":671,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"3382:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3389:7:2","memberName":"gasFees","nodeType":"MemberAccess","referencedDeclaration":1201,"src":"3382:14:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":670,"name":"unpackLow128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"3369:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3369:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":669,"id":674,"nodeType":"Return","src":"3362:35:2"}]},"id":676,"implemented":true,"kind":"function","modifiers":[],"name":"unpackMaxFeePerGas","nameLocation":"3260:18:2","nodeType":"FunctionDefinition","parameters":{"id":666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":665,"mutability":"mutable","name":"userOp","nameLocation":"3308:6:2","nodeType":"VariableDeclaration","scope":676,"src":"3279:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":664,"nodeType":"UserDefinedTypeName","pathNode":{"id":663,"name":"PackedUserOperation","nameLocations":["3279:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1206,"src":"3279:19:2"},"referencedDeclaration":1206,"src":"3279:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"3278:37:2"},"returnParameters":{"id":669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":676,"src":"3343:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":667,"name":"uint256","nodeType":"ElementaryTypeName","src":"3343:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3342:9:2"},"scope":806,"src":"3251:153:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":689,"nodeType":"Block","src":"3519:62:2","statements":[{"expression":{"arguments":[{"expression":{"id":685,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"3550:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3557:16:2","memberName":"accountGasLimits","nodeType":"MemberAccess","referencedDeclaration":1197,"src":"3550:23:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":684,"name":"unpackHigh128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"3536:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3536:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":683,"id":688,"nodeType":"Return","src":"3529:45:2"}]},"id":690,"implemented":true,"kind":"function","modifiers":[],"name":"unpackVerificationGasLimit","nameLocation":"3419:26:2","nodeType":"FunctionDefinition","parameters":{"id":680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":679,"mutability":"mutable","name":"userOp","nameLocation":"3475:6:2","nodeType":"VariableDeclaration","scope":690,"src":"3446:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":678,"nodeType":"UserDefinedTypeName","pathNode":{"id":677,"name":"PackedUserOperation","nameLocations":["3446:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1206,"src":"3446:19:2"},"referencedDeclaration":1206,"src":"3446:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"3445:37:2"},"returnParameters":{"id":683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":690,"src":"3510:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":681,"name":"uint256","nodeType":"ElementaryTypeName","src":"3510:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3509:9:2"},"scope":806,"src":"3410:171:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":703,"nodeType":"Block","src":"3688:61:2","statements":[{"expression":{"arguments":[{"expression":{"id":699,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"3718:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3725:16:2","memberName":"accountGasLimits","nodeType":"MemberAccess","referencedDeclaration":1197,"src":"3718:23:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":698,"name":"unpackLow128","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"3705:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_uint256_$","typeString":"function (bytes32) pure returns (uint256)"}},"id":701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3705:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":697,"id":702,"nodeType":"Return","src":"3698:44:2"}]},"id":704,"implemented":true,"kind":"function","modifiers":[],"name":"unpackCallGasLimit","nameLocation":"3596:18:2","nodeType":"FunctionDefinition","parameters":{"id":694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"userOp","nameLocation":"3644:6:2","nodeType":"VariableDeclaration","scope":704,"src":"3615:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":692,"nodeType":"UserDefinedTypeName","pathNode":{"id":691,"name":"PackedUserOperation","nameLocations":["3615:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1206,"src":"3615:19:2"},"referencedDeclaration":1206,"src":"3615:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"3614:37:2"},"returnParameters":{"id":697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":704,"src":"3679:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":695,"name":"uint256","nodeType":"ElementaryTypeName","src":"3679:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3678:9:2"},"scope":806,"src":"3587:162:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":724,"nodeType":"Block","src":"3873:128:2","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"expression":{"id":716,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"3906:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3913:16:2","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":1203,"src":"3906:23:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":719,"name":"PAYMASTER_POSTOP_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"3964:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"3906:86:2","startExpression":{"id":718,"name":"PAYMASTER_VALIDATION_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"3930:31:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3898:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":714,"name":"bytes16","nodeType":"ElementaryTypeName","src":"3898:7:2","typeDescriptions":{}}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3898:95:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"id":713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3890:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":712,"name":"uint128","nodeType":"ElementaryTypeName","src":"3890:7:2","typeDescriptions":{}}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:104:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":711,"id":723,"nodeType":"Return","src":"3883:111:2"}]},"id":725,"implemented":true,"kind":"function","modifiers":[],"name":"unpackPaymasterVerificationGasLimit","nameLocation":"3764:35:2","nodeType":"FunctionDefinition","parameters":{"id":708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":707,"mutability":"mutable","name":"userOp","nameLocation":"3829:6:2","nodeType":"VariableDeclaration","scope":725,"src":"3800:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":706,"nodeType":"UserDefinedTypeName","pathNode":{"id":705,"name":"PackedUserOperation","nameLocations":["3800:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1206,"src":"3800:19:2"},"referencedDeclaration":1206,"src":"3800:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"3799:37:2"},"returnParameters":{"id":711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":710,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":725,"src":"3864:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":709,"name":"uint256","nodeType":"ElementaryTypeName","src":"3864:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3863:9:2"},"scope":806,"src":"3755:246:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":745,"nodeType":"Block","src":"4110:118:2","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"expression":{"id":737,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"4143:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4150:16:2","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":1203,"src":"4143:23:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":740,"name":"PAYMASTER_DATA_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"4197:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"4143:76:2","startExpression":{"id":739,"name":"PAYMASTER_POSTOP_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"4167:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4135:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":735,"name":"bytes16","nodeType":"ElementaryTypeName","src":"4135:7:2","typeDescriptions":{}}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4135:85:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"id":734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4127:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":733,"name":"uint128","nodeType":"ElementaryTypeName","src":"4127:7:2","typeDescriptions":{}}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4127:94:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":732,"id":744,"nodeType":"Return","src":"4120:101:2"}]},"id":746,"implemented":true,"kind":"function","modifiers":[],"name":"unpackPostOpGasLimit","nameLocation":"4016:20:2","nodeType":"FunctionDefinition","parameters":{"id":729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":728,"mutability":"mutable","name":"userOp","nameLocation":"4066:6:2","nodeType":"VariableDeclaration","scope":746,"src":"4037:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":727,"nodeType":"UserDefinedTypeName","pathNode":{"id":726,"name":"PackedUserOperation","nameLocations":["4037:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1206,"src":"4037:19:2"},"referencedDeclaration":1206,"src":"4037:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"4036:37:2"},"returnParameters":{"id":732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":746,"src":"4101:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":730,"name":"uint256","nodeType":"ElementaryTypeName","src":"4101:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4100:9:2"},"scope":806,"src":"4007:221:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":788,"nodeType":"Block","src":"4412:329:2","statements":[{"expression":{"components":[{"arguments":[{"arguments":[{"baseExpression":{"id":761,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"4459:16:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":762,"name":"PAYMASTER_VALIDATION_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"4478:31:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"4459:51:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4451:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":759,"name":"bytes20","nodeType":"ElementaryTypeName","src":"4451:7:2","typeDescriptions":{}}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4451:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4443:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":757,"name":"address","nodeType":"ElementaryTypeName","src":"4443:7:2","typeDescriptions":{}}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4443:69:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"baseExpression":{"id":770,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"4542:16:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":772,"name":"PAYMASTER_POSTOP_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"4593:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"4542:79:2","startExpression":{"id":771,"name":"PAYMASTER_VALIDATION_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"4559:31:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":768,"name":"bytes16","nodeType":"ElementaryTypeName","src":"4534:7:2","typeDescriptions":{}}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:88:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"id":767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4526:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":766,"name":"uint128","nodeType":"ElementaryTypeName","src":"4526:7:2","typeDescriptions":{}}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4526:97:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"arguments":[{"arguments":[{"baseExpression":{"id":780,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"4653:16:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"endExpression":{"id":782,"name":"PAYMASTER_DATA_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"4700:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexRangeAccess","src":"4653:69:2","startExpression":{"id":781,"name":"PAYMASTER_POSTOP_GAS_OFFSET","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"4670:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr_slice","typeString":"bytes calldata slice"}],"id":779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4645:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes16_$","typeString":"type(bytes16)"},"typeName":{"id":778,"name":"bytes16","nodeType":"ElementaryTypeName","src":"4645:7:2","typeDescriptions":{}}},"id":784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4645:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes16","typeString":"bytes16"}],"id":777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4637:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":776,"name":"uint128","nodeType":"ElementaryTypeName","src":"4637:7:2","typeDescriptions":{}}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4637:87:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"id":786,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4429:305:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint128_$_t_uint128_$","typeString":"tuple(address,uint128,uint128)"}},"functionReturnParameters":756,"id":787,"nodeType":"Return","src":"4422:312:2"}]},"id":789,"implemented":true,"kind":"function","modifiers":[],"name":"unpackPaymasterStaticFields","nameLocation":"4243:27:2","nodeType":"FunctionDefinition","parameters":{"id":749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":748,"mutability":"mutable","name":"paymasterAndData","nameLocation":"4295:16:2","nodeType":"VariableDeclaration","scope":789,"src":"4280:31:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":747,"name":"bytes","nodeType":"ElementaryTypeName","src":"4280:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4270:47:2"},"returnParameters":{"id":756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"paymaster","nameLocation":"4349:9:2","nodeType":"VariableDeclaration","scope":789,"src":"4341:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"4341:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":753,"mutability":"mutable","name":"validationGasLimit","nameLocation":"4368:18:2","nodeType":"VariableDeclaration","scope":789,"src":"4360:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":752,"name":"uint256","nodeType":"ElementaryTypeName","src":"4360:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"postOpGasLimit","nameLocation":"4396:14:2","nodeType":"VariableDeclaration","scope":789,"src":"4388:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":754,"name":"uint256","nodeType":"ElementaryTypeName","src":"4388:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4340:71:2"},"scope":806,"src":"4234:507:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":804,"nodeType":"Block","src":"4945:49:2","statements":[{"expression":{"arguments":[{"arguments":[{"id":800,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"4979:6:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation calldata"}],"id":799,"name":"encode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"4972:6:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_PackedUserOperation_$1206_calldata_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct PackedUserOperation calldata) pure returns (bytes memory)"}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4972:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":798,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4962:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4962:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":797,"id":803,"nodeType":"Return","src":"4955:32:2"}]},"documentation":{"id":790,"nodeType":"StructuredDocumentation","src":"4747:96:2","text":" Hash the user operation data.\n @param userOp - The user operation data."},"id":805,"implemented":true,"kind":"function","modifiers":[],"name":"hash","nameLocation":"4857:4:2","nodeType":"FunctionDefinition","parameters":{"id":794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":793,"mutability":"mutable","name":"userOp","nameLocation":"4900:6:2","nodeType":"VariableDeclaration","scope":805,"src":"4871:35:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":792,"nodeType":"UserDefinedTypeName","pathNode":{"id":791,"name":"PackedUserOperation","nameLocations":["4871:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1206,"src":"4871:19:2"},"referencedDeclaration":1206,"src":"4871:19:2","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"4861:51:2"},"returnParameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":805,"src":"4936:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":795,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4936:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4935:9:2"},"scope":806,"src":"4848:146:2","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":807,"src":"282:4714:2","usedErrors":[],"usedEvents":[]}],"src":"36:4961:2"},"id":2},"@account-abstraction/contracts/interfaces/IAggregator.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/IAggregator.sol","exportedSymbols":{"IAggregator":[840],"PackedUserOperation":[1206]},"id":841,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":808,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"36:24:3"},{"absolutePath":"@account-abstraction/contracts/interfaces/PackedUserOperation.sol","file":"./PackedUserOperation.sol","id":809,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":841,"sourceUnit":1207,"src":"62:35:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAggregator","contractDependencies":[],"contractKind":"interface","documentation":{"id":810,"nodeType":"StructuredDocumentation","src":"99:43:3","text":" Aggregated Signatures validator."},"fullyImplemented":false,"id":840,"linearizedBaseContracts":[840],"name":"IAggregator","nameLocation":"153:11:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":811,"nodeType":"StructuredDocumentation","src":"171:269:3","text":" Validate aggregated signature.\n Revert if the aggregated signature does not match the given list of operations.\n @param userOps   - Array of UserOperations to validate the signature for.\n @param signature - The aggregated signature."},"functionSelector":"2dd81133","id":820,"implemented":false,"kind":"function","modifiers":[],"name":"validateSignatures","nameLocation":"454:18:3","nodeType":"FunctionDefinition","parameters":{"id":818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":815,"mutability":"mutable","name":"userOps","nameLocation":"513:7:3","nodeType":"VariableDeclaration","scope":820,"src":"482:38:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$1206_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":813,"nodeType":"UserDefinedTypeName","pathNode":{"id":812,"name":"PackedUserOperation","nameLocations":["482:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":1206,"src":"482:19:3"},"referencedDeclaration":1206,"src":"482:19:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_storage_ptr","typeString":"struct PackedUserOperation"}},"id":814,"nodeType":"ArrayTypeName","src":"482:21:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$1206_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"},{"constant":false,"id":817,"mutability":"mutable","name":"signature","nameLocation":"545:9:3","nodeType":"VariableDeclaration","scope":820,"src":"530:24:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":816,"name":"bytes","nodeType":"ElementaryTypeName","src":"530:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"472:88:3"},"returnParameters":{"id":819,"nodeType":"ParameterList","parameters":[],"src":"574:0:3"},"scope":840,"src":"445:130:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"581:610:3","text":" Validate signature of a single userOp.\n This method should be called by bundler after EntryPointSimulation.simulateValidation() returns\n the aggregator this account uses.\n First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n @param userOp        - The userOperation received from the user.\n @return sigForUserOp - The value to put into the signature field of the userOp when calling handleOps.\n                        (usually empty, unless account and aggregator support some kind of \"multisig\"."},"functionSelector":"062a422b","id":829,"implemented":false,"kind":"function","modifiers":[],"name":"validateUserOpSignature","nameLocation":"1205:23:3","nodeType":"FunctionDefinition","parameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"userOp","nameLocation":"1267:6:3","nodeType":"VariableDeclaration","scope":829,"src":"1238:35:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":823,"nodeType":"UserDefinedTypeName","pathNode":{"id":822,"name":"PackedUserOperation","nameLocations":["1238:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":1206,"src":"1238:19:3"},"referencedDeclaration":1206,"src":"1238:19:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"1228:51:3"},"returnParameters":{"id":828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":827,"mutability":"mutable","name":"sigForUserOp","nameLocation":"1316:12:3","nodeType":"VariableDeclaration","scope":829,"src":"1303:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":826,"name":"bytes","nodeType":"ElementaryTypeName","src":"1303:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1302:27:3"},"scope":840,"src":"1196:134:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":830,"nodeType":"StructuredDocumentation","src":"1336:387:3","text":" Aggregate multiple signatures into a single value.\n This method is called off-chain to calculate the signature to pass with handleOps()\n bundler MAY use optimized custom code perform this aggregation.\n @param userOps              - Array of UserOperations to collect the signatures from.\n @return aggregatedSignature - The aggregated signature."},"functionSelector":"ae574a43","id":839,"implemented":false,"kind":"function","modifiers":[],"name":"aggregateSignatures","nameLocation":"1737:19:3","nodeType":"FunctionDefinition","parameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":834,"mutability":"mutable","name":"userOps","nameLocation":"1797:7:3","nodeType":"VariableDeclaration","scope":839,"src":"1766:38:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$1206_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":832,"nodeType":"UserDefinedTypeName","pathNode":{"id":831,"name":"PackedUserOperation","nameLocations":["1766:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":1206,"src":"1766:19:3"},"referencedDeclaration":1206,"src":"1766:19:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_storage_ptr","typeString":"struct PackedUserOperation"}},"id":833,"nodeType":"ArrayTypeName","src":"1766:21:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$1206_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"}],"src":"1756:54:3"},"returnParameters":{"id":838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"aggregatedSignature","nameLocation":"1847:19:3","nodeType":"VariableDeclaration","scope":839,"src":"1834:32:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":836,"name":"bytes","nodeType":"ElementaryTypeName","src":"1834:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1833:34:3"},"scope":840,"src":"1728:140:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":841,"src":"143:1727:3","usedErrors":[],"usedEvents":[]}],"src":"36:1835:3"},"id":3},"@account-abstraction/contracts/interfaces/IEntryPoint.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/IEntryPoint.sol","exportedSymbols":{"IAggregator":[840],"IEntryPoint":[1024],"INonceManager":[1043],"IStakeManager":[1184],"PackedUserOperation":[1206]},"id":1025,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":842,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"163:24:4"},{"absolutePath":"@account-abstraction/contracts/interfaces/PackedUserOperation.sol","file":"./PackedUserOperation.sol","id":843,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1025,"sourceUnit":1207,"src":"311:35:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/IStakeManager.sol","file":"./IStakeManager.sol","id":844,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1025,"sourceUnit":1185,"src":"347:29:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/IAggregator.sol","file":"./IAggregator.sol","id":845,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1025,"sourceUnit":841,"src":"377:27:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/INonceManager.sol","file":"./INonceManager.sol","id":846,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1025,"sourceUnit":1044,"src":"405:29:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":847,"name":"IStakeManager","nameLocations":["461:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":1184,"src":"461:13:4"},"id":848,"nodeType":"InheritanceSpecifier","src":"461:13:4"},{"baseName":{"id":849,"name":"INonceManager","nameLocations":["476:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":1043,"src":"476:13:4"},"id":850,"nodeType":"InheritanceSpecifier","src":"476:13:4"}],"canonicalName":"IEntryPoint","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1024,"linearizedBaseContracts":[1024,1043,1184],"name":"IEntryPoint","nameLocation":"446:11:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f","id":866,"name":"UserOperationEvent","nameLocation":"1255:18:4","nodeType":"EventDefinition","parameters":{"id":865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1299:10:4","nodeType":"VariableDeclaration","scope":866,"src":"1283:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":851,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1283:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":854,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1335:6:4","nodeType":"VariableDeclaration","scope":866,"src":"1319:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"1319:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":856,"indexed":true,"mutability":"mutable","name":"paymaster","nameLocation":"1367:9:4","nodeType":"VariableDeclaration","scope":866,"src":"1351:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":855,"name":"address","nodeType":"ElementaryTypeName","src":"1351:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":858,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"1394:5:4","nodeType":"VariableDeclaration","scope":866,"src":"1386:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":857,"name":"uint256","nodeType":"ElementaryTypeName","src":"1386:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":860,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"1414:7:4","nodeType":"VariableDeclaration","scope":866,"src":"1409:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":859,"name":"bool","nodeType":"ElementaryTypeName","src":"1409:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":862,"indexed":false,"mutability":"mutable","name":"actualGasCost","nameLocation":"1439:13:4","nodeType":"VariableDeclaration","scope":866,"src":"1431:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":861,"name":"uint256","nodeType":"ElementaryTypeName","src":"1431:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":864,"indexed":false,"mutability":"mutable","name":"actualGasUsed","nameLocation":"1470:13:4","nodeType":"VariableDeclaration","scope":866,"src":"1462:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":863,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1273:216:4"},"src":"1249:241:4"},{"anonymous":false,"documentation":{"id":867,"nodeType":"StructuredDocumentation","src":"1496:349:4","text":" Account \"sender\" was deployed.\n @param userOpHash - The userOp that deployed this account. UserOperationEvent will follow.\n @param sender     - The account that is deployed\n @param factory    - The factory used to deploy this account (in the initCode)\n @param paymaster  - The paymaster used by this UserOp"},"eventSelector":"d51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d","id":877,"name":"AccountDeployed","nameLocation":"1856:15:4","nodeType":"EventDefinition","parameters":{"id":876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":869,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1897:10:4","nodeType":"VariableDeclaration","scope":877,"src":"1881:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":868,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1881:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":871,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1933:6:4","nodeType":"VariableDeclaration","scope":877,"src":"1917:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":870,"name":"address","nodeType":"ElementaryTypeName","src":"1917:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":873,"indexed":false,"mutability":"mutable","name":"factory","nameLocation":"1957:7:4","nodeType":"VariableDeclaration","scope":877,"src":"1949:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":872,"name":"address","nodeType":"ElementaryTypeName","src":"1949:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":875,"indexed":false,"mutability":"mutable","name":"paymaster","nameLocation":"1982:9:4","nodeType":"VariableDeclaration","scope":877,"src":"1974:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"1974:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1871:126:4"},"src":"1850:148:4"},{"anonymous":false,"documentation":{"id":878,"nodeType":"StructuredDocumentation","src":"2004:361:4","text":" An event emitted if the UserOperation \"callData\" reverted with non-zero length.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request.\n @param revertReason - The return bytes from the (reverted) call to \"callData\"."},"eventSelector":"1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201","id":888,"name":"UserOperationRevertReason","nameLocation":"2376:25:4","nodeType":"EventDefinition","parameters":{"id":887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":880,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"2427:10:4","nodeType":"VariableDeclaration","scope":888,"src":"2411:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":879,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2411:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":882,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2463:6:4","nodeType":"VariableDeclaration","scope":888,"src":"2447:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":881,"name":"address","nodeType":"ElementaryTypeName","src":"2447:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":884,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"2487:5:4","nodeType":"VariableDeclaration","scope":888,"src":"2479:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":883,"name":"uint256","nodeType":"ElementaryTypeName","src":"2479:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":886,"indexed":false,"mutability":"mutable","name":"revertReason","nameLocation":"2508:12:4","nodeType":"VariableDeclaration","scope":888,"src":"2502:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":885,"name":"bytes","nodeType":"ElementaryTypeName","src":"2502:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2401:125:4"},"src":"2370:157:4"},{"anonymous":false,"documentation":{"id":889,"nodeType":"StructuredDocumentation","src":"2533:376:4","text":" An event emitted if the UserOperation Paymaster's \"postOp\" call reverted with non-zero length.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request.\n @param revertReason - The return bytes from the (reverted) call to \"callData\"."},"eventSelector":"f62676f440ff169a3a9afdbf812e89e7f95975ee8e5c31214ffdef631c5f4792","id":899,"name":"PostOpRevertReason","nameLocation":"2920:18:4","nodeType":"EventDefinition","parameters":{"id":898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":891,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"2964:10:4","nodeType":"VariableDeclaration","scope":899,"src":"2948:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":890,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2948:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":893,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3000:6:4","nodeType":"VariableDeclaration","scope":899,"src":"2984:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":892,"name":"address","nodeType":"ElementaryTypeName","src":"2984:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":895,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"3024:5:4","nodeType":"VariableDeclaration","scope":899,"src":"3016:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":894,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":897,"indexed":false,"mutability":"mutable","name":"revertReason","nameLocation":"3045:12:4","nodeType":"VariableDeclaration","scope":899,"src":"3039:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":896,"name":"bytes","nodeType":"ElementaryTypeName","src":"3039:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2938:125:4"},"src":"2914:150:4"},{"anonymous":false,"documentation":{"id":900,"nodeType":"StructuredDocumentation","src":"3070:284:4","text":" UserOp consumed more than prefund. The UserOperation is reverted, and no refund is made.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request."},"eventSelector":"67b4fa9642f42120bf031f3051d1824b0fe25627945b27b8a6a65d5761d5482e","id":908,"name":"UserOperationPrefundTooLow","nameLocation":"3365:26:4","nodeType":"EventDefinition","parameters":{"id":907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"3417:10:4","nodeType":"VariableDeclaration","scope":908,"src":"3401:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":901,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3401:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":904,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3453:6:4","nodeType":"VariableDeclaration","scope":908,"src":"3437:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":903,"name":"address","nodeType":"ElementaryTypeName","src":"3437:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":906,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"3477:5:4","nodeType":"VariableDeclaration","scope":908,"src":"3469:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":905,"name":"uint256","nodeType":"ElementaryTypeName","src":"3469:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3391:97:4"},"src":"3359:130:4"},{"anonymous":false,"documentation":{"id":909,"nodeType":"StructuredDocumentation","src":"3495:158:4","text":" An event emitted by handleOps(), before starting the execution loop.\n Any event emitted before this event, is part of the validation."},"eventSelector":"bb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972","id":911,"name":"BeforeExecution","nameLocation":"3664:15:4","nodeType":"EventDefinition","parameters":{"id":910,"nodeType":"ParameterList","parameters":[],"src":"3679:2:4"},"src":"3658:24:4"},{"anonymous":false,"documentation":{"id":912,"nodeType":"StructuredDocumentation","src":"3688:187:4","text":" Signature aggregator used by the following UserOperationEvents within this bundle.\n @param aggregator - The aggregator used for the following UserOperationEvents."},"eventSelector":"575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d","id":916,"name":"SignatureAggregatorChanged","nameLocation":"3886:26:4","nodeType":"EventDefinition","parameters":{"id":915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"indexed":true,"mutability":"mutable","name":"aggregator","nameLocation":"3929:10:4","nodeType":"VariableDeclaration","scope":916,"src":"3913:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":913,"name":"address","nodeType":"ElementaryTypeName","src":"3913:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3912:28:4"},"src":"3880:61:4"},{"documentation":{"id":917,"nodeType":"StructuredDocumentation","src":"3947:776:4","text":" A custom revert error of handleOps, to identify the offending op.\n Should be caught in off-chain handleOps simulation and not happen on-chain.\n Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\n NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n @param reason  - Revert reason. The string starts with a unique code \"AAmn\",\n                  where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n                  so a failure can be attributed to the correct entity."},"errorSelector":"220266b6","id":923,"name":"FailedOp","nameLocation":"4734:8:4","nodeType":"ErrorDefinition","parameters":{"id":922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":919,"mutability":"mutable","name":"opIndex","nameLocation":"4751:7:4","nodeType":"VariableDeclaration","scope":923,"src":"4743:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":918,"name":"uint256","nodeType":"ElementaryTypeName","src":"4743:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":921,"mutability":"mutable","name":"reason","nameLocation":"4767:6:4","nodeType":"VariableDeclaration","scope":923,"src":"4760:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":920,"name":"string","nodeType":"ElementaryTypeName","src":"4760:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4742:32:4"},"src":"4728:47:4"},{"documentation":{"id":924,"nodeType":"StructuredDocumentation","src":"4781:405:4","text":" A custom revert error of handleOps, to report a revert by account or paymaster.\n @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n @param reason  - Revert reason. see FailedOp(uint256,string), above\n @param inner   - data from inner cought revert reason\n @dev note that inner is truncated to 2048 bytes"},"errorSelector":"65c8fd4d","id":932,"name":"FailedOpWithRevert","nameLocation":"5197:18:4","nodeType":"ErrorDefinition","parameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":926,"mutability":"mutable","name":"opIndex","nameLocation":"5224:7:4","nodeType":"VariableDeclaration","scope":932,"src":"5216:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":925,"name":"uint256","nodeType":"ElementaryTypeName","src":"5216:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":928,"mutability":"mutable","name":"reason","nameLocation":"5240:6:4","nodeType":"VariableDeclaration","scope":932,"src":"5233:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":927,"name":"string","nodeType":"ElementaryTypeName","src":"5233:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":930,"mutability":"mutable","name":"inner","nameLocation":"5254:5:4","nodeType":"VariableDeclaration","scope":932,"src":"5248:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":929,"name":"bytes","nodeType":"ElementaryTypeName","src":"5248:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5215:45:4"},"src":"5191:70:4"},{"errorSelector":"ad7954bc","id":936,"name":"PostOpReverted","nameLocation":"5273:14:4","nodeType":"ErrorDefinition","parameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":934,"mutability":"mutable","name":"returnData","nameLocation":"5294:10:4","nodeType":"VariableDeclaration","scope":936,"src":"5288:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":933,"name":"bytes","nodeType":"ElementaryTypeName","src":"5288:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5287:18:4"},"src":"5267:39:4"},{"documentation":{"id":937,"nodeType":"StructuredDocumentation","src":"5312:190:4","text":" Error case when a signature aggregator fails to verify the aggregated signature it had created.\n @param aggregator The aggregator that failed to verify the signature"},"errorSelector":"86a9f750","id":941,"name":"SignatureValidationFailed","nameLocation":"5513:25:4","nodeType":"ErrorDefinition","parameters":{"id":940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":939,"mutability":"mutable","name":"aggregator","nameLocation":"5547:10:4","nodeType":"VariableDeclaration","scope":941,"src":"5539:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":938,"name":"address","nodeType":"ElementaryTypeName","src":"5539:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5538:20:4"},"src":"5507:52:4"},{"errorSelector":"6ca7b806","id":945,"name":"SenderAddressResult","nameLocation":"5612:19:4","nodeType":"ErrorDefinition","parameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"mutability":"mutable","name":"sender","nameLocation":"5640:6:4","nodeType":"VariableDeclaration","scope":945,"src":"5632:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":942,"name":"address","nodeType":"ElementaryTypeName","src":"5632:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5631:16:4"},"src":"5606:42:4"},{"canonicalName":"IEntryPoint.UserOpsPerAggregator","id":955,"members":[{"constant":false,"id":949,"mutability":"mutable","name":"userOps","nameLocation":"5754:7:4","nodeType":"VariableDeclaration","scope":955,"src":"5732:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$1206_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":947,"nodeType":"UserDefinedTypeName","pathNode":{"id":946,"name":"PackedUserOperation","nameLocations":["5732:19:4"],"nodeType":"IdentifierPath","referencedDeclaration":1206,"src":"5732:19:4"},"referencedDeclaration":1206,"src":"5732:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_storage_ptr","typeString":"struct PackedUserOperation"}},"id":948,"nodeType":"ArrayTypeName","src":"5732:21:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$1206_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"},{"constant":false,"id":952,"mutability":"mutable","name":"aggregator","nameLocation":"5813:10:4","nodeType":"VariableDeclaration","scope":955,"src":"5801:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$840","typeString":"contract IAggregator"},"typeName":{"id":951,"nodeType":"UserDefinedTypeName","pathNode":{"id":950,"name":"IAggregator","nameLocations":["5801:11:4"],"nodeType":"IdentifierPath","referencedDeclaration":840,"src":"5801:11:4"},"referencedDeclaration":840,"src":"5801:11:4","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$840","typeString":"contract IAggregator"}},"visibility":"internal"},{"constant":false,"id":954,"mutability":"mutable","name":"signature","nameLocation":"5871:9:4","nodeType":"VariableDeclaration","scope":955,"src":"5865:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":953,"name":"bytes","nodeType":"ElementaryTypeName","src":"5865:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"UserOpsPerAggregator","nameLocation":"5701:20:4","nodeType":"StructDefinition","scope":1024,"src":"5694:193:4","visibility":"public"},{"documentation":{"id":956,"nodeType":"StructuredDocumentation","src":"5893:383:4","text":" Execute a batch of UserOperations.\n No signature aggregator is used.\n If any account requires an aggregator (that is, it returned an aggregator when\n performing simulateValidation), then handleAggregatedOps() must be used instead.\n @param ops         - The operations to execute.\n @param beneficiary - The address to receive the fees."},"functionSelector":"765e827f","id":965,"implemented":false,"kind":"function","modifiers":[],"name":"handleOps","nameLocation":"6290:9:4","nodeType":"FunctionDefinition","parameters":{"id":963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":960,"mutability":"mutable","name":"ops","nameLocation":"6340:3:4","nodeType":"VariableDeclaration","scope":965,"src":"6309:34:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$1206_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":958,"nodeType":"UserDefinedTypeName","pathNode":{"id":957,"name":"PackedUserOperation","nameLocations":["6309:19:4"],"nodeType":"IdentifierPath","referencedDeclaration":1206,"src":"6309:19:4"},"referencedDeclaration":1206,"src":"6309:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_storage_ptr","typeString":"struct PackedUserOperation"}},"id":959,"nodeType":"ArrayTypeName","src":"6309:21:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$1206_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"},{"constant":false,"id":962,"mutability":"mutable","name":"beneficiary","nameLocation":"6369:11:4","nodeType":"VariableDeclaration","scope":965,"src":"6353:27:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":961,"name":"address","nodeType":"ElementaryTypeName","src":"6353:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"6299:87:4"},"returnParameters":{"id":964,"nodeType":"ParameterList","parameters":[],"src":"6395:0:4"},"scope":1024,"src":"6281:115:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":966,"nodeType":"StructuredDocumentation","src":"6402:260:4","text":" Execute a batch of UserOperation with Aggregators\n @param opsPerAggregator - The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\n @param beneficiary      - The address to receive the fees."},"functionSelector":"dbed18e0","id":975,"implemented":false,"kind":"function","modifiers":[],"name":"handleAggregatedOps","nameLocation":"6676:19:4","nodeType":"FunctionDefinition","parameters":{"id":973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":970,"mutability":"mutable","name":"opsPerAggregator","nameLocation":"6737:16:4","nodeType":"VariableDeclaration","scope":975,"src":"6705:48:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$955_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"},"typeName":{"baseType":{"id":968,"nodeType":"UserDefinedTypeName","pathNode":{"id":967,"name":"UserOpsPerAggregator","nameLocations":["6705:20:4"],"nodeType":"IdentifierPath","referencedDeclaration":955,"src":"6705:20:4"},"referencedDeclaration":955,"src":"6705:20:4","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$955_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"}},"id":969,"nodeType":"ArrayTypeName","src":"6705:22:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$955_storage_$dyn_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"}},"visibility":"internal"},{"constant":false,"id":972,"mutability":"mutable","name":"beneficiary","nameLocation":"6779:11:4","nodeType":"VariableDeclaration","scope":975,"src":"6763:27:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"6763:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"6695:101:4"},"returnParameters":{"id":974,"nodeType":"ParameterList","parameters":[],"src":"6805:0:4"},"scope":1024,"src":"6667:139:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":976,"nodeType":"StructuredDocumentation","src":"6812:322:4","text":" Generate a request Id - unique identifier for this request.\n The request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\n @param userOp - The user operation to generate the request ID for.\n @return hash the hash of this UserOperation"},"functionSelector":"22cdde4c","id":984,"implemented":false,"kind":"function","modifiers":[],"name":"getUserOpHash","nameLocation":"7148:13:4","nodeType":"FunctionDefinition","parameters":{"id":980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":979,"mutability":"mutable","name":"userOp","nameLocation":"7200:6:4","nodeType":"VariableDeclaration","scope":984,"src":"7171:35:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":978,"nodeType":"UserDefinedTypeName","pathNode":{"id":977,"name":"PackedUserOperation","nameLocations":["7171:19:4"],"nodeType":"IdentifierPath","referencedDeclaration":1206,"src":"7171:19:4"},"referencedDeclaration":1206,"src":"7171:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"7161:51:4"},"returnParameters":{"id":983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":984,"src":"7236:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":981,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7236:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7235:9:4"},"scope":1024,"src":"7139:106:4","stateMutability":"view","virtual":false,"visibility":"external"},{"canonicalName":"IEntryPoint.ReturnInfo","documentation":{"id":985,"nodeType":"StructuredDocumentation","src":"7251:474:4","text":" Gas and return values during simulation.\n @param preOpGas         - The gas used for validation (including preValidationGas)\n @param prefund          - The required prefund for this operation\n @param accountValidationData   - returned validationData from account.\n @param paymasterValidationData - return validationData from paymaster.\n @param paymasterContext - Returned by validatePaymasterUserOp (to be passed into postOp)"},"id":996,"members":[{"constant":false,"id":987,"mutability":"mutable","name":"preOpGas","nameLocation":"7766:8:4","nodeType":"VariableDeclaration","scope":996,"src":"7758:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":986,"name":"uint256","nodeType":"ElementaryTypeName","src":"7758:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":989,"mutability":"mutable","name":"prefund","nameLocation":"7792:7:4","nodeType":"VariableDeclaration","scope":996,"src":"7784:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":988,"name":"uint256","nodeType":"ElementaryTypeName","src":"7784:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":991,"mutability":"mutable","name":"accountValidationData","nameLocation":"7817:21:4","nodeType":"VariableDeclaration","scope":996,"src":"7809:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":990,"name":"uint256","nodeType":"ElementaryTypeName","src":"7809:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":993,"mutability":"mutable","name":"paymasterValidationData","nameLocation":"7856:23:4","nodeType":"VariableDeclaration","scope":996,"src":"7848:31:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":992,"name":"uint256","nodeType":"ElementaryTypeName","src":"7848:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":995,"mutability":"mutable","name":"paymasterContext","nameLocation":"7895:16:4","nodeType":"VariableDeclaration","scope":996,"src":"7889:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":994,"name":"bytes","nodeType":"ElementaryTypeName","src":"7889:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"ReturnInfo","nameLocation":"7737:10:4","nodeType":"StructDefinition","scope":1024,"src":"7730:188:4","visibility":"public"},{"canonicalName":"IEntryPoint.AggregatorStakeInfo","documentation":{"id":997,"nodeType":"StructuredDocumentation","src":"7924:124:4","text":" Returned aggregated signature info:\n The aggregator returned by the account, and its current stake."},"id":1003,"members":[{"constant":false,"id":999,"mutability":"mutable","name":"aggregator","nameLocation":"8098:10:4","nodeType":"VariableDeclaration","scope":1003,"src":"8090:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":998,"name":"address","nodeType":"ElementaryTypeName","src":"8090:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1002,"mutability":"mutable","name":"stakeInfo","nameLocation":"8128:9:4","nodeType":"VariableDeclaration","scope":1003,"src":"8118:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$1136_storage_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":1001,"nodeType":"UserDefinedTypeName","pathNode":{"id":1000,"name":"StakeInfo","nameLocations":["8118:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":1136,"src":"8118:9:4"},"referencedDeclaration":1136,"src":"8118:9:4","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$1136_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"}],"name":"AggregatorStakeInfo","nameLocation":"8060:19:4","nodeType":"StructDefinition","scope":1024,"src":"8053:91:4","visibility":"public"},{"documentation":{"id":1004,"nodeType":"StructuredDocumentation","src":"8150:338:4","text":" Get counterfactual sender address.\n Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n This method always revert, and returns the address in SenderAddressResult error\n @param initCode - The constructor code to be passed into the UserOperation."},"functionSelector":"9b249f69","id":1009,"implemented":false,"kind":"function","modifiers":[],"name":"getSenderAddress","nameLocation":"8502:16:4","nodeType":"FunctionDefinition","parameters":{"id":1007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1006,"mutability":"mutable","name":"initCode","nameLocation":"8532:8:4","nodeType":"VariableDeclaration","scope":1009,"src":"8519:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1005,"name":"bytes","nodeType":"ElementaryTypeName","src":"8519:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8518:23:4"},"returnParameters":{"id":1008,"nodeType":"ParameterList","parameters":[],"src":"8550:0:4"},"scope":1024,"src":"8493:58:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"errorSelector":"99410554","id":1015,"name":"DelegateAndRevert","nameLocation":"8563:17:4","nodeType":"ErrorDefinition","parameters":{"id":1014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1011,"mutability":"mutable","name":"success","nameLocation":"8586:7:4","nodeType":"VariableDeclaration","scope":1015,"src":"8581:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1010,"name":"bool","nodeType":"ElementaryTypeName","src":"8581:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1013,"mutability":"mutable","name":"ret","nameLocation":"8601:3:4","nodeType":"VariableDeclaration","scope":1015,"src":"8595:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1012,"name":"bytes","nodeType":"ElementaryTypeName","src":"8595:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8580:25:4"},"src":"8557:49:4"},{"documentation":{"id":1016,"nodeType":"StructuredDocumentation","src":"8612:492:4","text":" Helper method for dry-run testing.\n @dev calling this method, the EntryPoint will make a delegatecall to the given data, and report (via revert) the result.\n  The method always revert, so is only useful off-chain for dry run calls, in cases where state-override to replace\n  actual EntryPoint code is less convenient.\n @param target a target contract to make a delegatecall from entrypoint\n @param data data to pass to target in a delegatecall"},"functionSelector":"850aaf62","id":1023,"implemented":false,"kind":"function","modifiers":[],"name":"delegateAndRevert","nameLocation":"9118:17:4","nodeType":"FunctionDefinition","parameters":{"id":1021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1018,"mutability":"mutable","name":"target","nameLocation":"9144:6:4","nodeType":"VariableDeclaration","scope":1023,"src":"9136:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"9136:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1020,"mutability":"mutable","name":"data","nameLocation":"9167:4:4","nodeType":"VariableDeclaration","scope":1023,"src":"9152:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1019,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9135:37:4"},"returnParameters":{"id":1022,"nodeType":"ParameterList","parameters":[],"src":"9181:0:4"},"scope":1024,"src":"9109:73:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1025,"src":"436:8748:4","usedErrors":[923,932,936,941,945,1015],"usedEvents":[866,877,888,899,908,911,916,1089,1097,1105,1111,1119]}],"src":"163:9022:4"},"id":4},"@account-abstraction/contracts/interfaces/INonceManager.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/INonceManager.sol","exportedSymbols":{"INonceManager":[1043]},"id":1044,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":1026,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"36:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"INonceManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1043,"linearizedBaseContracts":[1043],"name":"INonceManager","nameLocation":"72:13:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1027,"nodeType":"StructuredDocumentation","src":"93:416:5","text":" Return the next nonce for this sender.\n Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n But UserOp with different keys can come with arbitrary order.\n @param sender the account address\n @param key the high 192 bit of the nonce\n @return nonce a full nonce to pass for next UserOp with this sender."},"functionSelector":"35567e1a","id":1036,"implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"523:8:5","nodeType":"FunctionDefinition","parameters":{"id":1032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1029,"mutability":"mutable","name":"sender","nameLocation":"540:6:5","nodeType":"VariableDeclaration","scope":1036,"src":"532:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1028,"name":"address","nodeType":"ElementaryTypeName","src":"532:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1031,"mutability":"mutable","name":"key","nameLocation":"556:3:5","nodeType":"VariableDeclaration","scope":1036,"src":"548:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":1030,"name":"uint192","nodeType":"ElementaryTypeName","src":"548:7:5","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"531:29:5"},"returnParameters":{"id":1035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1034,"mutability":"mutable","name":"nonce","nameLocation":"596:5:5","nodeType":"VariableDeclaration","scope":1036,"src":"588:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1033,"name":"uint256","nodeType":"ElementaryTypeName","src":"588:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"587:15:5"},"scope":1043,"src":"514:89:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1037,"nodeType":"StructuredDocumentation","src":"609:449:5","text":" Manually increment the nonce of the sender.\n This method is exposed just for completeness..\n Account does NOT need to call it, neither during validation, nor elsewhere,\n as the EntryPoint will update the nonce regardless.\n Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n UserOperations will not pay extra for the first transaction with a given key."},"functionSelector":"0bd28e3b","id":1042,"implemented":false,"kind":"function","modifiers":[],"name":"incrementNonce","nameLocation":"1072:14:5","nodeType":"FunctionDefinition","parameters":{"id":1040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1039,"mutability":"mutable","name":"key","nameLocation":"1095:3:5","nodeType":"VariableDeclaration","scope":1042,"src":"1087:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":1038,"name":"uint192","nodeType":"ElementaryTypeName","src":"1087:7:5","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"1086:13:5"},"returnParameters":{"id":1041,"nodeType":"ParameterList","parameters":[],"src":"1108:0:5"},"scope":1043,"src":"1063:46:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1044,"src":"62:1049:5","usedErrors":[],"usedEvents":[]}],"src":"36:1076:5"},"id":5},"@account-abstraction/contracts/interfaces/IPaymaster.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/IPaymaster.sol","exportedSymbols":{"IPaymaster":[1080],"PackedUserOperation":[1206]},"id":1081,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":1045,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"36:24:6"},{"absolutePath":"@account-abstraction/contracts/interfaces/PackedUserOperation.sol","file":"./PackedUserOperation.sol","id":1046,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1081,"sourceUnit":1207,"src":"62:35:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IPaymaster","contractDependencies":[],"contractKind":"interface","documentation":{"id":1047,"nodeType":"StructuredDocumentation","src":"99:216:6","text":" The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations.\n A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction."},"fullyImplemented":false,"id":1080,"linearizedBaseContracts":[1080],"name":"IPaymaster","nameLocation":"326:10:6","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IPaymaster.PostOpMode","id":1051,"members":[{"id":1048,"name":"opSucceeded","nameLocation":"399:11:6","nodeType":"EnumValue","src":"399:11:6"},{"id":1049,"name":"opReverted","nameLocation":"475:10:6","nodeType":"EnumValue","src":"475:10:6"},{"id":1050,"name":"postOpReverted","nameLocation":"617:14:6","nodeType":"EnumValue","src":"617:14:6"}],"name":"PostOpMode","nameLocation":"348:10:6","nodeType":"EnumDefinition","src":"343:294:6"},{"documentation":{"id":1052,"nodeType":"StructuredDocumentation","src":"643:1430:6","text":" Payment validation: check if paymaster agrees to pay.\n Must verify sender is the entryPoint.\n Revert to reject this request.\n Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted).\n The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\n @param userOp          - The user operation.\n @param userOpHash      - Hash of the user's request data.\n @param maxCost         - The maximum cost of this transaction (based on maximum gas and gas price from userOp).\n @return context        - Value to send to a postOp. Zero length to signify postOp is not required.\n @return validationData - Signature and time-range of this operation, encoded the same as the return\n                          value of validateUserOperation.\n                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n                                                    other values are invalid for paymaster.\n                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n                          <6-byte> validAfter - first timestamp this operation is valid\n                          Note that the validation code cannot use block.timestamp (or block.number) directly."},"functionSelector":"52b7512c","id":1066,"implemented":false,"kind":"function","modifiers":[],"name":"validatePaymasterUserOp","nameLocation":"2087:23:6","nodeType":"FunctionDefinition","parameters":{"id":1060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1055,"mutability":"mutable","name":"userOp","nameLocation":"2149:6:6","nodeType":"VariableDeclaration","scope":1066,"src":"2120:35:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":1054,"nodeType":"UserDefinedTypeName","pathNode":{"id":1053,"name":"PackedUserOperation","nameLocations":["2120:19:6"],"nodeType":"IdentifierPath","referencedDeclaration":1206,"src":"2120:19:6"},"referencedDeclaration":1206,"src":"2120:19:6","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":1057,"mutability":"mutable","name":"userOpHash","nameLocation":"2173:10:6","nodeType":"VariableDeclaration","scope":1066,"src":"2165:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1056,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1059,"mutability":"mutable","name":"maxCost","nameLocation":"2201:7:6","nodeType":"VariableDeclaration","scope":1066,"src":"2193:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1058,"name":"uint256","nodeType":"ElementaryTypeName","src":"2193:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2110:104:6"},"returnParameters":{"id":1065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"context","nameLocation":"2246:7:6","nodeType":"VariableDeclaration","scope":1066,"src":"2233:20:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1061,"name":"bytes","nodeType":"ElementaryTypeName","src":"2233:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"validationData","nameLocation":"2263:14:6","nodeType":"VariableDeclaration","scope":1066,"src":"2255:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1063,"name":"uint256","nodeType":"ElementaryTypeName","src":"2255:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2232:46:6"},"scope":1080,"src":"2078:201:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1067,"nodeType":"StructuredDocumentation","src":"2285:849:6","text":" Post-operation handler.\n Must verify sender is the entryPoint.\n @param mode          - Enum with the following options:\n                        opSucceeded - User operation succeeded.\n                        opReverted  - User op reverted. The paymaster still has to pay for gas.\n                        postOpReverted - never passed in a call to postOp().\n @param context       - The context value returned by validatePaymasterUserOp\n @param actualGasCost - Actual gas used so far (without this postOp call).\n @param actualUserOpFeePerGas - the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas\n                        and maxPriorityFee (and basefee)\n                        It is not the same as tx.gasprice, which is what the bundler pays."},"functionSelector":"7c627b21","id":1079,"implemented":false,"kind":"function","modifiers":[],"name":"postOp","nameLocation":"3148:6:6","nodeType":"FunctionDefinition","parameters":{"id":1077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1070,"mutability":"mutable","name":"mode","nameLocation":"3175:4:6","nodeType":"VariableDeclaration","scope":1079,"src":"3164:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1051","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":1069,"nodeType":"UserDefinedTypeName","pathNode":{"id":1068,"name":"PostOpMode","nameLocations":["3164:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1051,"src":"3164:10:6"},"referencedDeclaration":1051,"src":"3164:10:6","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1051","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":1072,"mutability":"mutable","name":"context","nameLocation":"3204:7:6","nodeType":"VariableDeclaration","scope":1079,"src":"3189:22:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1071,"name":"bytes","nodeType":"ElementaryTypeName","src":"3189:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1074,"mutability":"mutable","name":"actualGasCost","nameLocation":"3229:13:6","nodeType":"VariableDeclaration","scope":1079,"src":"3221:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1073,"name":"uint256","nodeType":"ElementaryTypeName","src":"3221:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1076,"mutability":"mutable","name":"actualUserOpFeePerGas","nameLocation":"3260:21:6","nodeType":"VariableDeclaration","scope":1079,"src":"3252:29:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1075,"name":"uint256","nodeType":"ElementaryTypeName","src":"3252:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3154:133:6"},"returnParameters":{"id":1078,"nodeType":"ParameterList","parameters":[],"src":"3296:0:6"},"scope":1080,"src":"3139:158:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1081,"src":"316:2983:6","usedErrors":[],"usedEvents":[]}],"src":"36:3264:6"},"id":6},"@account-abstraction/contracts/interfaces/IStakeManager.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/IStakeManager.sol","exportedSymbols":{"IStakeManager":[1184]},"id":1185,"license":"GPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":1082,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"41:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IStakeManager","contractDependencies":[],"contractKind":"interface","documentation":{"id":1083,"nodeType":"StructuredDocumentation","src":"67:212:7","text":" Manage deposits and stakes.\n Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account).\n Stake is value locked for at least \"unstakeDelay\" by the staked entity."},"fullyImplemented":false,"id":1184,"linearizedBaseContracts":[1184],"name":"IStakeManager","nameLocation":"290:13:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4","id":1089,"name":"Deposited","nameLocation":"316:9:7","nodeType":"EventDefinition","parameters":{"id":1088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1085,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"342:7:7","nodeType":"VariableDeclaration","scope":1089,"src":"326:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1084,"name":"address","nodeType":"ElementaryTypeName","src":"326:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1087,"indexed":false,"mutability":"mutable","name":"totalDeposit","nameLocation":"359:12:7","nodeType":"VariableDeclaration","scope":1089,"src":"351:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1086,"name":"uint256","nodeType":"ElementaryTypeName","src":"351:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"325:47:7"},"src":"310:63:7"},{"anonymous":false,"eventSelector":"d1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb","id":1097,"name":"Withdrawn","nameLocation":"385:9:7","nodeType":"EventDefinition","parameters":{"id":1096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1091,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"420:7:7","nodeType":"VariableDeclaration","scope":1097,"src":"404:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1090,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1093,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"445:15:7","nodeType":"VariableDeclaration","scope":1097,"src":"437:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1092,"name":"address","nodeType":"ElementaryTypeName","src":"437:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1095,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"478:6:7","nodeType":"VariableDeclaration","scope":1097,"src":"470:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1094,"name":"uint256","nodeType":"ElementaryTypeName","src":"470:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"394:96:7"},"src":"379:112:7"},{"anonymous":false,"eventSelector":"a5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01","id":1105,"name":"StakeLocked","nameLocation":"560:11:7","nodeType":"EventDefinition","parameters":{"id":1104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1099,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"597:7:7","nodeType":"VariableDeclaration","scope":1105,"src":"581:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1098,"name":"address","nodeType":"ElementaryTypeName","src":"581:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1101,"indexed":false,"mutability":"mutable","name":"totalStaked","nameLocation":"622:11:7","nodeType":"VariableDeclaration","scope":1105,"src":"614:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1100,"name":"uint256","nodeType":"ElementaryTypeName","src":"614:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1103,"indexed":false,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"651:15:7","nodeType":"VariableDeclaration","scope":1105,"src":"643:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1102,"name":"uint256","nodeType":"ElementaryTypeName","src":"643:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"571:101:7"},"src":"554:119:7"},{"anonymous":false,"eventSelector":"fa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a","id":1111,"name":"StakeUnlocked","nameLocation":"742:13:7","nodeType":"EventDefinition","parameters":{"id":1110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1107,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"772:7:7","nodeType":"VariableDeclaration","scope":1111,"src":"756:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1106,"name":"address","nodeType":"ElementaryTypeName","src":"756:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1109,"indexed":false,"mutability":"mutable","name":"withdrawTime","nameLocation":"789:12:7","nodeType":"VariableDeclaration","scope":1111,"src":"781:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1108,"name":"uint256","nodeType":"ElementaryTypeName","src":"781:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"755:47:7"},"src":"736:67:7"},{"anonymous":false,"eventSelector":"b7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3","id":1119,"name":"StakeWithdrawn","nameLocation":"815:14:7","nodeType":"EventDefinition","parameters":{"id":1118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1113,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"855:7:7","nodeType":"VariableDeclaration","scope":1119,"src":"839:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1112,"name":"address","nodeType":"ElementaryTypeName","src":"839:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1115,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"880:15:7","nodeType":"VariableDeclaration","scope":1119,"src":"872:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"872:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1117,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"913:6:7","nodeType":"VariableDeclaration","scope":1119,"src":"905:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1116,"name":"uint256","nodeType":"ElementaryTypeName","src":"905:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"829:96:7"},"src":"809:117:7"},{"canonicalName":"IStakeManager.DepositInfo","documentation":{"id":1120,"nodeType":"StructuredDocumentation","src":"932:697:7","text":" @param deposit         - The entity's deposit.\n @param staked          - True if this entity is staked.\n @param stake           - Actual amount of ether staked for this entity.\n @param unstakeDelaySec - Minimum delay to withdraw the stake.\n @param withdrawTime    - First block timestamp where 'withdrawStake' will be callable, or zero if already locked.\n @dev Sizes were chosen so that deposit fits into one cell (used during handleOp)\n      and the rest fit into a 2nd cell (used during stake/unstake)\n      - 112 bit allows for 10^15 eth\n      - 48 bit for full timestamp\n      - 32 bit allows 150 years for unstake delay"},"id":1131,"members":[{"constant":false,"id":1122,"mutability":"mutable","name":"deposit","nameLocation":"1671:7:7","nodeType":"VariableDeclaration","scope":1131,"src":"1663:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1121,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1124,"mutability":"mutable","name":"staked","nameLocation":"1693:6:7","nodeType":"VariableDeclaration","scope":1131,"src":"1688:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1123,"name":"bool","nodeType":"ElementaryTypeName","src":"1688:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1126,"mutability":"mutable","name":"stake","nameLocation":"1717:5:7","nodeType":"VariableDeclaration","scope":1131,"src":"1709:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":1125,"name":"uint112","nodeType":"ElementaryTypeName","src":"1709:7:7","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1739:15:7","nodeType":"VariableDeclaration","scope":1131,"src":"1732:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1127,"name":"uint32","nodeType":"ElementaryTypeName","src":"1732:6:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1130,"mutability":"mutable","name":"withdrawTime","nameLocation":"1771:12:7","nodeType":"VariableDeclaration","scope":1131,"src":"1764:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":1129,"name":"uint48","nodeType":"ElementaryTypeName","src":"1764:6:7","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"DepositInfo","nameLocation":"1641:11:7","nodeType":"StructDefinition","scope":1184,"src":"1634:156:7","visibility":"public"},{"canonicalName":"IStakeManager.StakeInfo","id":1136,"members":[{"constant":false,"id":1133,"mutability":"mutable","name":"stake","nameLocation":"1894:5:7","nodeType":"VariableDeclaration","scope":1136,"src":"1886:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1132,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1135,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1917:15:7","nodeType":"VariableDeclaration","scope":1136,"src":"1909:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1134,"name":"uint256","nodeType":"ElementaryTypeName","src":"1909:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StakeInfo","nameLocation":"1866:9:7","nodeType":"StructDefinition","scope":1184,"src":"1859:80:7","visibility":"public"},{"documentation":{"id":1137,"nodeType":"StructuredDocumentation","src":"1945:149:7","text":" Get deposit info.\n @param account - The account to query.\n @return info   - Full deposit information of given account."},"functionSelector":"5287ce12","id":1145,"implemented":false,"kind":"function","modifiers":[],"name":"getDepositInfo","nameLocation":"2108:14:7","nodeType":"FunctionDefinition","parameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1139,"mutability":"mutable","name":"account","nameLocation":"2140:7:7","nodeType":"VariableDeclaration","scope":1145,"src":"2132:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1138,"name":"address","nodeType":"ElementaryTypeName","src":"2132:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2122:31:7"},"returnParameters":{"id":1144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1143,"mutability":"mutable","name":"info","nameLocation":"2196:4:7","nodeType":"VariableDeclaration","scope":1145,"src":"2177:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$1131_memory_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":1142,"nodeType":"UserDefinedTypeName","pathNode":{"id":1141,"name":"DepositInfo","nameLocations":["2177:11:7"],"nodeType":"IdentifierPath","referencedDeclaration":1131,"src":"2177:11:7"},"referencedDeclaration":1131,"src":"2177:11:7","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$1131_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"src":"2176:25:7"},"scope":1184,"src":"2099:103:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1146,"nodeType":"StructuredDocumentation","src":"2208:155:7","text":" Get account balance.\n @param account - The account to query.\n @return        - The deposit (for gas payment) of the account."},"functionSelector":"70a08231","id":1153,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2377:9:7","nodeType":"FunctionDefinition","parameters":{"id":1149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1148,"mutability":"mutable","name":"account","nameLocation":"2395:7:7","nodeType":"VariableDeclaration","scope":1153,"src":"2387:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1147,"name":"address","nodeType":"ElementaryTypeName","src":"2387:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2386:17:7"},"returnParameters":{"id":1152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1153,"src":"2427:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1150,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2426:9:7"},"scope":1184,"src":"2368:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1154,"nodeType":"StructuredDocumentation","src":"2442:106:7","text":" Add to the deposit of the given account.\n @param account - The account to add to."},"functionSelector":"b760faf9","id":1159,"implemented":false,"kind":"function","modifiers":[],"name":"depositTo","nameLocation":"2562:9:7","nodeType":"FunctionDefinition","parameters":{"id":1157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1156,"mutability":"mutable","name":"account","nameLocation":"2580:7:7","nodeType":"VariableDeclaration","scope":1159,"src":"2572:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1155,"name":"address","nodeType":"ElementaryTypeName","src":"2572:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2571:17:7"},"returnParameters":{"id":1158,"nodeType":"ParameterList","parameters":[],"src":"2605:0:7"},"scope":1184,"src":"2553:53:7","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":1160,"nodeType":"StructuredDocumentation","src":"2612:203:7","text":" Add to the account's stake - amount and delay\n any pending unstake is first cancelled.\n @param _unstakeDelaySec - The new lock duration before the deposit can be withdrawn."},"functionSelector":"0396cb60","id":1165,"implemented":false,"kind":"function","modifiers":[],"name":"addStake","nameLocation":"2829:8:7","nodeType":"FunctionDefinition","parameters":{"id":1163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1162,"mutability":"mutable","name":"_unstakeDelaySec","nameLocation":"2845:16:7","nodeType":"VariableDeclaration","scope":1165,"src":"2838:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1161,"name":"uint32","nodeType":"ElementaryTypeName","src":"2838:6:7","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2837:25:7"},"returnParameters":{"id":1164,"nodeType":"ParameterList","parameters":[],"src":"2879:0:7"},"scope":1184,"src":"2820:60:7","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":1166,"nodeType":"StructuredDocumentation","src":"2886:128:7","text":" Attempt to unlock the stake.\n The value can be withdrawn (using withdrawStake) after the unstake delay."},"functionSelector":"bb9fe6bf","id":1169,"implemented":false,"kind":"function","modifiers":[],"name":"unlockStake","nameLocation":"3028:11:7","nodeType":"FunctionDefinition","parameters":{"id":1167,"nodeType":"ParameterList","parameters":[],"src":"3039:2:7"},"returnParameters":{"id":1168,"nodeType":"ParameterList","parameters":[],"src":"3050:0:7"},"scope":1184,"src":"3019:32:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1170,"nodeType":"StructuredDocumentation","src":"3057:197:7","text":" Withdraw from the (unlocked) stake.\n Must first call unlockStake and wait for the unstakeDelay to pass.\n @param withdrawAddress - The address to send withdrawn value."},"functionSelector":"c23a5cea","id":1175,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawStake","nameLocation":"3268:13:7","nodeType":"FunctionDefinition","parameters":{"id":1173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1172,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3298:15:7","nodeType":"VariableDeclaration","scope":1175,"src":"3282:31:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1171,"name":"address","nodeType":"ElementaryTypeName","src":"3282:15:7","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"3281:33:7"},"returnParameters":{"id":1174,"nodeType":"ParameterList","parameters":[],"src":"3323:0:7"},"scope":1184,"src":"3259:65:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1176,"nodeType":"StructuredDocumentation","src":"3330:170:7","text":" Withdraw from the deposit.\n @param withdrawAddress - The address to send withdrawn value.\n @param withdrawAmount  - The amount to withdraw."},"functionSelector":"205c2878","id":1183,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawTo","nameLocation":"3514:10:7","nodeType":"FunctionDefinition","parameters":{"id":1181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1178,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3550:15:7","nodeType":"VariableDeclaration","scope":1183,"src":"3534:31:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1177,"name":"address","nodeType":"ElementaryTypeName","src":"3534:15:7","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1180,"mutability":"mutable","name":"withdrawAmount","nameLocation":"3583:14:7","nodeType":"VariableDeclaration","scope":1183,"src":"3575:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1179,"name":"uint256","nodeType":"ElementaryTypeName","src":"3575:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3524:79:7"},"returnParameters":{"id":1182,"nodeType":"ParameterList","parameters":[],"src":"3612:0:7"},"scope":1184,"src":"3505:108:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1185,"src":"280:3335:7","usedErrors":[],"usedEvents":[1089,1097,1105,1111,1119]}],"src":"41:3575:7"},"id":7},"@account-abstraction/contracts/interfaces/PackedUserOperation.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/PackedUserOperation.sol","exportedSymbols":{"PackedUserOperation":[1206]},"id":1207,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":1186,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"36:24:8"},{"canonicalName":"PackedUserOperation","documentation":{"id":1187,"nodeType":"StructuredDocumentation","src":"62:1164:8","text":" User Operation struct\n @param sender                - The sender account of this request.\n @param nonce                 - Unique value the sender uses to verify it is not a replay.\n @param initCode              - If set, the account contract will be created by this constructor/\n @param callData              - The method call to execute on this account.\n @param accountGasLimits      - Packed gas limits for validateUserOp and gas limit passed to the callData method call.\n @param preVerificationGas    - Gas not calculated by the handleOps method, but added to the gas paid.\n                                Covers batch overhead.\n @param gasFees               - packed gas fields maxPriorityFeePerGas and maxFeePerGas - Same as EIP-1559 gas parameters.\n @param paymasterAndData      - If set, this field holds the paymaster address, verification gas limit, postOp gas limit and paymaster-specific extra data\n                                The paymaster will pay for the transaction instead of the sender.\n @param signature             - Sender-verified signature over the entire request, the EntryPoint address and the chain ID."},"id":1206,"members":[{"constant":false,"id":1189,"mutability":"mutable","name":"sender","nameLocation":"1268:6:8","nodeType":"VariableDeclaration","scope":1206,"src":"1260:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1188,"name":"address","nodeType":"ElementaryTypeName","src":"1260:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1191,"mutability":"mutable","name":"nonce","nameLocation":"1288:5:8","nodeType":"VariableDeclaration","scope":1206,"src":"1280:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1190,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1193,"mutability":"mutable","name":"initCode","nameLocation":"1305:8:8","nodeType":"VariableDeclaration","scope":1206,"src":"1299:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1192,"name":"bytes","nodeType":"ElementaryTypeName","src":"1299:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1195,"mutability":"mutable","name":"callData","nameLocation":"1325:8:8","nodeType":"VariableDeclaration","scope":1206,"src":"1319:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1194,"name":"bytes","nodeType":"ElementaryTypeName","src":"1319:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1197,"mutability":"mutable","name":"accountGasLimits","nameLocation":"1347:16:8","nodeType":"VariableDeclaration","scope":1206,"src":"1339:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1196,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1339:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1199,"mutability":"mutable","name":"preVerificationGas","nameLocation":"1377:18:8","nodeType":"VariableDeclaration","scope":1206,"src":"1369:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1369:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1201,"mutability":"mutable","name":"gasFees","nameLocation":"1409:7:8","nodeType":"VariableDeclaration","scope":1206,"src":"1401:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1200,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1401:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1203,"mutability":"mutable","name":"paymasterAndData","nameLocation":"1428:16:8","nodeType":"VariableDeclaration","scope":1206,"src":"1422:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1202,"name":"bytes","nodeType":"ElementaryTypeName","src":"1422:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1205,"mutability":"mutable","name":"signature","nameLocation":"1456:9:8","nodeType":"VariableDeclaration","scope":1206,"src":"1450:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1204,"name":"bytes","nodeType":"ElementaryTypeName","src":"1450:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"PackedUserOperation","nameLocation":"1234:19:8","nodeType":"StructDefinition","scope":1207,"src":"1227:241:8","visibility":"public"}],"src":"36:1433:8"},"id":8},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1384],"Ownable":[1354]},"id":1355,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1208,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:9"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":1210,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1355,"sourceUnit":1385,"src":"128:45:9","symbolAliases":[{"foreign":{"id":1209,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"136:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1212,"name":"Context","nameLocations":["692:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1384,"src":"692:7:9"},"id":1213,"nodeType":"InheritanceSpecifier","src":"692:7:9"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1211,"nodeType":"StructuredDocumentation","src":"175:487:9","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":1354,"linearizedBaseContracts":[1354,1384],"name":"Ownable","nameLocation":"681:7:9","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1215,"mutability":"mutable","name":"_owner","nameLocation":"722:6:9","nodeType":"VariableDeclaration","scope":1354,"src":"706:22:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1214,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":1216,"nodeType":"StructuredDocumentation","src":"735:85:9","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":1220,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:9","nodeType":"ErrorDefinition","parameters":{"id":1219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1218,"mutability":"mutable","name":"account","nameLocation":"866:7:9","nodeType":"VariableDeclaration","scope":1220,"src":"858:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1217,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:9"},"src":"825:50:9"},{"documentation":{"id":1221,"nodeType":"StructuredDocumentation","src":"881:82:9","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":1225,"name":"OwnableInvalidOwner","nameLocation":"974:19:9","nodeType":"ErrorDefinition","parameters":{"id":1224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"owner","nameLocation":"1002:5:9","nodeType":"VariableDeclaration","scope":1225,"src":"994:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1222,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:9"},"src":"968:41:9"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":1231,"name":"OwnershipTransferred","nameLocation":"1021:20:9","nodeType":"EventDefinition","parameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1227,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:9","nodeType":"VariableDeclaration","scope":1231,"src":"1042:29:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1229,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:9","nodeType":"VariableDeclaration","scope":1231,"src":"1073:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1228,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:9"},"src":"1015:84:9"},{"body":{"id":1256,"nodeType":"Block","src":"1259:153:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1237,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"1273:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1238,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:9","typeDescriptions":{}}},"id":1241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1251,"nodeType":"IfStatement","src":"1269:95:9","trueBody":{"id":1250,"nodeType":"Block","src":"1301:63:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1244,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:9","typeDescriptions":{}}},"id":1247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1243,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"1322:19:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1249,"nodeType":"RevertStatement","src":"1315:38:9"}]}},{"expression":{"arguments":[{"id":1253,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"1392:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1252,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"1373:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1255,"nodeType":"ExpressionStatement","src":"1373:32:9"}]},"documentation":{"id":1232,"nodeType":"StructuredDocumentation","src":"1105:115:9","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":1257,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1234,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:9","nodeType":"VariableDeclaration","scope":1257,"src":"1237:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1233,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:9"},"returnParameters":{"id":1236,"nodeType":"ParameterList","parameters":[],"src":"1259:0:9"},"scope":1354,"src":"1225:187:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1264,"nodeType":"Block","src":"1521:41:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1260,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"1531:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1262,"nodeType":"ExpressionStatement","src":"1531:13:9"},{"id":1263,"nodeType":"PlaceholderStatement","src":"1554:1:9"}]},"documentation":{"id":1258,"nodeType":"StructuredDocumentation","src":"1418:77:9","text":" @dev Throws if called by any account other than the owner."},"id":1265,"name":"onlyOwner","nameLocation":"1509:9:9","nodeType":"ModifierDefinition","parameters":{"id":1259,"nodeType":"ParameterList","parameters":[],"src":"1518:2:9"},"src":"1500:62:9","virtual":false,"visibility":"internal"},{"body":{"id":1273,"nodeType":"Block","src":"1693:30:9","statements":[{"expression":{"id":1271,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"1710:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1270,"id":1272,"nodeType":"Return","src":"1703:13:9"}]},"documentation":{"id":1266,"nodeType":"StructuredDocumentation","src":"1568:65:9","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":1274,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:9","nodeType":"FunctionDefinition","parameters":{"id":1267,"nodeType":"ParameterList","parameters":[],"src":"1652:2:9"},"returnParameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1274,"src":"1684:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1268,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:9"},"scope":1354,"src":"1638:85:9","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1290,"nodeType":"Block","src":"1841:117:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1278,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"1855:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1280,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"1866:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1289,"nodeType":"IfStatement","src":"1851:101:9","trueBody":{"id":1288,"nodeType":"Block","src":"1880:72:9","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1284,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"1928:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1283,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"1901:26:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1287,"nodeType":"RevertStatement","src":"1894:47:9"}]}}]},"documentation":{"id":1275,"nodeType":"StructuredDocumentation","src":"1729:62:9","text":" @dev Throws if the sender is not the owner."},"id":1291,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:9","nodeType":"FunctionDefinition","parameters":{"id":1276,"nodeType":"ParameterList","parameters":[],"src":"1816:2:9"},"returnParameters":{"id":1277,"nodeType":"ParameterList","parameters":[],"src":"1841:0:9"},"scope":1354,"src":"1796:162:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1304,"nodeType":"Block","src":"2347:47:9","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1298,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:9","typeDescriptions":{}}},"id":1301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1297,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"2357:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1303,"nodeType":"ExpressionStatement","src":"2357:30:9"}]},"documentation":{"id":1292,"nodeType":"StructuredDocumentation","src":"1964:324:9","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":1305,"implemented":true,"kind":"function","modifiers":[{"id":1295,"kind":"modifierInvocation","modifierName":{"id":1294,"name":"onlyOwner","nameLocations":["2337:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1265,"src":"2337:9:9"},"nodeType":"ModifierInvocation","src":"2337:9:9"}],"name":"renounceOwnership","nameLocation":"2302:17:9","nodeType":"FunctionDefinition","parameters":{"id":1293,"nodeType":"ParameterList","parameters":[],"src":"2319:2:9"},"returnParameters":{"id":1296,"nodeType":"ParameterList","parameters":[],"src":"2347:0:9"},"scope":1354,"src":"2293:101:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1332,"nodeType":"Block","src":"2613:145:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1313,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"2627:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:9","typeDescriptions":{}}},"id":1317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1327,"nodeType":"IfStatement","src":"2623:91:9","trueBody":{"id":1326,"nodeType":"Block","src":"2651:63:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1320,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:9","typeDescriptions":{}}},"id":1323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1319,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"2672:19:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1325,"nodeType":"RevertStatement","src":"2665:38:9"}]}},{"expression":{"arguments":[{"id":1329,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1308,"src":"2742:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1328,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"2723:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1331,"nodeType":"ExpressionStatement","src":"2723:28:9"}]},"documentation":{"id":1306,"nodeType":"StructuredDocumentation","src":"2400:138:9","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":1333,"implemented":true,"kind":"function","modifiers":[{"id":1311,"kind":"modifierInvocation","modifierName":{"id":1310,"name":"onlyOwner","nameLocations":["2603:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":1265,"src":"2603:9:9"},"nodeType":"ModifierInvocation","src":"2603:9:9"}],"name":"transferOwnership","nameLocation":"2552:17:9","nodeType":"FunctionDefinition","parameters":{"id":1309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1308,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:9","nodeType":"VariableDeclaration","scope":1333,"src":"2570:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:9"},"returnParameters":{"id":1312,"nodeType":"ParameterList","parameters":[],"src":"2613:0:9"},"scope":1354,"src":"2543:215:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1352,"nodeType":"Block","src":"2975:124:9","statements":[{"assignments":[1340],"declarations":[{"constant":false,"id":1340,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:9","nodeType":"VariableDeclaration","scope":1352,"src":"2985:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1339,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1342,"initialValue":{"id":1341,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"3004:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:9"},{"expression":{"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1343,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"3020:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1344,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"3029:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1346,"nodeType":"ExpressionStatement","src":"3020:17:9"},{"eventCall":{"arguments":[{"id":1348,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"3073:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1349,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"3083:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1347,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"3052:20:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1351,"nodeType":"EmitStatement","src":"3047:45:9"}]},"documentation":{"id":1334,"nodeType":"StructuredDocumentation","src":"2764:143:9","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":1353,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:9","nodeType":"FunctionDefinition","parameters":{"id":1337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1336,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:9","nodeType":"VariableDeclaration","scope":1353,"src":"2940:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1335,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:9"},"returnParameters":{"id":1338,"nodeType":"ParameterList","parameters":[],"src":"2975:0:9"},"scope":1354,"src":"2912:187:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1355,"src":"663:2438:9","usedErrors":[1220,1225],"usedEvents":[1231]}],"src":"102:3000:9"},"id":9},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1384]},"id":1385,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1356,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:10"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1357,"nodeType":"StructuredDocumentation","src":"127:496:10","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1384,"linearizedBaseContracts":[1384],"name":"Context","nameLocation":"642:7:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1365,"nodeType":"Block","src":"718:34:10","statements":[{"expression":{"expression":{"id":1362,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:10","memberName":"sender","nodeType":"MemberAccess","src":"735:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1361,"id":1364,"nodeType":"Return","src":"728:17:10"}]},"id":1366,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:10","nodeType":"FunctionDefinition","parameters":{"id":1358,"nodeType":"ParameterList","parameters":[],"src":"675:2:10"},"returnParameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1360,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1366,"src":"709:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1359,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:10"},"scope":1384,"src":"656:96:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1374,"nodeType":"Block","src":"825:32:10","statements":[{"expression":{"expression":{"id":1371,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:10","memberName":"data","nodeType":"MemberAccess","src":"842:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1370,"id":1373,"nodeType":"Return","src":"835:15:10"}]},"id":1375,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:10","nodeType":"FunctionDefinition","parameters":{"id":1367,"nodeType":"ParameterList","parameters":[],"src":"775:2:10"},"returnParameters":{"id":1370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1375,"src":"809:14:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1368,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:10"},"scope":1384,"src":"758:99:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1382,"nodeType":"Block","src":"935:25:10","statements":[{"expression":{"hexValue":"30","id":1380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1379,"id":1381,"nodeType":"Return","src":"945:8:10"}]},"id":1383,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:10","nodeType":"FunctionDefinition","parameters":{"id":1376,"nodeType":"ParameterList","parameters":[],"src":"892:2:10"},"returnParameters":{"id":1379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1383,"src":"926:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1377,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:10"},"scope":1384,"src":"863:97:10","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1385,"src":"624:338:10","usedErrors":[],"usedEvents":[]}],"src":"101:862:10"},"id":10},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[1732]},"id":1733,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1386,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":1387,"nodeType":"StructuredDocumentation","src":"138:205:11","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":1732,"linearizedBaseContracts":[1732],"name":"ECDSA","nameLocation":"352:5:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":1392,"members":[{"id":1388,"name":"NoError","nameLocation":"392:7:11","nodeType":"EnumValue","src":"392:7:11"},{"id":1389,"name":"InvalidSignature","nameLocation":"409:16:11","nodeType":"EnumValue","src":"409:16:11"},{"id":1390,"name":"InvalidSignatureLength","nameLocation":"435:22:11","nodeType":"EnumValue","src":"435:22:11"},{"id":1391,"name":"InvalidSignatureS","nameLocation":"467:17:11","nodeType":"EnumValue","src":"467:17:11"}],"name":"RecoverError","nameLocation":"369:12:11","nodeType":"EnumDefinition","src":"364:126:11"},{"documentation":{"id":1393,"nodeType":"StructuredDocumentation","src":"496:63:11","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":1395,"name":"ECDSAInvalidSignature","nameLocation":"570:21:11","nodeType":"ErrorDefinition","parameters":{"id":1394,"nodeType":"ParameterList","parameters":[],"src":"591:2:11"},"src":"564:30:11"},{"documentation":{"id":1396,"nodeType":"StructuredDocumentation","src":"600:60:11","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":1400,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:11","nodeType":"ErrorDefinition","parameters":{"id":1399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1398,"mutability":"mutable","name":"length","nameLocation":"707:6:11","nodeType":"VariableDeclaration","scope":1400,"src":"699:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:11"},"src":"665:50:11"},{"documentation":{"id":1401,"nodeType":"StructuredDocumentation","src":"721:85:11","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":1405,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:11","nodeType":"ErrorDefinition","parameters":{"id":1404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1403,"mutability":"mutable","name":"s","nameLocation":"848:1:11","nodeType":"VariableDeclaration","scope":1405,"src":"840:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1402,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:11"},"src":"811:40:11"},{"body":{"id":1457,"nodeType":"Block","src":"2285:622:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1420,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"2299:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:11","memberName":"length","nodeType":"MemberAccess","src":"2299:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":1422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:11","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1455,"nodeType":"Block","src":"2793:108:11","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1442,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:11","typeDescriptions":{}}},"id":1445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1446,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"2827:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1392_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:11","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1390,"src":"2827:35:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":1450,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"2872:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:11","memberName":"length","nodeType":"MemberAccess","src":"2872:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1448,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:11","typeDescriptions":{}}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1453,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1392_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1419,"id":1454,"nodeType":"Return","src":"2807:83:11"}]},"id":1456,"nodeType":"IfStatement","src":"2295:606:11","trueBody":{"id":1441,"nodeType":"Block","src":"2323:464:11","statements":[{"assignments":[1425],"declarations":[{"constant":false,"id":1425,"mutability":"mutable","name":"r","nameLocation":"2345:1:11","nodeType":"VariableDeclaration","scope":1441,"src":"2337:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1424,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1426,"nodeType":"VariableDeclarationStatement","src":"2337:9:11"},{"assignments":[1428],"declarations":[{"constant":false,"id":1428,"mutability":"mutable","name":"s","nameLocation":"2368:1:11","nodeType":"VariableDeclaration","scope":1441,"src":"2360:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1427,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1429,"nodeType":"VariableDeclarationStatement","src":"2360:9:11"},{"assignments":[1431],"declarations":[{"constant":false,"id":1431,"mutability":"mutable","name":"v","nameLocation":"2389:1:11","nodeType":"VariableDeclaration","scope":1441,"src":"2383:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1430,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1432,"nodeType":"VariableDeclarationStatement","src":"2383:7:11"},{"AST":{"nativeSrc":"2560:171:11","nodeType":"YulBlock","src":"2560:171:11","statements":[{"nativeSrc":"2578:32:11","nodeType":"YulAssignment","src":"2578:32:11","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:11","nodeType":"YulIdentifier","src":"2593:9:11"},{"kind":"number","nativeSrc":"2604:4:11","nodeType":"YulLiteral","src":"2604:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:11","nodeType":"YulIdentifier","src":"2589:3:11"},"nativeSrc":"2589:20:11","nodeType":"YulFunctionCall","src":"2589:20:11"}],"functionName":{"name":"mload","nativeSrc":"2583:5:11","nodeType":"YulIdentifier","src":"2583:5:11"},"nativeSrc":"2583:27:11","nodeType":"YulFunctionCall","src":"2583:27:11"},"variableNames":[{"name":"r","nativeSrc":"2578:1:11","nodeType":"YulIdentifier","src":"2578:1:11"}]},{"nativeSrc":"2627:32:11","nodeType":"YulAssignment","src":"2627:32:11","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:11","nodeType":"YulIdentifier","src":"2642:9:11"},{"kind":"number","nativeSrc":"2653:4:11","nodeType":"YulLiteral","src":"2653:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:11","nodeType":"YulIdentifier","src":"2638:3:11"},"nativeSrc":"2638:20:11","nodeType":"YulFunctionCall","src":"2638:20:11"}],"functionName":{"name":"mload","nativeSrc":"2632:5:11","nodeType":"YulIdentifier","src":"2632:5:11"},"nativeSrc":"2632:27:11","nodeType":"YulFunctionCall","src":"2632:27:11"},"variableNames":[{"name":"s","nativeSrc":"2627:1:11","nodeType":"YulIdentifier","src":"2627:1:11"}]},{"nativeSrc":"2676:41:11","nodeType":"YulAssignment","src":"2676:41:11","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:11","nodeType":"YulLiteral","src":"2686:1:11","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:11","nodeType":"YulIdentifier","src":"2699:9:11"},{"kind":"number","nativeSrc":"2710:4:11","nodeType":"YulLiteral","src":"2710:4:11","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:11","nodeType":"YulIdentifier","src":"2695:3:11"},"nativeSrc":"2695:20:11","nodeType":"YulFunctionCall","src":"2695:20:11"}],"functionName":{"name":"mload","nativeSrc":"2689:5:11","nodeType":"YulIdentifier","src":"2689:5:11"},"nativeSrc":"2689:27:11","nodeType":"YulFunctionCall","src":"2689:27:11"}],"functionName":{"name":"byte","nativeSrc":"2681:4:11","nodeType":"YulIdentifier","src":"2681:4:11"},"nativeSrc":"2681:36:11","nodeType":"YulFunctionCall","src":"2681:36:11"},"variableNames":[{"name":"v","nativeSrc":"2676:1:11","nodeType":"YulIdentifier","src":"2676:1:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1425,"isOffset":false,"isSlot":false,"src":"2578:1:11","valueSize":1},{"declaration":1428,"isOffset":false,"isSlot":false,"src":"2627:1:11","valueSize":1},{"declaration":1410,"isOffset":false,"isSlot":false,"src":"2593:9:11","valueSize":1},{"declaration":1410,"isOffset":false,"isSlot":false,"src":"2642:9:11","valueSize":1},{"declaration":1410,"isOffset":false,"isSlot":false,"src":"2699:9:11","valueSize":1},{"declaration":1431,"isOffset":false,"isSlot":false,"src":"2676:1:11","valueSize":1}],"flags":["memory-safe"],"id":1433,"nodeType":"InlineAssembly","src":"2535:196:11"},{"expression":{"arguments":[{"id":1435,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"2762:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1436,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"2768:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1437,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"2771:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1438,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"2774:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1434,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1458,1538,1646],"referencedDeclaration":1646,"src":"2751:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1392_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1392_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1419,"id":1440,"nodeType":"Return","src":"2744:32:11"}]}}]},"documentation":{"id":1406,"nodeType":"StructuredDocumentation","src":"857:1267:11","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":1458,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:11","nodeType":"FunctionDefinition","parameters":{"id":1411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1408,"mutability":"mutable","name":"hash","nameLocation":"2166:4:11","nodeType":"VariableDeclaration","scope":1458,"src":"2158:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1407,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1410,"mutability":"mutable","name":"signature","nameLocation":"2193:9:11","nodeType":"VariableDeclaration","scope":1458,"src":"2180:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1409,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:11"},"returnParameters":{"id":1419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1413,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:11","nodeType":"VariableDeclaration","scope":1458,"src":"2232:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1412,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1416,"mutability":"mutable","name":"err","nameLocation":"2264:3:11","nodeType":"VariableDeclaration","scope":1458,"src":"2251:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1415,"nodeType":"UserDefinedTypeName","pathNode":{"id":1414,"name":"RecoverError","nameLocations":["2251:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":1392,"src":"2251:12:11"},"referencedDeclaration":1392,"src":"2251:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1418,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:11","nodeType":"VariableDeclaration","scope":1458,"src":"2269:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1417,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:11"},"scope":1732,"src":"2129:778:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1487,"nodeType":"Block","src":"3801:168:11","statements":[{"assignments":[1469,1472,1474],"declarations":[{"constant":false,"id":1469,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:11","nodeType":"VariableDeclaration","scope":1487,"src":"3812:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1468,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1472,"mutability":"mutable","name":"error","nameLocation":"3844:5:11","nodeType":"VariableDeclaration","scope":1487,"src":"3831:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1471,"nodeType":"UserDefinedTypeName","pathNode":{"id":1470,"name":"RecoverError","nameLocations":["3831:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":1392,"src":"3831:12:11"},"referencedDeclaration":1392,"src":"3831:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1474,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:11","nodeType":"VariableDeclaration","scope":1487,"src":"3851:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1473,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1479,"initialValue":{"arguments":[{"id":1476,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"3882:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1477,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"3888:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1475,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1458,1538,1646],"referencedDeclaration":1458,"src":"3871:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1392_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1392_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:11"},{"expression":{"arguments":[{"id":1481,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"3920:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"}},{"id":1482,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"3927:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1480,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"3908:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1392_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1484,"nodeType":"ExpressionStatement","src":"3908:28:11"},{"expression":{"id":1485,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"3953:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1467,"id":1486,"nodeType":"Return","src":"3946:16:11"}]},"documentation":{"id":1459,"nodeType":"StructuredDocumentation","src":"2913:796:11","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":1488,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:11","nodeType":"FunctionDefinition","parameters":{"id":1464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"mutability":"mutable","name":"hash","nameLocation":"3739:4:11","nodeType":"VariableDeclaration","scope":1488,"src":"3731:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1460,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1463,"mutability":"mutable","name":"signature","nameLocation":"3758:9:11","nodeType":"VariableDeclaration","scope":1488,"src":"3745:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1462,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:11"},"returnParameters":{"id":1467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1488,"src":"3792:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1465,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:11"},"scope":1732,"src":"3714:255:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1537,"nodeType":"Block","src":"4348:342:11","statements":[{"id":1536,"nodeType":"UncheckedBlock","src":"4358:326:11","statements":[{"assignments":[1506],"declarations":[{"constant":false,"id":1506,"mutability":"mutable","name":"s","nameLocation":"4390:1:11","nodeType":"VariableDeclaration","scope":1536,"src":"4382:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1505,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1513,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1507,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"4394:2:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":1510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:11","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":1509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1508,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:11","typeDescriptions":{}}},"id":1511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:11"},{"assignments":[1515],"declarations":[{"constant":false,"id":1515,"mutability":"mutable","name":"v","nameLocation":"4591:1:11","nodeType":"VariableDeclaration","scope":1536,"src":"4585:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1514,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1528,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1520,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"4610:2:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1518,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:11","typeDescriptions":{}}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:11","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1524,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":1525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:11","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1516,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:11","typeDescriptions":{}}},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:11"},{"expression":{"arguments":[{"id":1530,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"4659:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1531,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"4665:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1532,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"4668:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1533,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"4671:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1529,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1458,1538,1646],"referencedDeclaration":1646,"src":"4648:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1392_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1392_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1504,"id":1535,"nodeType":"Return","src":"4641:32:11"}]}]},"documentation":{"id":1489,"nodeType":"StructuredDocumentation","src":"3975:205:11","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":1538,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:11","nodeType":"FunctionDefinition","parameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1491,"mutability":"mutable","name":"hash","nameLocation":"4222:4:11","nodeType":"VariableDeclaration","scope":1538,"src":"4214:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1490,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1493,"mutability":"mutable","name":"r","nameLocation":"4244:1:11","nodeType":"VariableDeclaration","scope":1538,"src":"4236:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1492,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1495,"mutability":"mutable","name":"vs","nameLocation":"4263:2:11","nodeType":"VariableDeclaration","scope":1538,"src":"4255:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1494,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:11"},"returnParameters":{"id":1504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1498,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:11","nodeType":"VariableDeclaration","scope":1538,"src":"4295:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1497,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1501,"mutability":"mutable","name":"err","nameLocation":"4327:3:11","nodeType":"VariableDeclaration","scope":1538,"src":"4314:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1500,"nodeType":"UserDefinedTypeName","pathNode":{"id":1499,"name":"RecoverError","nameLocations":["4314:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":1392,"src":"4314:12:11"},"referencedDeclaration":1392,"src":"4314:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1503,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:11","nodeType":"VariableDeclaration","scope":1538,"src":"4332:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1502,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:11"},"scope":1732,"src":"4185:505:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1570,"nodeType":"Block","src":"4903:164:11","statements":[{"assignments":[1551,1554,1556],"declarations":[{"constant":false,"id":1551,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:11","nodeType":"VariableDeclaration","scope":1570,"src":"4914:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1550,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1554,"mutability":"mutable","name":"error","nameLocation":"4946:5:11","nodeType":"VariableDeclaration","scope":1570,"src":"4933:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1553,"nodeType":"UserDefinedTypeName","pathNode":{"id":1552,"name":"RecoverError","nameLocations":["4933:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":1392,"src":"4933:12:11"},"referencedDeclaration":1392,"src":"4933:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1556,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:11","nodeType":"VariableDeclaration","scope":1570,"src":"4953:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1555,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1562,"initialValue":{"arguments":[{"id":1558,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"4984:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1559,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"4990:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1560,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"4993:2:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1557,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1458,1538,1646],"referencedDeclaration":1538,"src":"4973:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1392_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1392_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:11"},{"expression":{"arguments":[{"id":1564,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"5018:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"}},{"id":1565,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"5025:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1563,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"5006:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1392_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1567,"nodeType":"ExpressionStatement","src":"5006:28:11"},{"expression":{"id":1568,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"5051:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1549,"id":1569,"nodeType":"Return","src":"5044:16:11"}]},"documentation":{"id":1539,"nodeType":"StructuredDocumentation","src":"4696:116:11","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":1571,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:11","nodeType":"FunctionDefinition","parameters":{"id":1546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1541,"mutability":"mutable","name":"hash","nameLocation":"4842:4:11","nodeType":"VariableDeclaration","scope":1571,"src":"4834:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1540,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1543,"mutability":"mutable","name":"r","nameLocation":"4856:1:11","nodeType":"VariableDeclaration","scope":1571,"src":"4848:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1542,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1545,"mutability":"mutable","name":"vs","nameLocation":"4867:2:11","nodeType":"VariableDeclaration","scope":1571,"src":"4859:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1544,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:11"},"returnParameters":{"id":1549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1571,"src":"4894:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1547,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:11"},"scope":1732,"src":"4817:250:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1645,"nodeType":"Block","src":"5382:1372:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1592,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"6278:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1590,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:11","typeDescriptions":{}}},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":1594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:11","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1606,"nodeType":"IfStatement","src":"6266:164:11","trueBody":{"id":1605,"nodeType":"Block","src":"6351:79:11","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1596,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:11","typeDescriptions":{}}},"id":1599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1600,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"6385:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1392_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:11","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1391,"src":"6385:30:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"}},{"id":1602,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"6417:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1603,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1392_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1589,"id":1604,"nodeType":"Return","src":"6365:54:11"}]}},{"assignments":[1608],"declarations":[{"constant":false,"id":1608,"mutability":"mutable","name":"signer","nameLocation":"6532:6:11","nodeType":"VariableDeclaration","scope":1645,"src":"6524:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1607,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1615,"initialValue":{"arguments":[{"id":1610,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"6551:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1611,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"6557:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1612,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"6560:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1613,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"6563:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1609,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:11","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1616,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"6579:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1617,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:11","typeDescriptions":{}}},"id":1620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1635,"nodeType":"IfStatement","src":"6575:113:11","trueBody":{"id":1634,"nodeType":"Block","src":"6601:87:11","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1622,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:11","typeDescriptions":{}}},"id":1625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1626,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"6635:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1392_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:11","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1389,"src":"6635:29:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":1630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1628,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:11","typeDescriptions":{}}},"id":1631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1632,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1392_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1589,"id":1633,"nodeType":"Return","src":"6615:62:11"}]}},{"expression":{"components":[{"id":1636,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"6706:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1637,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"6714:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1392_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:11","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1388,"src":"6714:20:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":1641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1639,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:11","typeDescriptions":{}}},"id":1642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1643,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1392_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1589,"id":1644,"nodeType":"Return","src":"6698:49:11"}]},"documentation":{"id":1572,"nodeType":"StructuredDocumentation","src":"5073:125:11","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1646,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:11","nodeType":"FunctionDefinition","parameters":{"id":1581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1574,"mutability":"mutable","name":"hash","nameLocation":"5240:4:11","nodeType":"VariableDeclaration","scope":1646,"src":"5232:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1573,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1576,"mutability":"mutable","name":"v","nameLocation":"5260:1:11","nodeType":"VariableDeclaration","scope":1646,"src":"5254:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1575,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1578,"mutability":"mutable","name":"r","nameLocation":"5279:1:11","nodeType":"VariableDeclaration","scope":1646,"src":"5271:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1577,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1580,"mutability":"mutable","name":"s","nameLocation":"5298:1:11","nodeType":"VariableDeclaration","scope":1646,"src":"5290:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1579,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:11"},"returnParameters":{"id":1589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1583,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:11","nodeType":"VariableDeclaration","scope":1646,"src":"5329:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1582,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1586,"mutability":"mutable","name":"err","nameLocation":"5361:3:11","nodeType":"VariableDeclaration","scope":1646,"src":"5348:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1585,"nodeType":"UserDefinedTypeName","pathNode":{"id":1584,"name":"RecoverError","nameLocations":["5348:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":1392,"src":"5348:12:11"},"referencedDeclaration":1392,"src":"5348:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1588,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:11","nodeType":"VariableDeclaration","scope":1646,"src":"5366:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1587,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:11"},"scope":1732,"src":"5203:1551:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1681,"nodeType":"Block","src":"6981:166:11","statements":[{"assignments":[1661,1664,1666],"declarations":[{"constant":false,"id":1661,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:11","nodeType":"VariableDeclaration","scope":1681,"src":"6992:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1660,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1664,"mutability":"mutable","name":"error","nameLocation":"7024:5:11","nodeType":"VariableDeclaration","scope":1681,"src":"7011:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1663,"nodeType":"UserDefinedTypeName","pathNode":{"id":1662,"name":"RecoverError","nameLocations":["7011:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":1392,"src":"7011:12:11"},"referencedDeclaration":1392,"src":"7011:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1666,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:11","nodeType":"VariableDeclaration","scope":1681,"src":"7031:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1665,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1673,"initialValue":{"arguments":[{"id":1668,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"7062:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1669,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"7068:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1670,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"7071:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1671,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"7074:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1667,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1458,1538,1646],"referencedDeclaration":1646,"src":"7051:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1392_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1392_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:11"},{"expression":{"arguments":[{"id":1675,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"7098:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"}},{"id":1676,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1666,"src":"7105:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1674,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1731,"src":"7086:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1392_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1678,"nodeType":"ExpressionStatement","src":"7086:28:11"},{"expression":{"id":1679,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"7131:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1659,"id":1680,"nodeType":"Return","src":"7124:16:11"}]},"documentation":{"id":1647,"nodeType":"StructuredDocumentation","src":"6760:122:11","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1682,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:11","nodeType":"FunctionDefinition","parameters":{"id":1656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1649,"mutability":"mutable","name":"hash","nameLocation":"6912:4:11","nodeType":"VariableDeclaration","scope":1682,"src":"6904:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1648,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1651,"mutability":"mutable","name":"v","nameLocation":"6924:1:11","nodeType":"VariableDeclaration","scope":1682,"src":"6918:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1650,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1653,"mutability":"mutable","name":"r","nameLocation":"6935:1:11","nodeType":"VariableDeclaration","scope":1682,"src":"6927:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1652,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1655,"mutability":"mutable","name":"s","nameLocation":"6946:1:11","nodeType":"VariableDeclaration","scope":1682,"src":"6938:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1654,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:11"},"returnParameters":{"id":1659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1682,"src":"6972:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1657,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:11"},"scope":1732,"src":"6887:260:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1730,"nodeType":"Block","src":"7352:460:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1691,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"7366:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1692,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"7375:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1392_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:11","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1388,"src":"7375:20:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1697,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"7462:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1698,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"7471:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1392_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:11","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1389,"src":"7471:29:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1705,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"7567:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1706,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"7576:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1392_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:11","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1390,"src":"7576:35:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1717,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"7701:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1718,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"7710:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1392_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:11","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1391,"src":"7710:30:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1726,"nodeType":"IfStatement","src":"7697:109:11","trueBody":{"id":1725,"nodeType":"Block","src":"7742:64:11","statements":[{"errorCall":{"arguments":[{"id":1722,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"7786:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1721,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"7763:22:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1724,"nodeType":"RevertStatement","src":"7756:39:11"}]}},"id":1727,"nodeType":"IfStatement","src":"7563:243:11","trueBody":{"id":1716,"nodeType":"Block","src":"7613:78:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1712,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"7670:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1710,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:11","typeDescriptions":{}}},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1709,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"7634:27:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1715,"nodeType":"RevertStatement","src":"7627:53:11"}]}},"id":1728,"nodeType":"IfStatement","src":"7458:348:11","trueBody":{"id":1704,"nodeType":"Block","src":"7502:55:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1701,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"7523:21:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1703,"nodeType":"RevertStatement","src":"7516:30:11"}]}},"id":1729,"nodeType":"IfStatement","src":"7362:444:11","trueBody":{"id":1696,"nodeType":"Block","src":"7397:55:11","statements":[{"functionReturnParameters":1690,"id":1695,"nodeType":"Return","src":"7411:7:11"}]}}]},"documentation":{"id":1683,"nodeType":"StructuredDocumentation","src":"7153:122:11","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":1731,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:11","nodeType":"FunctionDefinition","parameters":{"id":1689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1686,"mutability":"mutable","name":"error","nameLocation":"7314:5:11","nodeType":"VariableDeclaration","scope":1731,"src":"7301:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1685,"nodeType":"UserDefinedTypeName","pathNode":{"id":1684,"name":"RecoverError","nameLocations":["7301:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":1392,"src":"7301:12:11"},"referencedDeclaration":1392,"src":"7301:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1392","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1688,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:11","nodeType":"VariableDeclaration","scope":1731,"src":"7321:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1687,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:11"},"returnParameters":{"id":1690,"nodeType":"ParameterList","parameters":[],"src":"7352:0:11"},"scope":1732,"src":"7280:532:11","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1733,"src":"344:7470:11","usedErrors":[1395,1400,1405],"usedEvents":[]}],"src":"112:7703:11"},"id":11},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1744]},"id":1745,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1734,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1735,"nodeType":"StructuredDocumentation","src":"141:280:12","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1744,"linearizedBaseContracts":[1744],"name":"IERC165","nameLocation":"432:7:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1736,"nodeType":"StructuredDocumentation","src":"446:340:12","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1743,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:12","nodeType":"FunctionDefinition","parameters":{"id":1739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1738,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:12","nodeType":"VariableDeclaration","scope":1743,"src":"818:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1737,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:12"},"returnParameters":{"id":1742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1743,"src":"861:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1740,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:12"},"scope":1744,"src":"791:76:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1745,"src":"422:447:12","usedErrors":[],"usedEvents":[]}],"src":"115:755:12"},"id":12},"contracts/SignatureVerifyingPaymaster.sol":{"ast":{"absolutePath":"contracts/SignatureVerifyingPaymaster.sol","exportedSymbols":{"BasePaymaster":[270],"Context":[1384],"ECDSA":[1732],"IAggregator":[840],"IERC165":[1744],"IEntryPoint":[1024],"INonceManager":[1043],"IPaymaster":[1080],"IStakeManager":[1184],"Ownable":[1354],"PackedUserOperation":[1206],"UserOperationLib":[806],"VerifyingPaymaster":[1907],"calldataKeccak":[431],"min":[449]},"id":1908,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1746,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:13"},{"absolutePath":"@account-abstraction/contracts/core/BasePaymaster.sol","file":"@account-abstraction/contracts/core/BasePaymaster.sol","id":1747,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1908,"sourceUnit":271,"src":"58:63:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":1748,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1908,"sourceUnit":1733,"src":"122:62:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1750,"name":"BasePaymaster","nameLocations":["324:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":270,"src":"324:13:13"},"id":1751,"nodeType":"InheritanceSpecifier","src":"324:13:13"}],"canonicalName":"VerifyingPaymaster","contractDependencies":[],"contractKind":"contract","documentation":{"id":1749,"nodeType":"StructuredDocumentation","src":"186:106:13","text":" @title VerifyingPaymaster\n @dev A Paymaster contract for ERC-4337 that validates a signature."},"fullyImplemented":true,"id":1907,"linearizedBaseContracts":[1907,270,1354,1384,1080],"name":"VerifyingPaymaster","nameLocation":"302:18:13","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1754,"libraryName":{"id":1752,"name":"ECDSA","nameLocations":["350:5:13"],"nodeType":"IdentifierPath","referencedDeclaration":1732,"src":"350:5:13"},"nodeType":"UsingForDirective","src":"344:24:13","typeName":{"id":1753,"name":"bytes32","nodeType":"ElementaryTypeName","src":"360:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"constant":false,"functionSelector":"f74d5480","id":1756,"mutability":"mutable","name":"trustedSigner","nameLocation":"456:13:13","nodeType":"VariableDeclaration","scope":1907,"src":"441:28:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1755,"name":"address","nodeType":"ElementaryTypeName","src":"441:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":1772,"nodeType":"Block","src":"802:47:13","statements":[{"expression":{"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1768,"name":"trustedSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"812:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1769,"name":"_trustedSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1762,"src":"828:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"812:30:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1771,"nodeType":"ExpressionStatement","src":"812:30:13"}]},"documentation":{"id":1757,"nodeType":"StructuredDocumentation","src":"476:233:13","text":" @dev Constructor to initialize the paymaster with the trusted signer and EntryPoint.\n @param _entryPoint The address of the EntryPoint contract.\n @param _trustedSigner The address of the trusted signer."},"id":1773,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1765,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"789:11:13","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1024","typeString":"contract IEntryPoint"}}],"id":1766,"kind":"baseConstructorSpecifier","modifierName":{"id":1764,"name":"BasePaymaster","nameLocations":["775:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":270,"src":"775:13:13"},"nodeType":"ModifierInvocation","src":"775:26:13"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1760,"mutability":"mutable","name":"_entryPoint","nameLocation":"738:11:13","nodeType":"VariableDeclaration","scope":1773,"src":"726:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1024","typeString":"contract IEntryPoint"},"typeName":{"id":1759,"nodeType":"UserDefinedTypeName","pathNode":{"id":1758,"name":"IEntryPoint","nameLocations":["726:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":1024,"src":"726:11:13"},"referencedDeclaration":1024,"src":"726:11:13","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1024","typeString":"contract IEntryPoint"}},"visibility":"internal"},{"constant":false,"id":1762,"mutability":"mutable","name":"_trustedSigner","nameLocation":"759:14:13","nodeType":"VariableDeclaration","scope":1773,"src":"751:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1761,"name":"address","nodeType":"ElementaryTypeName","src":"751:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"725:49:13"},"returnParameters":{"id":1767,"nodeType":"ParameterList","parameters":[],"src":"802:0:13"},"scope":1907,"src":"714:135:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1785,"nodeType":"Block","src":"1046:47:13","statements":[{"expression":{"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1781,"name":"trustedSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"1056:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1782,"name":"_trustedSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"1072:14:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1056:30:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1784,"nodeType":"ExpressionStatement","src":"1056:30:13"}]},"documentation":{"id":1774,"nodeType":"StructuredDocumentation","src":"855:117:13","text":" @dev Sets the trusted signer address.\n @param _trustedSigner The new trusted signer address."},"functionSelector":"56a1c701","id":1786,"implemented":true,"kind":"function","modifiers":[{"id":1779,"kind":"modifierInvocation","modifierName":{"id":1778,"name":"onlyOwner","nameLocations":["1036:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":1265,"src":"1036:9:13"},"nodeType":"ModifierInvocation","src":"1036:9:13"}],"name":"setTrustedSigner","nameLocation":"986:16:13","nodeType":"FunctionDefinition","parameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1776,"mutability":"mutable","name":"_trustedSigner","nameLocation":"1011:14:13","nodeType":"VariableDeclaration","scope":1786,"src":"1003:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1775,"name":"address","nodeType":"ElementaryTypeName","src":"1003:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1002:24:13"},"returnParameters":{"id":1780,"nodeType":"ParameterList","parameters":[],"src":"1046:0:13"},"scope":1907,"src":"977:116:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[109],"body":{"id":1893,"nodeType":"Block","src":"1616:1004:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1812,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1764:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_VerifyingPaymaster_$1907","typeString":"contract VerifyingPaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VerifyingPaymaster_$1907","typeString":"contract VerifyingPaymaster"}],"id":1811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1756:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1810,"name":"address","nodeType":"ElementaryTypeName","src":"1756:7:13","typeDescriptions":{}}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1756:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"arguments":[{"id":1806,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"1733:10:13","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1024","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$1024","typeString":"contract IEntryPoint"}],"id":1805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1725:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1804,"name":"address","nodeType":"ElementaryTypeName","src":"1725:7:13","typeDescriptions":{}}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1725:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1803,"name":"IEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"1713:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IEntryPoint_$1024_$","typeString":"type(contract IEntryPoint)"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1713:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$1024","typeString":"contract IEntryPoint"}},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1746:9:13","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1153,"src":"1713:42:13","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1713:57:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1815,"name":"maxCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"1774:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1713:68:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74206465706f73697420666f7220676173","id":1817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1783:30:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_420570715e672bbeddfc22266e08fcd33e8d963e605c0bdbd014e577666917b8","typeString":"literal_string \"Insufficient deposit for gas\""},"value":"Insufficient deposit for gas"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_420570715e672bbeddfc22266e08fcd33e8d963e605c0bdbd014e577666917b8","typeString":"literal_string \"Insufficient deposit for gas\""}],"id":1802,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1705:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1705:109:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1819,"nodeType":"ExpressionStatement","src":"1705:109:13"},{"assignments":[1821],"declarations":[{"constant":false,"id":1821,"mutability":"mutable","name":"paymasterAndData","nameLocation":"1903:16:13","nodeType":"VariableDeclaration","scope":1893,"src":"1890:29:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1820,"name":"bytes","nodeType":"ElementaryTypeName","src":"1890:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1824,"initialValue":{"expression":{"id":1822,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"1922:6:13","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1929:16:13","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":1203,"src":"1922:23:13","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"nodeType":"VariableDeclarationStatement","src":"1890:55:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1826,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"1963:16:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1980:6:13","memberName":"length","nodeType":"MemberAccess","src":"1963:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":1828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1990:2:13","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"1963:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207061796d6173746572416e6444617461206c656e677468","id":1830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1994:33:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_cfe5951392790b135f98d77ba09049bfbc1a1776c53987baf509c661787d5e3b","typeString":"literal_string \"Invalid paymasterAndData length\""},"value":"Invalid paymasterAndData length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cfe5951392790b135f98d77ba09049bfbc1a1776c53987baf509c661787d5e3b","typeString":"literal_string \"Invalid paymasterAndData length\""}],"id":1825,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1955:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1955:73:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1832,"nodeType":"ExpressionStatement","src":"1955:73:13"},{"assignments":[1834],"declarations":[{"constant":false,"id":1834,"mutability":"mutable","name":"signature","nameLocation":"2052:9:13","nodeType":"VariableDeclaration","scope":1893,"src":"2039:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1833,"name":"bytes","nodeType":"ElementaryTypeName","src":"2039:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1839,"initialValue":{"arguments":[{"hexValue":"3634","id":1837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2074:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"}],"id":1836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2064:9:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1835,"name":"bytes","nodeType":"ElementaryTypeName","src":"2068:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2064:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2039:38:13"},{"body":{"id":1860,"nodeType":"Block","src":"2117:63:13","statements":[{"expression":{"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1850,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"2131:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1852,"indexExpression":{"id":1851,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"2141:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2131:12:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1853,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"2146:16:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1857,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1854,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"2163:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2167:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2163:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2146:23:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2131:38:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1859,"nodeType":"ExpressionStatement","src":"2131:38:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1844,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"2104:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3634","id":1845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2108:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"2104:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1861,"initializationExpression":{"assignments":[1841],"declarations":[{"constant":false,"id":1841,"mutability":"mutable","name":"i","nameLocation":"2097:1:13","nodeType":"VariableDeclaration","scope":1861,"src":"2092:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1840,"name":"uint","nodeType":"ElementaryTypeName","src":"2092:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1843,"initialValue":{"hexValue":"30","id":1842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2101:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2092:10:13"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2112:3:13","subExpression":{"id":1847,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"2112:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1849,"nodeType":"ExpressionStatement","src":"2112:3:13"},"nodeType":"ForStatement","src":"2087:93:13"},{"assignments":[1863],"declarations":[{"constant":false,"id":1863,"mutability":"mutable","name":"hash","nameLocation":"2282:4:13","nodeType":"VariableDeclaration","scope":1893,"src":"2274:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1862,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2274:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1871,"initialValue":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","id":1867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2316:34:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},"value":"\u0019Ethereum Signed Message:\n32"},{"id":1868,"name":"userOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1792,"src":"2352:10:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1865,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2299:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2303:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"2299:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2299:64:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1864,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2289:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2289:75:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2274:90:13"},{"assignments":[1873],"declarations":[{"constant":false,"id":1873,"mutability":"mutable","name":"recoveredSigner","nameLocation":"2415:15:13","nodeType":"VariableDeclaration","scope":1893,"src":"2407:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1872,"name":"address","nodeType":"ElementaryTypeName","src":"2407:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1878,"initialValue":{"arguments":[{"id":1876,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"2446:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1874,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"2433:4:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2438:7:13","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":1488,"src":"2433:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2433:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2407:49:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1880,"name":"recoveredSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"2474:15:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1881,"name":"trustedSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"2493:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2474:32:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e6174757265","id":1883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2508:19:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""},"value":"Invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""}],"id":1879,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2466:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2466:62:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1885,"nodeType":"ExpressionStatement","src":"2466:62:13"},{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2607:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2597:9:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1886,"name":"bytes","nodeType":"ElementaryTypeName","src":"2601:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2597:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2611:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1891,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2596:17:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_rational_0_by_1_$","typeString":"tuple(bytes memory,int_const 0)"}},"functionReturnParameters":1801,"id":1892,"nodeType":"Return","src":"2589:24:13"}]},"documentation":{"id":1787,"nodeType":"StructuredDocumentation","src":"1099:296:13","text":" @dev Validates the UserOperation by checking the signature.\n @param userOp The UserOperation struct.\n @param userOpHash The hash of the UserOperation.\n @param maxCost The maximum cost of the operation.\n @return context A context value to pass to postOp."},"id":1894,"implemented":true,"kind":"function","modifiers":[],"name":"_validatePaymasterUserOp","nameLocation":"1409:24:13","nodeType":"FunctionDefinition","overrides":{"id":1796,"nodeType":"OverrideSpecifier","overrides":[],"src":"1552:8:13"},"parameters":{"id":1795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1790,"mutability":"mutable","name":"userOp","nameLocation":"1472:6:13","nodeType":"VariableDeclaration","scope":1894,"src":"1443:35:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":1789,"nodeType":"UserDefinedTypeName","pathNode":{"id":1788,"name":"PackedUserOperation","nameLocations":["1443:19:13"],"nodeType":"IdentifierPath","referencedDeclaration":1206,"src":"1443:19:13"},"referencedDeclaration":1206,"src":"1443:19:13","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$1206_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":1792,"mutability":"mutable","name":"userOpHash","nameLocation":"1496:10:13","nodeType":"VariableDeclaration","scope":1894,"src":"1488:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1791,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1488:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1794,"mutability":"mutable","name":"maxCost","nameLocation":"1524:7:13","nodeType":"VariableDeclaration","scope":1894,"src":"1516:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1793,"name":"uint256","nodeType":"ElementaryTypeName","src":"1516:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1433:104:13"},"returnParameters":{"id":1801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1798,"mutability":"mutable","name":"context","nameLocation":"1583:7:13","nodeType":"VariableDeclaration","scope":1894,"src":"1570:20:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1797,"name":"bytes","nodeType":"ElementaryTypeName","src":"1570:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1800,"mutability":"mutable","name":"validationData","nameLocation":"1600:14:13","nodeType":"VariableDeclaration","scope":1894,"src":"1592:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1799,"name":"uint256","nodeType":"ElementaryTypeName","src":"1592:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1569:46:13"},"scope":1907,"src":"1400:1220:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1905,"nodeType":"Block","src":"3045:65:13","statements":[]},"documentation":{"id":1895,"nodeType":"StructuredDocumentation","src":"2626:294:13","text":" @dev Handles post-operation logic. Ensures only the EntryPoint can call this function.\n @param mode The mode of the post-operation.\n @param context The context returned by _validatePaymasterUserOp.\n @param actualGasCost The actual gas cost of the operation."},"id":1906,"implemented":true,"kind":"function","modifiers":[],"name":"_postOp","nameLocation":"2934:7:13","nodeType":"FunctionDefinition","parameters":{"id":1903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1898,"mutability":"mutable","name":"mode","nameLocation":"2962:4:13","nodeType":"VariableDeclaration","scope":1906,"src":"2951:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1051","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":1897,"nodeType":"UserDefinedTypeName","pathNode":{"id":1896,"name":"PostOpMode","nameLocations":["2951:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":1051,"src":"2951:10:13"},"referencedDeclaration":1051,"src":"2951:10:13","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$1051","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":1900,"mutability":"mutable","name":"context","nameLocation":"2991:7:13","nodeType":"VariableDeclaration","scope":1906,"src":"2976:22:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1899,"name":"bytes","nodeType":"ElementaryTypeName","src":"2976:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1902,"mutability":"mutable","name":"actualGasCost","nameLocation":"3016:13:13","nodeType":"VariableDeclaration","scope":1906,"src":"3008:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1901,"name":"uint256","nodeType":"ElementaryTypeName","src":"3008:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2941:94:13"},"returnParameters":{"id":1904,"nodeType":"ParameterList","parameters":[],"src":"3045:0:13"},"scope":1907,"src":"2925:185:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1908,"src":"293:2819:13","usedErrors":[1220,1225,1395,1400,1405],"usedEvents":[1231]}],"src":"32:3080:13"},"id":13}},"contracts":{"@account-abstraction/contracts/core/BasePaymaster.sol":{"BasePaymaster":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"internalType":"uint256","name":"actualUserOpFeePerGas","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","deposit()":"d0e30db0","entryPoint()":"b0d691fe","getDeposit()":"c399ec88","owner()":"8da5cb5b","postOp(uint8,bytes,uint256,uint256)":"7c627b21","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","unlockStake()":"bb9fe6bf","validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":"52b7512c","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualUserOpFeePerGas\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- The unstake delay for this paymaster. Can only be increased.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256,uint256)\":{\"params\":{\"actualGasCost\":\"- Actual gas used so far (without this postOp call).\",\"actualUserOpFeePerGas\":\"- the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas                        and maxPriorityFee (and basefee)                        It is not the same as tx.gasprice, which is what the bundler pays.\",\"context\":\"- The context value returned by validatePaymasterUserOp\",\"mode\":\"- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. The paymaster still has to pay for gas.                        postOpReverted - never passed in a call to postOp().\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"- The maximum cost of this transaction (based on maximum gas and gas price from userOp).\",\"userOp\":\"- The user operation.\",\"userOpHash\":\"- Hash of the user's request data.\"},\"returns\":{\"context\":\"       - Value to send to a postOp. Zero length to signify postOp is not required.\",\"validationData\":\"- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                                    other values are invalid for paymaster.                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"- Amount to withdraw.\",\"withdrawAddress\":\"- Target to send to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add stake for this paymaster. This method can also carry eth value to add to the current stake.\"},\"deposit()\":{\"notice\":\"Add a deposit for this paymaster, used for paying for transaction fees.\"},\"getDeposit()\":{\"notice\":\"Return current paymaster's deposit on the entryPoint.\"},\"postOp(uint8,bytes,uint256,uint256)\":{\"notice\":\"Post-operation handler. Must verify sender is the entryPoint.\"},\"unlockStake()\":{\"notice\":\"Unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw value from the deposit.\"}},\"notice\":\"Helper class for creating a paymaster. provides helper methods for staking. Validates that the postOp is called only by the entryPoint.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/core/BasePaymaster.sol\":\"BasePaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/core/BasePaymaster.sol\":{\"keccak256\":\"0x156dd80127599c02937985a4fe44dd6424e29445af9aae886aff0f1993af43ab\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9a6afd9203f905b1d9a95f354e06d9b61328e5d27844d96100175718edb859ef\",\"dweb:/ipfs/QmYyKGTMaTyjDKY1QyThLJL8BZgUrTAxrHL3SNmRJLqnji\"]},\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e\",\"dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc\"]},\"@account-abstraction/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc\",\"dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS\"]},\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155\",\"dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5\"]},\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9\",\"dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe\"]},\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3\",\"dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk\"]},\"@account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x49d8dbf8a85b006bcd89bbc40e4e9e113997cc016007de85263bdae70572d07f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bc0d83804c1b795d5c216b3518cd176c48f90db28550f267cbd89746d6b476c8\",\"dweb:/ipfs/QmNdCm4c6hnt7f6Q8q21QjtCNZWWRUaMVEYnQHEv68VnKt\"]},\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00\",\"dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj\"]},\"@account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@account-abstraction/contracts/core/UserOperationLib.sol":{"UserOperationLib":{"abi":[{"inputs":[],"name":"PAYMASTER_DATA_OFFSET","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAYMASTER_POSTOP_GAS_OFFSET","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAYMASTER_VALIDATION_GAS_OFFSET","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a9610039600b82828239805160001a60731461002c57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060475760003560e01c806325093e1b14604c578063b29a8ff4146065578063ede3150214606c575b600080fd5b6053602481565b60405190815260200160405180910390f35b6053601481565b605360348156fea2646970667358221220da10ce14444097f012d04a4f82de7b5c991303ba177bf40cd1c4fa5d1ab3f13764736f6c63430008170033","opcodes":"PUSH1 0xA9 PUSH2 0x39 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x2C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x47 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25093E1B EQ PUSH1 0x4C JUMPI DUP1 PUSH4 0xB29A8FF4 EQ PUSH1 0x65 JUMPI DUP1 PUSH4 0xEDE31502 EQ PUSH1 0x6C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x53 PUSH1 0x24 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x53 PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH1 0x53 PUSH1 0x34 DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA LT 0xCE EQ PREVRANDAO BLOCKHASH SWAP8 CREATE SLT 0xD0 0x4A 0x4F DUP3 0xDE PUSH28 0x5C991303BA177BF40CD1C4FA5D1AB3F13764736F6C63430008170033 ","sourceMap":"282:4714:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;282:4714:2;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@PAYMASTER_DATA_OFFSET_465":{"entryPoint":null,"id":465,"parameterSlots":0,"returnSlots":0},"@PAYMASTER_POSTOP_GAS_OFFSET_462":{"entryPoint":null,"id":462,"parameterSlots":0,"returnSlots":0},"@PAYMASTER_VALIDATION_GAS_OFFSET_459":{"entryPoint":null,"id":459,"parameterSlots":0,"returnSlots":0},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:201:14","nodeType":"YulBlock","src":"0:201:14","statements":[{"nativeSrc":"6:3:14","nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nativeSrc":"123:76:14","nodeType":"YulBlock","src":"123:76:14","statements":[{"nativeSrc":"133:26:14","nodeType":"YulAssignment","src":"133:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"145:9:14","nodeType":"YulIdentifier","src":"145:9:14"},{"kind":"number","nativeSrc":"156:2:14","nodeType":"YulLiteral","src":"156:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"141:3:14","nodeType":"YulIdentifier","src":"141:3:14"},"nativeSrc":"141:18:14","nodeType":"YulFunctionCall","src":"141:18:14"},"variableNames":[{"name":"tail","nativeSrc":"133:4:14","nodeType":"YulIdentifier","src":"133:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"175:9:14","nodeType":"YulIdentifier","src":"175:9:14"},{"name":"value0","nativeSrc":"186:6:14","nodeType":"YulIdentifier","src":"186:6:14"}],"functionName":{"name":"mstore","nativeSrc":"168:6:14","nodeType":"YulIdentifier","src":"168:6:14"},"nativeSrc":"168:25:14","nodeType":"YulFunctionCall","src":"168:25:14"},"nativeSrc":"168:25:14","nodeType":"YulExpressionStatement","src":"168:25:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed","nativeSrc":"14:185:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"92:9:14","nodeType":"YulTypedName","src":"92:9:14","type":""},{"name":"value0","nativeSrc":"103:6:14","nodeType":"YulTypedName","src":"103:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"114:4:14","nodeType":"YulTypedName","src":"114:4:14","type":""}],"src":"14:185:14"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040526004361060475760003560e01c806325093e1b14604c578063b29a8ff4146065578063ede3150214606c575b600080fd5b6053602481565b60405190815260200160405180910390f35b6053601481565b605360348156fea2646970667358221220da10ce14444097f012d04a4f82de7b5c991303ba177bf40cd1c4fa5d1ab3f13764736f6c63430008170033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x47 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25093E1B EQ PUSH1 0x4C JUMPI DUP1 PUSH4 0xB29A8FF4 EQ PUSH1 0x65 JUMPI DUP1 PUSH4 0xEDE31502 EQ PUSH1 0x6C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x53 PUSH1 0x24 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x53 PUSH1 0x14 DUP2 JUMP JUMPDEST PUSH1 0x53 PUSH1 0x34 DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA LT 0xCE EQ PREVRANDAO BLOCKHASH SWAP8 CREATE SLT 0xD0 0x4A 0x4F DUP3 0xDE PUSH28 0x5C991303BA177BF40CD1C4FA5D1AB3F13764736F6C63430008170033 ","sourceMap":"282:4714:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;380:56;;434:2;380:56;;;;;168:25:14;;;156:2;141:18;380:56:2;;;;;;;314:60;;372:2;314:60;;442:50;;490:2;442:50;"},"methodIdentifiers":{"PAYMASTER_DATA_OFFSET()":"ede31502","PAYMASTER_POSTOP_GAS_OFFSET()":"25093e1b","PAYMASTER_VALIDATION_GAS_OFFSET()":"b29a8ff4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"PAYMASTER_DATA_OFFSET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAYMASTER_POSTOP_GAS_OFFSET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAYMASTER_VALIDATION_GAS_OFFSET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Utility functions helpful when working with UserOperation structs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/core/UserOperationLib.sol\":\"UserOperationLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e\",\"dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc\"]},\"@account-abstraction/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc\",\"dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS\"]},\"@account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/IAggregator.sol":{"IAggregator":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"userOps","type":"tuple[]"}],"name":"aggregateSignatures","outputs":[{"internalType":"bytes","name":"aggregatedSignature","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"validateSignatures","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"}],"name":"validateUserOpSignature","outputs":[{"internalType":"bytes","name":"sigForUserOp","type":"bytes"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"aggregateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[])":"ae574a43","validateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],bytes)":"2dd81133","validateUserOpSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))":"062a422b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"}],\"name\":\"aggregateSignatures\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"aggregatedSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"validateSignatures\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"validateUserOpSignature\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"sigForUserOp\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[])\":{\"params\":{\"userOps\":\"- Array of UserOperations to collect the signatures from.\"},\"returns\":{\"aggregatedSignature\":\"- The aggregated signature.\"}},\"validateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],bytes)\":{\"params\":{\"signature\":\"- The aggregated signature.\",\"userOps\":\"- Array of UserOperations to validate the signature for.\"}},\"validateUserOpSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))\":{\"params\":{\"userOp\":\"- The userOperation received from the user.\"},\"returns\":{\"sigForUserOp\":\"- The value to put into the signature field of the userOp when calling handleOps.                        (usually empty, unless account and aggregator support some kind of \\\"multisig\\\".\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[])\":{\"notice\":\"Aggregate multiple signatures into a single value. This method is called off-chain to calculate the signature to pass with handleOps() bundler MAY use optimized custom code perform this aggregation.\"},\"validateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],bytes)\":{\"notice\":\"Validate aggregated signature. Revert if the aggregated signature does not match the given list of operations.\"},\"validateUserOpSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))\":{\"notice\":\"Validate signature of a single userOp. This method should be called by bundler after EntryPointSimulation.simulateValidation() returns the aggregator this account uses. First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\"}},\"notice\":\"Aggregated Signatures validator.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IAggregator.sol\":\"IAggregator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155\",\"dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5\"]},\"@account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/IEntryPoint.sol":{"IEntryPoint":{"abi":[{"inputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"ret","type":"bytes"}],"name":"DelegateAndRevert","type":"error"},{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"}],"name":"FailedOp","type":"error"},{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"inner","type":"bytes"}],"name":"FailedOpWithRevert","type":"error"},{"inputs":[{"internalType":"bytes","name":"returnData","type":"bytes"}],"name":"PostOpReverted","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"SenderAddressResult","type":"error"},{"inputs":[{"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureValidationFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"factory","type":"address"},{"indexed":false,"internalType":"address","name":"paymaster","type":"address"}],"name":"AccountDeployed","type":"event"},{"anonymous":false,"inputs":[],"name":"BeforeExecution","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"PostOpRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureAggregatorChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"paymaster","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"},{"indexed":false,"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"actualGasUsed","type":"uint256"}],"name":"UserOperationEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"}],"name":"UserOperationPrefundTooLow","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"UserOperationRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"_unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"delegateAndRevert","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint256","name":"deposit","type":"uint256"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"initCode","type":"bytes"}],"name":"getSenderAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"}],"name":"getUserOpHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"contract IAggregator","name":"aggregator","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct IEntryPoint.UserOpsPerAggregator[]","name":"opsPerAggregator","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleAggregatedOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"ops","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","delegateAndRevert(address,bytes)":"850aaf62","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","getNonce(address,uint192)":"35567e1a","getSenderAddress(bytes)":"9b249f69","getUserOpHash((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))":"22cdde4c","handleAggregatedOps(((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address,bytes)[],address)":"dbed18e0","handleOps((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address)":"765e827f","incrementNonce(uint192)":"0bd28e3b","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"ret\",\"type\":\"bytes\"}],\"name\":\"DelegateAndRevert\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"FailedOp\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"inner\",\"type\":\"bytes\"}],\"name\":\"FailedOpWithRevert\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"PostOpReverted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderAddressResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureValidationFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"}],\"name\":\"AccountDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"BeforeExecution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"PostOpRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureAggregatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasUsed\",\"type\":\"uint256\"}],\"name\":\"UserOperationEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"UserOperationPrefundTooLow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"UserOperationRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"delegateAndRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"getSenderAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"getUserOpHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAggregator\",\"name\":\"aggregator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.UserOpsPerAggregator[]\",\"name\":\"opsPerAggregator\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleAggregatedOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"ops\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"params\":{\"opIndex\":\"- Index into the array of ops to the failed one (in simulateValidation, this is always zero).\",\"reason\":\"- Revert reason. The string starts with a unique code \\\"AAmn\\\",                  where \\\"m\\\" is \\\"1\\\" for factory, \\\"2\\\" for account and \\\"3\\\" for paymaster issues,                  so a failure can be attributed to the correct entity.\"}}],\"FailedOpWithRevert(uint256,string,bytes)\":[{\"details\":\"note that inner is truncated to 2048 bytes\",\"params\":{\"inner\":\"- data from inner cought revert reason\",\"opIndex\":\"- Index into the array of ops to the failed one (in simulateValidation, this is always zero).\",\"reason\":\"- Revert reason. see FailedOp(uint256,string), above\"}}],\"SignatureValidationFailed(address)\":[{\"params\":{\"aggregator\":\"The aggregator that failed to verify the signature\"}}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"params\":{\"factory\":\"- The factory used to deploy this account (in the initCode)\",\"paymaster\":\"- The paymaster used by this UserOp\",\"sender\":\"- The account that is deployed\",\"userOpHash\":\"- The userOp that deployed this account. UserOperationEvent will follow.\"}},\"PostOpRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"revertReason\":\"- The return bytes from the (reverted) call to \\\"callData\\\".\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}},\"SignatureAggregatorChanged(address)\":{\"params\":{\"aggregator\":\"- The aggregator used for the following UserOperationEvents.\"}},\"UserOperationPrefundTooLow(bytes32,address,uint256)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"revertReason\":\"- The return bytes from the (reverted) call to \\\"callData\\\".\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}}},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"- The new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"_0\":\"- The deposit (for gas payment) of the account.\"}},\"delegateAndRevert(address,bytes)\":{\"details\":\"calling this method, the EntryPoint will make a delegatecall to the given data, and report (via revert) the result.  The method always revert, so is only useful off-chain for dry run calls, in cases where state-override to replace  actual EntryPoint code is less convenient.\",\"params\":{\"data\":\"data to pass to target in a delegatecall\",\"target\":\"a target contract to make a delegatecall from entrypoint\"}},\"depositTo(address)\":{\"params\":{\"account\":\"- The account to add to.\"}},\"getDepositInfo(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"info\":\"  - Full deposit information of given account.\"}},\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}},\"getSenderAddress(bytes)\":{\"params\":{\"initCode\":\"- The constructor code to be passed into the UserOperation.\"}},\"getUserOpHash((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))\":{\"params\":{\"userOp\":\"- The user operation to generate the request ID for.\"},\"returns\":{\"_0\":\"hash the hash of this UserOperation\"}},\"handleAggregatedOps(((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address,bytes)[],address)\":{\"params\":{\"beneficiary\":\"- The address to receive the fees.\",\"opsPerAggregator\":\"- The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\"}},\"handleOps((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address)\":{\"params\":{\"beneficiary\":\"- The address to receive the fees.\",\"ops\":\"- The operations to execute.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\",\"withdrawAmount\":\"- The amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"notice\":\"A custom revert error of handleOps, to identify the offending op. Should be caught in off-chain handleOps simulation and not happen on-chain. Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts. NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\"}],\"FailedOpWithRevert(uint256,string,bytes)\":[{\"notice\":\"A custom revert error of handleOps, to report a revert by account or paymaster.\"}],\"SignatureValidationFailed(address)\":[{\"notice\":\"Error case when a signature aggregator fails to verify the aggregated signature it had created.\"}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"notice\":\"Account \\\"sender\\\" was deployed.\"},\"BeforeExecution()\":{\"notice\":\"An event emitted by handleOps(), before starting the execution loop. Any event emitted before this event, is part of the validation.\"},\"PostOpRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation Paymaster's \\\"postOp\\\" call reverted with non-zero length.\"},\"SignatureAggregatorChanged(address)\":{\"notice\":\"Signature aggregator used by the following UserOperationEvents within this bundle.\"},\"UserOperationPrefundTooLow(bytes32,address,uint256)\":{\"notice\":\"UserOp consumed more than prefund. The UserOperation is reverted, and no refund is made.\"},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation \\\"callData\\\" reverted with non-zero length.\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"balanceOf(address)\":{\"notice\":\"Get account balance.\"},\"delegateAndRevert(address,bytes)\":{\"notice\":\"Helper method for dry-run testing.\"},\"depositTo(address)\":{\"notice\":\"Add to the deposit of the given account.\"},\"getDepositInfo(address)\":{\"notice\":\"Get deposit info.\"},\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"getSenderAddress(bytes)\":{\"notice\":\"Get counterfactual sender address. Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. This method always revert, and returns the address in SenderAddressResult error\"},\"getUserOpHash((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))\":{\"notice\":\"Generate a request Id - unique identifier for this request. The request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\"},\"handleAggregatedOps(((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation with Aggregators\"},\"handleOps((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperations. No signature aggregator is used. If any account requires an aggregator (that is, it returned an aggregator when performing simulateValidation), then handleAggregatedOps() must be used instead.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"},\"unlockStake()\":{\"notice\":\"Attempt to unlock the stake. The value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw from the (unlocked) stake. Must first call unlockStake and wait for the unstakeDelay to pass.\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw from the deposit.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":\"IEntryPoint\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155\",\"dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5\"]},\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9\",\"dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe\"]},\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3\",\"dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk\"]},\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00\",\"dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj\"]},\"@account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/INonceManager.sol":{"INonceManager":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getNonce(address,uint192)":"35567e1a","incrementNonce(uint192)":"0bd28e3b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/INonceManager.sol\":\"INonceManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3\",\"dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/IPaymaster.sol":{"IPaymaster":{"abi":[{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"internalType":"uint256","name":"actualUserOpFeePerGas","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"postOp(uint8,bytes,uint256,uint256)":"7c627b21","validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":"52b7512c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualUserOpFeePerGas\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"postOp(uint8,bytes,uint256,uint256)\":{\"params\":{\"actualGasCost\":\"- Actual gas used so far (without this postOp call).\",\"actualUserOpFeePerGas\":\"- the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas                        and maxPriorityFee (and basefee)                        It is not the same as tx.gasprice, which is what the bundler pays.\",\"context\":\"- The context value returned by validatePaymasterUserOp\",\"mode\":\"- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. The paymaster still has to pay for gas.                        postOpReverted - never passed in a call to postOp().\"}},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"- The maximum cost of this transaction (based on maximum gas and gas price from userOp).\",\"userOp\":\"- The user operation.\",\"userOpHash\":\"- Hash of the user's request data.\"},\"returns\":{\"context\":\"       - Value to send to a postOp. Zero length to signify postOp is not required.\",\"validationData\":\"- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                                    other values are invalid for paymaster.                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"postOp(uint8,bytes,uint256,uint256)\":{\"notice\":\"Post-operation handler. Must verify sender is the entryPoint.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"}},\"notice\":\"The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations. A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IPaymaster.sol\":\"IPaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x49d8dbf8a85b006bcd89bbc40e4e9e113997cc016007de85263bdae70572d07f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bc0d83804c1b795d5c216b3518cd176c48f90db28550f267cbd89746d6b476c8\",\"dweb:/ipfs/QmNdCm4c6hnt7f6Q8q21QjtCNZWWRUaMVEYnQHEv68VnKt\"]},\"@account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/IStakeManager.sol":{"IStakeManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"_unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint256","name":"deposit","type":"uint256"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"- The new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"_0\":\"- The deposit (for gas payment) of the account.\"}},\"depositTo(address)\":{\"params\":{\"account\":\"- The account to add to.\"}},\"getDepositInfo(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"info\":\"  - Full deposit information of given account.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\",\"withdrawAmount\":\"- The amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"balanceOf(address)\":{\"notice\":\"Get account balance.\"},\"depositTo(address)\":{\"notice\":\"Add to the deposit of the given account.\"},\"getDepositInfo(address)\":{\"notice\":\"Get deposit info.\"},\"unlockStake()\":{\"notice\":\"Attempt to unlock the stake. The value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw from the (unlocked) stake. Must first call unlockStake and wait for the unstakeDelay to pass.\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw from the deposit.\"}},\"notice\":\"Manage deposits and stakes. Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account). Stake is value locked for at least \\\"unstakeDelay\\\" by the staked entity.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":\"IStakeManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00\",\"dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fe9f42c97a6e5aa0f89d601fa8043f763b6d2701c56458e773a4c1c019bc744464736f6c63430008170033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID SWAP16 TIMESTAMP 0xC9 PUSH27 0x6E5AA0F89D601FA8043F763B6D2701C56458E773A4C1C019BC7444 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"344:7470:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;344:7470:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fe9f42c97a6e5aa0f89d601fa8043f763b6d2701c56458e773a4c1c019bc744464736f6c63430008170033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID SWAP16 TIMESTAMP 0xC9 PUSH27 0x6E5AA0F89D601FA8043F763B6D2701C56458E773A4C1C019BC7444 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"344:7470:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"contracts/SignatureVerifyingPaymaster.sol":{"VerifyingPaymaster":{"abi":[{"inputs":[{"internalType":"contract IEntryPoint","name":"_entryPoint","type":"address"},{"internalType":"address","name":"_trustedSigner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"internalType":"uint256","name":"actualUserOpFeePerGas","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_trustedSigner","type":"address"}],"name":"setTrustedSigner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"trustedSigner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1257":{"entryPoint":null,"id":1257,"parameterSlots":1,"returnSlots":0},"@_1773":{"entryPoint":null,"id":1773,"parameterSlots":2,"returnSlots":0},"@_45":{"entryPoint":null,"id":45,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_1353":{"entryPoint":161,"id":1353,"parameterSlots":1,"returnSlots":0},"@_validateEntryPointInterface_68":{"entryPoint":241,"id":68,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":521,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IEntryPoint_$1024t_address_fromMemory":{"entryPoint":458,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7960c93a5f91001fe3b3e9a56f8716da93c29bf7a3aa7adb703901f21a308af8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_contract_IEntryPoint":{"entryPoint":436,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:1652:14","nodeType":"YulBlock","src":"0:1652:14","statements":[{"nativeSrc":"6:3:14","nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nativeSrc":"72:86:14","nodeType":"YulBlock","src":"72:86:14","statements":[{"body":{"nativeSrc":"136:16:14","nodeType":"YulBlock","src":"136:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"145:1:14","nodeType":"YulLiteral","src":"145:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"148:1:14","nodeType":"YulLiteral","src":"148:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"138:6:14","nodeType":"YulIdentifier","src":"138:6:14"},"nativeSrc":"138:12:14","nodeType":"YulFunctionCall","src":"138:12:14"},"nativeSrc":"138:12:14","nodeType":"YulExpressionStatement","src":"138:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"95:5:14","nodeType":"YulIdentifier","src":"95:5:14"},{"arguments":[{"name":"value","nativeSrc":"106:5:14","nodeType":"YulIdentifier","src":"106:5:14"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"121:3:14","nodeType":"YulLiteral","src":"121:3:14","type":"","value":"160"},{"kind":"number","nativeSrc":"126:1:14","nodeType":"YulLiteral","src":"126:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"117:3:14","nodeType":"YulIdentifier","src":"117:3:14"},"nativeSrc":"117:11:14","nodeType":"YulFunctionCall","src":"117:11:14"},{"kind":"number","nativeSrc":"130:1:14","nodeType":"YulLiteral","src":"130:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"113:3:14","nodeType":"YulIdentifier","src":"113:3:14"},"nativeSrc":"113:19:14","nodeType":"YulFunctionCall","src":"113:19:14"}],"functionName":{"name":"and","nativeSrc":"102:3:14","nodeType":"YulIdentifier","src":"102:3:14"},"nativeSrc":"102:31:14","nodeType":"YulFunctionCall","src":"102:31:14"}],"functionName":{"name":"eq","nativeSrc":"92:2:14","nodeType":"YulIdentifier","src":"92:2:14"},"nativeSrc":"92:42:14","nodeType":"YulFunctionCall","src":"92:42:14"}],"functionName":{"name":"iszero","nativeSrc":"85:6:14","nodeType":"YulIdentifier","src":"85:6:14"},"nativeSrc":"85:50:14","nodeType":"YulFunctionCall","src":"85:50:14"},"nativeSrc":"82:70:14","nodeType":"YulIf","src":"82:70:14"}]},"name":"validator_revert_contract_IEntryPoint","nativeSrc":"14:144:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"61:5:14","nodeType":"YulTypedName","src":"61:5:14","type":""}],"src":"14:144:14"},{"body":{"nativeSrc":"281:313:14","nodeType":"YulBlock","src":"281:313:14","statements":[{"body":{"nativeSrc":"327:16:14","nodeType":"YulBlock","src":"327:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"336:1:14","nodeType":"YulLiteral","src":"336:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"339:1:14","nodeType":"YulLiteral","src":"339:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"329:6:14","nodeType":"YulIdentifier","src":"329:6:14"},"nativeSrc":"329:12:14","nodeType":"YulFunctionCall","src":"329:12:14"},"nativeSrc":"329:12:14","nodeType":"YulExpressionStatement","src":"329:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"302:7:14","nodeType":"YulIdentifier","src":"302:7:14"},{"name":"headStart","nativeSrc":"311:9:14","nodeType":"YulIdentifier","src":"311:9:14"}],"functionName":{"name":"sub","nativeSrc":"298:3:14","nodeType":"YulIdentifier","src":"298:3:14"},"nativeSrc":"298:23:14","nodeType":"YulFunctionCall","src":"298:23:14"},{"kind":"number","nativeSrc":"323:2:14","nodeType":"YulLiteral","src":"323:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"294:3:14","nodeType":"YulIdentifier","src":"294:3:14"},"nativeSrc":"294:32:14","nodeType":"YulFunctionCall","src":"294:32:14"},"nativeSrc":"291:52:14","nodeType":"YulIf","src":"291:52:14"},{"nativeSrc":"352:29:14","nodeType":"YulVariableDeclaration","src":"352:29:14","value":{"arguments":[{"name":"headStart","nativeSrc":"371:9:14","nodeType":"YulIdentifier","src":"371:9:14"}],"functionName":{"name":"mload","nativeSrc":"365:5:14","nodeType":"YulIdentifier","src":"365:5:14"},"nativeSrc":"365:16:14","nodeType":"YulFunctionCall","src":"365:16:14"},"variables":[{"name":"value","nativeSrc":"356:5:14","nodeType":"YulTypedName","src":"356:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"428:5:14","nodeType":"YulIdentifier","src":"428:5:14"}],"functionName":{"name":"validator_revert_contract_IEntryPoint","nativeSrc":"390:37:14","nodeType":"YulIdentifier","src":"390:37:14"},"nativeSrc":"390:44:14","nodeType":"YulFunctionCall","src":"390:44:14"},"nativeSrc":"390:44:14","nodeType":"YulExpressionStatement","src":"390:44:14"},{"nativeSrc":"443:15:14","nodeType":"YulAssignment","src":"443:15:14","value":{"name":"value","nativeSrc":"453:5:14","nodeType":"YulIdentifier","src":"453:5:14"},"variableNames":[{"name":"value0","nativeSrc":"443:6:14","nodeType":"YulIdentifier","src":"443:6:14"}]},{"nativeSrc":"467:40:14","nodeType":"YulVariableDeclaration","src":"467:40:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"492:9:14","nodeType":"YulIdentifier","src":"492:9:14"},{"kind":"number","nativeSrc":"503:2:14","nodeType":"YulLiteral","src":"503:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"488:3:14","nodeType":"YulIdentifier","src":"488:3:14"},"nativeSrc":"488:18:14","nodeType":"YulFunctionCall","src":"488:18:14"}],"functionName":{"name":"mload","nativeSrc":"482:5:14","nodeType":"YulIdentifier","src":"482:5:14"},"nativeSrc":"482:25:14","nodeType":"YulFunctionCall","src":"482:25:14"},"variables":[{"name":"value_1","nativeSrc":"471:7:14","nodeType":"YulTypedName","src":"471:7:14","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"554:7:14","nodeType":"YulIdentifier","src":"554:7:14"}],"functionName":{"name":"validator_revert_contract_IEntryPoint","nativeSrc":"516:37:14","nodeType":"YulIdentifier","src":"516:37:14"},"nativeSrc":"516:46:14","nodeType":"YulFunctionCall","src":"516:46:14"},"nativeSrc":"516:46:14","nodeType":"YulExpressionStatement","src":"516:46:14"},{"nativeSrc":"571:17:14","nodeType":"YulAssignment","src":"571:17:14","value":{"name":"value_1","nativeSrc":"581:7:14","nodeType":"YulIdentifier","src":"581:7:14"},"variableNames":[{"name":"value1","nativeSrc":"571:6:14","nodeType":"YulIdentifier","src":"571:6:14"}]}]},"name":"abi_decode_tuple_t_contract$_IEntryPoint_$1024t_address_fromMemory","nativeSrc":"163:431:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"239:9:14","nodeType":"YulTypedName","src":"239:9:14","type":""},{"name":"dataEnd","nativeSrc":"250:7:14","nodeType":"YulTypedName","src":"250:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"262:6:14","nodeType":"YulTypedName","src":"262:6:14","type":""},{"name":"value1","nativeSrc":"270:6:14","nodeType":"YulTypedName","src":"270:6:14","type":""}],"src":"163:431:14"},{"body":{"nativeSrc":"700:102:14","nodeType":"YulBlock","src":"700:102:14","statements":[{"nativeSrc":"710:26:14","nodeType":"YulAssignment","src":"710:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"722:9:14","nodeType":"YulIdentifier","src":"722:9:14"},{"kind":"number","nativeSrc":"733:2:14","nodeType":"YulLiteral","src":"733:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"718:3:14","nodeType":"YulIdentifier","src":"718:3:14"},"nativeSrc":"718:18:14","nodeType":"YulFunctionCall","src":"718:18:14"},"variableNames":[{"name":"tail","nativeSrc":"710:4:14","nodeType":"YulIdentifier","src":"710:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"752:9:14","nodeType":"YulIdentifier","src":"752:9:14"},{"arguments":[{"name":"value0","nativeSrc":"767:6:14","nodeType":"YulIdentifier","src":"767:6:14"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"783:3:14","nodeType":"YulLiteral","src":"783:3:14","type":"","value":"160"},{"kind":"number","nativeSrc":"788:1:14","nodeType":"YulLiteral","src":"788:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"779:3:14","nodeType":"YulIdentifier","src":"779:3:14"},"nativeSrc":"779:11:14","nodeType":"YulFunctionCall","src":"779:11:14"},{"kind":"number","nativeSrc":"792:1:14","nodeType":"YulLiteral","src":"792:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"775:3:14","nodeType":"YulIdentifier","src":"775:3:14"},"nativeSrc":"775:19:14","nodeType":"YulFunctionCall","src":"775:19:14"}],"functionName":{"name":"and","nativeSrc":"763:3:14","nodeType":"YulIdentifier","src":"763:3:14"},"nativeSrc":"763:32:14","nodeType":"YulFunctionCall","src":"763:32:14"}],"functionName":{"name":"mstore","nativeSrc":"745:6:14","nodeType":"YulIdentifier","src":"745:6:14"},"nativeSrc":"745:51:14","nodeType":"YulFunctionCall","src":"745:51:14"},"nativeSrc":"745:51:14","nodeType":"YulExpressionStatement","src":"745:51:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"599:203:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"669:9:14","nodeType":"YulTypedName","src":"669:9:14","type":""},{"name":"value0","nativeSrc":"680:6:14","nodeType":"YulTypedName","src":"680:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"691:4:14","nodeType":"YulTypedName","src":"691:4:14","type":""}],"src":"599:203:14"},{"body":{"nativeSrc":"906:103:14","nodeType":"YulBlock","src":"906:103:14","statements":[{"nativeSrc":"916:26:14","nodeType":"YulAssignment","src":"916:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"928:9:14","nodeType":"YulIdentifier","src":"928:9:14"},{"kind":"number","nativeSrc":"939:2:14","nodeType":"YulLiteral","src":"939:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"924:3:14","nodeType":"YulIdentifier","src":"924:3:14"},"nativeSrc":"924:18:14","nodeType":"YulFunctionCall","src":"924:18:14"},"variableNames":[{"name":"tail","nativeSrc":"916:4:14","nodeType":"YulIdentifier","src":"916:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"958:9:14","nodeType":"YulIdentifier","src":"958:9:14"},{"arguments":[{"name":"value0","nativeSrc":"973:6:14","nodeType":"YulIdentifier","src":"973:6:14"},{"arguments":[{"kind":"number","nativeSrc":"985:3:14","nodeType":"YulLiteral","src":"985:3:14","type":"","value":"224"},{"kind":"number","nativeSrc":"990:10:14","nodeType":"YulLiteral","src":"990:10:14","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nativeSrc":"981:3:14","nodeType":"YulIdentifier","src":"981:3:14"},"nativeSrc":"981:20:14","nodeType":"YulFunctionCall","src":"981:20:14"}],"functionName":{"name":"and","nativeSrc":"969:3:14","nodeType":"YulIdentifier","src":"969:3:14"},"nativeSrc":"969:33:14","nodeType":"YulFunctionCall","src":"969:33:14"}],"functionName":{"name":"mstore","nativeSrc":"951:6:14","nodeType":"YulIdentifier","src":"951:6:14"},"nativeSrc":"951:52:14","nodeType":"YulFunctionCall","src":"951:52:14"},"nativeSrc":"951:52:14","nodeType":"YulExpressionStatement","src":"951:52:14"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nativeSrc":"807:202:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"875:9:14","nodeType":"YulTypedName","src":"875:9:14","type":""},{"name":"value0","nativeSrc":"886:6:14","nodeType":"YulTypedName","src":"886:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"897:4:14","nodeType":"YulTypedName","src":"897:4:14","type":""}],"src":"807:202:14"},{"body":{"nativeSrc":"1092:199:14","nodeType":"YulBlock","src":"1092:199:14","statements":[{"body":{"nativeSrc":"1138:16:14","nodeType":"YulBlock","src":"1138:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1147:1:14","nodeType":"YulLiteral","src":"1147:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"1150:1:14","nodeType":"YulLiteral","src":"1150:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1140:6:14","nodeType":"YulIdentifier","src":"1140:6:14"},"nativeSrc":"1140:12:14","nodeType":"YulFunctionCall","src":"1140:12:14"},"nativeSrc":"1140:12:14","nodeType":"YulExpressionStatement","src":"1140:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1113:7:14","nodeType":"YulIdentifier","src":"1113:7:14"},{"name":"headStart","nativeSrc":"1122:9:14","nodeType":"YulIdentifier","src":"1122:9:14"}],"functionName":{"name":"sub","nativeSrc":"1109:3:14","nodeType":"YulIdentifier","src":"1109:3:14"},"nativeSrc":"1109:23:14","nodeType":"YulFunctionCall","src":"1109:23:14"},{"kind":"number","nativeSrc":"1134:2:14","nodeType":"YulLiteral","src":"1134:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1105:3:14","nodeType":"YulIdentifier","src":"1105:3:14"},"nativeSrc":"1105:32:14","nodeType":"YulFunctionCall","src":"1105:32:14"},"nativeSrc":"1102:52:14","nodeType":"YulIf","src":"1102:52:14"},{"nativeSrc":"1163:29:14","nodeType":"YulVariableDeclaration","src":"1163:29:14","value":{"arguments":[{"name":"headStart","nativeSrc":"1182:9:14","nodeType":"YulIdentifier","src":"1182:9:14"}],"functionName":{"name":"mload","nativeSrc":"1176:5:14","nodeType":"YulIdentifier","src":"1176:5:14"},"nativeSrc":"1176:16:14","nodeType":"YulFunctionCall","src":"1176:16:14"},"variables":[{"name":"value","nativeSrc":"1167:5:14","nodeType":"YulTypedName","src":"1167:5:14","type":""}]},{"body":{"nativeSrc":"1245:16:14","nodeType":"YulBlock","src":"1245:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1254:1:14","nodeType":"YulLiteral","src":"1254:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"1257:1:14","nodeType":"YulLiteral","src":"1257:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1247:6:14","nodeType":"YulIdentifier","src":"1247:6:14"},"nativeSrc":"1247:12:14","nodeType":"YulFunctionCall","src":"1247:12:14"},"nativeSrc":"1247:12:14","nodeType":"YulExpressionStatement","src":"1247:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1214:5:14","nodeType":"YulIdentifier","src":"1214:5:14"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1235:5:14","nodeType":"YulIdentifier","src":"1235:5:14"}],"functionName":{"name":"iszero","nativeSrc":"1228:6:14","nodeType":"YulIdentifier","src":"1228:6:14"},"nativeSrc":"1228:13:14","nodeType":"YulFunctionCall","src":"1228:13:14"}],"functionName":{"name":"iszero","nativeSrc":"1221:6:14","nodeType":"YulIdentifier","src":"1221:6:14"},"nativeSrc":"1221:21:14","nodeType":"YulFunctionCall","src":"1221:21:14"}],"functionName":{"name":"eq","nativeSrc":"1211:2:14","nodeType":"YulIdentifier","src":"1211:2:14"},"nativeSrc":"1211:32:14","nodeType":"YulFunctionCall","src":"1211:32:14"}],"functionName":{"name":"iszero","nativeSrc":"1204:6:14","nodeType":"YulIdentifier","src":"1204:6:14"},"nativeSrc":"1204:40:14","nodeType":"YulFunctionCall","src":"1204:40:14"},"nativeSrc":"1201:60:14","nodeType":"YulIf","src":"1201:60:14"},{"nativeSrc":"1270:15:14","nodeType":"YulAssignment","src":"1270:15:14","value":{"name":"value","nativeSrc":"1280:5:14","nodeType":"YulIdentifier","src":"1280:5:14"},"variableNames":[{"name":"value0","nativeSrc":"1270:6:14","nodeType":"YulIdentifier","src":"1270:6:14"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"1014:277:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1058:9:14","nodeType":"YulTypedName","src":"1058:9:14","type":""},{"name":"dataEnd","nativeSrc":"1069:7:14","nodeType":"YulTypedName","src":"1069:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1081:6:14","nodeType":"YulTypedName","src":"1081:6:14","type":""}],"src":"1014:277:14"},{"body":{"nativeSrc":"1470:180:14","nodeType":"YulBlock","src":"1470:180:14","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1487:9:14","nodeType":"YulIdentifier","src":"1487:9:14"},{"kind":"number","nativeSrc":"1498:2:14","nodeType":"YulLiteral","src":"1498:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"1480:6:14","nodeType":"YulIdentifier","src":"1480:6:14"},"nativeSrc":"1480:21:14","nodeType":"YulFunctionCall","src":"1480:21:14"},"nativeSrc":"1480:21:14","nodeType":"YulExpressionStatement","src":"1480:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1521:9:14","nodeType":"YulIdentifier","src":"1521:9:14"},{"kind":"number","nativeSrc":"1532:2:14","nodeType":"YulLiteral","src":"1532:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1517:3:14","nodeType":"YulIdentifier","src":"1517:3:14"},"nativeSrc":"1517:18:14","nodeType":"YulFunctionCall","src":"1517:18:14"},{"kind":"number","nativeSrc":"1537:2:14","nodeType":"YulLiteral","src":"1537:2:14","type":"","value":"30"}],"functionName":{"name":"mstore","nativeSrc":"1510:6:14","nodeType":"YulIdentifier","src":"1510:6:14"},"nativeSrc":"1510:30:14","nodeType":"YulFunctionCall","src":"1510:30:14"},"nativeSrc":"1510:30:14","nodeType":"YulExpressionStatement","src":"1510:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1560:9:14","nodeType":"YulIdentifier","src":"1560:9:14"},{"kind":"number","nativeSrc":"1571:2:14","nodeType":"YulLiteral","src":"1571:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1556:3:14","nodeType":"YulIdentifier","src":"1556:3:14"},"nativeSrc":"1556:18:14","nodeType":"YulFunctionCall","src":"1556:18:14"},{"hexValue":"49456e747279506f696e7420696e74657266616365206d69736d61746368","kind":"string","nativeSrc":"1576:32:14","nodeType":"YulLiteral","src":"1576:32:14","type":"","value":"IEntryPoint interface mismatch"}],"functionName":{"name":"mstore","nativeSrc":"1549:6:14","nodeType":"YulIdentifier","src":"1549:6:14"},"nativeSrc":"1549:60:14","nodeType":"YulFunctionCall","src":"1549:60:14"},"nativeSrc":"1549:60:14","nodeType":"YulExpressionStatement","src":"1549:60:14"},{"nativeSrc":"1618:26:14","nodeType":"YulAssignment","src":"1618:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"1630:9:14","nodeType":"YulIdentifier","src":"1630:9:14"},{"kind":"number","nativeSrc":"1641:2:14","nodeType":"YulLiteral","src":"1641:2:14","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1626:3:14","nodeType":"YulIdentifier","src":"1626:3:14"},"nativeSrc":"1626:18:14","nodeType":"YulFunctionCall","src":"1626:18:14"},"variableNames":[{"name":"tail","nativeSrc":"1618:4:14","nodeType":"YulIdentifier","src":"1618:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_7960c93a5f91001fe3b3e9a56f8716da93c29bf7a3aa7adb703901f21a308af8__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1296:354:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1447:9:14","nodeType":"YulTypedName","src":"1447:9:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1461:4:14","nodeType":"YulTypedName","src":"1461:4:14","type":""}],"src":"1296:354:14"}]},"contents":"{\n    { }\n    function validator_revert_contract_IEntryPoint(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IEntryPoint_$1024t_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_IEntryPoint(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_contract_IEntryPoint(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_7960c93a5f91001fe3b3e9a56f8716da93c29bf7a3aa7adb703901f21a308af8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"IEntryPoint interface mismatch\")\n        tail := add(headStart, 96)\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60a06040523480156200001157600080fd5b5060405162001187380380620011878339810160408190526200003491620001ca565b8133806200005d57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6200006881620000a1565b506200007481620000f1565b6001600160a01b03908116608052600180546001600160a01b031916929091169190911790555062000234565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516301ffc9a760e01b815263122a0e9b60e31b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa1580156200013d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000163919062000209565b620001b15760405162461bcd60e51b815260206004820152601e60248201527f49456e747279506f696e7420696e74657266616365206d69736d617463680000604482015260640162000054565b50565b6001600160a01b0381168114620001b157600080fd5b60008060408385031215620001de57600080fd5b8251620001eb81620001b4565b6020840151909250620001fe81620001b4565b809150509250929050565b6000602082840312156200021c57600080fd5b815180151581146200022d57600080fd5b9392505050565b608051610eff62000288600039600081816101e7015281816102cb015281816103620152818161042d015281816104c701528181610537015281816105c40152818161068c01526107160152610eff6000f3fe6080604052600436106100dd5760003560e01c8063b0d691fe1161007f578063c399ec8811610059578063c399ec881461023e578063d0e30db014610261578063f2fde38b14610269578063f74d54801461028957600080fd5b8063b0d691fe146101d5578063bb9fe6bf14610209578063c23a5cea1461021e57600080fd5b806356a1c701116100bb57806356a1c7011461014e578063715018a61461016e5780637c627b21146101835780638da5cb5b146101a357600080fd5b80630396cb60146100e2578063205c2878146100f757806352b7512c14610117575b600080fd5b6100f56100f0366004610c49565b6102a9565b005b34801561010357600080fd5b506100f5610112366004610c8b565b610334565b34801561012357600080fd5b50610137610132366004610cb7565b6103a6565b604051610145929190610d0b565b60405180910390f35b34801561015a57600080fd5b506100f5610169366004610d60565b6103c9565b34801561017a57600080fd5b506100f56103f3565b34801561018f57600080fd5b506100f561019e366004610d7d565b610407565b3480156101af57600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610145565b3480156101e157600080fd5b506101bd7f000000000000000000000000000000000000000000000000000000000000000081565b34801561021557600080fd5b506100f5610423565b34801561022a57600080fd5b506100f5610239366004610d60565b6104a0565b34801561024a57600080fd5b5061025361051f565b604051908152602001610145565b6100f56105af565b34801561027557600080fd5b506100f5610284366004610d60565b610611565b34801561029557600080fd5b506001546101bd906001600160a01b031681565b6102b1610654565b604051621cb65b60e51b815263ffffffff821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690630396cb609034906024016000604051808303818588803b15801561031857600080fd5b505af115801561032c573d6000803e3d6000fd5b505050505050565b61033c610654565b60405163040b850f60e31b81526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063205c287890604401600060405180830381600087803b15801561031857600080fd5b606060006103b2610681565b6103bd8585856106f1565b91509150935093915050565b6103d1610654565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6103fb610654565b61040560006109bc565b565b61040f610681565b61041c8585858585610a0c565b5050505050565b61042b610654565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561048657600080fd5b505af115801561049a573d6000803e3d6000fd5b50505050565b6104a8610654565b60405163611d2e7560e11b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063c23a5cea90602401600060405180830381600087803b15801561050b57600080fd5b505af115801561041c573d6000803e3d6000fd5b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610586573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105aa9190610e15565b905090565b60405163b760faf960e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b760faf99034906024016000604051808303818588803b15801561050b57600080fd5b610619610654565b6001600160a01b03811661064857604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b610651816109bc565b50565b6000546001600160a01b031633146104055760405163118cdaa760e01b815233600482015260240161063f565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104055760405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b604482015260640161063f565b6040516370a0823160e01b815230600482015260609060009083906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801561075d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107819190610e15565b10156107cf5760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e74206465706f73697420666f722067617300000000604482015260640161063f565b60006107de60e0870187610e2e565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050825192935050604190911490506108695760405162461bcd60e51b815260206004820152601f60248201527f496e76616c6964207061796d6173746572416e6444617461206c656e67746800604482015260640161063f565b6040805181815260608101825260009160208201818036833701905050905060005b60408110156108ec57826108a0826001610e7c565b815181106108b0576108b0610e9d565b602001015160f81c60f81b8282815181106108cd576108cd610e9d565b60200101906001600160f81b031916908160001a90535060010161088b565b506040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101879052600090605c0160408051601f198184030181529190528051602090910120905060006109498284610a44565b6001549091506001600160a01b0380831691161461099d5760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b604482015260640161063f565b5050604080516000808252602082019092529890975095505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60405162461bcd60e51b815260206004820152600d60248201526c6d757374206f7665727269646560981b604482015260640161063f565b600080600080610a548686610a70565b925092509250610a648282610abd565b50909150505b92915050565b60008060008351604103610aaa5760208401516040850151606086015160001a610a9c88828585610b7a565b955095509550505050610ab6565b50508151600091506002905b9250925092565b6000826003811115610ad157610ad1610eb3565b03610ada575050565b6001826003811115610aee57610aee610eb3565b03610b0c5760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115610b2057610b20610eb3565b03610b415760405163fce698f760e01b81526004810182905260240161063f565b6003826003811115610b5557610b55610eb3565b03610b76576040516335e2f38360e21b81526004810182905260240161063f565b5050565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610bb55750600091506003905082610c3f565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610c09573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610c3557506000925060019150829050610c3f565b9250600091508190505b9450945094915050565b600060208284031215610c5b57600080fd5b813563ffffffff81168114610c6f57600080fd5b9392505050565b6001600160a01b038116811461065157600080fd5b60008060408385031215610c9e57600080fd5b8235610ca981610c76565b946020939093013593505050565b600080600060608486031215610ccc57600080fd5b833567ffffffffffffffff811115610ce357600080fd5b84016101208187031215610cf657600080fd5b95602085013595506040909401359392505050565b604081526000835180604084015260005b81811015610d395760208187018101516060868401015201610d1c565b506000606082850101526060601f19601f8301168401019150508260208301529392505050565b600060208284031215610d7257600080fd5b8135610c6f81610c76565b600080600080600060808688031215610d9557600080fd5b853560038110610da457600080fd5b9450602086013567ffffffffffffffff80821115610dc157600080fd5b818801915088601f830112610dd557600080fd5b813581811115610de457600080fd5b896020828501011115610df657600080fd5b9699602092909201985095966040810135965060600135945092505050565b600060208284031215610e2757600080fd5b5051919050565b6000808335601e19843603018112610e4557600080fd5b83018035915067ffffffffffffffff821115610e6057600080fd5b602001915036819003821315610e7557600080fd5b9250929050565b80820180821115610a6a57634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fdfea264697066735822122095a9b5a285b04073395775de6699c3c0ad54607eb7c6ed52367b02deefa665ad64736f6c63430008170033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1187 CODESIZE SUB DUP1 PUSH3 0x1187 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1CA JUMP JUMPDEST DUP2 CALLER DUP1 PUSH3 0x5D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x68 DUP2 PUSH3 0xA1 JUMP JUMPDEST POP PUSH3 0x74 DUP2 PUSH3 0xF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x80 MSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH3 0x234 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH4 0x122A0E9B PUSH1 0xE3 SHL PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x13D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x163 SWAP2 SWAP1 PUSH3 0x209 JUMP JUMPDEST PUSH3 0x1B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x49456E747279506F696E7420696E74657266616365206D69736D617463680000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x54 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x1B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x1EB DUP2 PUSH3 0x1B4 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH3 0x1FE DUP2 PUSH3 0x1B4 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0x22D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0xEFF PUSH3 0x288 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x1E7 ADD MSTORE DUP2 DUP2 PUSH2 0x2CB ADD MSTORE DUP2 DUP2 PUSH2 0x362 ADD MSTORE DUP2 DUP2 PUSH2 0x42D ADD MSTORE DUP2 DUP2 PUSH2 0x4C7 ADD MSTORE DUP2 DUP2 PUSH2 0x537 ADD MSTORE DUP2 DUP2 PUSH2 0x5C4 ADD MSTORE DUP2 DUP2 PUSH2 0x68C ADD MSTORE PUSH2 0x716 ADD MSTORE PUSH2 0xEFF PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB0D691FE GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xC399EC88 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC399EC88 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xF74D5480 EQ PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0xBB9FE6BF EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xC23A5CEA EQ PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x56A1C701 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x56A1C701 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x7C627B21 EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x396CB60 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x205C2878 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x52B7512C EQ PUSH2 0x117 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF5 PUSH2 0xF0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC49 JUMP JUMPDEST PUSH2 0x2A9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x112 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8B JUMP JUMPDEST PUSH2 0x334 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x137 PUSH2 0x132 CALLDATASIZE PUSH1 0x4 PUSH2 0xCB7 JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x145 SWAP3 SWAP2 SWAP1 PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x169 CALLDATASIZE PUSH1 0x4 PUSH2 0xD60 JUMP JUMPDEST PUSH2 0x3C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x3F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x19E CALLDATASIZE PUSH1 0x4 PUSH2 0xD7D JUMP JUMPDEST PUSH2 0x407 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x145 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x423 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0xD60 JUMP JUMPDEST PUSH2 0x4A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x51F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x145 JUMP JUMPDEST PUSH2 0xF5 PUSH2 0x5AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x284 CALLDATASIZE PUSH1 0x4 PUSH2 0xD60 JUMP JUMPDEST PUSH2 0x611 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x1BD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0x654 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x1CB65B PUSH1 0xE5 SHL DUP2 MSTORE PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x396CB60 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x32C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x33C PUSH2 0x654 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x40B850F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x205C2878 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x3B2 PUSH2 0x681 JUMP JUMPDEST PUSH2 0x3BD DUP6 DUP6 DUP6 PUSH2 0x6F1 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3D1 PUSH2 0x654 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3FB PUSH2 0x654 JUMP JUMPDEST PUSH2 0x405 PUSH1 0x0 PUSH2 0x9BC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x40F PUSH2 0x681 JUMP JUMPDEST PUSH2 0x41C DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xA0C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x42B PUSH2 0x654 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB9FE6BF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x49A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x4A8 PUSH2 0x654 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x611D2E75 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xC23A5CEA SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x50B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x41C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x586 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5AA SWAP2 SWAP1 PUSH2 0xE15 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB760FAF9 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB760FAF9 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x50B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x619 PUSH2 0x654 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x648 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x651 DUP2 PUSH2 0x9BC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x63F JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14D95B99195C881B9BDD08115B9D1C9E541BDA5B9D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x60 SWAP1 PUSH1 0x0 SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x781 SWAP2 SWAP1 PUSH2 0xE15 JUMP JUMPDEST LT ISZERO PUSH2 0x7CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206465706F73697420666F722067617300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7DE PUSH1 0xE0 DUP8 ADD DUP8 PUSH2 0xE2E JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP DUP3 MLOAD SWAP3 SWAP4 POP POP PUSH1 0x41 SWAP1 SWAP2 EQ SWAP1 POP PUSH2 0x869 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207061796D6173746572416E6444617461206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP2 DUP2 MSTORE PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8EC JUMPI DUP3 PUSH2 0x8A0 DUP3 PUSH1 0x1 PUSH2 0xE7C JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x8B0 JUMPI PUSH2 0x8B0 PUSH2 0xE9D JUMP JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x8CD JUMPI PUSH2 0x8CD PUSH2 0xE9D JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x1 ADD PUSH2 0x88B JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x949 DUP3 DUP5 PUSH2 0xA44 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP2 AND EQ PUSH2 0x99D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x63F JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP9 SWAP1 SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x6D757374206F76657272696465 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xA54 DUP7 DUP7 PUSH2 0xA70 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xA64 DUP3 DUP3 PUSH2 0xABD JUMP JUMPDEST POP SWAP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0xAAA JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0xA9C DUP9 DUP3 DUP6 DUP6 PUSH2 0xB7A JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0xAB6 JUMP JUMPDEST POP POP DUP2 MLOAD PUSH1 0x0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xAD1 JUMPI PUSH2 0xAD1 PUSH2 0xEB3 JUMP JUMPDEST SUB PUSH2 0xADA JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xAEE JUMPI PUSH2 0xAEE PUSH2 0xEB3 JUMP JUMPDEST SUB PUSH2 0xB0C JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB20 JUMPI PUSH2 0xB20 PUSH2 0xEB3 JUMP JUMPDEST SUB PUSH2 0xB41 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB55 JUMPI PUSH2 0xB55 PUSH2 0xEB3 JUMP JUMPDEST SUB PUSH2 0xB76 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x63F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0xBB5 JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0xC3F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC09 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC35 JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0xC3F JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xC6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x651 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xCA9 DUP2 PUSH2 0xC76 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH2 0x120 DUP2 DUP8 SUB SLT ISZERO PUSH2 0xCF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD39 JUMPI PUSH1 0x20 DUP2 DUP8 ADD DUP2 ADD MLOAD PUSH1 0x60 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0xD1C JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x60 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC6F DUP2 PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0xDA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xDC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xDE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xDF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP9 POP SWAP6 SWAP7 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP7 POP PUSH1 0x60 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0xE45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0xE75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xA6A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0xA9 0xB5 LOG2 DUP6 0xB0 BLOCKHASH PUSH20 0x395775DE6699C3C0AD54607EB7C6ED52367B02DE 0xEF 0xA6 PUSH6 0xAD64736F6C63 NUMBER STOP ADDMOD OR STOP CALLER ","sourceMap":"293:2819:13:-:0;;;714:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;789:11;950:10:0;;1269:95:9;;1322:31;;-1:-1:-1;;;1322:31:9;;1350:1;1322:31;;;745:51:14;718:18;;1322:31:9;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;972:41:0::1;1001:11:::0;972:28:::1;:41::i;:::-;-1:-1:-1::0;;;;;1023:24:0;;::::1;;::::0;812:13:13::1;:30:::0;;-1:-1:-1;;;;;;812:30:13::1;::::0;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;293:2819:13;;2912:187:9;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:9;;;-1:-1:-1;;;;;;3020:17:9;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;1173:218:0:-;1271:78;;-1:-1:-1;;;1271:78:0;;-1:-1:-1;;;1271:78:0;;;951:52:14;-1:-1:-1;;;;;1271:47:0;;;;;924:18:14;;1271:78:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1263:121;;;;-1:-1:-1;;;1263:121:0;;1498:2:14;1263:121:0;;;1480:21:14;1537:2;1517:18;;;1510:30;1576:32;1556:18;;;1549:60;1626:18;;1263:121:0;1296:354:14;1263:121:0;1173:218;:::o;14:144:14:-;-1:-1:-1;;;;;102:31:14;;92:42;;82:70;;148:1;145;138:12;163:431;262:6;270;323:2;311:9;302:7;298:23;294:32;291:52;;;339:1;336;329:12;291:52;371:9;365:16;390:44;428:5;390:44;:::i;:::-;503:2;488:18;;482:25;453:5;;-1:-1:-1;516:46:14;482:25;516:46;:::i;:::-;581:7;571:17;;;163:431;;;;;:::o;1014:277::-;1081:6;1134:2;1122:9;1113:7;1109:23;1105:32;1102:52;;;1150:1;1147;1140:12;1102:52;1182:9;1176:16;1235:5;1228:13;1221:21;1214:5;1211:32;1201:60;;1257:1;1254;1247:12;1201:60;1280:5;1014:277;-1:-1:-1;;;1014:277:14:o;1296:354::-;293:2819:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_1291":{"entryPoint":1620,"id":1291,"parameterSlots":0,"returnSlots":0},"@_msgSender_1366":{"entryPoint":null,"id":1366,"parameterSlots":0,"returnSlots":1},"@_postOp_158":{"entryPoint":2572,"id":158,"parameterSlots":5,"returnSlots":0},"@_requireFromEntryPoint_269":{"entryPoint":1665,"id":269,"parameterSlots":0,"returnSlots":0},"@_throwError_1731":{"entryPoint":2749,"id":1731,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_1353":{"entryPoint":2492,"id":1353,"parameterSlots":1,"returnSlots":0},"@_validatePaymasterUserOp_1894":{"entryPoint":1777,"id":1894,"parameterSlots":3,"returnSlots":2},"@addStake_211":{"entryPoint":681,"id":211,"parameterSlots":1,"returnSlots":0},"@deposit_175":{"entryPoint":1455,"id":175,"parameterSlots":0,"returnSlots":0},"@entryPoint_14":{"entryPoint":null,"id":14,"parameterSlots":0,"returnSlots":0},"@getDeposit_226":{"entryPoint":1311,"id":226,"parameterSlots":0,"returnSlots":1},"@owner_1274":{"entryPoint":null,"id":1274,"parameterSlots":0,"returnSlots":1},"@postOp_134":{"entryPoint":1031,"id":134,"parameterSlots":5,"returnSlots":0},"@recover_1488":{"entryPoint":2628,"id":1488,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_1305":{"entryPoint":1011,"id":1305,"parameterSlots":0,"returnSlots":0},"@setTrustedSigner_1786":{"entryPoint":969,"id":1786,"parameterSlots":1,"returnSlots":0},"@transferOwnership_1333":{"entryPoint":1553,"id":1333,"parameterSlots":1,"returnSlots":0},"@trustedSigner_1756":{"entryPoint":null,"id":1756,"parameterSlots":0,"returnSlots":0},"@tryRecover_1458":{"entryPoint":2672,"id":1458,"parameterSlots":2,"returnSlots":3},"@tryRecover_1646":{"entryPoint":2938,"id":1646,"parameterSlots":4,"returnSlots":3},"@unlockStake_238":{"entryPoint":1059,"id":238,"parameterSlots":0,"returnSlots":0},"@validatePaymasterUserOp_94":{"entryPoint":934,"id":94,"parameterSlots":3,"returnSlots":2},"@withdrawStake_253":{"entryPoint":1184,"id":253,"parameterSlots":1,"returnSlots":0},"@withdrawTo_193":{"entryPoint":820,"id":193,"parameterSlots":2,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":3424,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payable":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payablet_uint256":{"entryPoint":3211,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_enum$_PostOpMode_$1051t_bytes_calldata_ptrt_uint256t_uint256":{"entryPoint":3453,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_struct$_PackedUserOperation_$1206_calldata_ptrt_bytes32t_uint256":{"entryPoint":3255,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":3605,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint32":{"entryPoint":3145,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":3339,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IEntryPoint_$1024__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_420570715e672bbeddfc22266e08fcd33e8d963e605c0bdbd014e577666917b8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cfe5951392790b135f98d77ba09049bfbc1a1776c53987baf509c661787d5e3b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":3630,"id":null,"parameterSlots":2,"returnSlots":2},"checked_add_t_uint256":{"entryPoint":3708,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x21":{"entryPoint":3763,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":3741,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address_payable":{"entryPoint":3190,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:8736:14","nodeType":"YulBlock","src":"0:8736:14","statements":[{"nativeSrc":"6:3:14","nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nativeSrc":"83:207:14","nodeType":"YulBlock","src":"83:207:14","statements":[{"body":{"nativeSrc":"129:16:14","nodeType":"YulBlock","src":"129:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"138:1:14","nodeType":"YulLiteral","src":"138:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"141:1:14","nodeType":"YulLiteral","src":"141:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"131:6:14","nodeType":"YulIdentifier","src":"131:6:14"},"nativeSrc":"131:12:14","nodeType":"YulFunctionCall","src":"131:12:14"},"nativeSrc":"131:12:14","nodeType":"YulExpressionStatement","src":"131:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"104:7:14","nodeType":"YulIdentifier","src":"104:7:14"},{"name":"headStart","nativeSrc":"113:9:14","nodeType":"YulIdentifier","src":"113:9:14"}],"functionName":{"name":"sub","nativeSrc":"100:3:14","nodeType":"YulIdentifier","src":"100:3:14"},"nativeSrc":"100:23:14","nodeType":"YulFunctionCall","src":"100:23:14"},{"kind":"number","nativeSrc":"125:2:14","nodeType":"YulLiteral","src":"125:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"96:3:14","nodeType":"YulIdentifier","src":"96:3:14"},"nativeSrc":"96:32:14","nodeType":"YulFunctionCall","src":"96:32:14"},"nativeSrc":"93:52:14","nodeType":"YulIf","src":"93:52:14"},{"nativeSrc":"154:36:14","nodeType":"YulVariableDeclaration","src":"154:36:14","value":{"arguments":[{"name":"headStart","nativeSrc":"180:9:14","nodeType":"YulIdentifier","src":"180:9:14"}],"functionName":{"name":"calldataload","nativeSrc":"167:12:14","nodeType":"YulIdentifier","src":"167:12:14"},"nativeSrc":"167:23:14","nodeType":"YulFunctionCall","src":"167:23:14"},"variables":[{"name":"value","nativeSrc":"158:5:14","nodeType":"YulTypedName","src":"158:5:14","type":""}]},{"body":{"nativeSrc":"244:16:14","nodeType":"YulBlock","src":"244:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"253:1:14","nodeType":"YulLiteral","src":"253:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"256:1:14","nodeType":"YulLiteral","src":"256:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"246:6:14","nodeType":"YulIdentifier","src":"246:6:14"},"nativeSrc":"246:12:14","nodeType":"YulFunctionCall","src":"246:12:14"},"nativeSrc":"246:12:14","nodeType":"YulExpressionStatement","src":"246:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"212:5:14","nodeType":"YulIdentifier","src":"212:5:14"},{"arguments":[{"name":"value","nativeSrc":"223:5:14","nodeType":"YulIdentifier","src":"223:5:14"},{"kind":"number","nativeSrc":"230:10:14","nodeType":"YulLiteral","src":"230:10:14","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nativeSrc":"219:3:14","nodeType":"YulIdentifier","src":"219:3:14"},"nativeSrc":"219:22:14","nodeType":"YulFunctionCall","src":"219:22:14"}],"functionName":{"name":"eq","nativeSrc":"209:2:14","nodeType":"YulIdentifier","src":"209:2:14"},"nativeSrc":"209:33:14","nodeType":"YulFunctionCall","src":"209:33:14"}],"functionName":{"name":"iszero","nativeSrc":"202:6:14","nodeType":"YulIdentifier","src":"202:6:14"},"nativeSrc":"202:41:14","nodeType":"YulFunctionCall","src":"202:41:14"},"nativeSrc":"199:61:14","nodeType":"YulIf","src":"199:61:14"},{"nativeSrc":"269:15:14","nodeType":"YulAssignment","src":"269:15:14","value":{"name":"value","nativeSrc":"279:5:14","nodeType":"YulIdentifier","src":"279:5:14"},"variableNames":[{"name":"value0","nativeSrc":"269:6:14","nodeType":"YulIdentifier","src":"269:6:14"}]}]},"name":"abi_decode_tuple_t_uint32","nativeSrc":"14:276:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"49:9:14","nodeType":"YulTypedName","src":"49:9:14","type":""},{"name":"dataEnd","nativeSrc":"60:7:14","nodeType":"YulTypedName","src":"60:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"72:6:14","nodeType":"YulTypedName","src":"72:6:14","type":""}],"src":"14:276:14"},{"body":{"nativeSrc":"348:86:14","nodeType":"YulBlock","src":"348:86:14","statements":[{"body":{"nativeSrc":"412:16:14","nodeType":"YulBlock","src":"412:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"421:1:14","nodeType":"YulLiteral","src":"421:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"424:1:14","nodeType":"YulLiteral","src":"424:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"414:6:14","nodeType":"YulIdentifier","src":"414:6:14"},"nativeSrc":"414:12:14","nodeType":"YulFunctionCall","src":"414:12:14"},"nativeSrc":"414:12:14","nodeType":"YulExpressionStatement","src":"414:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"371:5:14","nodeType":"YulIdentifier","src":"371:5:14"},{"arguments":[{"name":"value","nativeSrc":"382:5:14","nodeType":"YulIdentifier","src":"382:5:14"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"397:3:14","nodeType":"YulLiteral","src":"397:3:14","type":"","value":"160"},{"kind":"number","nativeSrc":"402:1:14","nodeType":"YulLiteral","src":"402:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"393:3:14","nodeType":"YulIdentifier","src":"393:3:14"},"nativeSrc":"393:11:14","nodeType":"YulFunctionCall","src":"393:11:14"},{"kind":"number","nativeSrc":"406:1:14","nodeType":"YulLiteral","src":"406:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"389:3:14","nodeType":"YulIdentifier","src":"389:3:14"},"nativeSrc":"389:19:14","nodeType":"YulFunctionCall","src":"389:19:14"}],"functionName":{"name":"and","nativeSrc":"378:3:14","nodeType":"YulIdentifier","src":"378:3:14"},"nativeSrc":"378:31:14","nodeType":"YulFunctionCall","src":"378:31:14"}],"functionName":{"name":"eq","nativeSrc":"368:2:14","nodeType":"YulIdentifier","src":"368:2:14"},"nativeSrc":"368:42:14","nodeType":"YulFunctionCall","src":"368:42:14"}],"functionName":{"name":"iszero","nativeSrc":"361:6:14","nodeType":"YulIdentifier","src":"361:6:14"},"nativeSrc":"361:50:14","nodeType":"YulFunctionCall","src":"361:50:14"},"nativeSrc":"358:70:14","nodeType":"YulIf","src":"358:70:14"}]},"name":"validator_revert_address_payable","nativeSrc":"295:139:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"337:5:14","nodeType":"YulTypedName","src":"337:5:14","type":""}],"src":"295:139:14"},{"body":{"nativeSrc":"534:236:14","nodeType":"YulBlock","src":"534:236:14","statements":[{"body":{"nativeSrc":"580:16:14","nodeType":"YulBlock","src":"580:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"589:1:14","nodeType":"YulLiteral","src":"589:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"592:1:14","nodeType":"YulLiteral","src":"592:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"582:6:14","nodeType":"YulIdentifier","src":"582:6:14"},"nativeSrc":"582:12:14","nodeType":"YulFunctionCall","src":"582:12:14"},"nativeSrc":"582:12:14","nodeType":"YulExpressionStatement","src":"582:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"555:7:14","nodeType":"YulIdentifier","src":"555:7:14"},{"name":"headStart","nativeSrc":"564:9:14","nodeType":"YulIdentifier","src":"564:9:14"}],"functionName":{"name":"sub","nativeSrc":"551:3:14","nodeType":"YulIdentifier","src":"551:3:14"},"nativeSrc":"551:23:14","nodeType":"YulFunctionCall","src":"551:23:14"},{"kind":"number","nativeSrc":"576:2:14","nodeType":"YulLiteral","src":"576:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"547:3:14","nodeType":"YulIdentifier","src":"547:3:14"},"nativeSrc":"547:32:14","nodeType":"YulFunctionCall","src":"547:32:14"},"nativeSrc":"544:52:14","nodeType":"YulIf","src":"544:52:14"},{"nativeSrc":"605:36:14","nodeType":"YulVariableDeclaration","src":"605:36:14","value":{"arguments":[{"name":"headStart","nativeSrc":"631:9:14","nodeType":"YulIdentifier","src":"631:9:14"}],"functionName":{"name":"calldataload","nativeSrc":"618:12:14","nodeType":"YulIdentifier","src":"618:12:14"},"nativeSrc":"618:23:14","nodeType":"YulFunctionCall","src":"618:23:14"},"variables":[{"name":"value","nativeSrc":"609:5:14","nodeType":"YulTypedName","src":"609:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"683:5:14","nodeType":"YulIdentifier","src":"683:5:14"}],"functionName":{"name":"validator_revert_address_payable","nativeSrc":"650:32:14","nodeType":"YulIdentifier","src":"650:32:14"},"nativeSrc":"650:39:14","nodeType":"YulFunctionCall","src":"650:39:14"},"nativeSrc":"650:39:14","nodeType":"YulExpressionStatement","src":"650:39:14"},{"nativeSrc":"698:15:14","nodeType":"YulAssignment","src":"698:15:14","value":{"name":"value","nativeSrc":"708:5:14","nodeType":"YulIdentifier","src":"708:5:14"},"variableNames":[{"name":"value0","nativeSrc":"698:6:14","nodeType":"YulIdentifier","src":"698:6:14"}]},{"nativeSrc":"722:42:14","nodeType":"YulAssignment","src":"722:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"749:9:14","nodeType":"YulIdentifier","src":"749:9:14"},{"kind":"number","nativeSrc":"760:2:14","nodeType":"YulLiteral","src":"760:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"745:3:14","nodeType":"YulIdentifier","src":"745:3:14"},"nativeSrc":"745:18:14","nodeType":"YulFunctionCall","src":"745:18:14"}],"functionName":{"name":"calldataload","nativeSrc":"732:12:14","nodeType":"YulIdentifier","src":"732:12:14"},"nativeSrc":"732:32:14","nodeType":"YulFunctionCall","src":"732:32:14"},"variableNames":[{"name":"value1","nativeSrc":"722:6:14","nodeType":"YulIdentifier","src":"722:6:14"}]}]},"name":"abi_decode_tuple_t_address_payablet_uint256","nativeSrc":"439:331:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"492:9:14","nodeType":"YulTypedName","src":"492:9:14","type":""},{"name":"dataEnd","nativeSrc":"503:7:14","nodeType":"YulTypedName","src":"503:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"515:6:14","nodeType":"YulTypedName","src":"515:6:14","type":""},{"name":"value1","nativeSrc":"523:6:14","nodeType":"YulTypedName","src":"523:6:14","type":""}],"src":"439:331:14"},{"body":{"nativeSrc":"918:392:14","nodeType":"YulBlock","src":"918:392:14","statements":[{"body":{"nativeSrc":"964:16:14","nodeType":"YulBlock","src":"964:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"973:1:14","nodeType":"YulLiteral","src":"973:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"976:1:14","nodeType":"YulLiteral","src":"976:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"966:6:14","nodeType":"YulIdentifier","src":"966:6:14"},"nativeSrc":"966:12:14","nodeType":"YulFunctionCall","src":"966:12:14"},"nativeSrc":"966:12:14","nodeType":"YulExpressionStatement","src":"966:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"939:7:14","nodeType":"YulIdentifier","src":"939:7:14"},{"name":"headStart","nativeSrc":"948:9:14","nodeType":"YulIdentifier","src":"948:9:14"}],"functionName":{"name":"sub","nativeSrc":"935:3:14","nodeType":"YulIdentifier","src":"935:3:14"},"nativeSrc":"935:23:14","nodeType":"YulFunctionCall","src":"935:23:14"},{"kind":"number","nativeSrc":"960:2:14","nodeType":"YulLiteral","src":"960:2:14","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"931:3:14","nodeType":"YulIdentifier","src":"931:3:14"},"nativeSrc":"931:32:14","nodeType":"YulFunctionCall","src":"931:32:14"},"nativeSrc":"928:52:14","nodeType":"YulIf","src":"928:52:14"},{"nativeSrc":"989:37:14","nodeType":"YulVariableDeclaration","src":"989:37:14","value":{"arguments":[{"name":"headStart","nativeSrc":"1016:9:14","nodeType":"YulIdentifier","src":"1016:9:14"}],"functionName":{"name":"calldataload","nativeSrc":"1003:12:14","nodeType":"YulIdentifier","src":"1003:12:14"},"nativeSrc":"1003:23:14","nodeType":"YulFunctionCall","src":"1003:23:14"},"variables":[{"name":"offset","nativeSrc":"993:6:14","nodeType":"YulTypedName","src":"993:6:14","type":""}]},{"body":{"nativeSrc":"1069:16:14","nodeType":"YulBlock","src":"1069:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1078:1:14","nodeType":"YulLiteral","src":"1078:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"1081:1:14","nodeType":"YulLiteral","src":"1081:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1071:6:14","nodeType":"YulIdentifier","src":"1071:6:14"},"nativeSrc":"1071:12:14","nodeType":"YulFunctionCall","src":"1071:12:14"},"nativeSrc":"1071:12:14","nodeType":"YulExpressionStatement","src":"1071:12:14"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"1041:6:14","nodeType":"YulIdentifier","src":"1041:6:14"},{"kind":"number","nativeSrc":"1049:18:14","nodeType":"YulLiteral","src":"1049:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1038:2:14","nodeType":"YulIdentifier","src":"1038:2:14"},"nativeSrc":"1038:30:14","nodeType":"YulFunctionCall","src":"1038:30:14"},"nativeSrc":"1035:50:14","nodeType":"YulIf","src":"1035:50:14"},{"nativeSrc":"1094:32:14","nodeType":"YulVariableDeclaration","src":"1094:32:14","value":{"arguments":[{"name":"headStart","nativeSrc":"1108:9:14","nodeType":"YulIdentifier","src":"1108:9:14"},{"name":"offset","nativeSrc":"1119:6:14","nodeType":"YulIdentifier","src":"1119:6:14"}],"functionName":{"name":"add","nativeSrc":"1104:3:14","nodeType":"YulIdentifier","src":"1104:3:14"},"nativeSrc":"1104:22:14","nodeType":"YulFunctionCall","src":"1104:22:14"},"variables":[{"name":"_1","nativeSrc":"1098:2:14","nodeType":"YulTypedName","src":"1098:2:14","type":""}]},{"body":{"nativeSrc":"1165:16:14","nodeType":"YulBlock","src":"1165:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1174:1:14","nodeType":"YulLiteral","src":"1174:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"1177:1:14","nodeType":"YulLiteral","src":"1177:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1167:6:14","nodeType":"YulIdentifier","src":"1167:6:14"},"nativeSrc":"1167:12:14","nodeType":"YulFunctionCall","src":"1167:12:14"},"nativeSrc":"1167:12:14","nodeType":"YulExpressionStatement","src":"1167:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1146:7:14","nodeType":"YulIdentifier","src":"1146:7:14"},{"name":"_1","nativeSrc":"1155:2:14","nodeType":"YulIdentifier","src":"1155:2:14"}],"functionName":{"name":"sub","nativeSrc":"1142:3:14","nodeType":"YulIdentifier","src":"1142:3:14"},"nativeSrc":"1142:16:14","nodeType":"YulFunctionCall","src":"1142:16:14"},{"kind":"number","nativeSrc":"1160:3:14","nodeType":"YulLiteral","src":"1160:3:14","type":"","value":"288"}],"functionName":{"name":"slt","nativeSrc":"1138:3:14","nodeType":"YulIdentifier","src":"1138:3:14"},"nativeSrc":"1138:26:14","nodeType":"YulFunctionCall","src":"1138:26:14"},"nativeSrc":"1135:46:14","nodeType":"YulIf","src":"1135:46:14"},{"nativeSrc":"1190:12:14","nodeType":"YulAssignment","src":"1190:12:14","value":{"name":"_1","nativeSrc":"1200:2:14","nodeType":"YulIdentifier","src":"1200:2:14"},"variableNames":[{"name":"value0","nativeSrc":"1190:6:14","nodeType":"YulIdentifier","src":"1190:6:14"}]},{"nativeSrc":"1211:42:14","nodeType":"YulAssignment","src":"1211:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1238:9:14","nodeType":"YulIdentifier","src":"1238:9:14"},{"kind":"number","nativeSrc":"1249:2:14","nodeType":"YulLiteral","src":"1249:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1234:3:14","nodeType":"YulIdentifier","src":"1234:3:14"},"nativeSrc":"1234:18:14","nodeType":"YulFunctionCall","src":"1234:18:14"}],"functionName":{"name":"calldataload","nativeSrc":"1221:12:14","nodeType":"YulIdentifier","src":"1221:12:14"},"nativeSrc":"1221:32:14","nodeType":"YulFunctionCall","src":"1221:32:14"},"variableNames":[{"name":"value1","nativeSrc":"1211:6:14","nodeType":"YulIdentifier","src":"1211:6:14"}]},{"nativeSrc":"1262:42:14","nodeType":"YulAssignment","src":"1262:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1289:9:14","nodeType":"YulIdentifier","src":"1289:9:14"},{"kind":"number","nativeSrc":"1300:2:14","nodeType":"YulLiteral","src":"1300:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1285:3:14","nodeType":"YulIdentifier","src":"1285:3:14"},"nativeSrc":"1285:18:14","nodeType":"YulFunctionCall","src":"1285:18:14"}],"functionName":{"name":"calldataload","nativeSrc":"1272:12:14","nodeType":"YulIdentifier","src":"1272:12:14"},"nativeSrc":"1272:32:14","nodeType":"YulFunctionCall","src":"1272:32:14"},"variableNames":[{"name":"value2","nativeSrc":"1262:6:14","nodeType":"YulIdentifier","src":"1262:6:14"}]}]},"name":"abi_decode_tuple_t_struct$_PackedUserOperation_$1206_calldata_ptrt_bytes32t_uint256","nativeSrc":"775:535:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"868:9:14","nodeType":"YulTypedName","src":"868:9:14","type":""},{"name":"dataEnd","nativeSrc":"879:7:14","nodeType":"YulTypedName","src":"879:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"891:6:14","nodeType":"YulTypedName","src":"891:6:14","type":""},{"name":"value1","nativeSrc":"899:6:14","nodeType":"YulTypedName","src":"899:6:14","type":""},{"name":"value2","nativeSrc":"907:6:14","nodeType":"YulTypedName","src":"907:6:14","type":""}],"src":"775:535:14"},{"body":{"nativeSrc":"1462:455:14","nodeType":"YulBlock","src":"1462:455:14","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1479:9:14","nodeType":"YulIdentifier","src":"1479:9:14"},{"kind":"number","nativeSrc":"1490:2:14","nodeType":"YulLiteral","src":"1490:2:14","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"1472:6:14","nodeType":"YulIdentifier","src":"1472:6:14"},"nativeSrc":"1472:21:14","nodeType":"YulFunctionCall","src":"1472:21:14"},"nativeSrc":"1472:21:14","nodeType":"YulExpressionStatement","src":"1472:21:14"},{"nativeSrc":"1502:27:14","nodeType":"YulVariableDeclaration","src":"1502:27:14","value":{"arguments":[{"name":"value0","nativeSrc":"1522:6:14","nodeType":"YulIdentifier","src":"1522:6:14"}],"functionName":{"name":"mload","nativeSrc":"1516:5:14","nodeType":"YulIdentifier","src":"1516:5:14"},"nativeSrc":"1516:13:14","nodeType":"YulFunctionCall","src":"1516:13:14"},"variables":[{"name":"length","nativeSrc":"1506:6:14","nodeType":"YulTypedName","src":"1506:6:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1549:9:14","nodeType":"YulIdentifier","src":"1549:9:14"},{"kind":"number","nativeSrc":"1560:2:14","nodeType":"YulLiteral","src":"1560:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1545:3:14","nodeType":"YulIdentifier","src":"1545:3:14"},"nativeSrc":"1545:18:14","nodeType":"YulFunctionCall","src":"1545:18:14"},{"name":"length","nativeSrc":"1565:6:14","nodeType":"YulIdentifier","src":"1565:6:14"}],"functionName":{"name":"mstore","nativeSrc":"1538:6:14","nodeType":"YulIdentifier","src":"1538:6:14"},"nativeSrc":"1538:34:14","nodeType":"YulFunctionCall","src":"1538:34:14"},"nativeSrc":"1538:34:14","nodeType":"YulExpressionStatement","src":"1538:34:14"},{"nativeSrc":"1581:10:14","nodeType":"YulVariableDeclaration","src":"1581:10:14","value":{"kind":"number","nativeSrc":"1590:1:14","nodeType":"YulLiteral","src":"1590:1:14","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1585:1:14","nodeType":"YulTypedName","src":"1585:1:14","type":""}]},{"body":{"nativeSrc":"1652:92:14","nodeType":"YulBlock","src":"1652:92:14","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1681:9:14","nodeType":"YulIdentifier","src":"1681:9:14"},{"name":"i","nativeSrc":"1692:1:14","nodeType":"YulIdentifier","src":"1692:1:14"}],"functionName":{"name":"add","nativeSrc":"1677:3:14","nodeType":"YulIdentifier","src":"1677:3:14"},"nativeSrc":"1677:17:14","nodeType":"YulFunctionCall","src":"1677:17:14"},{"kind":"number","nativeSrc":"1696:2:14","nodeType":"YulLiteral","src":"1696:2:14","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1673:3:14","nodeType":"YulIdentifier","src":"1673:3:14"},"nativeSrc":"1673:26:14","nodeType":"YulFunctionCall","src":"1673:26:14"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"1715:6:14","nodeType":"YulIdentifier","src":"1715:6:14"},{"name":"i","nativeSrc":"1723:1:14","nodeType":"YulIdentifier","src":"1723:1:14"}],"functionName":{"name":"add","nativeSrc":"1711:3:14","nodeType":"YulIdentifier","src":"1711:3:14"},"nativeSrc":"1711:14:14","nodeType":"YulFunctionCall","src":"1711:14:14"},{"kind":"number","nativeSrc":"1727:4:14","nodeType":"YulLiteral","src":"1727:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1707:3:14","nodeType":"YulIdentifier","src":"1707:3:14"},"nativeSrc":"1707:25:14","nodeType":"YulFunctionCall","src":"1707:25:14"}],"functionName":{"name":"mload","nativeSrc":"1701:5:14","nodeType":"YulIdentifier","src":"1701:5:14"},"nativeSrc":"1701:32:14","nodeType":"YulFunctionCall","src":"1701:32:14"}],"functionName":{"name":"mstore","nativeSrc":"1666:6:14","nodeType":"YulIdentifier","src":"1666:6:14"},"nativeSrc":"1666:68:14","nodeType":"YulFunctionCall","src":"1666:68:14"},"nativeSrc":"1666:68:14","nodeType":"YulExpressionStatement","src":"1666:68:14"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1611:1:14","nodeType":"YulIdentifier","src":"1611:1:14"},{"name":"length","nativeSrc":"1614:6:14","nodeType":"YulIdentifier","src":"1614:6:14"}],"functionName":{"name":"lt","nativeSrc":"1608:2:14","nodeType":"YulIdentifier","src":"1608:2:14"},"nativeSrc":"1608:13:14","nodeType":"YulFunctionCall","src":"1608:13:14"},"nativeSrc":"1600:144:14","nodeType":"YulForLoop","post":{"nativeSrc":"1622:21:14","nodeType":"YulBlock","src":"1622:21:14","statements":[{"nativeSrc":"1624:17:14","nodeType":"YulAssignment","src":"1624:17:14","value":{"arguments":[{"name":"i","nativeSrc":"1633:1:14","nodeType":"YulIdentifier","src":"1633:1:14"},{"kind":"number","nativeSrc":"1636:4:14","nodeType":"YulLiteral","src":"1636:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1629:3:14","nodeType":"YulIdentifier","src":"1629:3:14"},"nativeSrc":"1629:12:14","nodeType":"YulFunctionCall","src":"1629:12:14"},"variableNames":[{"name":"i","nativeSrc":"1624:1:14","nodeType":"YulIdentifier","src":"1624:1:14"}]}]},"pre":{"nativeSrc":"1604:3:14","nodeType":"YulBlock","src":"1604:3:14","statements":[]},"src":"1600:144:14"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1768:9:14","nodeType":"YulIdentifier","src":"1768:9:14"},{"name":"length","nativeSrc":"1779:6:14","nodeType":"YulIdentifier","src":"1779:6:14"}],"functionName":{"name":"add","nativeSrc":"1764:3:14","nodeType":"YulIdentifier","src":"1764:3:14"},"nativeSrc":"1764:22:14","nodeType":"YulFunctionCall","src":"1764:22:14"},{"kind":"number","nativeSrc":"1788:2:14","nodeType":"YulLiteral","src":"1788:2:14","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1760:3:14","nodeType":"YulIdentifier","src":"1760:3:14"},"nativeSrc":"1760:31:14","nodeType":"YulFunctionCall","src":"1760:31:14"},{"kind":"number","nativeSrc":"1793:1:14","nodeType":"YulLiteral","src":"1793:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"1753:6:14","nodeType":"YulIdentifier","src":"1753:6:14"},"nativeSrc":"1753:42:14","nodeType":"YulFunctionCall","src":"1753:42:14"},"nativeSrc":"1753:42:14","nodeType":"YulExpressionStatement","src":"1753:42:14"},{"nativeSrc":"1804:62:14","nodeType":"YulAssignment","src":"1804:62:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1820:9:14","nodeType":"YulIdentifier","src":"1820:9:14"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"1839:6:14","nodeType":"YulIdentifier","src":"1839:6:14"},{"kind":"number","nativeSrc":"1847:2:14","nodeType":"YulLiteral","src":"1847:2:14","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1835:3:14","nodeType":"YulIdentifier","src":"1835:3:14"},"nativeSrc":"1835:15:14","nodeType":"YulFunctionCall","src":"1835:15:14"},{"arguments":[{"kind":"number","nativeSrc":"1856:2:14","nodeType":"YulLiteral","src":"1856:2:14","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1852:3:14","nodeType":"YulIdentifier","src":"1852:3:14"},"nativeSrc":"1852:7:14","nodeType":"YulFunctionCall","src":"1852:7:14"}],"functionName":{"name":"and","nativeSrc":"1831:3:14","nodeType":"YulIdentifier","src":"1831:3:14"},"nativeSrc":"1831:29:14","nodeType":"YulFunctionCall","src":"1831:29:14"}],"functionName":{"name":"add","nativeSrc":"1816:3:14","nodeType":"YulIdentifier","src":"1816:3:14"},"nativeSrc":"1816:45:14","nodeType":"YulFunctionCall","src":"1816:45:14"},{"kind":"number","nativeSrc":"1863:2:14","nodeType":"YulLiteral","src":"1863:2:14","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1812:3:14","nodeType":"YulIdentifier","src":"1812:3:14"},"nativeSrc":"1812:54:14","nodeType":"YulFunctionCall","src":"1812:54:14"},"variableNames":[{"name":"tail","nativeSrc":"1804:4:14","nodeType":"YulIdentifier","src":"1804:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1886:9:14","nodeType":"YulIdentifier","src":"1886:9:14"},{"kind":"number","nativeSrc":"1897:4:14","nodeType":"YulLiteral","src":"1897:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1882:3:14","nodeType":"YulIdentifier","src":"1882:3:14"},"nativeSrc":"1882:20:14","nodeType":"YulFunctionCall","src":"1882:20:14"},{"name":"value1","nativeSrc":"1904:6:14","nodeType":"YulIdentifier","src":"1904:6:14"}],"functionName":{"name":"mstore","nativeSrc":"1875:6:14","nodeType":"YulIdentifier","src":"1875:6:14"},"nativeSrc":"1875:36:14","nodeType":"YulFunctionCall","src":"1875:36:14"},"nativeSrc":"1875:36:14","nodeType":"YulExpressionStatement","src":"1875:36:14"}]},"name":"abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed","nativeSrc":"1315:602:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1423:9:14","nodeType":"YulTypedName","src":"1423:9:14","type":""},{"name":"value1","nativeSrc":"1434:6:14","nodeType":"YulTypedName","src":"1434:6:14","type":""},{"name":"value0","nativeSrc":"1442:6:14","nodeType":"YulTypedName","src":"1442:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1453:4:14","nodeType":"YulTypedName","src":"1453:4:14","type":""}],"src":"1315:602:14"},{"body":{"nativeSrc":"1992:185:14","nodeType":"YulBlock","src":"1992:185:14","statements":[{"body":{"nativeSrc":"2038:16:14","nodeType":"YulBlock","src":"2038:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2047:1:14","nodeType":"YulLiteral","src":"2047:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"2050:1:14","nodeType":"YulLiteral","src":"2050:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2040:6:14","nodeType":"YulIdentifier","src":"2040:6:14"},"nativeSrc":"2040:12:14","nodeType":"YulFunctionCall","src":"2040:12:14"},"nativeSrc":"2040:12:14","nodeType":"YulExpressionStatement","src":"2040:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2013:7:14","nodeType":"YulIdentifier","src":"2013:7:14"},{"name":"headStart","nativeSrc":"2022:9:14","nodeType":"YulIdentifier","src":"2022:9:14"}],"functionName":{"name":"sub","nativeSrc":"2009:3:14","nodeType":"YulIdentifier","src":"2009:3:14"},"nativeSrc":"2009:23:14","nodeType":"YulFunctionCall","src":"2009:23:14"},{"kind":"number","nativeSrc":"2034:2:14","nodeType":"YulLiteral","src":"2034:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2005:3:14","nodeType":"YulIdentifier","src":"2005:3:14"},"nativeSrc":"2005:32:14","nodeType":"YulFunctionCall","src":"2005:32:14"},"nativeSrc":"2002:52:14","nodeType":"YulIf","src":"2002:52:14"},{"nativeSrc":"2063:36:14","nodeType":"YulVariableDeclaration","src":"2063:36:14","value":{"arguments":[{"name":"headStart","nativeSrc":"2089:9:14","nodeType":"YulIdentifier","src":"2089:9:14"}],"functionName":{"name":"calldataload","nativeSrc":"2076:12:14","nodeType":"YulIdentifier","src":"2076:12:14"},"nativeSrc":"2076:23:14","nodeType":"YulFunctionCall","src":"2076:23:14"},"variables":[{"name":"value","nativeSrc":"2067:5:14","nodeType":"YulTypedName","src":"2067:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2141:5:14","nodeType":"YulIdentifier","src":"2141:5:14"}],"functionName":{"name":"validator_revert_address_payable","nativeSrc":"2108:32:14","nodeType":"YulIdentifier","src":"2108:32:14"},"nativeSrc":"2108:39:14","nodeType":"YulFunctionCall","src":"2108:39:14"},"nativeSrc":"2108:39:14","nodeType":"YulExpressionStatement","src":"2108:39:14"},{"nativeSrc":"2156:15:14","nodeType":"YulAssignment","src":"2156:15:14","value":{"name":"value","nativeSrc":"2166:5:14","nodeType":"YulIdentifier","src":"2166:5:14"},"variableNames":[{"name":"value0","nativeSrc":"2156:6:14","nodeType":"YulIdentifier","src":"2156:6:14"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"1922:255:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1958:9:14","nodeType":"YulTypedName","src":"1958:9:14","type":""},{"name":"dataEnd","nativeSrc":"1969:7:14","nodeType":"YulTypedName","src":"1969:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1981:6:14","nodeType":"YulTypedName","src":"1981:6:14","type":""}],"src":"1922:255:14"},{"body":{"nativeSrc":"2337:732:14","nodeType":"YulBlock","src":"2337:732:14","statements":[{"body":{"nativeSrc":"2384:16:14","nodeType":"YulBlock","src":"2384:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2393:1:14","nodeType":"YulLiteral","src":"2393:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"2396:1:14","nodeType":"YulLiteral","src":"2396:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2386:6:14","nodeType":"YulIdentifier","src":"2386:6:14"},"nativeSrc":"2386:12:14","nodeType":"YulFunctionCall","src":"2386:12:14"},"nativeSrc":"2386:12:14","nodeType":"YulExpressionStatement","src":"2386:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2358:7:14","nodeType":"YulIdentifier","src":"2358:7:14"},{"name":"headStart","nativeSrc":"2367:9:14","nodeType":"YulIdentifier","src":"2367:9:14"}],"functionName":{"name":"sub","nativeSrc":"2354:3:14","nodeType":"YulIdentifier","src":"2354:3:14"},"nativeSrc":"2354:23:14","nodeType":"YulFunctionCall","src":"2354:23:14"},{"kind":"number","nativeSrc":"2379:3:14","nodeType":"YulLiteral","src":"2379:3:14","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"2350:3:14","nodeType":"YulIdentifier","src":"2350:3:14"},"nativeSrc":"2350:33:14","nodeType":"YulFunctionCall","src":"2350:33:14"},"nativeSrc":"2347:53:14","nodeType":"YulIf","src":"2347:53:14"},{"nativeSrc":"2409:36:14","nodeType":"YulVariableDeclaration","src":"2409:36:14","value":{"arguments":[{"name":"headStart","nativeSrc":"2435:9:14","nodeType":"YulIdentifier","src":"2435:9:14"}],"functionName":{"name":"calldataload","nativeSrc":"2422:12:14","nodeType":"YulIdentifier","src":"2422:12:14"},"nativeSrc":"2422:23:14","nodeType":"YulFunctionCall","src":"2422:23:14"},"variables":[{"name":"value","nativeSrc":"2413:5:14","nodeType":"YulTypedName","src":"2413:5:14","type":""}]},{"body":{"nativeSrc":"2478:16:14","nodeType":"YulBlock","src":"2478:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2487:1:14","nodeType":"YulLiteral","src":"2487:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"2490:1:14","nodeType":"YulLiteral","src":"2490:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2480:6:14","nodeType":"YulIdentifier","src":"2480:6:14"},"nativeSrc":"2480:12:14","nodeType":"YulFunctionCall","src":"2480:12:14"},"nativeSrc":"2480:12:14","nodeType":"YulExpressionStatement","src":"2480:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2467:5:14","nodeType":"YulIdentifier","src":"2467:5:14"},{"kind":"number","nativeSrc":"2474:1:14","nodeType":"YulLiteral","src":"2474:1:14","type":"","value":"3"}],"functionName":{"name":"lt","nativeSrc":"2464:2:14","nodeType":"YulIdentifier","src":"2464:2:14"},"nativeSrc":"2464:12:14","nodeType":"YulFunctionCall","src":"2464:12:14"}],"functionName":{"name":"iszero","nativeSrc":"2457:6:14","nodeType":"YulIdentifier","src":"2457:6:14"},"nativeSrc":"2457:20:14","nodeType":"YulFunctionCall","src":"2457:20:14"},"nativeSrc":"2454:40:14","nodeType":"YulIf","src":"2454:40:14"},{"nativeSrc":"2503:15:14","nodeType":"YulAssignment","src":"2503:15:14","value":{"name":"value","nativeSrc":"2513:5:14","nodeType":"YulIdentifier","src":"2513:5:14"},"variableNames":[{"name":"value0","nativeSrc":"2503:6:14","nodeType":"YulIdentifier","src":"2503:6:14"}]},{"nativeSrc":"2527:46:14","nodeType":"YulVariableDeclaration","src":"2527:46:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2558:9:14","nodeType":"YulIdentifier","src":"2558:9:14"},{"kind":"number","nativeSrc":"2569:2:14","nodeType":"YulLiteral","src":"2569:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2554:3:14","nodeType":"YulIdentifier","src":"2554:3:14"},"nativeSrc":"2554:18:14","nodeType":"YulFunctionCall","src":"2554:18:14"}],"functionName":{"name":"calldataload","nativeSrc":"2541:12:14","nodeType":"YulIdentifier","src":"2541:12:14"},"nativeSrc":"2541:32:14","nodeType":"YulFunctionCall","src":"2541:32:14"},"variables":[{"name":"offset","nativeSrc":"2531:6:14","nodeType":"YulTypedName","src":"2531:6:14","type":""}]},{"nativeSrc":"2582:28:14","nodeType":"YulVariableDeclaration","src":"2582:28:14","value":{"kind":"number","nativeSrc":"2592:18:14","nodeType":"YulLiteral","src":"2592:18:14","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"2586:2:14","nodeType":"YulTypedName","src":"2586:2:14","type":""}]},{"body":{"nativeSrc":"2637:16:14","nodeType":"YulBlock","src":"2637:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2646:1:14","nodeType":"YulLiteral","src":"2646:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"2649:1:14","nodeType":"YulLiteral","src":"2649:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2639:6:14","nodeType":"YulIdentifier","src":"2639:6:14"},"nativeSrc":"2639:12:14","nodeType":"YulFunctionCall","src":"2639:12:14"},"nativeSrc":"2639:12:14","nodeType":"YulExpressionStatement","src":"2639:12:14"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"2625:6:14","nodeType":"YulIdentifier","src":"2625:6:14"},{"name":"_1","nativeSrc":"2633:2:14","nodeType":"YulIdentifier","src":"2633:2:14"}],"functionName":{"name":"gt","nativeSrc":"2622:2:14","nodeType":"YulIdentifier","src":"2622:2:14"},"nativeSrc":"2622:14:14","nodeType":"YulFunctionCall","src":"2622:14:14"},"nativeSrc":"2619:34:14","nodeType":"YulIf","src":"2619:34:14"},{"nativeSrc":"2662:32:14","nodeType":"YulVariableDeclaration","src":"2662:32:14","value":{"arguments":[{"name":"headStart","nativeSrc":"2676:9:14","nodeType":"YulIdentifier","src":"2676:9:14"},{"name":"offset","nativeSrc":"2687:6:14","nodeType":"YulIdentifier","src":"2687:6:14"}],"functionName":{"name":"add","nativeSrc":"2672:3:14","nodeType":"YulIdentifier","src":"2672:3:14"},"nativeSrc":"2672:22:14","nodeType":"YulFunctionCall","src":"2672:22:14"},"variables":[{"name":"_2","nativeSrc":"2666:2:14","nodeType":"YulTypedName","src":"2666:2:14","type":""}]},{"body":{"nativeSrc":"2742:16:14","nodeType":"YulBlock","src":"2742:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2751:1:14","nodeType":"YulLiteral","src":"2751:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"2754:1:14","nodeType":"YulLiteral","src":"2754:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2744:6:14","nodeType":"YulIdentifier","src":"2744:6:14"},"nativeSrc":"2744:12:14","nodeType":"YulFunctionCall","src":"2744:12:14"},"nativeSrc":"2744:12:14","nodeType":"YulExpressionStatement","src":"2744:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"2721:2:14","nodeType":"YulIdentifier","src":"2721:2:14"},{"kind":"number","nativeSrc":"2725:4:14","nodeType":"YulLiteral","src":"2725:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2717:3:14","nodeType":"YulIdentifier","src":"2717:3:14"},"nativeSrc":"2717:13:14","nodeType":"YulFunctionCall","src":"2717:13:14"},{"name":"dataEnd","nativeSrc":"2732:7:14","nodeType":"YulIdentifier","src":"2732:7:14"}],"functionName":{"name":"slt","nativeSrc":"2713:3:14","nodeType":"YulIdentifier","src":"2713:3:14"},"nativeSrc":"2713:27:14","nodeType":"YulFunctionCall","src":"2713:27:14"}],"functionName":{"name":"iszero","nativeSrc":"2706:6:14","nodeType":"YulIdentifier","src":"2706:6:14"},"nativeSrc":"2706:35:14","nodeType":"YulFunctionCall","src":"2706:35:14"},"nativeSrc":"2703:55:14","nodeType":"YulIf","src":"2703:55:14"},{"nativeSrc":"2767:30:14","nodeType":"YulVariableDeclaration","src":"2767:30:14","value":{"arguments":[{"name":"_2","nativeSrc":"2794:2:14","nodeType":"YulIdentifier","src":"2794:2:14"}],"functionName":{"name":"calldataload","nativeSrc":"2781:12:14","nodeType":"YulIdentifier","src":"2781:12:14"},"nativeSrc":"2781:16:14","nodeType":"YulFunctionCall","src":"2781:16:14"},"variables":[{"name":"length","nativeSrc":"2771:6:14","nodeType":"YulTypedName","src":"2771:6:14","type":""}]},{"body":{"nativeSrc":"2824:16:14","nodeType":"YulBlock","src":"2824:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2833:1:14","nodeType":"YulLiteral","src":"2833:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"2836:1:14","nodeType":"YulLiteral","src":"2836:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2826:6:14","nodeType":"YulIdentifier","src":"2826:6:14"},"nativeSrc":"2826:12:14","nodeType":"YulFunctionCall","src":"2826:12:14"},"nativeSrc":"2826:12:14","nodeType":"YulExpressionStatement","src":"2826:12:14"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"2812:6:14","nodeType":"YulIdentifier","src":"2812:6:14"},{"name":"_1","nativeSrc":"2820:2:14","nodeType":"YulIdentifier","src":"2820:2:14"}],"functionName":{"name":"gt","nativeSrc":"2809:2:14","nodeType":"YulIdentifier","src":"2809:2:14"},"nativeSrc":"2809:14:14","nodeType":"YulFunctionCall","src":"2809:14:14"},"nativeSrc":"2806:34:14","nodeType":"YulIf","src":"2806:34:14"},{"body":{"nativeSrc":"2890:16:14","nodeType":"YulBlock","src":"2890:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2899:1:14","nodeType":"YulLiteral","src":"2899:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"2902:1:14","nodeType":"YulLiteral","src":"2902:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2892:6:14","nodeType":"YulIdentifier","src":"2892:6:14"},"nativeSrc":"2892:12:14","nodeType":"YulFunctionCall","src":"2892:12:14"},"nativeSrc":"2892:12:14","nodeType":"YulExpressionStatement","src":"2892:12:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"2863:2:14","nodeType":"YulIdentifier","src":"2863:2:14"},{"name":"length","nativeSrc":"2867:6:14","nodeType":"YulIdentifier","src":"2867:6:14"}],"functionName":{"name":"add","nativeSrc":"2859:3:14","nodeType":"YulIdentifier","src":"2859:3:14"},"nativeSrc":"2859:15:14","nodeType":"YulFunctionCall","src":"2859:15:14"},{"kind":"number","nativeSrc":"2876:2:14","nodeType":"YulLiteral","src":"2876:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2855:3:14","nodeType":"YulIdentifier","src":"2855:3:14"},"nativeSrc":"2855:24:14","nodeType":"YulFunctionCall","src":"2855:24:14"},{"name":"dataEnd","nativeSrc":"2881:7:14","nodeType":"YulIdentifier","src":"2881:7:14"}],"functionName":{"name":"gt","nativeSrc":"2852:2:14","nodeType":"YulIdentifier","src":"2852:2:14"},"nativeSrc":"2852:37:14","nodeType":"YulFunctionCall","src":"2852:37:14"},"nativeSrc":"2849:57:14","nodeType":"YulIf","src":"2849:57:14"},{"nativeSrc":"2915:21:14","nodeType":"YulAssignment","src":"2915:21:14","value":{"arguments":[{"name":"_2","nativeSrc":"2929:2:14","nodeType":"YulIdentifier","src":"2929:2:14"},{"kind":"number","nativeSrc":"2933:2:14","nodeType":"YulLiteral","src":"2933:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2925:3:14","nodeType":"YulIdentifier","src":"2925:3:14"},"nativeSrc":"2925:11:14","nodeType":"YulFunctionCall","src":"2925:11:14"},"variableNames":[{"name":"value1","nativeSrc":"2915:6:14","nodeType":"YulIdentifier","src":"2915:6:14"}]},{"nativeSrc":"2945:16:14","nodeType":"YulAssignment","src":"2945:16:14","value":{"name":"length","nativeSrc":"2955:6:14","nodeType":"YulIdentifier","src":"2955:6:14"},"variableNames":[{"name":"value2","nativeSrc":"2945:6:14","nodeType":"YulIdentifier","src":"2945:6:14"}]},{"nativeSrc":"2970:42:14","nodeType":"YulAssignment","src":"2970:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2997:9:14","nodeType":"YulIdentifier","src":"2997:9:14"},{"kind":"number","nativeSrc":"3008:2:14","nodeType":"YulLiteral","src":"3008:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2993:3:14","nodeType":"YulIdentifier","src":"2993:3:14"},"nativeSrc":"2993:18:14","nodeType":"YulFunctionCall","src":"2993:18:14"}],"functionName":{"name":"calldataload","nativeSrc":"2980:12:14","nodeType":"YulIdentifier","src":"2980:12:14"},"nativeSrc":"2980:32:14","nodeType":"YulFunctionCall","src":"2980:32:14"},"variableNames":[{"name":"value3","nativeSrc":"2970:6:14","nodeType":"YulIdentifier","src":"2970:6:14"}]},{"nativeSrc":"3021:42:14","nodeType":"YulAssignment","src":"3021:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3048:9:14","nodeType":"YulIdentifier","src":"3048:9:14"},{"kind":"number","nativeSrc":"3059:2:14","nodeType":"YulLiteral","src":"3059:2:14","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3044:3:14","nodeType":"YulIdentifier","src":"3044:3:14"},"nativeSrc":"3044:18:14","nodeType":"YulFunctionCall","src":"3044:18:14"}],"functionName":{"name":"calldataload","nativeSrc":"3031:12:14","nodeType":"YulIdentifier","src":"3031:12:14"},"nativeSrc":"3031:32:14","nodeType":"YulFunctionCall","src":"3031:32:14"},"variableNames":[{"name":"value4","nativeSrc":"3021:6:14","nodeType":"YulIdentifier","src":"3021:6:14"}]}]},"name":"abi_decode_tuple_t_enum$_PostOpMode_$1051t_bytes_calldata_ptrt_uint256t_uint256","nativeSrc":"2182:887:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2271:9:14","nodeType":"YulTypedName","src":"2271:9:14","type":""},{"name":"dataEnd","nativeSrc":"2282:7:14","nodeType":"YulTypedName","src":"2282:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2294:6:14","nodeType":"YulTypedName","src":"2294:6:14","type":""},{"name":"value1","nativeSrc":"2302:6:14","nodeType":"YulTypedName","src":"2302:6:14","type":""},{"name":"value2","nativeSrc":"2310:6:14","nodeType":"YulTypedName","src":"2310:6:14","type":""},{"name":"value3","nativeSrc":"2318:6:14","nodeType":"YulTypedName","src":"2318:6:14","type":""},{"name":"value4","nativeSrc":"2326:6:14","nodeType":"YulTypedName","src":"2326:6:14","type":""}],"src":"2182:887:14"},{"body":{"nativeSrc":"3175:102:14","nodeType":"YulBlock","src":"3175:102:14","statements":[{"nativeSrc":"3185:26:14","nodeType":"YulAssignment","src":"3185:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"3197:9:14","nodeType":"YulIdentifier","src":"3197:9:14"},{"kind":"number","nativeSrc":"3208:2:14","nodeType":"YulLiteral","src":"3208:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3193:3:14","nodeType":"YulIdentifier","src":"3193:3:14"},"nativeSrc":"3193:18:14","nodeType":"YulFunctionCall","src":"3193:18:14"},"variableNames":[{"name":"tail","nativeSrc":"3185:4:14","nodeType":"YulIdentifier","src":"3185:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3227:9:14","nodeType":"YulIdentifier","src":"3227:9:14"},{"arguments":[{"name":"value0","nativeSrc":"3242:6:14","nodeType":"YulIdentifier","src":"3242:6:14"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3258:3:14","nodeType":"YulLiteral","src":"3258:3:14","type":"","value":"160"},{"kind":"number","nativeSrc":"3263:1:14","nodeType":"YulLiteral","src":"3263:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3254:3:14","nodeType":"YulIdentifier","src":"3254:3:14"},"nativeSrc":"3254:11:14","nodeType":"YulFunctionCall","src":"3254:11:14"},{"kind":"number","nativeSrc":"3267:1:14","nodeType":"YulLiteral","src":"3267:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3250:3:14","nodeType":"YulIdentifier","src":"3250:3:14"},"nativeSrc":"3250:19:14","nodeType":"YulFunctionCall","src":"3250:19:14"}],"functionName":{"name":"and","nativeSrc":"3238:3:14","nodeType":"YulIdentifier","src":"3238:3:14"},"nativeSrc":"3238:32:14","nodeType":"YulFunctionCall","src":"3238:32:14"}],"functionName":{"name":"mstore","nativeSrc":"3220:6:14","nodeType":"YulIdentifier","src":"3220:6:14"},"nativeSrc":"3220:51:14","nodeType":"YulFunctionCall","src":"3220:51:14"},"nativeSrc":"3220:51:14","nodeType":"YulExpressionStatement","src":"3220:51:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"3074:203:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3144:9:14","nodeType":"YulTypedName","src":"3144:9:14","type":""},{"name":"value0","nativeSrc":"3155:6:14","nodeType":"YulTypedName","src":"3155:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3166:4:14","nodeType":"YulTypedName","src":"3166:4:14","type":""}],"src":"3074:203:14"},{"body":{"nativeSrc":"3403:102:14","nodeType":"YulBlock","src":"3403:102:14","statements":[{"nativeSrc":"3413:26:14","nodeType":"YulAssignment","src":"3413:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"3425:9:14","nodeType":"YulIdentifier","src":"3425:9:14"},{"kind":"number","nativeSrc":"3436:2:14","nodeType":"YulLiteral","src":"3436:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3421:3:14","nodeType":"YulIdentifier","src":"3421:3:14"},"nativeSrc":"3421:18:14","nodeType":"YulFunctionCall","src":"3421:18:14"},"variableNames":[{"name":"tail","nativeSrc":"3413:4:14","nodeType":"YulIdentifier","src":"3413:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3455:9:14","nodeType":"YulIdentifier","src":"3455:9:14"},{"arguments":[{"name":"value0","nativeSrc":"3470:6:14","nodeType":"YulIdentifier","src":"3470:6:14"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3486:3:14","nodeType":"YulLiteral","src":"3486:3:14","type":"","value":"160"},{"kind":"number","nativeSrc":"3491:1:14","nodeType":"YulLiteral","src":"3491:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3482:3:14","nodeType":"YulIdentifier","src":"3482:3:14"},"nativeSrc":"3482:11:14","nodeType":"YulFunctionCall","src":"3482:11:14"},{"kind":"number","nativeSrc":"3495:1:14","nodeType":"YulLiteral","src":"3495:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3478:3:14","nodeType":"YulIdentifier","src":"3478:3:14"},"nativeSrc":"3478:19:14","nodeType":"YulFunctionCall","src":"3478:19:14"}],"functionName":{"name":"and","nativeSrc":"3466:3:14","nodeType":"YulIdentifier","src":"3466:3:14"},"nativeSrc":"3466:32:14","nodeType":"YulFunctionCall","src":"3466:32:14"}],"functionName":{"name":"mstore","nativeSrc":"3448:6:14","nodeType":"YulIdentifier","src":"3448:6:14"},"nativeSrc":"3448:51:14","nodeType":"YulFunctionCall","src":"3448:51:14"},"nativeSrc":"3448:51:14","nodeType":"YulExpressionStatement","src":"3448:51:14"}]},"name":"abi_encode_tuple_t_contract$_IEntryPoint_$1024__to_t_address__fromStack_reversed","nativeSrc":"3282:223:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3372:9:14","nodeType":"YulTypedName","src":"3372:9:14","type":""},{"name":"value0","nativeSrc":"3383:6:14","nodeType":"YulTypedName","src":"3383:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3394:4:14","nodeType":"YulTypedName","src":"3394:4:14","type":""}],"src":"3282:223:14"},{"body":{"nativeSrc":"3588:185:14","nodeType":"YulBlock","src":"3588:185:14","statements":[{"body":{"nativeSrc":"3634:16:14","nodeType":"YulBlock","src":"3634:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3643:1:14","nodeType":"YulLiteral","src":"3643:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"3646:1:14","nodeType":"YulLiteral","src":"3646:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3636:6:14","nodeType":"YulIdentifier","src":"3636:6:14"},"nativeSrc":"3636:12:14","nodeType":"YulFunctionCall","src":"3636:12:14"},"nativeSrc":"3636:12:14","nodeType":"YulExpressionStatement","src":"3636:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3609:7:14","nodeType":"YulIdentifier","src":"3609:7:14"},{"name":"headStart","nativeSrc":"3618:9:14","nodeType":"YulIdentifier","src":"3618:9:14"}],"functionName":{"name":"sub","nativeSrc":"3605:3:14","nodeType":"YulIdentifier","src":"3605:3:14"},"nativeSrc":"3605:23:14","nodeType":"YulFunctionCall","src":"3605:23:14"},{"kind":"number","nativeSrc":"3630:2:14","nodeType":"YulLiteral","src":"3630:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3601:3:14","nodeType":"YulIdentifier","src":"3601:3:14"},"nativeSrc":"3601:32:14","nodeType":"YulFunctionCall","src":"3601:32:14"},"nativeSrc":"3598:52:14","nodeType":"YulIf","src":"3598:52:14"},{"nativeSrc":"3659:36:14","nodeType":"YulVariableDeclaration","src":"3659:36:14","value":{"arguments":[{"name":"headStart","nativeSrc":"3685:9:14","nodeType":"YulIdentifier","src":"3685:9:14"}],"functionName":{"name":"calldataload","nativeSrc":"3672:12:14","nodeType":"YulIdentifier","src":"3672:12:14"},"nativeSrc":"3672:23:14","nodeType":"YulFunctionCall","src":"3672:23:14"},"variables":[{"name":"value","nativeSrc":"3663:5:14","nodeType":"YulTypedName","src":"3663:5:14","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3737:5:14","nodeType":"YulIdentifier","src":"3737:5:14"}],"functionName":{"name":"validator_revert_address_payable","nativeSrc":"3704:32:14","nodeType":"YulIdentifier","src":"3704:32:14"},"nativeSrc":"3704:39:14","nodeType":"YulFunctionCall","src":"3704:39:14"},"nativeSrc":"3704:39:14","nodeType":"YulExpressionStatement","src":"3704:39:14"},{"nativeSrc":"3752:15:14","nodeType":"YulAssignment","src":"3752:15:14","value":{"name":"value","nativeSrc":"3762:5:14","nodeType":"YulIdentifier","src":"3762:5:14"},"variableNames":[{"name":"value0","nativeSrc":"3752:6:14","nodeType":"YulIdentifier","src":"3752:6:14"}]}]},"name":"abi_decode_tuple_t_address_payable","nativeSrc":"3510:263:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3554:9:14","nodeType":"YulTypedName","src":"3554:9:14","type":""},{"name":"dataEnd","nativeSrc":"3565:7:14","nodeType":"YulTypedName","src":"3565:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3577:6:14","nodeType":"YulTypedName","src":"3577:6:14","type":""}],"src":"3510:263:14"},{"body":{"nativeSrc":"3879:76:14","nodeType":"YulBlock","src":"3879:76:14","statements":[{"nativeSrc":"3889:26:14","nodeType":"YulAssignment","src":"3889:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"3901:9:14","nodeType":"YulIdentifier","src":"3901:9:14"},{"kind":"number","nativeSrc":"3912:2:14","nodeType":"YulLiteral","src":"3912:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3897:3:14","nodeType":"YulIdentifier","src":"3897:3:14"},"nativeSrc":"3897:18:14","nodeType":"YulFunctionCall","src":"3897:18:14"},"variableNames":[{"name":"tail","nativeSrc":"3889:4:14","nodeType":"YulIdentifier","src":"3889:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3931:9:14","nodeType":"YulIdentifier","src":"3931:9:14"},{"name":"value0","nativeSrc":"3942:6:14","nodeType":"YulIdentifier","src":"3942:6:14"}],"functionName":{"name":"mstore","nativeSrc":"3924:6:14","nodeType":"YulIdentifier","src":"3924:6:14"},"nativeSrc":"3924:25:14","nodeType":"YulFunctionCall","src":"3924:25:14"},"nativeSrc":"3924:25:14","nodeType":"YulExpressionStatement","src":"3924:25:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"3778:177:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3848:9:14","nodeType":"YulTypedName","src":"3848:9:14","type":""},{"name":"value0","nativeSrc":"3859:6:14","nodeType":"YulTypedName","src":"3859:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3870:4:14","nodeType":"YulTypedName","src":"3870:4:14","type":""}],"src":"3778:177:14"},{"body":{"nativeSrc":"4059:93:14","nodeType":"YulBlock","src":"4059:93:14","statements":[{"nativeSrc":"4069:26:14","nodeType":"YulAssignment","src":"4069:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"4081:9:14","nodeType":"YulIdentifier","src":"4081:9:14"},{"kind":"number","nativeSrc":"4092:2:14","nodeType":"YulLiteral","src":"4092:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4077:3:14","nodeType":"YulIdentifier","src":"4077:3:14"},"nativeSrc":"4077:18:14","nodeType":"YulFunctionCall","src":"4077:18:14"},"variableNames":[{"name":"tail","nativeSrc":"4069:4:14","nodeType":"YulIdentifier","src":"4069:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4111:9:14","nodeType":"YulIdentifier","src":"4111:9:14"},{"arguments":[{"name":"value0","nativeSrc":"4126:6:14","nodeType":"YulIdentifier","src":"4126:6:14"},{"kind":"number","nativeSrc":"4134:10:14","nodeType":"YulLiteral","src":"4134:10:14","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nativeSrc":"4122:3:14","nodeType":"YulIdentifier","src":"4122:3:14"},"nativeSrc":"4122:23:14","nodeType":"YulFunctionCall","src":"4122:23:14"}],"functionName":{"name":"mstore","nativeSrc":"4104:6:14","nodeType":"YulIdentifier","src":"4104:6:14"},"nativeSrc":"4104:42:14","nodeType":"YulFunctionCall","src":"4104:42:14"},"nativeSrc":"4104:42:14","nodeType":"YulExpressionStatement","src":"4104:42:14"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nativeSrc":"3960:192:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4028:9:14","nodeType":"YulTypedName","src":"4028:9:14","type":""},{"name":"value0","nativeSrc":"4039:6:14","nodeType":"YulTypedName","src":"4039:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4050:4:14","nodeType":"YulTypedName","src":"4050:4:14","type":""}],"src":"3960:192:14"},{"body":{"nativeSrc":"4302:145:14","nodeType":"YulBlock","src":"4302:145:14","statements":[{"nativeSrc":"4312:26:14","nodeType":"YulAssignment","src":"4312:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"4324:9:14","nodeType":"YulIdentifier","src":"4324:9:14"},{"kind":"number","nativeSrc":"4335:2:14","nodeType":"YulLiteral","src":"4335:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4320:3:14","nodeType":"YulIdentifier","src":"4320:3:14"},"nativeSrc":"4320:18:14","nodeType":"YulFunctionCall","src":"4320:18:14"},"variableNames":[{"name":"tail","nativeSrc":"4312:4:14","nodeType":"YulIdentifier","src":"4312:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4354:9:14","nodeType":"YulIdentifier","src":"4354:9:14"},{"arguments":[{"name":"value0","nativeSrc":"4369:6:14","nodeType":"YulIdentifier","src":"4369:6:14"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4385:3:14","nodeType":"YulLiteral","src":"4385:3:14","type":"","value":"160"},{"kind":"number","nativeSrc":"4390:1:14","nodeType":"YulLiteral","src":"4390:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4381:3:14","nodeType":"YulIdentifier","src":"4381:3:14"},"nativeSrc":"4381:11:14","nodeType":"YulFunctionCall","src":"4381:11:14"},{"kind":"number","nativeSrc":"4394:1:14","nodeType":"YulLiteral","src":"4394:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4377:3:14","nodeType":"YulIdentifier","src":"4377:3:14"},"nativeSrc":"4377:19:14","nodeType":"YulFunctionCall","src":"4377:19:14"}],"functionName":{"name":"and","nativeSrc":"4365:3:14","nodeType":"YulIdentifier","src":"4365:3:14"},"nativeSrc":"4365:32:14","nodeType":"YulFunctionCall","src":"4365:32:14"}],"functionName":{"name":"mstore","nativeSrc":"4347:6:14","nodeType":"YulIdentifier","src":"4347:6:14"},"nativeSrc":"4347:51:14","nodeType":"YulFunctionCall","src":"4347:51:14"},"nativeSrc":"4347:51:14","nodeType":"YulExpressionStatement","src":"4347:51:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4418:9:14","nodeType":"YulIdentifier","src":"4418:9:14"},{"kind":"number","nativeSrc":"4429:2:14","nodeType":"YulLiteral","src":"4429:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4414:3:14","nodeType":"YulIdentifier","src":"4414:3:14"},"nativeSrc":"4414:18:14","nodeType":"YulFunctionCall","src":"4414:18:14"},{"name":"value1","nativeSrc":"4434:6:14","nodeType":"YulIdentifier","src":"4434:6:14"}],"functionName":{"name":"mstore","nativeSrc":"4407:6:14","nodeType":"YulIdentifier","src":"4407:6:14"},"nativeSrc":"4407:34:14","nodeType":"YulFunctionCall","src":"4407:34:14"},"nativeSrc":"4407:34:14","nodeType":"YulExpressionStatement","src":"4407:34:14"}]},"name":"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed","nativeSrc":"4157:290:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4263:9:14","nodeType":"YulTypedName","src":"4263:9:14","type":""},{"name":"value1","nativeSrc":"4274:6:14","nodeType":"YulTypedName","src":"4274:6:14","type":""},{"name":"value0","nativeSrc":"4282:6:14","nodeType":"YulTypedName","src":"4282:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4293:4:14","nodeType":"YulTypedName","src":"4293:4:14","type":""}],"src":"4157:290:14"},{"body":{"nativeSrc":"4569:102:14","nodeType":"YulBlock","src":"4569:102:14","statements":[{"nativeSrc":"4579:26:14","nodeType":"YulAssignment","src":"4579:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"4591:9:14","nodeType":"YulIdentifier","src":"4591:9:14"},{"kind":"number","nativeSrc":"4602:2:14","nodeType":"YulLiteral","src":"4602:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4587:3:14","nodeType":"YulIdentifier","src":"4587:3:14"},"nativeSrc":"4587:18:14","nodeType":"YulFunctionCall","src":"4587:18:14"},"variableNames":[{"name":"tail","nativeSrc":"4579:4:14","nodeType":"YulIdentifier","src":"4579:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4621:9:14","nodeType":"YulIdentifier","src":"4621:9:14"},{"arguments":[{"name":"value0","nativeSrc":"4636:6:14","nodeType":"YulIdentifier","src":"4636:6:14"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4652:3:14","nodeType":"YulLiteral","src":"4652:3:14","type":"","value":"160"},{"kind":"number","nativeSrc":"4657:1:14","nodeType":"YulLiteral","src":"4657:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4648:3:14","nodeType":"YulIdentifier","src":"4648:3:14"},"nativeSrc":"4648:11:14","nodeType":"YulFunctionCall","src":"4648:11:14"},{"kind":"number","nativeSrc":"4661:1:14","nodeType":"YulLiteral","src":"4661:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4644:3:14","nodeType":"YulIdentifier","src":"4644:3:14"},"nativeSrc":"4644:19:14","nodeType":"YulFunctionCall","src":"4644:19:14"}],"functionName":{"name":"and","nativeSrc":"4632:3:14","nodeType":"YulIdentifier","src":"4632:3:14"},"nativeSrc":"4632:32:14","nodeType":"YulFunctionCall","src":"4632:32:14"}],"functionName":{"name":"mstore","nativeSrc":"4614:6:14","nodeType":"YulIdentifier","src":"4614:6:14"},"nativeSrc":"4614:51:14","nodeType":"YulFunctionCall","src":"4614:51:14"},"nativeSrc":"4614:51:14","nodeType":"YulExpressionStatement","src":"4614:51:14"}]},"name":"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed","nativeSrc":"4452:219:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4538:9:14","nodeType":"YulTypedName","src":"4538:9:14","type":""},{"name":"value0","nativeSrc":"4549:6:14","nodeType":"YulTypedName","src":"4549:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4560:4:14","nodeType":"YulTypedName","src":"4560:4:14","type":""}],"src":"4452:219:14"},{"body":{"nativeSrc":"4757:103:14","nodeType":"YulBlock","src":"4757:103:14","statements":[{"body":{"nativeSrc":"4803:16:14","nodeType":"YulBlock","src":"4803:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4812:1:14","nodeType":"YulLiteral","src":"4812:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"4815:1:14","nodeType":"YulLiteral","src":"4815:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4805:6:14","nodeType":"YulIdentifier","src":"4805:6:14"},"nativeSrc":"4805:12:14","nodeType":"YulFunctionCall","src":"4805:12:14"},"nativeSrc":"4805:12:14","nodeType":"YulExpressionStatement","src":"4805:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4778:7:14","nodeType":"YulIdentifier","src":"4778:7:14"},{"name":"headStart","nativeSrc":"4787:9:14","nodeType":"YulIdentifier","src":"4787:9:14"}],"functionName":{"name":"sub","nativeSrc":"4774:3:14","nodeType":"YulIdentifier","src":"4774:3:14"},"nativeSrc":"4774:23:14","nodeType":"YulFunctionCall","src":"4774:23:14"},{"kind":"number","nativeSrc":"4799:2:14","nodeType":"YulLiteral","src":"4799:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4770:3:14","nodeType":"YulIdentifier","src":"4770:3:14"},"nativeSrc":"4770:32:14","nodeType":"YulFunctionCall","src":"4770:32:14"},"nativeSrc":"4767:52:14","nodeType":"YulIf","src":"4767:52:14"},{"nativeSrc":"4828:26:14","nodeType":"YulAssignment","src":"4828:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"4844:9:14","nodeType":"YulIdentifier","src":"4844:9:14"}],"functionName":{"name":"mload","nativeSrc":"4838:5:14","nodeType":"YulIdentifier","src":"4838:5:14"},"nativeSrc":"4838:16:14","nodeType":"YulFunctionCall","src":"4838:16:14"},"variableNames":[{"name":"value0","nativeSrc":"4828:6:14","nodeType":"YulIdentifier","src":"4828:6:14"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"4676:184:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4723:9:14","nodeType":"YulTypedName","src":"4723:9:14","type":""},{"name":"dataEnd","nativeSrc":"4734:7:14","nodeType":"YulTypedName","src":"4734:7:14","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4746:6:14","nodeType":"YulTypedName","src":"4746:6:14","type":""}],"src":"4676:184:14"},{"body":{"nativeSrc":"5039:171:14","nodeType":"YulBlock","src":"5039:171:14","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5056:9:14","nodeType":"YulIdentifier","src":"5056:9:14"},{"kind":"number","nativeSrc":"5067:2:14","nodeType":"YulLiteral","src":"5067:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5049:6:14","nodeType":"YulIdentifier","src":"5049:6:14"},"nativeSrc":"5049:21:14","nodeType":"YulFunctionCall","src":"5049:21:14"},"nativeSrc":"5049:21:14","nodeType":"YulExpressionStatement","src":"5049:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5090:9:14","nodeType":"YulIdentifier","src":"5090:9:14"},{"kind":"number","nativeSrc":"5101:2:14","nodeType":"YulLiteral","src":"5101:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5086:3:14","nodeType":"YulIdentifier","src":"5086:3:14"},"nativeSrc":"5086:18:14","nodeType":"YulFunctionCall","src":"5086:18:14"},{"kind":"number","nativeSrc":"5106:2:14","nodeType":"YulLiteral","src":"5106:2:14","type":"","value":"21"}],"functionName":{"name":"mstore","nativeSrc":"5079:6:14","nodeType":"YulIdentifier","src":"5079:6:14"},"nativeSrc":"5079:30:14","nodeType":"YulFunctionCall","src":"5079:30:14"},"nativeSrc":"5079:30:14","nodeType":"YulExpressionStatement","src":"5079:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5129:9:14","nodeType":"YulIdentifier","src":"5129:9:14"},{"kind":"number","nativeSrc":"5140:2:14","nodeType":"YulLiteral","src":"5140:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5125:3:14","nodeType":"YulIdentifier","src":"5125:3:14"},"nativeSrc":"5125:18:14","nodeType":"YulFunctionCall","src":"5125:18:14"},{"hexValue":"53656e646572206e6f7420456e747279506f696e74","kind":"string","nativeSrc":"5145:23:14","nodeType":"YulLiteral","src":"5145:23:14","type":"","value":"Sender not EntryPoint"}],"functionName":{"name":"mstore","nativeSrc":"5118:6:14","nodeType":"YulIdentifier","src":"5118:6:14"},"nativeSrc":"5118:51:14","nodeType":"YulFunctionCall","src":"5118:51:14"},"nativeSrc":"5118:51:14","nodeType":"YulExpressionStatement","src":"5118:51:14"},{"nativeSrc":"5178:26:14","nodeType":"YulAssignment","src":"5178:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"5190:9:14","nodeType":"YulIdentifier","src":"5190:9:14"},{"kind":"number","nativeSrc":"5201:2:14","nodeType":"YulLiteral","src":"5201:2:14","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5186:3:14","nodeType":"YulIdentifier","src":"5186:3:14"},"nativeSrc":"5186:18:14","nodeType":"YulFunctionCall","src":"5186:18:14"},"variableNames":[{"name":"tail","nativeSrc":"5178:4:14","nodeType":"YulIdentifier","src":"5178:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4865:345:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5016:9:14","nodeType":"YulTypedName","src":"5016:9:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5030:4:14","nodeType":"YulTypedName","src":"5030:4:14","type":""}],"src":"4865:345:14"},{"body":{"nativeSrc":"5389:178:14","nodeType":"YulBlock","src":"5389:178:14","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5406:9:14","nodeType":"YulIdentifier","src":"5406:9:14"},{"kind":"number","nativeSrc":"5417:2:14","nodeType":"YulLiteral","src":"5417:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5399:6:14","nodeType":"YulIdentifier","src":"5399:6:14"},"nativeSrc":"5399:21:14","nodeType":"YulFunctionCall","src":"5399:21:14"},"nativeSrc":"5399:21:14","nodeType":"YulExpressionStatement","src":"5399:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5440:9:14","nodeType":"YulIdentifier","src":"5440:9:14"},{"kind":"number","nativeSrc":"5451:2:14","nodeType":"YulLiteral","src":"5451:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5436:3:14","nodeType":"YulIdentifier","src":"5436:3:14"},"nativeSrc":"5436:18:14","nodeType":"YulFunctionCall","src":"5436:18:14"},{"kind":"number","nativeSrc":"5456:2:14","nodeType":"YulLiteral","src":"5456:2:14","type":"","value":"28"}],"functionName":{"name":"mstore","nativeSrc":"5429:6:14","nodeType":"YulIdentifier","src":"5429:6:14"},"nativeSrc":"5429:30:14","nodeType":"YulFunctionCall","src":"5429:30:14"},"nativeSrc":"5429:30:14","nodeType":"YulExpressionStatement","src":"5429:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5479:9:14","nodeType":"YulIdentifier","src":"5479:9:14"},{"kind":"number","nativeSrc":"5490:2:14","nodeType":"YulLiteral","src":"5490:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5475:3:14","nodeType":"YulIdentifier","src":"5475:3:14"},"nativeSrc":"5475:18:14","nodeType":"YulFunctionCall","src":"5475:18:14"},{"hexValue":"496e73756666696369656e74206465706f73697420666f7220676173","kind":"string","nativeSrc":"5495:30:14","nodeType":"YulLiteral","src":"5495:30:14","type":"","value":"Insufficient deposit for gas"}],"functionName":{"name":"mstore","nativeSrc":"5468:6:14","nodeType":"YulIdentifier","src":"5468:6:14"},"nativeSrc":"5468:58:14","nodeType":"YulFunctionCall","src":"5468:58:14"},"nativeSrc":"5468:58:14","nodeType":"YulExpressionStatement","src":"5468:58:14"},{"nativeSrc":"5535:26:14","nodeType":"YulAssignment","src":"5535:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"5547:9:14","nodeType":"YulIdentifier","src":"5547:9:14"},{"kind":"number","nativeSrc":"5558:2:14","nodeType":"YulLiteral","src":"5558:2:14","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5543:3:14","nodeType":"YulIdentifier","src":"5543:3:14"},"nativeSrc":"5543:18:14","nodeType":"YulFunctionCall","src":"5543:18:14"},"variableNames":[{"name":"tail","nativeSrc":"5535:4:14","nodeType":"YulIdentifier","src":"5535:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_420570715e672bbeddfc22266e08fcd33e8d963e605c0bdbd014e577666917b8__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5215:352:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5366:9:14","nodeType":"YulTypedName","src":"5366:9:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5380:4:14","nodeType":"YulTypedName","src":"5380:4:14","type":""}],"src":"5215:352:14"},{"body":{"nativeSrc":"5666:427:14","nodeType":"YulBlock","src":"5666:427:14","statements":[{"nativeSrc":"5676:51:14","nodeType":"YulVariableDeclaration","src":"5676:51:14","value":{"arguments":[{"name":"ptr_to_tail","nativeSrc":"5715:11:14","nodeType":"YulIdentifier","src":"5715:11:14"}],"functionName":{"name":"calldataload","nativeSrc":"5702:12:14","nodeType":"YulIdentifier","src":"5702:12:14"},"nativeSrc":"5702:25:14","nodeType":"YulFunctionCall","src":"5702:25:14"},"variables":[{"name":"rel_offset_of_tail","nativeSrc":"5680:18:14","nodeType":"YulTypedName","src":"5680:18:14","type":""}]},{"body":{"nativeSrc":"5816:16:14","nodeType":"YulBlock","src":"5816:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5825:1:14","nodeType":"YulLiteral","src":"5825:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"5828:1:14","nodeType":"YulLiteral","src":"5828:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5818:6:14","nodeType":"YulIdentifier","src":"5818:6:14"},"nativeSrc":"5818:12:14","nodeType":"YulFunctionCall","src":"5818:12:14"},"nativeSrc":"5818:12:14","nodeType":"YulExpressionStatement","src":"5818:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nativeSrc":"5750:18:14","nodeType":"YulIdentifier","src":"5750:18:14"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"5778:12:14","nodeType":"YulIdentifier","src":"5778:12:14"},"nativeSrc":"5778:14:14","nodeType":"YulFunctionCall","src":"5778:14:14"},{"name":"base_ref","nativeSrc":"5794:8:14","nodeType":"YulIdentifier","src":"5794:8:14"}],"functionName":{"name":"sub","nativeSrc":"5774:3:14","nodeType":"YulIdentifier","src":"5774:3:14"},"nativeSrc":"5774:29:14","nodeType":"YulFunctionCall","src":"5774:29:14"},{"arguments":[{"kind":"number","nativeSrc":"5809:2:14","nodeType":"YulLiteral","src":"5809:2:14","type":"","value":"30"}],"functionName":{"name":"not","nativeSrc":"5805:3:14","nodeType":"YulIdentifier","src":"5805:3:14"},"nativeSrc":"5805:7:14","nodeType":"YulFunctionCall","src":"5805:7:14"}],"functionName":{"name":"add","nativeSrc":"5770:3:14","nodeType":"YulIdentifier","src":"5770:3:14"},"nativeSrc":"5770:43:14","nodeType":"YulFunctionCall","src":"5770:43:14"}],"functionName":{"name":"slt","nativeSrc":"5746:3:14","nodeType":"YulIdentifier","src":"5746:3:14"},"nativeSrc":"5746:68:14","nodeType":"YulFunctionCall","src":"5746:68:14"}],"functionName":{"name":"iszero","nativeSrc":"5739:6:14","nodeType":"YulIdentifier","src":"5739:6:14"},"nativeSrc":"5739:76:14","nodeType":"YulFunctionCall","src":"5739:76:14"},"nativeSrc":"5736:96:14","nodeType":"YulIf","src":"5736:96:14"},{"nativeSrc":"5841:47:14","nodeType":"YulVariableDeclaration","src":"5841:47:14","value":{"arguments":[{"name":"base_ref","nativeSrc":"5859:8:14","nodeType":"YulIdentifier","src":"5859:8:14"},{"name":"rel_offset_of_tail","nativeSrc":"5869:18:14","nodeType":"YulIdentifier","src":"5869:18:14"}],"functionName":{"name":"add","nativeSrc":"5855:3:14","nodeType":"YulIdentifier","src":"5855:3:14"},"nativeSrc":"5855:33:14","nodeType":"YulFunctionCall","src":"5855:33:14"},"variables":[{"name":"addr_1","nativeSrc":"5845:6:14","nodeType":"YulTypedName","src":"5845:6:14","type":""}]},{"nativeSrc":"5897:30:14","nodeType":"YulAssignment","src":"5897:30:14","value":{"arguments":[{"name":"addr_1","nativeSrc":"5920:6:14","nodeType":"YulIdentifier","src":"5920:6:14"}],"functionName":{"name":"calldataload","nativeSrc":"5907:12:14","nodeType":"YulIdentifier","src":"5907:12:14"},"nativeSrc":"5907:20:14","nodeType":"YulFunctionCall","src":"5907:20:14"},"variableNames":[{"name":"length","nativeSrc":"5897:6:14","nodeType":"YulIdentifier","src":"5897:6:14"}]},{"body":{"nativeSrc":"5970:16:14","nodeType":"YulBlock","src":"5970:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5979:1:14","nodeType":"YulLiteral","src":"5979:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"5982:1:14","nodeType":"YulLiteral","src":"5982:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5972:6:14","nodeType":"YulIdentifier","src":"5972:6:14"},"nativeSrc":"5972:12:14","nodeType":"YulFunctionCall","src":"5972:12:14"},"nativeSrc":"5972:12:14","nodeType":"YulExpressionStatement","src":"5972:12:14"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"5942:6:14","nodeType":"YulIdentifier","src":"5942:6:14"},{"kind":"number","nativeSrc":"5950:18:14","nodeType":"YulLiteral","src":"5950:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5939:2:14","nodeType":"YulIdentifier","src":"5939:2:14"},"nativeSrc":"5939:30:14","nodeType":"YulFunctionCall","src":"5939:30:14"},"nativeSrc":"5936:50:14","nodeType":"YulIf","src":"5936:50:14"},{"nativeSrc":"5995:25:14","nodeType":"YulAssignment","src":"5995:25:14","value":{"arguments":[{"name":"addr_1","nativeSrc":"6007:6:14","nodeType":"YulIdentifier","src":"6007:6:14"},{"kind":"number","nativeSrc":"6015:4:14","nodeType":"YulLiteral","src":"6015:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6003:3:14","nodeType":"YulIdentifier","src":"6003:3:14"},"nativeSrc":"6003:17:14","nodeType":"YulFunctionCall","src":"6003:17:14"},"variableNames":[{"name":"addr","nativeSrc":"5995:4:14","nodeType":"YulIdentifier","src":"5995:4:14"}]},{"body":{"nativeSrc":"6071:16:14","nodeType":"YulBlock","src":"6071:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6080:1:14","nodeType":"YulLiteral","src":"6080:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"6083:1:14","nodeType":"YulLiteral","src":"6083:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6073:6:14","nodeType":"YulIdentifier","src":"6073:6:14"},"nativeSrc":"6073:12:14","nodeType":"YulFunctionCall","src":"6073:12:14"},"nativeSrc":"6073:12:14","nodeType":"YulExpressionStatement","src":"6073:12:14"}]},"condition":{"arguments":[{"name":"addr","nativeSrc":"6036:4:14","nodeType":"YulIdentifier","src":"6036:4:14"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"6046:12:14","nodeType":"YulIdentifier","src":"6046:12:14"},"nativeSrc":"6046:14:14","nodeType":"YulFunctionCall","src":"6046:14:14"},{"name":"length","nativeSrc":"6062:6:14","nodeType":"YulIdentifier","src":"6062:6:14"}],"functionName":{"name":"sub","nativeSrc":"6042:3:14","nodeType":"YulIdentifier","src":"6042:3:14"},"nativeSrc":"6042:27:14","nodeType":"YulFunctionCall","src":"6042:27:14"}],"functionName":{"name":"sgt","nativeSrc":"6032:3:14","nodeType":"YulIdentifier","src":"6032:3:14"},"nativeSrc":"6032:38:14","nodeType":"YulFunctionCall","src":"6032:38:14"},"nativeSrc":"6029:58:14","nodeType":"YulIf","src":"6029:58:14"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nativeSrc":"5572:521:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nativeSrc":"5623:8:14","nodeType":"YulTypedName","src":"5623:8:14","type":""},{"name":"ptr_to_tail","nativeSrc":"5633:11:14","nodeType":"YulTypedName","src":"5633:11:14","type":""}],"returnVariables":[{"name":"addr","nativeSrc":"5649:4:14","nodeType":"YulTypedName","src":"5649:4:14","type":""},{"name":"length","nativeSrc":"5655:6:14","nodeType":"YulTypedName","src":"5655:6:14","type":""}],"src":"5572:521:14"},{"body":{"nativeSrc":"6272:181:14","nodeType":"YulBlock","src":"6272:181:14","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6289:9:14","nodeType":"YulIdentifier","src":"6289:9:14"},{"kind":"number","nativeSrc":"6300:2:14","nodeType":"YulLiteral","src":"6300:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6282:6:14","nodeType":"YulIdentifier","src":"6282:6:14"},"nativeSrc":"6282:21:14","nodeType":"YulFunctionCall","src":"6282:21:14"},"nativeSrc":"6282:21:14","nodeType":"YulExpressionStatement","src":"6282:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6323:9:14","nodeType":"YulIdentifier","src":"6323:9:14"},{"kind":"number","nativeSrc":"6334:2:14","nodeType":"YulLiteral","src":"6334:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6319:3:14","nodeType":"YulIdentifier","src":"6319:3:14"},"nativeSrc":"6319:18:14","nodeType":"YulFunctionCall","src":"6319:18:14"},{"kind":"number","nativeSrc":"6339:2:14","nodeType":"YulLiteral","src":"6339:2:14","type":"","value":"31"}],"functionName":{"name":"mstore","nativeSrc":"6312:6:14","nodeType":"YulIdentifier","src":"6312:6:14"},"nativeSrc":"6312:30:14","nodeType":"YulFunctionCall","src":"6312:30:14"},"nativeSrc":"6312:30:14","nodeType":"YulExpressionStatement","src":"6312:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6362:9:14","nodeType":"YulIdentifier","src":"6362:9:14"},{"kind":"number","nativeSrc":"6373:2:14","nodeType":"YulLiteral","src":"6373:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6358:3:14","nodeType":"YulIdentifier","src":"6358:3:14"},"nativeSrc":"6358:18:14","nodeType":"YulFunctionCall","src":"6358:18:14"},{"hexValue":"496e76616c6964207061796d6173746572416e6444617461206c656e677468","kind":"string","nativeSrc":"6378:33:14","nodeType":"YulLiteral","src":"6378:33:14","type":"","value":"Invalid paymasterAndData length"}],"functionName":{"name":"mstore","nativeSrc":"6351:6:14","nodeType":"YulIdentifier","src":"6351:6:14"},"nativeSrc":"6351:61:14","nodeType":"YulFunctionCall","src":"6351:61:14"},"nativeSrc":"6351:61:14","nodeType":"YulExpressionStatement","src":"6351:61:14"},{"nativeSrc":"6421:26:14","nodeType":"YulAssignment","src":"6421:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"6433:9:14","nodeType":"YulIdentifier","src":"6433:9:14"},{"kind":"number","nativeSrc":"6444:2:14","nodeType":"YulLiteral","src":"6444:2:14","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6429:3:14","nodeType":"YulIdentifier","src":"6429:3:14"},"nativeSrc":"6429:18:14","nodeType":"YulFunctionCall","src":"6429:18:14"},"variableNames":[{"name":"tail","nativeSrc":"6421:4:14","nodeType":"YulIdentifier","src":"6421:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_cfe5951392790b135f98d77ba09049bfbc1a1776c53987baf509c661787d5e3b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6098:355:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6249:9:14","nodeType":"YulTypedName","src":"6249:9:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6263:4:14","nodeType":"YulTypedName","src":"6263:4:14","type":""}],"src":"6098:355:14"},{"body":{"nativeSrc":"6490:95:14","nodeType":"YulBlock","src":"6490:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6507:1:14","nodeType":"YulLiteral","src":"6507:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"6514:3:14","nodeType":"YulLiteral","src":"6514:3:14","type":"","value":"224"},{"kind":"number","nativeSrc":"6519:10:14","nodeType":"YulLiteral","src":"6519:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"6510:3:14","nodeType":"YulIdentifier","src":"6510:3:14"},"nativeSrc":"6510:20:14","nodeType":"YulFunctionCall","src":"6510:20:14"}],"functionName":{"name":"mstore","nativeSrc":"6500:6:14","nodeType":"YulIdentifier","src":"6500:6:14"},"nativeSrc":"6500:31:14","nodeType":"YulFunctionCall","src":"6500:31:14"},"nativeSrc":"6500:31:14","nodeType":"YulExpressionStatement","src":"6500:31:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6547:1:14","nodeType":"YulLiteral","src":"6547:1:14","type":"","value":"4"},{"kind":"number","nativeSrc":"6550:4:14","nodeType":"YulLiteral","src":"6550:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"6540:6:14","nodeType":"YulIdentifier","src":"6540:6:14"},"nativeSrc":"6540:15:14","nodeType":"YulFunctionCall","src":"6540:15:14"},"nativeSrc":"6540:15:14","nodeType":"YulExpressionStatement","src":"6540:15:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6571:1:14","nodeType":"YulLiteral","src":"6571:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"6574:4:14","nodeType":"YulLiteral","src":"6574:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6564:6:14","nodeType":"YulIdentifier","src":"6564:6:14"},"nativeSrc":"6564:15:14","nodeType":"YulFunctionCall","src":"6564:15:14"},"nativeSrc":"6564:15:14","nodeType":"YulExpressionStatement","src":"6564:15:14"}]},"name":"panic_error_0x41","nativeSrc":"6458:127:14","nodeType":"YulFunctionDefinition","src":"6458:127:14"},{"body":{"nativeSrc":"6638:174:14","nodeType":"YulBlock","src":"6638:174:14","statements":[{"nativeSrc":"6648:16:14","nodeType":"YulAssignment","src":"6648:16:14","value":{"arguments":[{"name":"x","nativeSrc":"6659:1:14","nodeType":"YulIdentifier","src":"6659:1:14"},{"name":"y","nativeSrc":"6662:1:14","nodeType":"YulIdentifier","src":"6662:1:14"}],"functionName":{"name":"add","nativeSrc":"6655:3:14","nodeType":"YulIdentifier","src":"6655:3:14"},"nativeSrc":"6655:9:14","nodeType":"YulFunctionCall","src":"6655:9:14"},"variableNames":[{"name":"sum","nativeSrc":"6648:3:14","nodeType":"YulIdentifier","src":"6648:3:14"}]},{"body":{"nativeSrc":"6695:111:14","nodeType":"YulBlock","src":"6695:111:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6716:1:14","nodeType":"YulLiteral","src":"6716:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"6723:3:14","nodeType":"YulLiteral","src":"6723:3:14","type":"","value":"224"},{"kind":"number","nativeSrc":"6728:10:14","nodeType":"YulLiteral","src":"6728:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"6719:3:14","nodeType":"YulIdentifier","src":"6719:3:14"},"nativeSrc":"6719:20:14","nodeType":"YulFunctionCall","src":"6719:20:14"}],"functionName":{"name":"mstore","nativeSrc":"6709:6:14","nodeType":"YulIdentifier","src":"6709:6:14"},"nativeSrc":"6709:31:14","nodeType":"YulFunctionCall","src":"6709:31:14"},"nativeSrc":"6709:31:14","nodeType":"YulExpressionStatement","src":"6709:31:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6760:1:14","nodeType":"YulLiteral","src":"6760:1:14","type":"","value":"4"},{"kind":"number","nativeSrc":"6763:4:14","nodeType":"YulLiteral","src":"6763:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"6753:6:14","nodeType":"YulIdentifier","src":"6753:6:14"},"nativeSrc":"6753:15:14","nodeType":"YulFunctionCall","src":"6753:15:14"},"nativeSrc":"6753:15:14","nodeType":"YulExpressionStatement","src":"6753:15:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6788:1:14","nodeType":"YulLiteral","src":"6788:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"6791:4:14","nodeType":"YulLiteral","src":"6791:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6781:6:14","nodeType":"YulIdentifier","src":"6781:6:14"},"nativeSrc":"6781:15:14","nodeType":"YulFunctionCall","src":"6781:15:14"},"nativeSrc":"6781:15:14","nodeType":"YulExpressionStatement","src":"6781:15:14"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"6679:1:14","nodeType":"YulIdentifier","src":"6679:1:14"},{"name":"sum","nativeSrc":"6682:3:14","nodeType":"YulIdentifier","src":"6682:3:14"}],"functionName":{"name":"gt","nativeSrc":"6676:2:14","nodeType":"YulIdentifier","src":"6676:2:14"},"nativeSrc":"6676:10:14","nodeType":"YulFunctionCall","src":"6676:10:14"},"nativeSrc":"6673:133:14","nodeType":"YulIf","src":"6673:133:14"}]},"name":"checked_add_t_uint256","nativeSrc":"6590:222:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"6621:1:14","nodeType":"YulTypedName","src":"6621:1:14","type":""},{"name":"y","nativeSrc":"6624:1:14","nodeType":"YulTypedName","src":"6624:1:14","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"6630:3:14","nodeType":"YulTypedName","src":"6630:3:14","type":""}],"src":"6590:222:14"},{"body":{"nativeSrc":"6849:95:14","nodeType":"YulBlock","src":"6849:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6866:1:14","nodeType":"YulLiteral","src":"6866:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"6873:3:14","nodeType":"YulLiteral","src":"6873:3:14","type":"","value":"224"},{"kind":"number","nativeSrc":"6878:10:14","nodeType":"YulLiteral","src":"6878:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"6869:3:14","nodeType":"YulIdentifier","src":"6869:3:14"},"nativeSrc":"6869:20:14","nodeType":"YulFunctionCall","src":"6869:20:14"}],"functionName":{"name":"mstore","nativeSrc":"6859:6:14","nodeType":"YulIdentifier","src":"6859:6:14"},"nativeSrc":"6859:31:14","nodeType":"YulFunctionCall","src":"6859:31:14"},"nativeSrc":"6859:31:14","nodeType":"YulExpressionStatement","src":"6859:31:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6906:1:14","nodeType":"YulLiteral","src":"6906:1:14","type":"","value":"4"},{"kind":"number","nativeSrc":"6909:4:14","nodeType":"YulLiteral","src":"6909:4:14","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"6899:6:14","nodeType":"YulIdentifier","src":"6899:6:14"},"nativeSrc":"6899:15:14","nodeType":"YulFunctionCall","src":"6899:15:14"},"nativeSrc":"6899:15:14","nodeType":"YulExpressionStatement","src":"6899:15:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6930:1:14","nodeType":"YulLiteral","src":"6930:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"6933:4:14","nodeType":"YulLiteral","src":"6933:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6923:6:14","nodeType":"YulIdentifier","src":"6923:6:14"},"nativeSrc":"6923:15:14","nodeType":"YulFunctionCall","src":"6923:15:14"},"nativeSrc":"6923:15:14","nodeType":"YulExpressionStatement","src":"6923:15:14"}]},"name":"panic_error_0x32","nativeSrc":"6817:127:14","nodeType":"YulFunctionDefinition","src":"6817:127:14"},{"body":{"nativeSrc":"7169:160:14","nodeType":"YulBlock","src":"7169:160:14","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7186:3:14","nodeType":"YulIdentifier","src":"7186:3:14"},{"kind":"number","nativeSrc":"7191:66:14","nodeType":"YulLiteral","src":"7191:66:14","type":"","value":"0x19457468657265756d205369676e6564204d6573736167653a0a333200000000"}],"functionName":{"name":"mstore","nativeSrc":"7179:6:14","nodeType":"YulIdentifier","src":"7179:6:14"},"nativeSrc":"7179:79:14","nodeType":"YulFunctionCall","src":"7179:79:14"},"nativeSrc":"7179:79:14","nodeType":"YulExpressionStatement","src":"7179:79:14"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"7278:3:14","nodeType":"YulIdentifier","src":"7278:3:14"},{"kind":"number","nativeSrc":"7283:2:14","nodeType":"YulLiteral","src":"7283:2:14","type":"","value":"28"}],"functionName":{"name":"add","nativeSrc":"7274:3:14","nodeType":"YulIdentifier","src":"7274:3:14"},"nativeSrc":"7274:12:14","nodeType":"YulFunctionCall","src":"7274:12:14"},{"name":"value0","nativeSrc":"7288:6:14","nodeType":"YulIdentifier","src":"7288:6:14"}],"functionName":{"name":"mstore","nativeSrc":"7267:6:14","nodeType":"YulIdentifier","src":"7267:6:14"},"nativeSrc":"7267:28:14","nodeType":"YulFunctionCall","src":"7267:28:14"},"nativeSrc":"7267:28:14","nodeType":"YulExpressionStatement","src":"7267:28:14"},{"nativeSrc":"7304:19:14","nodeType":"YulAssignment","src":"7304:19:14","value":{"arguments":[{"name":"pos","nativeSrc":"7315:3:14","nodeType":"YulIdentifier","src":"7315:3:14"},{"kind":"number","nativeSrc":"7320:2:14","nodeType":"YulLiteral","src":"7320:2:14","type":"","value":"60"}],"functionName":{"name":"add","nativeSrc":"7311:3:14","nodeType":"YulIdentifier","src":"7311:3:14"},"nativeSrc":"7311:12:14","nodeType":"YulFunctionCall","src":"7311:12:14"},"variableNames":[{"name":"end","nativeSrc":"7304:3:14","nodeType":"YulIdentifier","src":"7304:3:14"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed","nativeSrc":"6949:380:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"7145:3:14","nodeType":"YulTypedName","src":"7145:3:14","type":""},{"name":"value0","nativeSrc":"7150:6:14","nodeType":"YulTypedName","src":"7150:6:14","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7161:3:14","nodeType":"YulTypedName","src":"7161:3:14","type":""}],"src":"6949:380:14"},{"body":{"nativeSrc":"7508:167:14","nodeType":"YulBlock","src":"7508:167:14","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7525:9:14","nodeType":"YulIdentifier","src":"7525:9:14"},{"kind":"number","nativeSrc":"7536:2:14","nodeType":"YulLiteral","src":"7536:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7518:6:14","nodeType":"YulIdentifier","src":"7518:6:14"},"nativeSrc":"7518:21:14","nodeType":"YulFunctionCall","src":"7518:21:14"},"nativeSrc":"7518:21:14","nodeType":"YulExpressionStatement","src":"7518:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7559:9:14","nodeType":"YulIdentifier","src":"7559:9:14"},{"kind":"number","nativeSrc":"7570:2:14","nodeType":"YulLiteral","src":"7570:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7555:3:14","nodeType":"YulIdentifier","src":"7555:3:14"},"nativeSrc":"7555:18:14","nodeType":"YulFunctionCall","src":"7555:18:14"},{"kind":"number","nativeSrc":"7575:2:14","nodeType":"YulLiteral","src":"7575:2:14","type":"","value":"17"}],"functionName":{"name":"mstore","nativeSrc":"7548:6:14","nodeType":"YulIdentifier","src":"7548:6:14"},"nativeSrc":"7548:30:14","nodeType":"YulFunctionCall","src":"7548:30:14"},"nativeSrc":"7548:30:14","nodeType":"YulExpressionStatement","src":"7548:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7598:9:14","nodeType":"YulIdentifier","src":"7598:9:14"},{"kind":"number","nativeSrc":"7609:2:14","nodeType":"YulLiteral","src":"7609:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7594:3:14","nodeType":"YulIdentifier","src":"7594:3:14"},"nativeSrc":"7594:18:14","nodeType":"YulFunctionCall","src":"7594:18:14"},{"hexValue":"496e76616c6964207369676e6174757265","kind":"string","nativeSrc":"7614:19:14","nodeType":"YulLiteral","src":"7614:19:14","type":"","value":"Invalid signature"}],"functionName":{"name":"mstore","nativeSrc":"7587:6:14","nodeType":"YulIdentifier","src":"7587:6:14"},"nativeSrc":"7587:47:14","nodeType":"YulFunctionCall","src":"7587:47:14"},"nativeSrc":"7587:47:14","nodeType":"YulExpressionStatement","src":"7587:47:14"},{"nativeSrc":"7643:26:14","nodeType":"YulAssignment","src":"7643:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"7655:9:14","nodeType":"YulIdentifier","src":"7655:9:14"},{"kind":"number","nativeSrc":"7666:2:14","nodeType":"YulLiteral","src":"7666:2:14","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7651:3:14","nodeType":"YulIdentifier","src":"7651:3:14"},"nativeSrc":"7651:18:14","nodeType":"YulFunctionCall","src":"7651:18:14"},"variableNames":[{"name":"tail","nativeSrc":"7643:4:14","nodeType":"YulIdentifier","src":"7643:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7334:341:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7485:9:14","nodeType":"YulTypedName","src":"7485:9:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7499:4:14","nodeType":"YulTypedName","src":"7499:4:14","type":""}],"src":"7334:341:14"},{"body":{"nativeSrc":"7854:163:14","nodeType":"YulBlock","src":"7854:163:14","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7871:9:14","nodeType":"YulIdentifier","src":"7871:9:14"},{"kind":"number","nativeSrc":"7882:2:14","nodeType":"YulLiteral","src":"7882:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7864:6:14","nodeType":"YulIdentifier","src":"7864:6:14"},"nativeSrc":"7864:21:14","nodeType":"YulFunctionCall","src":"7864:21:14"},"nativeSrc":"7864:21:14","nodeType":"YulExpressionStatement","src":"7864:21:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7905:9:14","nodeType":"YulIdentifier","src":"7905:9:14"},{"kind":"number","nativeSrc":"7916:2:14","nodeType":"YulLiteral","src":"7916:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7901:3:14","nodeType":"YulIdentifier","src":"7901:3:14"},"nativeSrc":"7901:18:14","nodeType":"YulFunctionCall","src":"7901:18:14"},{"kind":"number","nativeSrc":"7921:2:14","nodeType":"YulLiteral","src":"7921:2:14","type":"","value":"13"}],"functionName":{"name":"mstore","nativeSrc":"7894:6:14","nodeType":"YulIdentifier","src":"7894:6:14"},"nativeSrc":"7894:30:14","nodeType":"YulFunctionCall","src":"7894:30:14"},"nativeSrc":"7894:30:14","nodeType":"YulExpressionStatement","src":"7894:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7944:9:14","nodeType":"YulIdentifier","src":"7944:9:14"},{"kind":"number","nativeSrc":"7955:2:14","nodeType":"YulLiteral","src":"7955:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7940:3:14","nodeType":"YulIdentifier","src":"7940:3:14"},"nativeSrc":"7940:18:14","nodeType":"YulFunctionCall","src":"7940:18:14"},{"hexValue":"6d757374206f76657272696465","kind":"string","nativeSrc":"7960:15:14","nodeType":"YulLiteral","src":"7960:15:14","type":"","value":"must override"}],"functionName":{"name":"mstore","nativeSrc":"7933:6:14","nodeType":"YulIdentifier","src":"7933:6:14"},"nativeSrc":"7933:43:14","nodeType":"YulFunctionCall","src":"7933:43:14"},"nativeSrc":"7933:43:14","nodeType":"YulExpressionStatement","src":"7933:43:14"},{"nativeSrc":"7985:26:14","nodeType":"YulAssignment","src":"7985:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"7997:9:14","nodeType":"YulIdentifier","src":"7997:9:14"},{"kind":"number","nativeSrc":"8008:2:14","nodeType":"YulLiteral","src":"8008:2:14","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7993:3:14","nodeType":"YulIdentifier","src":"7993:3:14"},"nativeSrc":"7993:18:14","nodeType":"YulFunctionCall","src":"7993:18:14"},"variableNames":[{"name":"tail","nativeSrc":"7985:4:14","nodeType":"YulIdentifier","src":"7985:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7680:337:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7831:9:14","nodeType":"YulTypedName","src":"7831:9:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7845:4:14","nodeType":"YulTypedName","src":"7845:4:14","type":""}],"src":"7680:337:14"},{"body":{"nativeSrc":"8054:95:14","nodeType":"YulBlock","src":"8054:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8071:1:14","nodeType":"YulLiteral","src":"8071:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"8078:3:14","nodeType":"YulLiteral","src":"8078:3:14","type":"","value":"224"},{"kind":"number","nativeSrc":"8083:10:14","nodeType":"YulLiteral","src":"8083:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"8074:3:14","nodeType":"YulIdentifier","src":"8074:3:14"},"nativeSrc":"8074:20:14","nodeType":"YulFunctionCall","src":"8074:20:14"}],"functionName":{"name":"mstore","nativeSrc":"8064:6:14","nodeType":"YulIdentifier","src":"8064:6:14"},"nativeSrc":"8064:31:14","nodeType":"YulFunctionCall","src":"8064:31:14"},"nativeSrc":"8064:31:14","nodeType":"YulExpressionStatement","src":"8064:31:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8111:1:14","nodeType":"YulLiteral","src":"8111:1:14","type":"","value":"4"},{"kind":"number","nativeSrc":"8114:4:14","nodeType":"YulLiteral","src":"8114:4:14","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"8104:6:14","nodeType":"YulIdentifier","src":"8104:6:14"},"nativeSrc":"8104:15:14","nodeType":"YulFunctionCall","src":"8104:15:14"},"nativeSrc":"8104:15:14","nodeType":"YulExpressionStatement","src":"8104:15:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8135:1:14","nodeType":"YulLiteral","src":"8135:1:14","type":"","value":"0"},{"kind":"number","nativeSrc":"8138:4:14","nodeType":"YulLiteral","src":"8138:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"8128:6:14","nodeType":"YulIdentifier","src":"8128:6:14"},"nativeSrc":"8128:15:14","nodeType":"YulFunctionCall","src":"8128:15:14"},"nativeSrc":"8128:15:14","nodeType":"YulExpressionStatement","src":"8128:15:14"}]},"name":"panic_error_0x21","nativeSrc":"8022:127:14","nodeType":"YulFunctionDefinition","src":"8022:127:14"},{"body":{"nativeSrc":"8255:76:14","nodeType":"YulBlock","src":"8255:76:14","statements":[{"nativeSrc":"8265:26:14","nodeType":"YulAssignment","src":"8265:26:14","value":{"arguments":[{"name":"headStart","nativeSrc":"8277:9:14","nodeType":"YulIdentifier","src":"8277:9:14"},{"kind":"number","nativeSrc":"8288:2:14","nodeType":"YulLiteral","src":"8288:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8273:3:14","nodeType":"YulIdentifier","src":"8273:3:14"},"nativeSrc":"8273:18:14","nodeType":"YulFunctionCall","src":"8273:18:14"},"variableNames":[{"name":"tail","nativeSrc":"8265:4:14","nodeType":"YulIdentifier","src":"8265:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8307:9:14","nodeType":"YulIdentifier","src":"8307:9:14"},{"name":"value0","nativeSrc":"8318:6:14","nodeType":"YulIdentifier","src":"8318:6:14"}],"functionName":{"name":"mstore","nativeSrc":"8300:6:14","nodeType":"YulIdentifier","src":"8300:6:14"},"nativeSrc":"8300:25:14","nodeType":"YulFunctionCall","src":"8300:25:14"},"nativeSrc":"8300:25:14","nodeType":"YulExpressionStatement","src":"8300:25:14"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"8154:177:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8224:9:14","nodeType":"YulTypedName","src":"8224:9:14","type":""},{"name":"value0","nativeSrc":"8235:6:14","nodeType":"YulTypedName","src":"8235:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8246:4:14","nodeType":"YulTypedName","src":"8246:4:14","type":""}],"src":"8154:177:14"},{"body":{"nativeSrc":"8517:217:14","nodeType":"YulBlock","src":"8517:217:14","statements":[{"nativeSrc":"8527:27:14","nodeType":"YulAssignment","src":"8527:27:14","value":{"arguments":[{"name":"headStart","nativeSrc":"8539:9:14","nodeType":"YulIdentifier","src":"8539:9:14"},{"kind":"number","nativeSrc":"8550:3:14","nodeType":"YulLiteral","src":"8550:3:14","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8535:3:14","nodeType":"YulIdentifier","src":"8535:3:14"},"nativeSrc":"8535:19:14","nodeType":"YulFunctionCall","src":"8535:19:14"},"variableNames":[{"name":"tail","nativeSrc":"8527:4:14","nodeType":"YulIdentifier","src":"8527:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8570:9:14","nodeType":"YulIdentifier","src":"8570:9:14"},{"name":"value0","nativeSrc":"8581:6:14","nodeType":"YulIdentifier","src":"8581:6:14"}],"functionName":{"name":"mstore","nativeSrc":"8563:6:14","nodeType":"YulIdentifier","src":"8563:6:14"},"nativeSrc":"8563:25:14","nodeType":"YulFunctionCall","src":"8563:25:14"},"nativeSrc":"8563:25:14","nodeType":"YulExpressionStatement","src":"8563:25:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8608:9:14","nodeType":"YulIdentifier","src":"8608:9:14"},{"kind":"number","nativeSrc":"8619:2:14","nodeType":"YulLiteral","src":"8619:2:14","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8604:3:14","nodeType":"YulIdentifier","src":"8604:3:14"},"nativeSrc":"8604:18:14","nodeType":"YulFunctionCall","src":"8604:18:14"},{"arguments":[{"name":"value1","nativeSrc":"8628:6:14","nodeType":"YulIdentifier","src":"8628:6:14"},{"kind":"number","nativeSrc":"8636:4:14","nodeType":"YulLiteral","src":"8636:4:14","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"8624:3:14","nodeType":"YulIdentifier","src":"8624:3:14"},"nativeSrc":"8624:17:14","nodeType":"YulFunctionCall","src":"8624:17:14"}],"functionName":{"name":"mstore","nativeSrc":"8597:6:14","nodeType":"YulIdentifier","src":"8597:6:14"},"nativeSrc":"8597:45:14","nodeType":"YulFunctionCall","src":"8597:45:14"},"nativeSrc":"8597:45:14","nodeType":"YulExpressionStatement","src":"8597:45:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8662:9:14","nodeType":"YulIdentifier","src":"8662:9:14"},{"kind":"number","nativeSrc":"8673:2:14","nodeType":"YulLiteral","src":"8673:2:14","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8658:3:14","nodeType":"YulIdentifier","src":"8658:3:14"},"nativeSrc":"8658:18:14","nodeType":"YulFunctionCall","src":"8658:18:14"},{"name":"value2","nativeSrc":"8678:6:14","nodeType":"YulIdentifier","src":"8678:6:14"}],"functionName":{"name":"mstore","nativeSrc":"8651:6:14","nodeType":"YulIdentifier","src":"8651:6:14"},"nativeSrc":"8651:34:14","nodeType":"YulFunctionCall","src":"8651:34:14"},"nativeSrc":"8651:34:14","nodeType":"YulExpressionStatement","src":"8651:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8705:9:14","nodeType":"YulIdentifier","src":"8705:9:14"},{"kind":"number","nativeSrc":"8716:2:14","nodeType":"YulLiteral","src":"8716:2:14","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8701:3:14","nodeType":"YulIdentifier","src":"8701:3:14"},"nativeSrc":"8701:18:14","nodeType":"YulFunctionCall","src":"8701:18:14"},{"name":"value3","nativeSrc":"8721:6:14","nodeType":"YulIdentifier","src":"8721:6:14"}],"functionName":{"name":"mstore","nativeSrc":"8694:6:14","nodeType":"YulIdentifier","src":"8694:6:14"},"nativeSrc":"8694:34:14","nodeType":"YulFunctionCall","src":"8694:34:14"},"nativeSrc":"8694:34:14","nodeType":"YulExpressionStatement","src":"8694:34:14"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"8336:398:14","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8462:9:14","nodeType":"YulTypedName","src":"8462:9:14","type":""},{"name":"value3","nativeSrc":"8473:6:14","nodeType":"YulTypedName","src":"8473:6:14","type":""},{"name":"value2","nativeSrc":"8481:6:14","nodeType":"YulTypedName","src":"8481:6:14","type":""},{"name":"value1","nativeSrc":"8489:6:14","nodeType":"YulTypedName","src":"8489:6:14","type":""},{"name":"value0","nativeSrc":"8497:6:14","nodeType":"YulTypedName","src":"8497:6:14","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8508:4:14","nodeType":"YulTypedName","src":"8508:4:14","type":""}],"src":"8336:398:14"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function validator_revert_address_payable(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address_payable(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_struct$_PackedUserOperation_$1206_calldata_ptrt_bytes32t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if slt(sub(dataEnd, _1), 288) { revert(0, 0) }\n        value0 := _1\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let length := mload(value0)\n        mstore(add(headStart, 64), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(add(headStart, i), 96), mload(add(add(value0, i), 0x20)))\n        }\n        mstore(add(add(headStart, length), 96), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 96)\n        mstore(add(headStart, 0x20), value1)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address_payable(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_enum$_PostOpMode_$1051t_bytes_calldata_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(lt(value, 3)) { revert(0, 0) }\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n        value3 := calldataload(add(headStart, 64))\n        value4 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IEntryPoint_$1024__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address_payable(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Sender not EntryPoint\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_420570715e672bbeddfc22266e08fcd33e8d963e605c0bdbd014e577666917b8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Insufficient deposit for gas\")\n        tail := add(headStart, 96)\n    }\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n        let addr_1 := add(base_ref, rel_offset_of_tail)\n        length := calldataload(addr_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr_1, 0x20)\n        if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n    }\n    function abi_encode_tuple_t_stringliteral_cfe5951392790b135f98d77ba09049bfbc1a1776c53987baf509c661787d5e3b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Invalid paymasterAndData length\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000)\n        mstore(add(pos, 28), value0)\n        end := add(pos, 60)\n    }\n    function abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"must override\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"14":[{"length":32,"start":487},{"length":32,"start":715},{"length":32,"start":866},{"length":32,"start":1069},{"length":32,"start":1223},{"length":32,"start":1335},{"length":32,"start":1476},{"length":32,"start":1676},{"length":32,"start":1814}]},"linkReferences":{},"object":"6080604052600436106100dd5760003560e01c8063b0d691fe1161007f578063c399ec8811610059578063c399ec881461023e578063d0e30db014610261578063f2fde38b14610269578063f74d54801461028957600080fd5b8063b0d691fe146101d5578063bb9fe6bf14610209578063c23a5cea1461021e57600080fd5b806356a1c701116100bb57806356a1c7011461014e578063715018a61461016e5780637c627b21146101835780638da5cb5b146101a357600080fd5b80630396cb60146100e2578063205c2878146100f757806352b7512c14610117575b600080fd5b6100f56100f0366004610c49565b6102a9565b005b34801561010357600080fd5b506100f5610112366004610c8b565b610334565b34801561012357600080fd5b50610137610132366004610cb7565b6103a6565b604051610145929190610d0b565b60405180910390f35b34801561015a57600080fd5b506100f5610169366004610d60565b6103c9565b34801561017a57600080fd5b506100f56103f3565b34801561018f57600080fd5b506100f561019e366004610d7d565b610407565b3480156101af57600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610145565b3480156101e157600080fd5b506101bd7f000000000000000000000000000000000000000000000000000000000000000081565b34801561021557600080fd5b506100f5610423565b34801561022a57600080fd5b506100f5610239366004610d60565b6104a0565b34801561024a57600080fd5b5061025361051f565b604051908152602001610145565b6100f56105af565b34801561027557600080fd5b506100f5610284366004610d60565b610611565b34801561029557600080fd5b506001546101bd906001600160a01b031681565b6102b1610654565b604051621cb65b60e51b815263ffffffff821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690630396cb609034906024016000604051808303818588803b15801561031857600080fd5b505af115801561032c573d6000803e3d6000fd5b505050505050565b61033c610654565b60405163040b850f60e31b81526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063205c287890604401600060405180830381600087803b15801561031857600080fd5b606060006103b2610681565b6103bd8585856106f1565b91509150935093915050565b6103d1610654565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6103fb610654565b61040560006109bc565b565b61040f610681565b61041c8585858585610a0c565b5050505050565b61042b610654565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561048657600080fd5b505af115801561049a573d6000803e3d6000fd5b50505050565b6104a8610654565b60405163611d2e7560e11b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063c23a5cea90602401600060405180830381600087803b15801561050b57600080fd5b505af115801561041c573d6000803e3d6000fd5b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610586573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105aa9190610e15565b905090565b60405163b760faf960e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b760faf99034906024016000604051808303818588803b15801561050b57600080fd5b610619610654565b6001600160a01b03811661064857604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b610651816109bc565b50565b6000546001600160a01b031633146104055760405163118cdaa760e01b815233600482015260240161063f565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104055760405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b604482015260640161063f565b6040516370a0823160e01b815230600482015260609060009083906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801561075d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107819190610e15565b10156107cf5760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e74206465706f73697420666f722067617300000000604482015260640161063f565b60006107de60e0870187610e2e565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050825192935050604190911490506108695760405162461bcd60e51b815260206004820152601f60248201527f496e76616c6964207061796d6173746572416e6444617461206c656e67746800604482015260640161063f565b6040805181815260608101825260009160208201818036833701905050905060005b60408110156108ec57826108a0826001610e7c565b815181106108b0576108b0610e9d565b602001015160f81c60f81b8282815181106108cd576108cd610e9d565b60200101906001600160f81b031916908160001a90535060010161088b565b506040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101879052600090605c0160408051601f198184030181529190528051602090910120905060006109498284610a44565b6001549091506001600160a01b0380831691161461099d5760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b604482015260640161063f565b5050604080516000808252602082019092529890975095505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60405162461bcd60e51b815260206004820152600d60248201526c6d757374206f7665727269646560981b604482015260640161063f565b600080600080610a548686610a70565b925092509250610a648282610abd565b50909150505b92915050565b60008060008351604103610aaa5760208401516040850151606086015160001a610a9c88828585610b7a565b955095509550505050610ab6565b50508151600091506002905b9250925092565b6000826003811115610ad157610ad1610eb3565b03610ada575050565b6001826003811115610aee57610aee610eb3565b03610b0c5760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115610b2057610b20610eb3565b03610b415760405163fce698f760e01b81526004810182905260240161063f565b6003826003811115610b5557610b55610eb3565b03610b76576040516335e2f38360e21b81526004810182905260240161063f565b5050565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610bb55750600091506003905082610c3f565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610c09573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610c3557506000925060019150829050610c3f565b9250600091508190505b9450945094915050565b600060208284031215610c5b57600080fd5b813563ffffffff81168114610c6f57600080fd5b9392505050565b6001600160a01b038116811461065157600080fd5b60008060408385031215610c9e57600080fd5b8235610ca981610c76565b946020939093013593505050565b600080600060608486031215610ccc57600080fd5b833567ffffffffffffffff811115610ce357600080fd5b84016101208187031215610cf657600080fd5b95602085013595506040909401359392505050565b604081526000835180604084015260005b81811015610d395760208187018101516060868401015201610d1c565b506000606082850101526060601f19601f8301168401019150508260208301529392505050565b600060208284031215610d7257600080fd5b8135610c6f81610c76565b600080600080600060808688031215610d9557600080fd5b853560038110610da457600080fd5b9450602086013567ffffffffffffffff80821115610dc157600080fd5b818801915088601f830112610dd557600080fd5b813581811115610de457600080fd5b896020828501011115610df657600080fd5b9699602092909201985095966040810135965060600135945092505050565b600060208284031215610e2757600080fd5b5051919050565b6000808335601e19843603018112610e4557600080fd5b83018035915067ffffffffffffffff821115610e6057600080fd5b602001915036819003821315610e7557600080fd5b9250929050565b80820180821115610a6a57634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fdfea264697066735822122095a9b5a285b04073395775de6699c3c0ad54607eb7c6ed52367b02deefa665ad64736f6c63430008170033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB0D691FE GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xC399EC88 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC399EC88 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xF74D5480 EQ PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0xBB9FE6BF EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xC23A5CEA EQ PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x56A1C701 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x56A1C701 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x7C627B21 EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x396CB60 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x205C2878 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x52B7512C EQ PUSH2 0x117 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF5 PUSH2 0xF0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC49 JUMP JUMPDEST PUSH2 0x2A9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x112 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8B JUMP JUMPDEST PUSH2 0x334 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x137 PUSH2 0x132 CALLDATASIZE PUSH1 0x4 PUSH2 0xCB7 JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x145 SWAP3 SWAP2 SWAP1 PUSH2 0xD0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x169 CALLDATASIZE PUSH1 0x4 PUSH2 0xD60 JUMP JUMPDEST PUSH2 0x3C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x3F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x19E CALLDATASIZE PUSH1 0x4 PUSH2 0xD7D JUMP JUMPDEST PUSH2 0x407 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x145 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BD PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x423 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0xD60 JUMP JUMPDEST PUSH2 0x4A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x51F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x145 JUMP JUMPDEST PUSH2 0xF5 PUSH2 0x5AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x284 CALLDATASIZE PUSH1 0x4 PUSH2 0xD60 JUMP JUMPDEST PUSH2 0x611 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x1BD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2B1 PUSH2 0x654 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x1CB65B PUSH1 0xE5 SHL DUP2 MSTORE PUSH4 0xFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x396CB60 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x32C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x33C PUSH2 0x654 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x40B850F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x205C2878 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x3B2 PUSH2 0x681 JUMP JUMPDEST PUSH2 0x3BD DUP6 DUP6 DUP6 PUSH2 0x6F1 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3D1 PUSH2 0x654 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x3FB PUSH2 0x654 JUMP JUMPDEST PUSH2 0x405 PUSH1 0x0 PUSH2 0x9BC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x40F PUSH2 0x681 JUMP JUMPDEST PUSH2 0x41C DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xA0C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x42B PUSH2 0x654 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB9FE6BF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x49A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x4A8 PUSH2 0x654 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x611D2E75 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xC23A5CEA SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x50B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x41C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x586 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5AA SWAP2 SWAP1 PUSH2 0xE15 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB760FAF9 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB760FAF9 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x50B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x619 PUSH2 0x654 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x648 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x651 DUP2 PUSH2 0x9BC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x63F JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14D95B99195C881B9BDD08115B9D1C9E541BDA5B9D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x60 SWAP1 PUSH1 0x0 SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x75D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x781 SWAP2 SWAP1 PUSH2 0xE15 JUMP JUMPDEST LT ISZERO PUSH2 0x7CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206465706F73697420666F722067617300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7DE PUSH1 0xE0 DUP8 ADD DUP8 PUSH2 0xE2E JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP DUP3 MLOAD SWAP3 SWAP4 POP POP PUSH1 0x41 SWAP1 SWAP2 EQ SWAP1 POP PUSH2 0x869 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207061796D6173746572416E6444617461206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP2 DUP2 MSTORE PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8EC JUMPI DUP3 PUSH2 0x8A0 DUP3 PUSH1 0x1 PUSH2 0xE7C JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x8B0 JUMPI PUSH2 0x8B0 PUSH2 0xE9D JUMP JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x8CD JUMPI PUSH2 0x8CD PUSH2 0xE9D JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x1 ADD PUSH2 0x88B JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x5C ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x949 DUP3 DUP5 PUSH2 0xA44 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP2 AND EQ PUSH2 0x99D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x63F JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP9 SWAP1 SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x6D757374206F76657272696465 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xA54 DUP7 DUP7 PUSH2 0xA70 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xA64 DUP3 DUP3 PUSH2 0xABD JUMP JUMPDEST POP SWAP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0xAAA JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0xA9C DUP9 DUP3 DUP6 DUP6 PUSH2 0xB7A JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0xAB6 JUMP JUMPDEST POP POP DUP2 MLOAD PUSH1 0x0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xAD1 JUMPI PUSH2 0xAD1 PUSH2 0xEB3 JUMP JUMPDEST SUB PUSH2 0xADA JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xAEE JUMPI PUSH2 0xAEE PUSH2 0xEB3 JUMP JUMPDEST SUB PUSH2 0xB0C JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB20 JUMPI PUSH2 0xB20 PUSH2 0xEB3 JUMP JUMPDEST SUB PUSH2 0xB41 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xB55 JUMPI PUSH2 0xB55 PUSH2 0xEB3 JUMP JUMPDEST SUB PUSH2 0xB76 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x63F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0xBB5 JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0xC3F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC09 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC35 JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0xC3F JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xC6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x651 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xCA9 DUP2 PUSH2 0xC76 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH2 0x120 DUP2 DUP8 SUB SLT ISZERO PUSH2 0xCF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD39 JUMPI PUSH1 0x20 DUP2 DUP8 ADD DUP2 ADD MLOAD PUSH1 0x60 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0xD1C JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x60 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC6F DUP2 PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0xDA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xDC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xDE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xDF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP9 POP SWAP6 SWAP7 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP7 POP PUSH1 0x60 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0xE45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0xE75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xA6A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0xA9 0xB5 LOG2 DUP6 0xB0 BLOCKHASH PUSH20 0x395775DE6699C3C0AD54607EB7C6ED52367B02DE 0xEF 0xA6 PUSH6 0xAD64736F6C63 NUMBER STOP ADDMOD OR STOP CALLER ","sourceMap":"293:2819:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4651:140:0;;;;;;:::i;:::-;;:::i;:::-;;4255:171;;;;;;;;;;-1:-1:-1;4255:171:0;;;;;:::i;:::-;;:::i;1428:321::-;;;;;;;;;;-1:-1:-1;1428:321:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;977:116:13;;;;;;;;;;-1:-1:-1;977:116:13;;;;;:::i;:::-;;:::i;2293:101:9:-;;;;;;;;;;;;;:::i;2225:278:0:-;;;;;;;;;;-1:-1:-1;2225:278:0;;;;;:::i;:::-;;:::i;1638:85:9:-;;;;;;;;;;-1:-1:-1;1684:7:9;1710:6;-1:-1:-1;;;;;1710:6:9;1638:85;;;-1:-1:-1;;;;;3238:32:14;;;3220:51;;3208:2;3193:18;1638:85:9;3074:203:14;544:39:0;;;;;;;;;;;;;;;5144:83;;;;;;;;;;;;;:::i;5448:133::-;;;;;;;;;;-1:-1:-1;5448:133:0;;;;;:::i;:::-;;:::i;4874:111::-;;;;;;;;;;;;;:::i;:::-;;;3924:25:14;;;3912:2;3897:18;4874:111:0;3778:177:14;3986:104:0;;;:::i;2543:215:9:-;;;;;;;;;;-1:-1:-1;2543:215:9;;;;;:::i;:::-;;:::i;441:28:13:-;;;;;;;;;;-1:-1:-1;441:28:13;;;;-1:-1:-1;;;;;441:28:13;;;4651:140:0;1531:13:9;:11;:13::i;:::-;4730:54:0::1;::::0;-1:-1:-1;;;4730:54:0;;4134:10:14;4122:23;;4730:54:0::1;::::0;::::1;4104:42:14::0;4730:10:0::1;-1:-1:-1::0;;;;;4730:19:0::1;::::0;::::1;::::0;4757:9:::1;::::0;4077:18:14;;4730:54:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;4651:140:::0;:::o;4255:171::-;1531:13:9;:11;:13::i;:::-;4373:46:0::1;::::0;-1:-1:-1;;;4373:46:0;;-1:-1:-1;;;;;4365:32:14;;;4373:46:0::1;::::0;::::1;4347:51:14::0;4414:18;;;4407:34;;;4373:10:0::1;:21;::::0;::::1;::::0;4320:18:14;;4373:46:0::1;;;;;;;;;;;;;;;;;::::0;::::1;1428:321:::0;1592:20;1614:22;1648:24;:22;:24::i;:::-;1689:53;1714:6;1722:10;1734:7;1689:24;:53::i;:::-;1682:60;;;;1428:321;;;;;;:::o;977:116:13:-;1531:13:9;:11;:13::i;:::-;1056::13::1;:30:::0;;-1:-1:-1;;;;;;1056:30:13::1;-1:-1:-1::0;;;;;1056:30:13;;;::::1;::::0;;;::::1;::::0;;977:116::o;2293:101:9:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2225:278:0:-;2402:24;:22;:24::i;:::-;2436:60;2444:4;2450:7;;2459:13;2474:21;2436:7;:60::i;:::-;2225:278;;;;;:::o;5144:83::-;1531:13:9;:11;:13::i;:::-;5196:10:0::1;-1:-1:-1::0;;;;;5196:22:0::1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;5144:83::o:0;5448:133::-;1531:13:9;:11;:13::i;:::-;5533:41:0::1;::::0;-1:-1:-1;;;5533:41:0;;-1:-1:-1;;;;;3238:32:14;;;5533:41:0::1;::::0;::::1;3220:51:14::0;5533:10:0::1;:24;::::0;::::1;::::0;3193:18:14;;5533:41:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;4874:111:::0;4943:35;;-1:-1:-1;;;4943:35:0;;4972:4;4943:35;;;3220:51:14;4917:7:0;;4943:10;-1:-1:-1;;;;;4943:20:0;;;;3193:18:14;;4943:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4936:42;;4874:111;:::o;3986:104::-;4030:53;;-1:-1:-1;;;4030:53:0;;4077:4;4030:53;;;3220:51:14;4030:10:0;-1:-1:-1;;;;;4030:20:0;;;;4058:9;;3193:18:14;;4030:53:0;;;;;;;;;;;;;;;;;;;2543:215:9;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:9;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:9;;2700:1:::1;2672:31;::::0;::::1;3220:51:14::0;3193:18;;2672:31:9::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:9;735:10:10;1855:23:9;1851:101;;1901:40;;-1:-1:-1;;;1901:40:9;;735:10:10;1901:40:9;;;3220:51:14;3193:18;;1901:40:9;3074:203:14;5660:135:0;5729:10;-1:-1:-1;;;;;5751:10:0;5729:33;;5721:67;;;;-1:-1:-1;;;5721:67:0;;5067:2:14;5721:67:0;;;5049:21:14;5106:2;5086:18;;;5079:30;-1:-1:-1;;;5125:18:14;;;5118:51;5186:18;;5721:67:0;4865:345:14;1400:1220:13;1713:57;;-1:-1:-1;;;1713:57:13;;1764:4;1713:57;;;3220:51:14;1570:20:13;;1592:22;;1774:7;;-1:-1:-1;;;;;1733:10:13;1713:42;;;;3193:18:14;;1713:57:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:68;;1705:109;;;;-1:-1:-1;;;1705:109:13;;5417:2:14;1705:109:13;;;5399:21:14;5456:2;5436:18;;;5429:30;5495;5475:18;;;5468:58;5543:18;;1705:109:13;5215:352:14;1705:109:13;1890:29;1922:23;;;;:6;:23;:::i;:::-;1890:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1963:23:13;;1890:55;;-1:-1:-1;;1990:2:13;1963:29;;;;-1:-1:-1;1955:73:13;;;;-1:-1:-1;;;1955:73:13;;6300:2:14;1955:73:13;;;6282:21:14;6339:2;6319:18;;;6312:30;6378:33;6358:18;;;6351:61;6429:18;;1955:73:13;6098:355:14;1955:73:13;2074:2;2064:13;;;;;;;;;;2039:22;;2064:13;;;;;;;;;;-1:-1:-1;2064:13:13;2039:38;;2092:6;2087:93;2108:2;2104:1;:6;2087:93;;;2146:16;2163:5;:1;2167;2163:5;:::i;:::-;2146:23;;;;;;;;:::i;:::-;;;;;;;;;2131:9;2141:1;2131:12;;;;;;;;:::i;:::-;;;;:38;-1:-1:-1;;;;;2131:38:13;;;;;;;;-1:-1:-1;2112:3:13;;2087:93;;;-1:-1:-1;2299:64:13;;7191:66:14;2299:64:13;;;7179:79:14;7274:12;;;7267:28;;;2274:12:13;;7311::14;;2299:64:13;;;-1:-1:-1;;2299:64:13;;;;;;;;;2289:75;;2299:64;2289:75;;;;;-1:-1:-1;2407:23:13;2433;2289:75;2446:9;2433:12;:23::i;:::-;2493:13;;2407:49;;-1:-1:-1;;;;;;2474:32:13;;;2493:13;;2474:32;2466:62;;;;-1:-1:-1;;;2466:62:13;;7536:2:14;2466:62:13;;;7518:21:14;7575:2;7555:18;;;7548:30;-1:-1:-1;;;7594:18:14;;;7587:47;7651:18;;2466:62:13;7334:341:14;2466:62:13;-1:-1:-1;;2597:12:13;;;2607:1;2597:12;;;;;;;;;;2607:1;;-1:-1:-1;2589:24:13;-1:-1:-1;;;;;;1400:1220:13:o;2912:187:9:-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:9;;;-1:-1:-1;;;;;;3020:17:9;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;3507:378:0:-;3855:23;;-1:-1:-1;;;3855:23:0;;7882:2:14;3855:23:0;;;7864:21:14;7921:2;7901:18;;;7894:30;-1:-1:-1;;;7940:18:14;;;7933:43;7993:18;;3855:23:0;7680:337:14;3714:255:11;3792:7;3812:17;3831:18;3851:16;3871:27;3882:4;3888:9;3871:10;:27::i;:::-;3811:87;;;;;;3908:28;3920:5;3927:8;3908:11;:28::i;:::-;-1:-1:-1;3953:9:11;;-1:-1:-1;;3714:255:11;;;;;:::o;2129:778::-;2232:17;2251:16;2269:14;2299:9;:16;2319:2;2299:22;2295:606;;2604:4;2589:20;;2583:27;2653:4;2638:20;;2632:27;2710:4;2695:20;;2689:27;2337:9;2681:36;2751:25;2762:4;2681:36;2583:27;2632;2751:10;:25::i;:::-;2744:32;;;;;;;;;;;2295:606;-1:-1:-1;;2872:16:11;;2823:1;;-1:-1:-1;2827:35:11;;2295:606;2129:778;;;;;:::o;7280:532::-;7375:20;7366:5;:29;;;;;;;;:::i;:::-;;7362:444;;7280:532;;:::o;7362:444::-;7471:29;7462:5;:38;;;;;;;;:::i;:::-;;7458:348;;7523:23;;-1:-1:-1;;;7523:23:11;;;;;;;;;;;7458:348;7576:35;7567:5;:44;;;;;;;;:::i;:::-;;7563:243;;7634:46;;-1:-1:-1;;;7634:46:11;;;;;3924:25:14;;;3897:18;;7634:46:11;3778:177:14;7563:243:11;7710:30;7701:5;:39;;;;;;;;:::i;:::-;;7697:109;;7763:32;;-1:-1:-1;;;7763:32:11;;;;;3924:25:14;;;3897:18;;7763:32:11;3778:177:14;7697:109:11;7280:532;;:::o;5203:1551::-;5329:17;;;6283:66;6270:79;;6266:164;;;-1:-1:-1;6381:1:11;;-1:-1:-1;6385:30:11;;-1:-1:-1;6417:1:11;6365:54;;6266:164;6541:24;;;6524:14;6541:24;;;;;;;;;8563:25:14;;;8636:4;8624:17;;8604:18;;;8597:45;;;;8658:18;;;8651:34;;;8701:18;;;8694:34;;;6541:24:11;;8535:19:14;;6541:24:11;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6541:24:11;;-1:-1:-1;;6541:24:11;;;-1:-1:-1;;;;;;;6579:20:11;;6575:113;;-1:-1:-1;6631:1:11;;-1:-1:-1;6635:29:11;;-1:-1:-1;6631:1:11;;-1:-1:-1;6615:62:11;;6575:113;6706:6;-1:-1:-1;6714:20:11;;-1:-1:-1;6714:20:11;;-1:-1:-1;5203:1551:11;;;;;;;;;:::o;14:276:14:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:10;223:5;219:22;212:5;209:33;199:61;;256:1;253;246:12;199:61;279:5;14:276;-1:-1:-1;;;14:276:14:o;295:139::-;-1:-1:-1;;;;;378:31:14;;368:42;;358:70;;424:1;421;414:12;439:331;515:6;523;576:2;564:9;555:7;551:23;547:32;544:52;;;592:1;589;582:12;544:52;631:9;618:23;650:39;683:5;650:39;:::i;:::-;708:5;760:2;745:18;;;;732:32;;-1:-1:-1;;;439:331:14:o;775:535::-;891:6;899;907;960:2;948:9;939:7;935:23;931:32;928:52;;;976:1;973;966:12;928:52;1016:9;1003:23;1049:18;1041:6;1038:30;1035:50;;;1081:1;1078;1071:12;1035:50;1104:22;;1160:3;1142:16;;;1138:26;1135:46;;;1177:1;1174;1167:12;1135:46;1200:2;1249;1234:18;;1221:32;;-1:-1:-1;1300:2:14;1285:18;;;1272:32;;775:535;-1:-1:-1;;;775:535:14:o;1315:602::-;1490:2;1479:9;1472:21;1453:4;1522:6;1516:13;1565:6;1560:2;1549:9;1545:18;1538:34;1590:1;1600:144;1614:6;1611:1;1608:13;1600:144;;;1727:4;1711:14;;;1707:25;;1701:32;1696:2;1677:17;;;1673:26;1666:68;1629:12;1600:144;;;1604:3;1793:1;1788:2;1779:6;1768:9;1764:22;1760:31;1753:42;1863:2;1856;1852:7;1847:2;1839:6;1835:15;1831:29;1820:9;1816:45;1812:54;1804:62;;;1904:6;1897:4;1886:9;1882:20;1875:36;1315:602;;;;;:::o;1922:255::-;1981:6;2034:2;2022:9;2013:7;2009:23;2005:32;2002:52;;;2050:1;2047;2040:12;2002:52;2089:9;2076:23;2108:39;2141:5;2108:39;:::i;2182:887::-;2294:6;2302;2310;2318;2326;2379:3;2367:9;2358:7;2354:23;2350:33;2347:53;;;2396:1;2393;2386:12;2347:53;2435:9;2422:23;2474:1;2467:5;2464:12;2454:40;;2490:1;2487;2480:12;2454:40;2513:5;-1:-1:-1;2569:2:14;2554:18;;2541:32;2592:18;2622:14;;;2619:34;;;2649:1;2646;2639:12;2619:34;2687:6;2676:9;2672:22;2662:32;;2732:7;2725:4;2721:2;2717:13;2713:27;2703:55;;2754:1;2751;2744:12;2703:55;2794:2;2781:16;2820:2;2812:6;2809:14;2806:34;;;2836:1;2833;2826:12;2806:34;2881:7;2876:2;2867:6;2863:2;2859:15;2855:24;2852:37;2849:57;;;2902:1;2899;2892:12;2849:57;2182:887;;2933:2;2925:11;;;;;-1:-1:-1;2955:6:14;;3008:2;2993:18;;2980:32;;-1:-1:-1;3059:2:14;3044:18;3031:32;;-1:-1:-1;2182:887:14;-1:-1:-1;;;2182:887:14:o;4676:184::-;4746:6;4799:2;4787:9;4778:7;4774:23;4770:32;4767:52;;;4815:1;4812;4805:12;4767:52;-1:-1:-1;4838:16:14;;4676:184;-1:-1:-1;4676:184:14:o;5572:521::-;5649:4;5655:6;5715:11;5702:25;5809:2;5805:7;5794:8;5778:14;5774:29;5770:43;5750:18;5746:68;5736:96;;5828:1;5825;5818:12;5736:96;5855:33;;5907:20;;;-1:-1:-1;5950:18:14;5939:30;;5936:50;;;5982:1;5979;5972:12;5936:50;6015:4;6003:17;;-1:-1:-1;6046:14:14;6042:27;;;6032:38;;6029:58;;;6083:1;6080;6073:12;6029:58;5572:521;;;;;:::o;6590:222::-;6655:9;;;6676:10;;;6673:133;;;6728:10;6723:3;6719:20;6716:1;6709:31;6763:4;6760:1;6753:15;6791:4;6788:1;6781:15;6817:127;6878:10;6873:3;6869:20;6866:1;6859:31;6909:4;6906:1;6899:15;6933:4;6930:1;6923:15;8022:127;8083:10;8078:3;8074:20;8071:1;8064:31;8114:4;8111:1;8104:15;8138:4;8135:1;8128:15"},"methodIdentifiers":{"addStake(uint32)":"0396cb60","deposit()":"d0e30db0","entryPoint()":"b0d691fe","getDeposit()":"c399ec88","owner()":"8da5cb5b","postOp(uint8,bytes,uint256,uint256)":"7c627b21","renounceOwnership()":"715018a6","setTrustedSigner(address)":"56a1c701","transferOwnership(address)":"f2fde38b","trustedSigner()":"f74d5480","unlockStake()":"bb9fe6bf","validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":"52b7512c","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_trustedSigner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualUserOpFeePerGas\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trustedSigner\",\"type\":\"address\"}],\"name\":\"setTrustedSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A Paymaster contract for ERC-4337 that validates a signature.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- The unstake delay for this paymaster. Can only be increased.\"}},\"constructor\":{\"details\":\"Constructor to initialize the paymaster with the trusted signer and EntryPoint.\",\"params\":{\"_entryPoint\":\"The address of the EntryPoint contract.\",\"_trustedSigner\":\"The address of the trusted signer.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256,uint256)\":{\"params\":{\"actualGasCost\":\"- Actual gas used so far (without this postOp call).\",\"actualUserOpFeePerGas\":\"- the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas                        and maxPriorityFee (and basefee)                        It is not the same as tx.gasprice, which is what the bundler pays.\",\"context\":\"- The context value returned by validatePaymasterUserOp\",\"mode\":\"- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. The paymaster still has to pay for gas.                        postOpReverted - never passed in a call to postOp().\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setTrustedSigner(address)\":{\"details\":\"Sets the trusted signer address.\",\"params\":{\"_trustedSigner\":\"The new trusted signer address.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"- The maximum cost of this transaction (based on maximum gas and gas price from userOp).\",\"userOp\":\"- The user operation.\",\"userOpHash\":\"- Hash of the user's request data.\"},\"returns\":{\"context\":\"       - Value to send to a postOp. Zero length to signify postOp is not required.\",\"validationData\":\"- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                                    other values are invalid for paymaster.                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"- Amount to withdraw.\",\"withdrawAddress\":\"- Target to send to.\"}}},\"title\":\"VerifyingPaymaster\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add stake for this paymaster. This method can also carry eth value to add to the current stake.\"},\"deposit()\":{\"notice\":\"Add a deposit for this paymaster, used for paying for transaction fees.\"},\"getDeposit()\":{\"notice\":\"Return current paymaster's deposit on the entryPoint.\"},\"postOp(uint8,bytes,uint256,uint256)\":{\"notice\":\"Post-operation handler. Must verify sender is the entryPoint.\"},\"unlockStake()\":{\"notice\":\"Unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw value from the deposit.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SignatureVerifyingPaymaster.sol\":\"VerifyingPaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/core/BasePaymaster.sol\":{\"keccak256\":\"0x156dd80127599c02937985a4fe44dd6424e29445af9aae886aff0f1993af43ab\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9a6afd9203f905b1d9a95f354e06d9b61328e5d27844d96100175718edb859ef\",\"dweb:/ipfs/QmYyKGTMaTyjDKY1QyThLJL8BZgUrTAxrHL3SNmRJLqnji\"]},\"@account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e\",\"dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc\"]},\"@account-abstraction/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc\",\"dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS\"]},\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155\",\"dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5\"]},\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9\",\"dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe\"]},\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3\",\"dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk\"]},\"@account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x49d8dbf8a85b006bcd89bbc40e4e9e113997cc016007de85263bdae70572d07f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bc0d83804c1b795d5c216b3518cd176c48f90db28550f267cbd89746d6b476c8\",\"dweb:/ipfs/QmNdCm4c6hnt7f6Q8q21QjtCNZWWRUaMVEYnQHEv68VnKt\"]},\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00\",\"dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj\"]},\"@account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/SignatureVerifyingPaymaster.sol\":{\"keccak256\":\"0x1629ddc4aaeeff9d28e7eef65fc015c013c0d5bc280b736566030f8490ef6fcd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2799fec3b4bf034c8e8bd302c2f42320777356467e740a96412c197e6e3657e3\",\"dweb:/ipfs/QmQZH9TDwTuHiJtdeGfU7EiN2NQrp19vwW2KsKyg1bn8RZ\"]}},\"version\":1}"}}}}}