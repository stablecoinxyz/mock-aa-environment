{"id":"2c34d4ff282084f415dc9762bcf2dfa3","_format":"hh-sol-build-info-1","solcVersion":"0.8.23","solcLongVersion":"0.8.23+commit.f704f362","input":{"language":"Solidity","sources":{"@account-abstraction/contracts/interfaces/IAggregator.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.7.5;\n\nimport \"./PackedUserOperation.sol\";\n\n/**\n * Aggregated Signatures validator.\n */\ninterface IAggregator {\n    /**\n     * Validate aggregated signature.\n     * Revert if the aggregated signature does not match the given list of operations.\n     * @param userOps   - Array of UserOperations to validate the signature for.\n     * @param signature - The aggregated signature.\n     */\n    function validateSignatures(\n        PackedUserOperation[] calldata userOps,\n        bytes calldata signature\n    ) external view;\n\n    /**\n     * Validate signature of a single userOp.\n     * This method should be called by bundler after EntryPointSimulation.simulateValidation() returns\n     * the aggregator this account uses.\n     * First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n     * @param userOp        - The userOperation received from the user.\n     * @return sigForUserOp - The value to put into the signature field of the userOp when calling handleOps.\n     *                        (usually empty, unless account and aggregator support some kind of \"multisig\".\n     */\n    function validateUserOpSignature(\n        PackedUserOperation calldata userOp\n    ) external view returns (bytes memory sigForUserOp);\n\n    /**\n     * Aggregate multiple signatures into a single value.\n     * This method is called off-chain to calculate the signature to pass with handleOps()\n     * bundler MAY use optimized custom code perform this aggregation.\n     * @param userOps              - Array of UserOperations to collect the signatures from.\n     * @return aggregatedSignature - The aggregated signature.\n     */\n    function aggregateSignatures(\n        PackedUserOperation[] calldata userOps\n    ) external view returns (bytes memory aggregatedSignature);\n}\n"},"@account-abstraction/contracts/interfaces/IEntryPoint.sol":{"content":"/**\n ** Account-Abstraction (EIP-4337) singleton EntryPoint implementation.\n ** Only one instance required on each chain.\n **/\n// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.7.5;\n\n/* solhint-disable avoid-low-level-calls */\n/* solhint-disable no-inline-assembly */\n/* solhint-disable reason-string */\n\nimport \"./PackedUserOperation.sol\";\nimport \"./IStakeManager.sol\";\nimport \"./IAggregator.sol\";\nimport \"./INonceManager.sol\";\n\ninterface IEntryPoint is IStakeManager, INonceManager {\n    /***\n     * An event emitted after each successful request.\n     * @param userOpHash    - Unique identifier for the request (hash its entire content, except signature).\n     * @param sender        - The account that generates this request.\n     * @param paymaster     - If non-null, the paymaster that pays for this request.\n     * @param nonce         - The nonce value from the request.\n     * @param success       - True if the sender transaction succeeded, false if reverted.\n     * @param actualGasCost - Actual amount paid (by account or paymaster) for this UserOperation.\n     * @param actualGasUsed - Total gas used by this UserOperation (including preVerification, creation,\n     *                        validation and execution).\n     */\n    event UserOperationEvent(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        address indexed paymaster,\n        uint256 nonce,\n        bool success,\n        uint256 actualGasCost,\n        uint256 actualGasUsed\n    );\n\n    /**\n     * Account \"sender\" was deployed.\n     * @param userOpHash - The userOp that deployed this account. UserOperationEvent will follow.\n     * @param sender     - The account that is deployed\n     * @param factory    - The factory used to deploy this account (in the initCode)\n     * @param paymaster  - The paymaster used by this UserOp\n     */\n    event AccountDeployed(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        address factory,\n        address paymaster\n    );\n\n    /**\n     * An event emitted if the UserOperation \"callData\" reverted with non-zero length.\n     * @param userOpHash   - The request unique identifier.\n     * @param sender       - The sender of this request.\n     * @param nonce        - The nonce used in the request.\n     * @param revertReason - The return bytes from the (reverted) call to \"callData\".\n     */\n    event UserOperationRevertReason(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        uint256 nonce,\n        bytes revertReason\n    );\n\n    /**\n     * An event emitted if the UserOperation Paymaster's \"postOp\" call reverted with non-zero length.\n     * @param userOpHash   - The request unique identifier.\n     * @param sender       - The sender of this request.\n     * @param nonce        - The nonce used in the request.\n     * @param revertReason - The return bytes from the (reverted) call to \"callData\".\n     */\n    event PostOpRevertReason(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        uint256 nonce,\n        bytes revertReason\n    );\n\n    /**\n     * UserOp consumed more than prefund. The UserOperation is reverted, and no refund is made.\n     * @param userOpHash   - The request unique identifier.\n     * @param sender       - The sender of this request.\n     * @param nonce        - The nonce used in the request.\n     */\n    event UserOperationPrefundTooLow(\n        bytes32 indexed userOpHash,\n        address indexed sender,\n        uint256 nonce\n    );\n\n    /**\n     * An event emitted by handleOps(), before starting the execution loop.\n     * Any event emitted before this event, is part of the validation.\n     */\n    event BeforeExecution();\n\n    /**\n     * Signature aggregator used by the following UserOperationEvents within this bundle.\n     * @param aggregator - The aggregator used for the following UserOperationEvents.\n     */\n    event SignatureAggregatorChanged(address indexed aggregator);\n\n    /**\n     * A custom revert error of handleOps, to identify the offending op.\n     * Should be caught in off-chain handleOps simulation and not happen on-chain.\n     * Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\n     * NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n     * @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n     * @param reason  - Revert reason. The string starts with a unique code \"AAmn\",\n     *                  where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n     *                  so a failure can be attributed to the correct entity.\n     */\n    error FailedOp(uint256 opIndex, string reason);\n\n    /**\n     * A custom revert error of handleOps, to report a revert by account or paymaster.\n     * @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n     * @param reason  - Revert reason. see FailedOp(uint256,string), above\n     * @param inner   - data from inner cought revert reason\n     * @dev note that inner is truncated to 2048 bytes\n     */\n    error FailedOpWithRevert(uint256 opIndex, string reason, bytes inner);\n\n    error PostOpReverted(bytes returnData);\n\n    /**\n     * Error case when a signature aggregator fails to verify the aggregated signature it had created.\n     * @param aggregator The aggregator that failed to verify the signature\n     */\n    error SignatureValidationFailed(address aggregator);\n\n    // Return value of getSenderAddress.\n    error SenderAddressResult(address sender);\n\n    // UserOps handled, per aggregator.\n    struct UserOpsPerAggregator {\n        PackedUserOperation[] userOps;\n        // Aggregator address\n        IAggregator aggregator;\n        // Aggregated signature\n        bytes signature;\n    }\n\n    /**\n     * Execute a batch of UserOperations.\n     * No signature aggregator is used.\n     * If any account requires an aggregator (that is, it returned an aggregator when\n     * performing simulateValidation), then handleAggregatedOps() must be used instead.\n     * @param ops         - The operations to execute.\n     * @param beneficiary - The address to receive the fees.\n     */\n    function handleOps(\n        PackedUserOperation[] calldata ops,\n        address payable beneficiary\n    ) external;\n\n    /**\n     * Execute a batch of UserOperation with Aggregators\n     * @param opsPerAggregator - The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\n     * @param beneficiary      - The address to receive the fees.\n     */\n    function handleAggregatedOps(\n        UserOpsPerAggregator[] calldata opsPerAggregator,\n        address payable beneficiary\n    ) external;\n\n    /**\n     * Generate a request Id - unique identifier for this request.\n     * The request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\n     * @param userOp - The user operation to generate the request ID for.\n     * @return hash the hash of this UserOperation\n     */\n    function getUserOpHash(\n        PackedUserOperation calldata userOp\n    ) external view returns (bytes32);\n\n    /**\n     * Gas and return values during simulation.\n     * @param preOpGas         - The gas used for validation (including preValidationGas)\n     * @param prefund          - The required prefund for this operation\n     * @param accountValidationData   - returned validationData from account.\n     * @param paymasterValidationData - return validationData from paymaster.\n     * @param paymasterContext - Returned by validatePaymasterUserOp (to be passed into postOp)\n     */\n    struct ReturnInfo {\n        uint256 preOpGas;\n        uint256 prefund;\n        uint256 accountValidationData;\n        uint256 paymasterValidationData;\n        bytes paymasterContext;\n    }\n\n    /**\n     * Returned aggregated signature info:\n     * The aggregator returned by the account, and its current stake.\n     */\n    struct AggregatorStakeInfo {\n        address aggregator;\n        StakeInfo stakeInfo;\n    }\n\n    /**\n     * Get counterfactual sender address.\n     * Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n     * This method always revert, and returns the address in SenderAddressResult error\n     * @param initCode - The constructor code to be passed into the UserOperation.\n     */\n    function getSenderAddress(bytes memory initCode) external;\n\n    error DelegateAndRevert(bool success, bytes ret);\n\n    /**\n     * Helper method for dry-run testing.\n     * @dev calling this method, the EntryPoint will make a delegatecall to the given data, and report (via revert) the result.\n     *  The method always revert, so is only useful off-chain for dry run calls, in cases where state-override to replace\n     *  actual EntryPoint code is less convenient.\n     * @param target a target contract to make a delegatecall from entrypoint\n     * @param data data to pass to target in a delegatecall\n     */\n    function delegateAndRevert(address target, bytes calldata data) external;\n}\n"},"@account-abstraction/contracts/interfaces/INonceManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.7.5;\n\ninterface INonceManager {\n\n    /**\n     * Return the next nonce for this sender.\n     * Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n     * But UserOp with different keys can come with arbitrary order.\n     *\n     * @param sender the account address\n     * @param key the high 192 bit of the nonce\n     * @return nonce a full nonce to pass for next UserOp with this sender.\n     */\n    function getNonce(address sender, uint192 key)\n    external view returns (uint256 nonce);\n\n    /**\n     * Manually increment the nonce of the sender.\n     * This method is exposed just for completeness..\n     * Account does NOT need to call it, neither during validation, nor elsewhere,\n     * as the EntryPoint will update the nonce regardless.\n     * Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n     * UserOperations will not pay extra for the first transaction with a given key.\n     */\n    function incrementNonce(uint192 key) external;\n}\n"},"@account-abstraction/contracts/interfaces/IPaymaster.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.7.5;\n\nimport \"./PackedUserOperation.sol\";\n\n/**\n * The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations.\n * A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\n */\ninterface IPaymaster {\n    enum PostOpMode {\n        // User op succeeded.\n        opSucceeded,\n        // User op reverted. Still has to pay for gas.\n        opReverted,\n        // Only used internally in the EntryPoint (cleanup after postOp reverts). Never calling paymaster with this value\n        postOpReverted\n    }\n\n    /**\n     * Payment validation: check if paymaster agrees to pay.\n     * Must verify sender is the entryPoint.\n     * Revert to reject this request.\n     * Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted).\n     * The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\n     * @param userOp          - The user operation.\n     * @param userOpHash      - Hash of the user's request data.\n     * @param maxCost         - The maximum cost of this transaction (based on maximum gas and gas price from userOp).\n     * @return context        - Value to send to a postOp. Zero length to signify postOp is not required.\n     * @return validationData - Signature and time-range of this operation, encoded the same as the return\n     *                          value of validateUserOperation.\n     *                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n     *                                                    other values are invalid for paymaster.\n     *                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n     *                          <6-byte> validAfter - first timestamp this operation is valid\n     *                          Note that the validation code cannot use block.timestamp (or block.number) directly.\n     */\n    function validatePaymasterUserOp(\n        PackedUserOperation calldata userOp,\n        bytes32 userOpHash,\n        uint256 maxCost\n    ) external returns (bytes memory context, uint256 validationData);\n\n    /**\n     * Post-operation handler.\n     * Must verify sender is the entryPoint.\n     * @param mode          - Enum with the following options:\n     *                        opSucceeded - User operation succeeded.\n     *                        opReverted  - User op reverted. The paymaster still has to pay for gas.\n     *                        postOpReverted - never passed in a call to postOp().\n     * @param context       - The context value returned by validatePaymasterUserOp\n     * @param actualGasCost - Actual gas used so far (without this postOp call).\n     * @param actualUserOpFeePerGas - the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas\n     *                        and maxPriorityFee (and basefee)\n     *                        It is not the same as tx.gasprice, which is what the bundler pays.\n     */\n    function postOp(\n        PostOpMode mode,\n        bytes calldata context,\n        uint256 actualGasCost,\n        uint256 actualUserOpFeePerGas\n    ) external;\n}\n"},"@account-abstraction/contracts/interfaces/IStakeManager.sol":{"content":"// SPDX-License-Identifier: GPL-3.0-only\npragma solidity >=0.7.5;\n\n/**\n * Manage deposits and stakes.\n * Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account).\n * Stake is value locked for at least \"unstakeDelay\" by the staked entity.\n */\ninterface IStakeManager {\n    event Deposited(address indexed account, uint256 totalDeposit);\n\n    event Withdrawn(\n        address indexed account,\n        address withdrawAddress,\n        uint256 amount\n    );\n\n    // Emitted when stake or unstake delay are modified.\n    event StakeLocked(\n        address indexed account,\n        uint256 totalStaked,\n        uint256 unstakeDelaySec\n    );\n\n    // Emitted once a stake is scheduled for withdrawal.\n    event StakeUnlocked(address indexed account, uint256 withdrawTime);\n\n    event StakeWithdrawn(\n        address indexed account,\n        address withdrawAddress,\n        uint256 amount\n    );\n\n    /**\n     * @param deposit         - The entity's deposit.\n     * @param staked          - True if this entity is staked.\n     * @param stake           - Actual amount of ether staked for this entity.\n     * @param unstakeDelaySec - Minimum delay to withdraw the stake.\n     * @param withdrawTime    - First block timestamp where 'withdrawStake' will be callable, or zero if already locked.\n     * @dev Sizes were chosen so that deposit fits into one cell (used during handleOp)\n     *      and the rest fit into a 2nd cell (used during stake/unstake)\n     *      - 112 bit allows for 10^15 eth\n     *      - 48 bit for full timestamp\n     *      - 32 bit allows 150 years for unstake delay\n     */\n    struct DepositInfo {\n        uint256 deposit;\n        bool staked;\n        uint112 stake;\n        uint32 unstakeDelaySec;\n        uint48 withdrawTime;\n    }\n\n    // API struct used by getStakeInfo and simulateValidation.\n    struct StakeInfo {\n        uint256 stake;\n        uint256 unstakeDelaySec;\n    }\n\n    /**\n     * Get deposit info.\n     * @param account - The account to query.\n     * @return info   - Full deposit information of given account.\n     */\n    function getDepositInfo(\n        address account\n    ) external view returns (DepositInfo memory info);\n\n    /**\n     * Get account balance.\n     * @param account - The account to query.\n     * @return        - The deposit (for gas payment) of the account.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * Add to the deposit of the given account.\n     * @param account - The account to add to.\n     */\n    function depositTo(address account) external payable;\n\n    /**\n     * Add to the account's stake - amount and delay\n     * any pending unstake is first cancelled.\n     * @param _unstakeDelaySec - The new lock duration before the deposit can be withdrawn.\n     */\n    function addStake(uint32 _unstakeDelaySec) external payable;\n\n    /**\n     * Attempt to unlock the stake.\n     * The value can be withdrawn (using withdrawStake) after the unstake delay.\n     */\n    function unlockStake() external;\n\n    /**\n     * Withdraw from the (unlocked) stake.\n     * Must first call unlockStake and wait for the unstakeDelay to pass.\n     * @param withdrawAddress - The address to send withdrawn value.\n     */\n    function withdrawStake(address payable withdrawAddress) external;\n\n    /**\n     * Withdraw from the deposit.\n     * @param withdrawAddress - The address to send withdrawn value.\n     * @param withdrawAmount  - The amount to withdraw.\n     */\n    function withdrawTo(\n        address payable withdrawAddress,\n        uint256 withdrawAmount\n    ) external;\n}\n"},"@account-abstraction/contracts/interfaces/PackedUserOperation.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.7.5;\n\n/**\n * User Operation struct\n * @param sender                - The sender account of this request.\n * @param nonce                 - Unique value the sender uses to verify it is not a replay.\n * @param initCode              - If set, the account contract will be created by this constructor/\n * @param callData              - The method call to execute on this account.\n * @param accountGasLimits      - Packed gas limits for validateUserOp and gas limit passed to the callData method call.\n * @param preVerificationGas    - Gas not calculated by the handleOps method, but added to the gas paid.\n *                                Covers batch overhead.\n * @param gasFees               - packed gas fields maxPriorityFeePerGas and maxFeePerGas - Same as EIP-1559 gas parameters.\n * @param paymasterAndData      - If set, this field holds the paymaster address, verification gas limit, postOp gas limit and paymaster-specific extra data\n *                                The paymaster will pay for the transaction instead of the sender.\n * @param signature             - Sender-verified signature over the entire request, the EntryPoint address and the chain ID.\n */\nstruct PackedUserOperation {\n    address sender;\n    uint256 nonce;\n    bytes initCode;\n    bytes callData;\n    bytes32 accountGasLimits;\n    uint256 preVerificationGas;\n    bytes32 gasFees;\n    bytes paymasterAndData;\n    bytes signature;\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/SampleERC20.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.23;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title SBC Token\n * @dev Simple ERC20 Token for testing the SignatureVerifyingPaymaster\n */\ncontract SBC is ERC20, Ownable {\n    // Decimals for token (standard 18)\n    uint8 private constant DECIMALS = 18;\n    // Initial supply of 1 million tokens\n    uint256 private constant INITIAL_SUPPLY = 1_000_000;\n\n    /**\n     * @dev Constructor mints initial supply to deployer\n     */\n    constructor() ERC20(\"Stable Coin Test Token\", \"SBC\") Ownable(msg.sender) {\n        _mint(msg.sender, INITIAL_SUPPLY * 10**DECIMALS);\n    }\n\n    /**\n     * @dev Mint new tokens (only owner)\n     * @param to Address to mint tokens to\n     * @param amount Amount of tokens to mint\n     */\n    function mint(address to, uint256 amount) external onlyOwner {\n        _mint(to, amount);\n    }\n\n    /**\n     * @dev Public function to mint small amount of tokens for testing\n     * @notice Limited to 100 tokens per mint to prevent abuse\n     */\n    function mintTestTokens() external {\n        _mint(msg.sender, 100 * 10**DECIMALS);  // Mint 100 tokens\n    }\n\n    /**\n     * @dev Override decimals to match constant\n     */\n    function decimals() public pure override returns (uint8) {\n        return DECIMALS;\n    }\n}\n"},"contracts/SampleNFT.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.23;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract SampleNFT is ERC721, Ownable {\n    uint256 private _tokenIds;\n\n    // Base URI for metadata\n    string private _baseTokenURI;\n\n    constructor(\n        string memory name,\n        string memory symbol\n    ) ERC721(name, symbol) Ownable(msg.sender) {}\n\n    // Set base URI for metadata\n    function setBaseURI(string memory baseURI) public onlyOwner {\n        _baseTokenURI = baseURI;\n    }\n\n    // Override _baseURI internal function\n    function _baseURI() internal view virtual override returns (string memory) {\n        return _baseTokenURI;\n    }\n\n    // Mint new NFT (anyone can call this function)\n    function mintNFT(address recipient) public returns (uint256) {\n        uint256 newItemId = _tokenIds + 1;\n        _safeMint(recipient, newItemId);\n        return newItemId;\n    }\n}\n"},"contracts/SignatureVerifyingPaymaster.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.23;\n\n// Import core ERC4337 paymaster interface\nimport \"@account-abstraction/contracts/interfaces/IPaymaster.sol\";\n// Import OpenZeppelin's access control for owner-only functions\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n// Import ERC20 interface for token balance checks\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n// Import OpenZeppelin's ECDSA for signature verification\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\n// Import OpenZeppelin's Pausable for emergency stops\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\n// Import ERC4337 EntryPoint interface\nimport \"@account-abstraction/contracts/interfaces/IEntryPoint.sol\";\n\n// Contract inherits from IPaymaster (ERC4337 interface), Ownable (for admin functions), and Pausable (for emergency stops)\ncontract SignatureVerifyingPaymaster is IPaymaster, Ownable, Pausable {\n    // Enable ECDSA functions to be called directly on bytes32 variables\n    using ECDSA for bytes32;\n\n    // Address of the token that users must hold (set once during deployment)\n    address public immutable SBC_TOKEN;\n    // Required token balance users must hold (set once during deployment)\n    uint256 public immutable REQUIRED_SBC_BALANCE;\n    // Maximum time a signature can be valid for (7 days)\n    uint256 public constant MAX_EXPIRY_DURATION = 7 days;\n    \n    // Address authorized to sign paymaster approvals\n    address public authorizedSigner;\n    // Mapping to track used nonces (prevents replay attacks)\n    mapping(bytes32 => bool) public usedNonces;\n    // Reference to the ERC4337 EntryPoint contract (set once during deployment)\n    IEntryPoint public immutable entryPoint;\n\n    // Event emitted when the authorized signer is changed\n    event SignerUpdated(address indexed newSigner);\n    // Event emitted when a nonce is marked as used\n    event NonceUsed(bytes32 indexed nonceHash);\n    // Event emitted when ETH is deposited to the paymaster\n    event PaymasterDeposit(address indexed from, uint256 amount);\n    // Event emitted when ETH is withdrawn from the paymaster\n    event PaymasterWithdrawal(address indexed to, uint256 amount);\n    // Event emitted when gas is paid for the operation\n    event PaymasterPayment(uint256 actualGasCost, uint256 actualUserOpFeePerGas);\n\n    // Constructor sets initial values that can't be changed later\n    constructor(\n        address _authorizedSigner,  // Address that will sign paymaster approvals\n        address _entryPoint,        // ERC4337 EntryPoint contract address\n        address _sbcToken,          // Token address that users must hold\n        uint256 _requiredBalance    // Amount of tokens users must hold\n    ) Ownable(msg.sender) {         // Set the deployer as the owner\n        // Prevent zero address inputs\n        require(_authorizedSigner != address(0), \"Zero address signer\");\n        require(_entryPoint != address(0), \"Zero address entryPoint\");\n        require(_sbcToken != address(0), \"Zero address token\");\n        require(_requiredBalance > 0, \"Zero balance requirement\");\n\n        // Initialize immutable state variables\n        authorizedSigner = _authorizedSigner;\n        entryPoint = IEntryPoint(_entryPoint);\n        SBC_TOKEN = _sbcToken;\n        REQUIRED_SBC_BALANCE = _requiredBalance;\n    }\n\n    /**\n     * Allow owner to update the authorized signer address\n     * @param _newSigner - New authorized signer address\n     */\n    function setSigner(address _newSigner) external onlyOwner {\n        require(_newSigner != address(0), \"Zero address signer\");\n        authorizedSigner = _newSigner;\n        emit SignerUpdated(_newSigner);\n    }\n\n    /**\n     * Main validation function called by the EntryPoint contract\n     * @param userOp - The user operation to validate\n     * @param userOpHash - Hash of the user operation (excluding signatures)\n     * @param maxCost - Maximum cost of this operation (unused in this implementation)\n     * @return context - Data to be passed to postOp\n     * @return validationData - Packed validation data (0 means success)\n     */\n    function validatePaymasterUserOp(\n        PackedUserOperation calldata userOp,  // The user operation to validate\n        bytes32 userOpHash,                   // Hash of the user operation\n        uint256 maxCost                       // Maximum possible gas cost for this operation\n    ) external view whenNotPaused returns (bytes memory context, uint256 validationData) {\n        // Ensure only the EntryPoint can call this function\n        require(msg.sender == address(entryPoint), \"Caller not EntryPoint\");\n\n        // Verify paymaster has enough deposit to cover max possible gas cost\n        require(entryPoint.balanceOf(address(this)) >= maxCost, \"Insufficient paymaster deposit\");\n\n        // Extract and validate the paymaster data format\n        // Format: paymasterAddress(20) | nonce(32) | expiry(32) | signature(65) = 149 bytes\n        require(userOp.paymasterAndData.length == 149, \"Invalid paymasterAndData length\");\n        bytes memory paymasterAndData = userOp.paymasterAndData;\n        \n        // Extract nonce and expiry from the packed data\n        uint256 nonce = uint256(bytes32(slice(paymasterAndData, 20, 32)));    // Skip first 20 bytes (paymaster address)\n        uint256 expiry = uint256(bytes32(slice(paymasterAndData, 52, 32)));   // Skip 20 + 32 bytes\n        \n        // Verify nonce hasn't been used (prevents replay attacks)\n        bytes32 nonceHash = keccak256(abi.encode(nonce));\n        require(!usedNonces[nonceHash], \"Nonce already used\");\n\n        // Verify timestamp-based validity\n        require(expiry > block.timestamp, \"Signature expired\");\n        require(expiry <= block.timestamp + MAX_EXPIRY_DURATION, \"Expiry too far in future\");\n\n        // Check if user has required token balance\n        require(\n            IERC20(SBC_TOKEN).balanceOf(userOp.sender) >= REQUIRED_SBC_BALANCE,\n            \"Insufficient SBC balance\"\n        );\n\n        // Extract signature from packed data\n        bytes memory signature = slice(paymasterAndData, 84, 65);  // Skip 20 + 32 + 32 bytes\n\n        // Create message hash for signature verification\n        // Include chainId to prevent cross-chain replay attacks\n        bytes32 messageHash = keccak256(abi.encode(\n            block.chainid,\n            userOp.sender,\n            nonce,\n            expiry,\n            userOpHash\n        ));\n\n        // Verify signature was created by authorized signer\n        address recovered = ECDSA.recover(messageHash, signature);\n        require(recovered == authorizedSigner, \"Invalid signature\");\n\n        // Return context for postOp and validation success\n        context = abi.encode(nonceHash);\n        validationData = 0;  // 0 indicates successful validation\n\n        return (context, validationData);\n    }\n\n    /**\n     * Post-operation handler called by EntryPoint after operation execution\n     * @param mode - Success/failure status of the operation\n     * @param context - Context data passed from validatePaymasterUserOp\n     * @param actualGasCost - Actual gas cost of the operation (unused)\n     * @param actualUserOpFeePerGas - Actual gas price used (unused)\n     */\n    function postOp(\n        PostOpMode mode,                          // Operation execution status\n        bytes calldata context,                   // Context from validatePaymasterUserOp\n        uint256 actualGasCost,               // Actual gas cost (unused)\n        uint256 actualUserOpFeePerGas        // Actual gas price (unused)\n    ) external {\n        // Ensure only the EntryPoint can call this function\n        require(msg.sender == address(entryPoint), \"Caller not EntryPoint\");\n        \n        // Only mark nonce as used if operation succeeded\n        if (mode == PostOpMode.opSucceeded) {\n            bytes32 nonceHash = abi.decode(context, (bytes32));\n            usedNonces[nonceHash] = true;\n            emit NonceUsed(nonceHash);\n            emit PaymasterPayment(actualGasCost, actualUserOpFeePerGas);\n        }\n    }\n\n    /**\n     * Allow anyone to deposit ETH to fund paymaster operations\n     */\n    function deposit() external payable {\n        entryPoint.depositTo{value: msg.value}(address(this));\n        emit PaymasterDeposit(msg.sender, msg.value);\n    }\n\n    /**\n     * Allow owner to withdraw ETH from the paymaster's deposit\n     * @param withdrawAddress - Address to send the withdrawn ETH\n     * @param amount - Amount of ETH to withdraw\n     */\n    function withdrawTo(address payable withdrawAddress, uint256 amount) external onlyOwner {\n        require(withdrawAddress != address(0), \"Zero address withdraw\");\n        require(amount > 0, \"Zero amount withdraw\");\n        entryPoint.withdrawTo(withdrawAddress, amount);\n        emit PaymasterWithdrawal(withdrawAddress, amount);\n    }\n\n    /**\n     * View function to check current deposit balance in EntryPoint\n     * @return Current deposit balance\n     */\n    function getDeposit() public view returns (uint256) {\n        return entryPoint.balanceOf(address(this));\n    }\n\n    /**\n     * Allow owner to pause the paymaster in emergency\n     */\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    /**\n     * Allow owner to unpause the paymaster\n     */\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    /**\n     * Internal helper function to extract a slice from a bytes array\n     * @param data - Source bytes array\n     * @param start - Starting position\n     * @param length - Length of slice to extract\n     * @return Extracted bytes slice\n     */\n    function slice(bytes memory data, uint256 start, uint256 length) internal pure returns (bytes memory) {\n        require(start + length <= data.length, \"Slice out of bounds\");\n        bytes memory result = new bytes(length);\n        assembly {\n            // Get pointers to memory locations\n            let resultPtr := add(result, 32)         // Skip length prefix\n            let dataPtr := add(add(data, 32), start) // Skip length prefix and offset\n            // Copy length bytes from dataPtr to resultPtr\n            mstore(resultPtr, mload(dataPtr))\n        }\n        return result;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@account-abstraction/contracts/interfaces/IAggregator.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/IAggregator.sol","exportedSymbols":{"IAggregator":[33],"PackedUserOperation":[399]},"id":34,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"36:24:0"},{"absolutePath":"@account-abstraction/contracts/interfaces/PackedUserOperation.sol","file":"./PackedUserOperation.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":34,"sourceUnit":400,"src":"62:35:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAggregator","contractDependencies":[],"contractKind":"interface","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"99:43:0","text":" Aggregated Signatures validator."},"fullyImplemented":false,"id":33,"linearizedBaseContracts":[33],"name":"IAggregator","nameLocation":"153:11:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"171:269:0","text":" Validate aggregated signature.\n Revert if the aggregated signature does not match the given list of operations.\n @param userOps   - Array of UserOperations to validate the signature for.\n @param signature - The aggregated signature."},"functionSelector":"2dd81133","id":13,"implemented":false,"kind":"function","modifiers":[],"name":"validateSignatures","nameLocation":"454:18:0","nodeType":"FunctionDefinition","parameters":{"id":11,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8,"mutability":"mutable","name":"userOps","nameLocation":"513:7:0","nodeType":"VariableDeclaration","scope":13,"src":"482:38:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$399_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":6,"nodeType":"UserDefinedTypeName","pathNode":{"id":5,"name":"PackedUserOperation","nameLocations":["482:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":399,"src":"482:19:0"},"referencedDeclaration":399,"src":"482:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$399_storage_ptr","typeString":"struct PackedUserOperation"}},"id":7,"nodeType":"ArrayTypeName","src":"482:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$399_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"},{"constant":false,"id":10,"mutability":"mutable","name":"signature","nameLocation":"545:9:0","nodeType":"VariableDeclaration","scope":13,"src":"530:24:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9,"name":"bytes","nodeType":"ElementaryTypeName","src":"530:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"472:88:0"},"returnParameters":{"id":12,"nodeType":"ParameterList","parameters":[],"src":"574:0:0"},"scope":33,"src":"445:130:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"581:610:0","text":" Validate signature of a single userOp.\n This method should be called by bundler after EntryPointSimulation.simulateValidation() returns\n the aggregator this account uses.\n First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\n @param userOp        - The userOperation received from the user.\n @return sigForUserOp - The value to put into the signature field of the userOp when calling handleOps.\n                        (usually empty, unless account and aggregator support some kind of \"multisig\"."},"functionSelector":"062a422b","id":22,"implemented":false,"kind":"function","modifiers":[],"name":"validateUserOpSignature","nameLocation":"1205:23:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17,"mutability":"mutable","name":"userOp","nameLocation":"1267:6:0","nodeType":"VariableDeclaration","scope":22,"src":"1238:35:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$399_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":16,"nodeType":"UserDefinedTypeName","pathNode":{"id":15,"name":"PackedUserOperation","nameLocations":["1238:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":399,"src":"1238:19:0"},"referencedDeclaration":399,"src":"1238:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$399_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"1228:51:0"},"returnParameters":{"id":21,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"mutability":"mutable","name":"sigForUserOp","nameLocation":"1316:12:0","nodeType":"VariableDeclaration","scope":22,"src":"1303:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":19,"name":"bytes","nodeType":"ElementaryTypeName","src":"1303:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1302:27:0"},"scope":33,"src":"1196:134:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":23,"nodeType":"StructuredDocumentation","src":"1336:387:0","text":" Aggregate multiple signatures into a single value.\n This method is called off-chain to calculate the signature to pass with handleOps()\n bundler MAY use optimized custom code perform this aggregation.\n @param userOps              - Array of UserOperations to collect the signatures from.\n @return aggregatedSignature - The aggregated signature."},"functionSelector":"ae574a43","id":32,"implemented":false,"kind":"function","modifiers":[],"name":"aggregateSignatures","nameLocation":"1737:19:0","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"userOps","nameLocation":"1797:7:0","nodeType":"VariableDeclaration","scope":32,"src":"1766:38:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$399_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":25,"nodeType":"UserDefinedTypeName","pathNode":{"id":24,"name":"PackedUserOperation","nameLocations":["1766:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":399,"src":"1766:19:0"},"referencedDeclaration":399,"src":"1766:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$399_storage_ptr","typeString":"struct PackedUserOperation"}},"id":26,"nodeType":"ArrayTypeName","src":"1766:21:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$399_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"}],"src":"1756:54:0"},"returnParameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"aggregatedSignature","nameLocation":"1847:19:0","nodeType":"VariableDeclaration","scope":32,"src":"1834:32:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":29,"name":"bytes","nodeType":"ElementaryTypeName","src":"1834:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1833:34:0"},"scope":33,"src":"1728:140:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":34,"src":"143:1727:0","usedErrors":[],"usedEvents":[]}],"src":"36:1835:0"},"id":0},"@account-abstraction/contracts/interfaces/IEntryPoint.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/IEntryPoint.sol","exportedSymbols":{"IAggregator":[33],"IEntryPoint":[217],"INonceManager":[236],"IStakeManager":[377],"PackedUserOperation":[399]},"id":218,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":35,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"163:24:1"},{"absolutePath":"@account-abstraction/contracts/interfaces/PackedUserOperation.sol","file":"./PackedUserOperation.sol","id":36,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":218,"sourceUnit":400,"src":"311:35:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/IStakeManager.sol","file":"./IStakeManager.sol","id":37,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":218,"sourceUnit":378,"src":"347:29:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/IAggregator.sol","file":"./IAggregator.sol","id":38,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":218,"sourceUnit":34,"src":"377:27:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/INonceManager.sol","file":"./INonceManager.sol","id":39,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":218,"sourceUnit":237,"src":"405:29:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":40,"name":"IStakeManager","nameLocations":["461:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":377,"src":"461:13:1"},"id":41,"nodeType":"InheritanceSpecifier","src":"461:13:1"},{"baseName":{"id":42,"name":"INonceManager","nameLocations":["476:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":236,"src":"476:13:1"},"id":43,"nodeType":"InheritanceSpecifier","src":"476:13:1"}],"canonicalName":"IEntryPoint","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":217,"linearizedBaseContracts":[217,236,377],"name":"IEntryPoint","nameLocation":"446:11:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f","id":59,"name":"UserOperationEvent","nameLocation":"1255:18:1","nodeType":"EventDefinition","parameters":{"id":58,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1299:10:1","nodeType":"VariableDeclaration","scope":59,"src":"1283:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":44,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1283:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":47,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1335:6:1","nodeType":"VariableDeclaration","scope":59,"src":"1319:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"1319:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":49,"indexed":true,"mutability":"mutable","name":"paymaster","nameLocation":"1367:9:1","nodeType":"VariableDeclaration","scope":59,"src":"1351:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1351:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":51,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"1394:5:1","nodeType":"VariableDeclaration","scope":59,"src":"1386:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":50,"name":"uint256","nodeType":"ElementaryTypeName","src":"1386:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":53,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"1414:7:1","nodeType":"VariableDeclaration","scope":59,"src":"1409:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":52,"name":"bool","nodeType":"ElementaryTypeName","src":"1409:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":55,"indexed":false,"mutability":"mutable","name":"actualGasCost","nameLocation":"1439:13:1","nodeType":"VariableDeclaration","scope":59,"src":"1431:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":54,"name":"uint256","nodeType":"ElementaryTypeName","src":"1431:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":57,"indexed":false,"mutability":"mutable","name":"actualGasUsed","nameLocation":"1470:13:1","nodeType":"VariableDeclaration","scope":59,"src":"1462:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":56,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1273:216:1"},"src":"1249:241:1"},{"anonymous":false,"documentation":{"id":60,"nodeType":"StructuredDocumentation","src":"1496:349:1","text":" Account \"sender\" was deployed.\n @param userOpHash - The userOp that deployed this account. UserOperationEvent will follow.\n @param sender     - The account that is deployed\n @param factory    - The factory used to deploy this account (in the initCode)\n @param paymaster  - The paymaster used by this UserOp"},"eventSelector":"d51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d","id":70,"name":"AccountDeployed","nameLocation":"1856:15:1","nodeType":"EventDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"1897:10:1","nodeType":"VariableDeclaration","scope":70,"src":"1881:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":61,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1881:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":64,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1933:6:1","nodeType":"VariableDeclaration","scope":70,"src":"1917:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":63,"name":"address","nodeType":"ElementaryTypeName","src":"1917:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":66,"indexed":false,"mutability":"mutable","name":"factory","nameLocation":"1957:7:1","nodeType":"VariableDeclaration","scope":70,"src":"1949:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65,"name":"address","nodeType":"ElementaryTypeName","src":"1949:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":68,"indexed":false,"mutability":"mutable","name":"paymaster","nameLocation":"1982:9:1","nodeType":"VariableDeclaration","scope":70,"src":"1974:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":67,"name":"address","nodeType":"ElementaryTypeName","src":"1974:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1871:126:1"},"src":"1850:148:1"},{"anonymous":false,"documentation":{"id":71,"nodeType":"StructuredDocumentation","src":"2004:361:1","text":" An event emitted if the UserOperation \"callData\" reverted with non-zero length.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request.\n @param revertReason - The return bytes from the (reverted) call to \"callData\"."},"eventSelector":"1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201","id":81,"name":"UserOperationRevertReason","nameLocation":"2376:25:1","nodeType":"EventDefinition","parameters":{"id":80,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"2427:10:1","nodeType":"VariableDeclaration","scope":81,"src":"2411:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":72,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2411:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":75,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"2463:6:1","nodeType":"VariableDeclaration","scope":81,"src":"2447:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":74,"name":"address","nodeType":"ElementaryTypeName","src":"2447:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":77,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"2487:5:1","nodeType":"VariableDeclaration","scope":81,"src":"2479:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":76,"name":"uint256","nodeType":"ElementaryTypeName","src":"2479:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":79,"indexed":false,"mutability":"mutable","name":"revertReason","nameLocation":"2508:12:1","nodeType":"VariableDeclaration","scope":81,"src":"2502:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":78,"name":"bytes","nodeType":"ElementaryTypeName","src":"2502:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2401:125:1"},"src":"2370:157:1"},{"anonymous":false,"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2533:376:1","text":" An event emitted if the UserOperation Paymaster's \"postOp\" call reverted with non-zero length.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request.\n @param revertReason - The return bytes from the (reverted) call to \"callData\"."},"eventSelector":"f62676f440ff169a3a9afdbf812e89e7f95975ee8e5c31214ffdef631c5f4792","id":92,"name":"PostOpRevertReason","nameLocation":"2920:18:1","nodeType":"EventDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[{"constant":false,"id":84,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"2964:10:1","nodeType":"VariableDeclaration","scope":92,"src":"2948:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":83,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2948:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":86,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3000:6:1","nodeType":"VariableDeclaration","scope":92,"src":"2984:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":85,"name":"address","nodeType":"ElementaryTypeName","src":"2984:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":88,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"3024:5:1","nodeType":"VariableDeclaration","scope":92,"src":"3016:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":87,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":90,"indexed":false,"mutability":"mutable","name":"revertReason","nameLocation":"3045:12:1","nodeType":"VariableDeclaration","scope":92,"src":"3039:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":89,"name":"bytes","nodeType":"ElementaryTypeName","src":"3039:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2938:125:1"},"src":"2914:150:1"},{"anonymous":false,"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"3070:284:1","text":" UserOp consumed more than prefund. The UserOperation is reverted, and no refund is made.\n @param userOpHash   - The request unique identifier.\n @param sender       - The sender of this request.\n @param nonce        - The nonce used in the request."},"eventSelector":"67b4fa9642f42120bf031f3051d1824b0fe25627945b27b8a6a65d5761d5482e","id":101,"name":"UserOperationPrefundTooLow","nameLocation":"3365:26:1","nodeType":"EventDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"indexed":true,"mutability":"mutable","name":"userOpHash","nameLocation":"3417:10:1","nodeType":"VariableDeclaration","scope":101,"src":"3401:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":94,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3401:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":97,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3453:6:1","nodeType":"VariableDeclaration","scope":101,"src":"3437:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":96,"name":"address","nodeType":"ElementaryTypeName","src":"3437:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":99,"indexed":false,"mutability":"mutable","name":"nonce","nameLocation":"3477:5:1","nodeType":"VariableDeclaration","scope":101,"src":"3469:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":98,"name":"uint256","nodeType":"ElementaryTypeName","src":"3469:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3391:97:1"},"src":"3359:130:1"},{"anonymous":false,"documentation":{"id":102,"nodeType":"StructuredDocumentation","src":"3495:158:1","text":" An event emitted by handleOps(), before starting the execution loop.\n Any event emitted before this event, is part of the validation."},"eventSelector":"bb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972","id":104,"name":"BeforeExecution","nameLocation":"3664:15:1","nodeType":"EventDefinition","parameters":{"id":103,"nodeType":"ParameterList","parameters":[],"src":"3679:2:1"},"src":"3658:24:1"},{"anonymous":false,"documentation":{"id":105,"nodeType":"StructuredDocumentation","src":"3688:187:1","text":" Signature aggregator used by the following UserOperationEvents within this bundle.\n @param aggregator - The aggregator used for the following UserOperationEvents."},"eventSelector":"575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d","id":109,"name":"SignatureAggregatorChanged","nameLocation":"3886:26:1","nodeType":"EventDefinition","parameters":{"id":108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":107,"indexed":true,"mutability":"mutable","name":"aggregator","nameLocation":"3929:10:1","nodeType":"VariableDeclaration","scope":109,"src":"3913:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":106,"name":"address","nodeType":"ElementaryTypeName","src":"3913:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3912:28:1"},"src":"3880:61:1"},{"documentation":{"id":110,"nodeType":"StructuredDocumentation","src":"3947:776:1","text":" A custom revert error of handleOps, to identify the offending op.\n Should be caught in off-chain handleOps simulation and not happen on-chain.\n Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts.\n NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n @param reason  - Revert reason. The string starts with a unique code \"AAmn\",\n                  where \"m\" is \"1\" for factory, \"2\" for account and \"3\" for paymaster issues,\n                  so a failure can be attributed to the correct entity."},"errorSelector":"220266b6","id":116,"name":"FailedOp","nameLocation":"4734:8:1","nodeType":"ErrorDefinition","parameters":{"id":115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"mutability":"mutable","name":"opIndex","nameLocation":"4751:7:1","nodeType":"VariableDeclaration","scope":116,"src":"4743:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":111,"name":"uint256","nodeType":"ElementaryTypeName","src":"4743:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":114,"mutability":"mutable","name":"reason","nameLocation":"4767:6:1","nodeType":"VariableDeclaration","scope":116,"src":"4760:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":113,"name":"string","nodeType":"ElementaryTypeName","src":"4760:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4742:32:1"},"src":"4728:47:1"},{"documentation":{"id":117,"nodeType":"StructuredDocumentation","src":"4781:405:1","text":" A custom revert error of handleOps, to report a revert by account or paymaster.\n @param opIndex - Index into the array of ops to the failed one (in simulateValidation, this is always zero).\n @param reason  - Revert reason. see FailedOp(uint256,string), above\n @param inner   - data from inner cought revert reason\n @dev note that inner is truncated to 2048 bytes"},"errorSelector":"65c8fd4d","id":125,"name":"FailedOpWithRevert","nameLocation":"5197:18:1","nodeType":"ErrorDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"mutability":"mutable","name":"opIndex","nameLocation":"5224:7:1","nodeType":"VariableDeclaration","scope":125,"src":"5216:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"5216:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":121,"mutability":"mutable","name":"reason","nameLocation":"5240:6:1","nodeType":"VariableDeclaration","scope":125,"src":"5233:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":120,"name":"string","nodeType":"ElementaryTypeName","src":"5233:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":123,"mutability":"mutable","name":"inner","nameLocation":"5254:5:1","nodeType":"VariableDeclaration","scope":125,"src":"5248:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":122,"name":"bytes","nodeType":"ElementaryTypeName","src":"5248:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5215:45:1"},"src":"5191:70:1"},{"errorSelector":"ad7954bc","id":129,"name":"PostOpReverted","nameLocation":"5273:14:1","nodeType":"ErrorDefinition","parameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"mutability":"mutable","name":"returnData","nameLocation":"5294:10:1","nodeType":"VariableDeclaration","scope":129,"src":"5288:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":126,"name":"bytes","nodeType":"ElementaryTypeName","src":"5288:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5287:18:1"},"src":"5267:39:1"},{"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"5312:190:1","text":" Error case when a signature aggregator fails to verify the aggregated signature it had created.\n @param aggregator The aggregator that failed to verify the signature"},"errorSelector":"86a9f750","id":134,"name":"SignatureValidationFailed","nameLocation":"5513:25:1","nodeType":"ErrorDefinition","parameters":{"id":133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"aggregator","nameLocation":"5547:10:1","nodeType":"VariableDeclaration","scope":134,"src":"5539:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":131,"name":"address","nodeType":"ElementaryTypeName","src":"5539:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5538:20:1"},"src":"5507:52:1"},{"errorSelector":"6ca7b806","id":138,"name":"SenderAddressResult","nameLocation":"5612:19:1","nodeType":"ErrorDefinition","parameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":136,"mutability":"mutable","name":"sender","nameLocation":"5640:6:1","nodeType":"VariableDeclaration","scope":138,"src":"5632:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":135,"name":"address","nodeType":"ElementaryTypeName","src":"5632:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5631:16:1"},"src":"5606:42:1"},{"canonicalName":"IEntryPoint.UserOpsPerAggregator","id":148,"members":[{"constant":false,"id":142,"mutability":"mutable","name":"userOps","nameLocation":"5754:7:1","nodeType":"VariableDeclaration","scope":148,"src":"5732:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$399_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":140,"nodeType":"UserDefinedTypeName","pathNode":{"id":139,"name":"PackedUserOperation","nameLocations":["5732:19:1"],"nodeType":"IdentifierPath","referencedDeclaration":399,"src":"5732:19:1"},"referencedDeclaration":399,"src":"5732:19:1","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$399_storage_ptr","typeString":"struct PackedUserOperation"}},"id":141,"nodeType":"ArrayTypeName","src":"5732:21:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$399_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"},{"constant":false,"id":145,"mutability":"mutable","name":"aggregator","nameLocation":"5813:10:1","nodeType":"VariableDeclaration","scope":148,"src":"5801:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$33","typeString":"contract IAggregator"},"typeName":{"id":144,"nodeType":"UserDefinedTypeName","pathNode":{"id":143,"name":"IAggregator","nameLocations":["5801:11:1"],"nodeType":"IdentifierPath","referencedDeclaration":33,"src":"5801:11:1"},"referencedDeclaration":33,"src":"5801:11:1","typeDescriptions":{"typeIdentifier":"t_contract$_IAggregator_$33","typeString":"contract IAggregator"}},"visibility":"internal"},{"constant":false,"id":147,"mutability":"mutable","name":"signature","nameLocation":"5871:9:1","nodeType":"VariableDeclaration","scope":148,"src":"5865:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":146,"name":"bytes","nodeType":"ElementaryTypeName","src":"5865:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"UserOpsPerAggregator","nameLocation":"5701:20:1","nodeType":"StructDefinition","scope":217,"src":"5694:193:1","visibility":"public"},{"documentation":{"id":149,"nodeType":"StructuredDocumentation","src":"5893:383:1","text":" Execute a batch of UserOperations.\n No signature aggregator is used.\n If any account requires an aggregator (that is, it returned an aggregator when\n performing simulateValidation), then handleAggregatedOps() must be used instead.\n @param ops         - The operations to execute.\n @param beneficiary - The address to receive the fees."},"functionSelector":"765e827f","id":158,"implemented":false,"kind":"function","modifiers":[],"name":"handleOps","nameLocation":"6290:9:1","nodeType":"FunctionDefinition","parameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"ops","nameLocation":"6340:3:1","nodeType":"VariableDeclaration","scope":158,"src":"6309:34:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$399_calldata_ptr_$dyn_calldata_ptr","typeString":"struct PackedUserOperation[]"},"typeName":{"baseType":{"id":151,"nodeType":"UserDefinedTypeName","pathNode":{"id":150,"name":"PackedUserOperation","nameLocations":["6309:19:1"],"nodeType":"IdentifierPath","referencedDeclaration":399,"src":"6309:19:1"},"referencedDeclaration":399,"src":"6309:19:1","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$399_storage_ptr","typeString":"struct PackedUserOperation"}},"id":152,"nodeType":"ArrayTypeName","src":"6309:21:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PackedUserOperation_$399_storage_$dyn_storage_ptr","typeString":"struct PackedUserOperation[]"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"beneficiary","nameLocation":"6369:11:1","nodeType":"VariableDeclaration","scope":158,"src":"6353:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":154,"name":"address","nodeType":"ElementaryTypeName","src":"6353:15:1","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"6299:87:1"},"returnParameters":{"id":157,"nodeType":"ParameterList","parameters":[],"src":"6395:0:1"},"scope":217,"src":"6281:115:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"6402:260:1","text":" Execute a batch of UserOperation with Aggregators\n @param opsPerAggregator - The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\n @param beneficiary      - The address to receive the fees."},"functionSelector":"dbed18e0","id":168,"implemented":false,"kind":"function","modifiers":[],"name":"handleAggregatedOps","nameLocation":"6676:19:1","nodeType":"FunctionDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":163,"mutability":"mutable","name":"opsPerAggregator","nameLocation":"6737:16:1","nodeType":"VariableDeclaration","scope":168,"src":"6705:48:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$148_calldata_ptr_$dyn_calldata_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"},"typeName":{"baseType":{"id":161,"nodeType":"UserDefinedTypeName","pathNode":{"id":160,"name":"UserOpsPerAggregator","nameLocations":["6705:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":148,"src":"6705:20:1"},"referencedDeclaration":148,"src":"6705:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserOpsPerAggregator_$148_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator"}},"id":162,"nodeType":"ArrayTypeName","src":"6705:22:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_UserOpsPerAggregator_$148_storage_$dyn_storage_ptr","typeString":"struct IEntryPoint.UserOpsPerAggregator[]"}},"visibility":"internal"},{"constant":false,"id":165,"mutability":"mutable","name":"beneficiary","nameLocation":"6779:11:1","nodeType":"VariableDeclaration","scope":168,"src":"6763:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":164,"name":"address","nodeType":"ElementaryTypeName","src":"6763:15:1","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"6695:101:1"},"returnParameters":{"id":167,"nodeType":"ParameterList","parameters":[],"src":"6805:0:1"},"scope":217,"src":"6667:139:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":169,"nodeType":"StructuredDocumentation","src":"6812:322:1","text":" Generate a request Id - unique identifier for this request.\n The request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\n @param userOp - The user operation to generate the request ID for.\n @return hash the hash of this UserOperation"},"functionSelector":"22cdde4c","id":177,"implemented":false,"kind":"function","modifiers":[],"name":"getUserOpHash","nameLocation":"7148:13:1","nodeType":"FunctionDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"userOp","nameLocation":"7200:6:1","nodeType":"VariableDeclaration","scope":177,"src":"7171:35:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$399_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":171,"nodeType":"UserDefinedTypeName","pathNode":{"id":170,"name":"PackedUserOperation","nameLocations":["7171:19:1"],"nodeType":"IdentifierPath","referencedDeclaration":399,"src":"7171:19:1"},"referencedDeclaration":399,"src":"7171:19:1","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$399_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"}],"src":"7161:51:1"},"returnParameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":177,"src":"7236:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":174,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7236:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7235:9:1"},"scope":217,"src":"7139:106:1","stateMutability":"view","virtual":false,"visibility":"external"},{"canonicalName":"IEntryPoint.ReturnInfo","documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"7251:474:1","text":" Gas and return values during simulation.\n @param preOpGas         - The gas used for validation (including preValidationGas)\n @param prefund          - The required prefund for this operation\n @param accountValidationData   - returned validationData from account.\n @param paymasterValidationData - return validationData from paymaster.\n @param paymasterContext - Returned by validatePaymasterUserOp (to be passed into postOp)"},"id":189,"members":[{"constant":false,"id":180,"mutability":"mutable","name":"preOpGas","nameLocation":"7766:8:1","nodeType":"VariableDeclaration","scope":189,"src":"7758:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":179,"name":"uint256","nodeType":"ElementaryTypeName","src":"7758:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"prefund","nameLocation":"7792:7:1","nodeType":"VariableDeclaration","scope":189,"src":"7784:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":181,"name":"uint256","nodeType":"ElementaryTypeName","src":"7784:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":184,"mutability":"mutable","name":"accountValidationData","nameLocation":"7817:21:1","nodeType":"VariableDeclaration","scope":189,"src":"7809:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":183,"name":"uint256","nodeType":"ElementaryTypeName","src":"7809:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"paymasterValidationData","nameLocation":"7856:23:1","nodeType":"VariableDeclaration","scope":189,"src":"7848:31:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":185,"name":"uint256","nodeType":"ElementaryTypeName","src":"7848:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":188,"mutability":"mutable","name":"paymasterContext","nameLocation":"7895:16:1","nodeType":"VariableDeclaration","scope":189,"src":"7889:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":187,"name":"bytes","nodeType":"ElementaryTypeName","src":"7889:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"ReturnInfo","nameLocation":"7737:10:1","nodeType":"StructDefinition","scope":217,"src":"7730:188:1","visibility":"public"},{"canonicalName":"IEntryPoint.AggregatorStakeInfo","documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"7924:124:1","text":" Returned aggregated signature info:\n The aggregator returned by the account, and its current stake."},"id":196,"members":[{"constant":false,"id":192,"mutability":"mutable","name":"aggregator","nameLocation":"8098:10:1","nodeType":"VariableDeclaration","scope":196,"src":"8090:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"8090:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"stakeInfo","nameLocation":"8128:9:1","nodeType":"VariableDeclaration","scope":196,"src":"8118:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$329_storage_ptr","typeString":"struct IStakeManager.StakeInfo"},"typeName":{"id":194,"nodeType":"UserDefinedTypeName","pathNode":{"id":193,"name":"StakeInfo","nameLocations":["8118:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":329,"src":"8118:9:1"},"referencedDeclaration":329,"src":"8118:9:1","typeDescriptions":{"typeIdentifier":"t_struct$_StakeInfo_$329_storage_ptr","typeString":"struct IStakeManager.StakeInfo"}},"visibility":"internal"}],"name":"AggregatorStakeInfo","nameLocation":"8060:19:1","nodeType":"StructDefinition","scope":217,"src":"8053:91:1","visibility":"public"},{"documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"8150:338:1","text":" Get counterfactual sender address.\n Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n This method always revert, and returns the address in SenderAddressResult error\n @param initCode - The constructor code to be passed into the UserOperation."},"functionSelector":"9b249f69","id":202,"implemented":false,"kind":"function","modifiers":[],"name":"getSenderAddress","nameLocation":"8502:16:1","nodeType":"FunctionDefinition","parameters":{"id":200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":199,"mutability":"mutable","name":"initCode","nameLocation":"8532:8:1","nodeType":"VariableDeclaration","scope":202,"src":"8519:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":198,"name":"bytes","nodeType":"ElementaryTypeName","src":"8519:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8518:23:1"},"returnParameters":{"id":201,"nodeType":"ParameterList","parameters":[],"src":"8550:0:1"},"scope":217,"src":"8493:58:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"errorSelector":"99410554","id":208,"name":"DelegateAndRevert","nameLocation":"8563:17:1","nodeType":"ErrorDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"success","nameLocation":"8586:7:1","nodeType":"VariableDeclaration","scope":208,"src":"8581:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"8581:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":206,"mutability":"mutable","name":"ret","nameLocation":"8601:3:1","nodeType":"VariableDeclaration","scope":208,"src":"8595:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":205,"name":"bytes","nodeType":"ElementaryTypeName","src":"8595:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8580:25:1"},"src":"8557:49:1"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"8612:492:1","text":" Helper method for dry-run testing.\n @dev calling this method, the EntryPoint will make a delegatecall to the given data, and report (via revert) the result.\n  The method always revert, so is only useful off-chain for dry run calls, in cases where state-override to replace\n  actual EntryPoint code is less convenient.\n @param target a target contract to make a delegatecall from entrypoint\n @param data data to pass to target in a delegatecall"},"functionSelector":"850aaf62","id":216,"implemented":false,"kind":"function","modifiers":[],"name":"delegateAndRevert","nameLocation":"9118:17:1","nodeType":"FunctionDefinition","parameters":{"id":214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":211,"mutability":"mutable","name":"target","nameLocation":"9144:6:1","nodeType":"VariableDeclaration","scope":216,"src":"9136:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":210,"name":"address","nodeType":"ElementaryTypeName","src":"9136:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":213,"mutability":"mutable","name":"data","nameLocation":"9167:4:1","nodeType":"VariableDeclaration","scope":216,"src":"9152:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":212,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9135:37:1"},"returnParameters":{"id":215,"nodeType":"ParameterList","parameters":[],"src":"9181:0:1"},"scope":217,"src":"9109:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":218,"src":"436:8748:1","usedErrors":[116,125,129,134,138,208],"usedEvents":[59,70,81,92,101,104,109,282,290,298,304,312]}],"src":"163:9022:1"},"id":1},"@account-abstraction/contracts/interfaces/INonceManager.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/INonceManager.sol","exportedSymbols":{"INonceManager":[236]},"id":237,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":219,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"36:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"INonceManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":236,"linearizedBaseContracts":[236],"name":"INonceManager","nameLocation":"72:13:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"93:416:2","text":" Return the next nonce for this sender.\n Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop)\n But UserOp with different keys can come with arbitrary order.\n @param sender the account address\n @param key the high 192 bit of the nonce\n @return nonce a full nonce to pass for next UserOp with this sender."},"functionSelector":"35567e1a","id":229,"implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"523:8:2","nodeType":"FunctionDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"sender","nameLocation":"540:6:2","nodeType":"VariableDeclaration","scope":229,"src":"532:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"532:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"key","nameLocation":"556:3:2","nodeType":"VariableDeclaration","scope":229,"src":"548:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":223,"name":"uint192","nodeType":"ElementaryTypeName","src":"548:7:2","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"531:29:2"},"returnParameters":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"nonce","nameLocation":"596:5:2","nodeType":"VariableDeclaration","scope":229,"src":"588:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":226,"name":"uint256","nodeType":"ElementaryTypeName","src":"588:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"587:15:2"},"scope":236,"src":"514:89:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":230,"nodeType":"StructuredDocumentation","src":"609:449:2","text":" Manually increment the nonce of the sender.\n This method is exposed just for completeness..\n Account does NOT need to call it, neither during validation, nor elsewhere,\n as the EntryPoint will update the nonce regardless.\n Possible use-case is call it with various keys to \"initialize\" their nonces to one, so that future\n UserOperations will not pay extra for the first transaction with a given key."},"functionSelector":"0bd28e3b","id":235,"implemented":false,"kind":"function","modifiers":[],"name":"incrementNonce","nameLocation":"1072:14:2","nodeType":"FunctionDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":232,"mutability":"mutable","name":"key","nameLocation":"1095:3:2","nodeType":"VariableDeclaration","scope":235,"src":"1087:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":231,"name":"uint192","nodeType":"ElementaryTypeName","src":"1087:7:2","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"1086:13:2"},"returnParameters":{"id":234,"nodeType":"ParameterList","parameters":[],"src":"1108:0:2"},"scope":236,"src":"1063:46:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":237,"src":"62:1049:2","usedErrors":[],"usedEvents":[]}],"src":"36:1076:2"},"id":2},"@account-abstraction/contracts/interfaces/IPaymaster.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/IPaymaster.sol","exportedSymbols":{"IPaymaster":[273],"PackedUserOperation":[399]},"id":274,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":238,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"36:24:3"},{"absolutePath":"@account-abstraction/contracts/interfaces/PackedUserOperation.sol","file":"./PackedUserOperation.sol","id":239,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":274,"sourceUnit":400,"src":"62:35:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IPaymaster","contractDependencies":[],"contractKind":"interface","documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"99:216:3","text":" The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations.\n A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction."},"fullyImplemented":false,"id":273,"linearizedBaseContracts":[273],"name":"IPaymaster","nameLocation":"326:10:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IPaymaster.PostOpMode","id":244,"members":[{"id":241,"name":"opSucceeded","nameLocation":"399:11:3","nodeType":"EnumValue","src":"399:11:3"},{"id":242,"name":"opReverted","nameLocation":"475:10:3","nodeType":"EnumValue","src":"475:10:3"},{"id":243,"name":"postOpReverted","nameLocation":"617:14:3","nodeType":"EnumValue","src":"617:14:3"}],"name":"PostOpMode","nameLocation":"348:10:3","nodeType":"EnumDefinition","src":"343:294:3"},{"documentation":{"id":245,"nodeType":"StructuredDocumentation","src":"643:1430:3","text":" Payment validation: check if paymaster agrees to pay.\n Must verify sender is the entryPoint.\n Revert to reject this request.\n Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted).\n The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\n @param userOp          - The user operation.\n @param userOpHash      - Hash of the user's request data.\n @param maxCost         - The maximum cost of this transaction (based on maximum gas and gas price from userOp).\n @return context        - Value to send to a postOp. Zero length to signify postOp is not required.\n @return validationData - Signature and time-range of this operation, encoded the same as the return\n                          value of validateUserOperation.\n                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,\n                                                    other values are invalid for paymaster.\n                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"\n                          <6-byte> validAfter - first timestamp this operation is valid\n                          Note that the validation code cannot use block.timestamp (or block.number) directly."},"functionSelector":"52b7512c","id":259,"implemented":false,"kind":"function","modifiers":[],"name":"validatePaymasterUserOp","nameLocation":"2087:23:3","nodeType":"FunctionDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":248,"mutability":"mutable","name":"userOp","nameLocation":"2149:6:3","nodeType":"VariableDeclaration","scope":259,"src":"2120:35:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$399_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":247,"nodeType":"UserDefinedTypeName","pathNode":{"id":246,"name":"PackedUserOperation","nameLocations":["2120:19:3"],"nodeType":"IdentifierPath","referencedDeclaration":399,"src":"2120:19:3"},"referencedDeclaration":399,"src":"2120:19:3","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$399_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":250,"mutability":"mutable","name":"userOpHash","nameLocation":"2173:10:3","nodeType":"VariableDeclaration","scope":259,"src":"2165:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":249,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2165:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":252,"mutability":"mutable","name":"maxCost","nameLocation":"2201:7:3","nodeType":"VariableDeclaration","scope":259,"src":"2193:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":251,"name":"uint256","nodeType":"ElementaryTypeName","src":"2193:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2110:104:3"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":255,"mutability":"mutable","name":"context","nameLocation":"2246:7:3","nodeType":"VariableDeclaration","scope":259,"src":"2233:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":254,"name":"bytes","nodeType":"ElementaryTypeName","src":"2233:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":257,"mutability":"mutable","name":"validationData","nameLocation":"2263:14:3","nodeType":"VariableDeclaration","scope":259,"src":"2255:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":256,"name":"uint256","nodeType":"ElementaryTypeName","src":"2255:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2232:46:3"},"scope":273,"src":"2078:201:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"2285:849:3","text":" Post-operation handler.\n Must verify sender is the entryPoint.\n @param mode          - Enum with the following options:\n                        opSucceeded - User operation succeeded.\n                        opReverted  - User op reverted. The paymaster still has to pay for gas.\n                        postOpReverted - never passed in a call to postOp().\n @param context       - The context value returned by validatePaymasterUserOp\n @param actualGasCost - Actual gas used so far (without this postOp call).\n @param actualUserOpFeePerGas - the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas\n                        and maxPriorityFee (and basefee)\n                        It is not the same as tx.gasprice, which is what the bundler pays."},"functionSelector":"7c627b21","id":272,"implemented":false,"kind":"function","modifiers":[],"name":"postOp","nameLocation":"3148:6:3","nodeType":"FunctionDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"mutability":"mutable","name":"mode","nameLocation":"3175:4:3","nodeType":"VariableDeclaration","scope":272,"src":"3164:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$244","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":262,"nodeType":"UserDefinedTypeName","pathNode":{"id":261,"name":"PostOpMode","nameLocations":["3164:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":244,"src":"3164:10:3"},"referencedDeclaration":244,"src":"3164:10:3","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$244","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":265,"mutability":"mutable","name":"context","nameLocation":"3204:7:3","nodeType":"VariableDeclaration","scope":272,"src":"3189:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":264,"name":"bytes","nodeType":"ElementaryTypeName","src":"3189:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"actualGasCost","nameLocation":"3229:13:3","nodeType":"VariableDeclaration","scope":272,"src":"3221:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":266,"name":"uint256","nodeType":"ElementaryTypeName","src":"3221:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":269,"mutability":"mutable","name":"actualUserOpFeePerGas","nameLocation":"3260:21:3","nodeType":"VariableDeclaration","scope":272,"src":"3252:29:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":268,"name":"uint256","nodeType":"ElementaryTypeName","src":"3252:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3154:133:3"},"returnParameters":{"id":271,"nodeType":"ParameterList","parameters":[],"src":"3296:0:3"},"scope":273,"src":"3139:158:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":274,"src":"316:2983:3","usedErrors":[],"usedEvents":[]}],"src":"36:3264:3"},"id":3},"@account-abstraction/contracts/interfaces/IStakeManager.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/IStakeManager.sol","exportedSymbols":{"IStakeManager":[377]},"id":378,"license":"GPL-3.0-only","nodeType":"SourceUnit","nodes":[{"id":275,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"41:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IStakeManager","contractDependencies":[],"contractKind":"interface","documentation":{"id":276,"nodeType":"StructuredDocumentation","src":"67:212:4","text":" Manage deposits and stakes.\n Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account).\n Stake is value locked for at least \"unstakeDelay\" by the staked entity."},"fullyImplemented":false,"id":377,"linearizedBaseContracts":[377],"name":"IStakeManager","nameLocation":"290:13:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4","id":282,"name":"Deposited","nameLocation":"316:9:4","nodeType":"EventDefinition","parameters":{"id":281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":278,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"342:7:4","nodeType":"VariableDeclaration","scope":282,"src":"326:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":277,"name":"address","nodeType":"ElementaryTypeName","src":"326:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":280,"indexed":false,"mutability":"mutable","name":"totalDeposit","nameLocation":"359:12:4","nodeType":"VariableDeclaration","scope":282,"src":"351:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":279,"name":"uint256","nodeType":"ElementaryTypeName","src":"351:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"325:47:4"},"src":"310:63:4"},{"anonymous":false,"eventSelector":"d1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb","id":290,"name":"Withdrawn","nameLocation":"385:9:4","nodeType":"EventDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":284,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"420:7:4","nodeType":"VariableDeclaration","scope":290,"src":"404:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":283,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":286,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"445:15:4","nodeType":"VariableDeclaration","scope":290,"src":"437:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":285,"name":"address","nodeType":"ElementaryTypeName","src":"437:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":288,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"478:6:4","nodeType":"VariableDeclaration","scope":290,"src":"470:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":287,"name":"uint256","nodeType":"ElementaryTypeName","src":"470:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"394:96:4"},"src":"379:112:4"},{"anonymous":false,"eventSelector":"a5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01","id":298,"name":"StakeLocked","nameLocation":"560:11:4","nodeType":"EventDefinition","parameters":{"id":297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":292,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"597:7:4","nodeType":"VariableDeclaration","scope":298,"src":"581:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"581:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":294,"indexed":false,"mutability":"mutable","name":"totalStaked","nameLocation":"622:11:4","nodeType":"VariableDeclaration","scope":298,"src":"614:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":293,"name":"uint256","nodeType":"ElementaryTypeName","src":"614:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":296,"indexed":false,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"651:15:4","nodeType":"VariableDeclaration","scope":298,"src":"643:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":295,"name":"uint256","nodeType":"ElementaryTypeName","src":"643:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"571:101:4"},"src":"554:119:4"},{"anonymous":false,"eventSelector":"fa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a","id":304,"name":"StakeUnlocked","nameLocation":"742:13:4","nodeType":"EventDefinition","parameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"772:7:4","nodeType":"VariableDeclaration","scope":304,"src":"756:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":299,"name":"address","nodeType":"ElementaryTypeName","src":"756:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":302,"indexed":false,"mutability":"mutable","name":"withdrawTime","nameLocation":"789:12:4","nodeType":"VariableDeclaration","scope":304,"src":"781:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":301,"name":"uint256","nodeType":"ElementaryTypeName","src":"781:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"755:47:4"},"src":"736:67:4"},{"anonymous":false,"eventSelector":"b7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3","id":312,"name":"StakeWithdrawn","nameLocation":"815:14:4","nodeType":"EventDefinition","parameters":{"id":311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":306,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"855:7:4","nodeType":"VariableDeclaration","scope":312,"src":"839:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":305,"name":"address","nodeType":"ElementaryTypeName","src":"839:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":308,"indexed":false,"mutability":"mutable","name":"withdrawAddress","nameLocation":"880:15:4","nodeType":"VariableDeclaration","scope":312,"src":"872:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":307,"name":"address","nodeType":"ElementaryTypeName","src":"872:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":310,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"913:6:4","nodeType":"VariableDeclaration","scope":312,"src":"905:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":309,"name":"uint256","nodeType":"ElementaryTypeName","src":"905:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"829:96:4"},"src":"809:117:4"},{"canonicalName":"IStakeManager.DepositInfo","documentation":{"id":313,"nodeType":"StructuredDocumentation","src":"932:697:4","text":" @param deposit         - The entity's deposit.\n @param staked          - True if this entity is staked.\n @param stake           - Actual amount of ether staked for this entity.\n @param unstakeDelaySec - Minimum delay to withdraw the stake.\n @param withdrawTime    - First block timestamp where 'withdrawStake' will be callable, or zero if already locked.\n @dev Sizes were chosen so that deposit fits into one cell (used during handleOp)\n      and the rest fit into a 2nd cell (used during stake/unstake)\n      - 112 bit allows for 10^15 eth\n      - 48 bit for full timestamp\n      - 32 bit allows 150 years for unstake delay"},"id":324,"members":[{"constant":false,"id":315,"mutability":"mutable","name":"deposit","nameLocation":"1671:7:4","nodeType":"VariableDeclaration","scope":324,"src":"1663:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":317,"mutability":"mutable","name":"staked","nameLocation":"1693:6:4","nodeType":"VariableDeclaration","scope":324,"src":"1688:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":316,"name":"bool","nodeType":"ElementaryTypeName","src":"1688:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":319,"mutability":"mutable","name":"stake","nameLocation":"1717:5:4","nodeType":"VariableDeclaration","scope":324,"src":"1709:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":318,"name":"uint112","nodeType":"ElementaryTypeName","src":"1709:7:4","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"},{"constant":false,"id":321,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1739:15:4","nodeType":"VariableDeclaration","scope":324,"src":"1732:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":320,"name":"uint32","nodeType":"ElementaryTypeName","src":"1732:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":323,"mutability":"mutable","name":"withdrawTime","nameLocation":"1771:12:4","nodeType":"VariableDeclaration","scope":324,"src":"1764:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":322,"name":"uint48","nodeType":"ElementaryTypeName","src":"1764:6:4","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"name":"DepositInfo","nameLocation":"1641:11:4","nodeType":"StructDefinition","scope":377,"src":"1634:156:4","visibility":"public"},{"canonicalName":"IStakeManager.StakeInfo","id":329,"members":[{"constant":false,"id":326,"mutability":"mutable","name":"stake","nameLocation":"1894:5:4","nodeType":"VariableDeclaration","scope":329,"src":"1886:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":325,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":328,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"1917:15:4","nodeType":"VariableDeclaration","scope":329,"src":"1909:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":327,"name":"uint256","nodeType":"ElementaryTypeName","src":"1909:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"StakeInfo","nameLocation":"1866:9:4","nodeType":"StructDefinition","scope":377,"src":"1859:80:4","visibility":"public"},{"documentation":{"id":330,"nodeType":"StructuredDocumentation","src":"1945:149:4","text":" Get deposit info.\n @param account - The account to query.\n @return info   - Full deposit information of given account."},"functionSelector":"5287ce12","id":338,"implemented":false,"kind":"function","modifiers":[],"name":"getDepositInfo","nameLocation":"2108:14:4","nodeType":"FunctionDefinition","parameters":{"id":333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":332,"mutability":"mutable","name":"account","nameLocation":"2140:7:4","nodeType":"VariableDeclaration","scope":338,"src":"2132:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"2132:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2122:31:4"},"returnParameters":{"id":337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":336,"mutability":"mutable","name":"info","nameLocation":"2196:4:4","nodeType":"VariableDeclaration","scope":338,"src":"2177:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$324_memory_ptr","typeString":"struct IStakeManager.DepositInfo"},"typeName":{"id":335,"nodeType":"UserDefinedTypeName","pathNode":{"id":334,"name":"DepositInfo","nameLocations":["2177:11:4"],"nodeType":"IdentifierPath","referencedDeclaration":324,"src":"2177:11:4"},"referencedDeclaration":324,"src":"2177:11:4","typeDescriptions":{"typeIdentifier":"t_struct$_DepositInfo_$324_storage_ptr","typeString":"struct IStakeManager.DepositInfo"}},"visibility":"internal"}],"src":"2176:25:4"},"scope":377,"src":"2099:103:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":339,"nodeType":"StructuredDocumentation","src":"2208:155:4","text":" Get account balance.\n @param account - The account to query.\n @return        - The deposit (for gas payment) of the account."},"functionSelector":"70a08231","id":346,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2377:9:4","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":341,"mutability":"mutable","name":"account","nameLocation":"2395:7:4","nodeType":"VariableDeclaration","scope":346,"src":"2387:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"2387:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2386:17:4"},"returnParameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":346,"src":"2427:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":343,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2426:9:4"},"scope":377,"src":"2368:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"2442:106:4","text":" Add to the deposit of the given account.\n @param account - The account to add to."},"functionSelector":"b760faf9","id":352,"implemented":false,"kind":"function","modifiers":[],"name":"depositTo","nameLocation":"2562:9:4","nodeType":"FunctionDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"account","nameLocation":"2580:7:4","nodeType":"VariableDeclaration","scope":352,"src":"2572:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":348,"name":"address","nodeType":"ElementaryTypeName","src":"2572:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2571:17:4"},"returnParameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"2605:0:4"},"scope":377,"src":"2553:53:4","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":353,"nodeType":"StructuredDocumentation","src":"2612:203:4","text":" Add to the account's stake - amount and delay\n any pending unstake is first cancelled.\n @param _unstakeDelaySec - The new lock duration before the deposit can be withdrawn."},"functionSelector":"0396cb60","id":358,"implemented":false,"kind":"function","modifiers":[],"name":"addStake","nameLocation":"2829:8:4","nodeType":"FunctionDefinition","parameters":{"id":356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":355,"mutability":"mutable","name":"_unstakeDelaySec","nameLocation":"2845:16:4","nodeType":"VariableDeclaration","scope":358,"src":"2838:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":354,"name":"uint32","nodeType":"ElementaryTypeName","src":"2838:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2837:25:4"},"returnParameters":{"id":357,"nodeType":"ParameterList","parameters":[],"src":"2879:0:4"},"scope":377,"src":"2820:60:4","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":359,"nodeType":"StructuredDocumentation","src":"2886:128:4","text":" Attempt to unlock the stake.\n The value can be withdrawn (using withdrawStake) after the unstake delay."},"functionSelector":"bb9fe6bf","id":362,"implemented":false,"kind":"function","modifiers":[],"name":"unlockStake","nameLocation":"3028:11:4","nodeType":"FunctionDefinition","parameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"3039:2:4"},"returnParameters":{"id":361,"nodeType":"ParameterList","parameters":[],"src":"3050:0:4"},"scope":377,"src":"3019:32:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":363,"nodeType":"StructuredDocumentation","src":"3057:197:4","text":" Withdraw from the (unlocked) stake.\n Must first call unlockStake and wait for the unstakeDelay to pass.\n @param withdrawAddress - The address to send withdrawn value."},"functionSelector":"c23a5cea","id":368,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawStake","nameLocation":"3268:13:4","nodeType":"FunctionDefinition","parameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3298:15:4","nodeType":"VariableDeclaration","scope":368,"src":"3282:31:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":364,"name":"address","nodeType":"ElementaryTypeName","src":"3282:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"3281:33:4"},"returnParameters":{"id":367,"nodeType":"ParameterList","parameters":[],"src":"3323:0:4"},"scope":377,"src":"3259:65:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":369,"nodeType":"StructuredDocumentation","src":"3330:170:4","text":" Withdraw from the deposit.\n @param withdrawAddress - The address to send withdrawn value.\n @param withdrawAmount  - The amount to withdraw."},"functionSelector":"205c2878","id":376,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawTo","nameLocation":"3514:10:4","nodeType":"FunctionDefinition","parameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":371,"mutability":"mutable","name":"withdrawAddress","nameLocation":"3550:15:4","nodeType":"VariableDeclaration","scope":376,"src":"3534:31:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":370,"name":"address","nodeType":"ElementaryTypeName","src":"3534:15:4","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":373,"mutability":"mutable","name":"withdrawAmount","nameLocation":"3583:14:4","nodeType":"VariableDeclaration","scope":376,"src":"3575:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":372,"name":"uint256","nodeType":"ElementaryTypeName","src":"3575:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3524:79:4"},"returnParameters":{"id":375,"nodeType":"ParameterList","parameters":[],"src":"3612:0:4"},"scope":377,"src":"3505:108:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":378,"src":"280:3335:4","usedErrors":[],"usedEvents":[282,290,298,304,312]}],"src":"41:3575:4"},"id":4},"@account-abstraction/contracts/interfaces/PackedUserOperation.sol":{"ast":{"absolutePath":"@account-abstraction/contracts/interfaces/PackedUserOperation.sol","exportedSymbols":{"PackedUserOperation":[399]},"id":400,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":379,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"36:24:5"},{"canonicalName":"PackedUserOperation","documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"62:1164:5","text":" User Operation struct\n @param sender                - The sender account of this request.\n @param nonce                 - Unique value the sender uses to verify it is not a replay.\n @param initCode              - If set, the account contract will be created by this constructor/\n @param callData              - The method call to execute on this account.\n @param accountGasLimits      - Packed gas limits for validateUserOp and gas limit passed to the callData method call.\n @param preVerificationGas    - Gas not calculated by the handleOps method, but added to the gas paid.\n                                Covers batch overhead.\n @param gasFees               - packed gas fields maxPriorityFeePerGas and maxFeePerGas - Same as EIP-1559 gas parameters.\n @param paymasterAndData      - If set, this field holds the paymaster address, verification gas limit, postOp gas limit and paymaster-specific extra data\n                                The paymaster will pay for the transaction instead of the sender.\n @param signature             - Sender-verified signature over the entire request, the EntryPoint address and the chain ID."},"id":399,"members":[{"constant":false,"id":382,"mutability":"mutable","name":"sender","nameLocation":"1268:6:5","nodeType":"VariableDeclaration","scope":399,"src":"1260:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":381,"name":"address","nodeType":"ElementaryTypeName","src":"1260:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":384,"mutability":"mutable","name":"nonce","nameLocation":"1288:5:5","nodeType":"VariableDeclaration","scope":399,"src":"1280:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":383,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"initCode","nameLocation":"1305:8:5","nodeType":"VariableDeclaration","scope":399,"src":"1299:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":385,"name":"bytes","nodeType":"ElementaryTypeName","src":"1299:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"callData","nameLocation":"1325:8:5","nodeType":"VariableDeclaration","scope":399,"src":"1319:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":387,"name":"bytes","nodeType":"ElementaryTypeName","src":"1319:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":390,"mutability":"mutable","name":"accountGasLimits","nameLocation":"1347:16:5","nodeType":"VariableDeclaration","scope":399,"src":"1339:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":389,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1339:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"preVerificationGas","nameLocation":"1377:18:5","nodeType":"VariableDeclaration","scope":399,"src":"1369:26:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"1369:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":394,"mutability":"mutable","name":"gasFees","nameLocation":"1409:7:5","nodeType":"VariableDeclaration","scope":399,"src":"1401:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1401:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":396,"mutability":"mutable","name":"paymasterAndData","nameLocation":"1428:16:5","nodeType":"VariableDeclaration","scope":399,"src":"1422:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":395,"name":"bytes","nodeType":"ElementaryTypeName","src":"1422:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":398,"mutability":"mutable","name":"signature","nameLocation":"1456:9:5","nodeType":"VariableDeclaration","scope":399,"src":"1450:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":397,"name":"bytes","nodeType":"ElementaryTypeName","src":"1450:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"PackedUserOperation","nameLocation":"1234:19:5","nodeType":"StructDefinition","scope":400,"src":"1227:241:5","visibility":"public"}],"src":"36:1433:5"},"id":5},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2530],"Ownable":[547]},"id":548,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":401,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":403,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":548,"sourceUnit":2531,"src":"128:45:6","symbolAliases":[{"foreign":{"id":402,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"136:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":405,"name":"Context","nameLocations":["692:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":2530,"src":"692:7:6"},"id":406,"nodeType":"InheritanceSpecifier","src":"692:7:6"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"175:487:6","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":547,"linearizedBaseContracts":[547,2530],"name":"Ownable","nameLocation":"681:7:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":408,"mutability":"mutable","name":"_owner","nameLocation":"722:6:6","nodeType":"VariableDeclaration","scope":547,"src":"706:22:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":407,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":409,"nodeType":"StructuredDocumentation","src":"735:85:6","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":413,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:6","nodeType":"ErrorDefinition","parameters":{"id":412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":411,"mutability":"mutable","name":"account","nameLocation":"866:7:6","nodeType":"VariableDeclaration","scope":413,"src":"858:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":410,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:6"},"src":"825:50:6"},{"documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"881:82:6","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":418,"name":"OwnableInvalidOwner","nameLocation":"974:19:6","nodeType":"ErrorDefinition","parameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"owner","nameLocation":"1002:5:6","nodeType":"VariableDeclaration","scope":418,"src":"994:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":415,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:6"},"src":"968:41:6"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":424,"name":"OwnershipTransferred","nameLocation":"1021:20:6","nodeType":"EventDefinition","parameters":{"id":423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:6","nodeType":"VariableDeclaration","scope":424,"src":"1042:29:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":422,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:6","nodeType":"VariableDeclaration","scope":424,"src":"1073:24:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":421,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:6"},"src":"1015:84:6"},{"body":{"id":449,"nodeType":"Block","src":"1259:153:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":430,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"1273:12:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":431,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:6","typeDescriptions":{}}},"id":434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":444,"nodeType":"IfStatement","src":"1269:95:6","trueBody":{"id":443,"nodeType":"Block","src":"1301:63:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":437,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:6","typeDescriptions":{}}},"id":440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":436,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"1322:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":442,"nodeType":"RevertStatement","src":"1315:38:6"}]}},{"expression":{"arguments":[{"id":446,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"1392:12:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":445,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"1373:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":448,"nodeType":"ExpressionStatement","src":"1373:32:6"}]},"documentation":{"id":425,"nodeType":"StructuredDocumentation","src":"1105:115:6","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":450,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":427,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:6","nodeType":"VariableDeclaration","scope":450,"src":"1237:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":426,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:6"},"returnParameters":{"id":429,"nodeType":"ParameterList","parameters":[],"src":"1259:0:6"},"scope":547,"src":"1225:187:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":457,"nodeType":"Block","src":"1521:41:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":453,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"1531:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":455,"nodeType":"ExpressionStatement","src":"1531:13:6"},{"id":456,"nodeType":"PlaceholderStatement","src":"1554:1:6"}]},"documentation":{"id":451,"nodeType":"StructuredDocumentation","src":"1418:77:6","text":" @dev Throws if called by any account other than the owner."},"id":458,"name":"onlyOwner","nameLocation":"1509:9:6","nodeType":"ModifierDefinition","parameters":{"id":452,"nodeType":"ParameterList","parameters":[],"src":"1518:2:6"},"src":"1500:62:6","virtual":false,"visibility":"internal"},{"body":{"id":466,"nodeType":"Block","src":"1693:30:6","statements":[{"expression":{"id":464,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"1710:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":463,"id":465,"nodeType":"Return","src":"1703:13:6"}]},"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"1568:65:6","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":467,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:6","nodeType":"FunctionDefinition","parameters":{"id":460,"nodeType":"ParameterList","parameters":[],"src":"1652:2:6"},"returnParameters":{"id":463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":467,"src":"1684:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":461,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:6"},"scope":547,"src":"1638:85:6","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":483,"nodeType":"Block","src":"1841:117:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":471,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":467,"src":"1855:5:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":473,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"1866:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":482,"nodeType":"IfStatement","src":"1851:101:6","trueBody":{"id":481,"nodeType":"Block","src":"1880:72:6","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":477,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"1928:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":476,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"1901:26:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":480,"nodeType":"RevertStatement","src":"1894:47:6"}]}}]},"documentation":{"id":468,"nodeType":"StructuredDocumentation","src":"1729:62:6","text":" @dev Throws if the sender is not the owner."},"id":484,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:6","nodeType":"FunctionDefinition","parameters":{"id":469,"nodeType":"ParameterList","parameters":[],"src":"1816:2:6"},"returnParameters":{"id":470,"nodeType":"ParameterList","parameters":[],"src":"1841:0:6"},"scope":547,"src":"1796:162:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":497,"nodeType":"Block","src":"2347:47:6","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":491,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:6","typeDescriptions":{}}},"id":494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":490,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"2357:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":496,"nodeType":"ExpressionStatement","src":"2357:30:6"}]},"documentation":{"id":485,"nodeType":"StructuredDocumentation","src":"1964:324:6","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":498,"implemented":true,"kind":"function","modifiers":[{"id":488,"kind":"modifierInvocation","modifierName":{"id":487,"name":"onlyOwner","nameLocations":["2337:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":458,"src":"2337:9:6"},"nodeType":"ModifierInvocation","src":"2337:9:6"}],"name":"renounceOwnership","nameLocation":"2302:17:6","nodeType":"FunctionDefinition","parameters":{"id":486,"nodeType":"ParameterList","parameters":[],"src":"2319:2:6"},"returnParameters":{"id":489,"nodeType":"ParameterList","parameters":[],"src":"2347:0:6"},"scope":547,"src":"2293:101:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":525,"nodeType":"Block","src":"2613:145:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":506,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"2627:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:6","typeDescriptions":{}}},"id":510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":520,"nodeType":"IfStatement","src":"2623:91:6","trueBody":{"id":519,"nodeType":"Block","src":"2651:63:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":513,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:6","typeDescriptions":{}}},"id":516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":512,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"2672:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":518,"nodeType":"RevertStatement","src":"2665:38:6"}]}},{"expression":{"arguments":[{"id":522,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"2742:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":521,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"2723:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":524,"nodeType":"ExpressionStatement","src":"2723:28:6"}]},"documentation":{"id":499,"nodeType":"StructuredDocumentation","src":"2400:138:6","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":526,"implemented":true,"kind":"function","modifiers":[{"id":504,"kind":"modifierInvocation","modifierName":{"id":503,"name":"onlyOwner","nameLocations":["2603:9:6"],"nodeType":"IdentifierPath","referencedDeclaration":458,"src":"2603:9:6"},"nodeType":"ModifierInvocation","src":"2603:9:6"}],"name":"transferOwnership","nameLocation":"2552:17:6","nodeType":"FunctionDefinition","parameters":{"id":502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":501,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:6","nodeType":"VariableDeclaration","scope":526,"src":"2570:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:6"},"returnParameters":{"id":505,"nodeType":"ParameterList","parameters":[],"src":"2613:0:6"},"scope":547,"src":"2543:215:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":545,"nodeType":"Block","src":"2975:124:6","statements":[{"assignments":[533],"declarations":[{"constant":false,"id":533,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:6","nodeType":"VariableDeclaration","scope":545,"src":"2985:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":532,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":535,"initialValue":{"id":534,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"3004:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:6"},{"expression":{"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":536,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"3020:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":537,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"3029:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":539,"nodeType":"ExpressionStatement","src":"3020:17:6"},{"eventCall":{"arguments":[{"id":541,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"3073:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":542,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"3083:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":540,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"3052:20:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":544,"nodeType":"EmitStatement","src":"3047:45:6"}]},"documentation":{"id":527,"nodeType":"StructuredDocumentation","src":"2764:143:6","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":546,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:6","nodeType":"FunctionDefinition","parameters":{"id":530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":529,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:6","nodeType":"VariableDeclaration","scope":546,"src":"2940:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:6"},"returnParameters":{"id":531,"nodeType":"ParameterList","parameters":[],"src":"2975:0:6"},"scope":547,"src":"2912:187:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":548,"src":"663:2438:6","usedErrors":[413,418],"usedEvents":[424]}],"src":"102:3000:6"},"id":6},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[684],"IERC20Errors":[589],"IERC721Errors":[637]},"id":685,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":549,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":550,"nodeType":"StructuredDocumentation","src":"138:141:7","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":589,"linearizedBaseContracts":[589],"name":"IERC20Errors","nameLocation":"290:12:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":551,"nodeType":"StructuredDocumentation","src":"309:309:7","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":559,"name":"ERC20InsufficientBalance","nameLocation":"629:24:7","nodeType":"ErrorDefinition","parameters":{"id":558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":553,"mutability":"mutable","name":"sender","nameLocation":"662:6:7","nodeType":"VariableDeclaration","scope":559,"src":"654:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":552,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":555,"mutability":"mutable","name":"balance","nameLocation":"678:7:7","nodeType":"VariableDeclaration","scope":559,"src":"670:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":554,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":557,"mutability":"mutable","name":"needed","nameLocation":"695:6:7","nodeType":"VariableDeclaration","scope":559,"src":"687:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":556,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:7"},"src":"623:80:7"},{"documentation":{"id":560,"nodeType":"StructuredDocumentation","src":"709:152:7","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":564,"name":"ERC20InvalidSender","nameLocation":"872:18:7","nodeType":"ErrorDefinition","parameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":562,"mutability":"mutable","name":"sender","nameLocation":"899:6:7","nodeType":"VariableDeclaration","scope":564,"src":"891:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:7"},"src":"866:41:7"},{"documentation":{"id":565,"nodeType":"StructuredDocumentation","src":"913:159:7","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":569,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:7","nodeType":"ErrorDefinition","parameters":{"id":568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":567,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:7","nodeType":"VariableDeclaration","scope":569,"src":"1104:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:7"},"src":"1077:45:7"},{"documentation":{"id":570,"nodeType":"StructuredDocumentation","src":"1128:345:7","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":578,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:7","nodeType":"ErrorDefinition","parameters":{"id":577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":572,"mutability":"mutable","name":"spender","nameLocation":"1519:7:7","nodeType":"VariableDeclaration","scope":578,"src":"1511:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":571,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":574,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:7","nodeType":"VariableDeclaration","scope":578,"src":"1528:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":573,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":576,"mutability":"mutable","name":"needed","nameLocation":"1555:6:7","nodeType":"VariableDeclaration","scope":578,"src":"1547:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":575,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:7"},"src":"1478:85:7"},{"documentation":{"id":579,"nodeType":"StructuredDocumentation","src":"1569:174:7","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":583,"name":"ERC20InvalidApprover","nameLocation":"1754:20:7","nodeType":"ErrorDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"approver","nameLocation":"1783:8:7","nodeType":"VariableDeclaration","scope":583,"src":"1775:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:7"},"src":"1748:45:7"},{"documentation":{"id":584,"nodeType":"StructuredDocumentation","src":"1799:195:7","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":588,"name":"ERC20InvalidSpender","nameLocation":"2005:19:7","nodeType":"ErrorDefinition","parameters":{"id":587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":586,"mutability":"mutable","name":"spender","nameLocation":"2033:7:7","nodeType":"VariableDeclaration","scope":588,"src":"2025:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":585,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:7"},"src":"1999:43:7"}],"scope":685,"src":"280:1764:7","usedErrors":[559,564,569,578,583,588],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":590,"nodeType":"StructuredDocumentation","src":"2046:143:7","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":637,"linearizedBaseContracts":[637],"name":"IERC721Errors","nameLocation":"2200:13:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":591,"nodeType":"StructuredDocumentation","src":"2220:219:7","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":595,"name":"ERC721InvalidOwner","nameLocation":"2450:18:7","nodeType":"ErrorDefinition","parameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":593,"mutability":"mutable","name":"owner","nameLocation":"2477:5:7","nodeType":"VariableDeclaration","scope":595,"src":"2469:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:7"},"src":"2444:40:7"},{"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"2490:132:7","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":600,"name":"ERC721NonexistentToken","nameLocation":"2633:22:7","nodeType":"ErrorDefinition","parameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:7","nodeType":"VariableDeclaration","scope":600,"src":"2656:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":597,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:7"},"src":"2627:46:7"},{"documentation":{"id":601,"nodeType":"StructuredDocumentation","src":"2679:289:7","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":609,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:7","nodeType":"ErrorDefinition","parameters":{"id":608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":603,"mutability":"mutable","name":"sender","nameLocation":"3008:6:7","nodeType":"VariableDeclaration","scope":609,"src":"3000:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":602,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":605,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:7","nodeType":"VariableDeclaration","scope":609,"src":"3016:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":604,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":607,"mutability":"mutable","name":"owner","nameLocation":"3041:5:7","nodeType":"VariableDeclaration","scope":609,"src":"3033:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:7"},"src":"2973:75:7"},{"documentation":{"id":610,"nodeType":"StructuredDocumentation","src":"3054:152:7","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":614,"name":"ERC721InvalidSender","nameLocation":"3217:19:7","nodeType":"ErrorDefinition","parameters":{"id":613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":612,"mutability":"mutable","name":"sender","nameLocation":"3245:6:7","nodeType":"VariableDeclaration","scope":614,"src":"3237:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":611,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:7"},"src":"3211:42:7"},{"documentation":{"id":615,"nodeType":"StructuredDocumentation","src":"3259:159:7","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":619,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:7","nodeType":"ErrorDefinition","parameters":{"id":618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":617,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:7","nodeType":"VariableDeclaration","scope":619,"src":"3451:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":616,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:7"},"src":"3423:46:7"},{"documentation":{"id":620,"nodeType":"StructuredDocumentation","src":"3475:247:7","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":626,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:7","nodeType":"ErrorDefinition","parameters":{"id":625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"mutability":"mutable","name":"operator","nameLocation":"3768:8:7","nodeType":"VariableDeclaration","scope":626,"src":"3760:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":624,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:7","nodeType":"VariableDeclaration","scope":626,"src":"3778:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":623,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:7"},"src":"3727:68:7"},{"documentation":{"id":627,"nodeType":"StructuredDocumentation","src":"3801:174:7","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":631,"name":"ERC721InvalidApprover","nameLocation":"3986:21:7","nodeType":"ErrorDefinition","parameters":{"id":630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"approver","nameLocation":"4016:8:7","nodeType":"VariableDeclaration","scope":631,"src":"4008:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":628,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:7"},"src":"3980:46:7"},{"documentation":{"id":632,"nodeType":"StructuredDocumentation","src":"4032:197:7","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":636,"name":"ERC721InvalidOperator","nameLocation":"4240:21:7","nodeType":"ErrorDefinition","parameters":{"id":635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"operator","nameLocation":"4270:8:7","nodeType":"VariableDeclaration","scope":636,"src":"4262:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:7"},"src":"4234:46:7"}],"scope":685,"src":"2190:2092:7","usedErrors":[595,600,609,614,619,626,631,636],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":638,"nodeType":"StructuredDocumentation","src":"4284:145:7","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":684,"linearizedBaseContracts":[684],"name":"IERC1155Errors","nameLocation":"4440:14:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":639,"nodeType":"StructuredDocumentation","src":"4461:361:7","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":649,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:7","nodeType":"ErrorDefinition","parameters":{"id":648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":641,"mutability":"mutable","name":"sender","nameLocation":"4868:6:7","nodeType":"VariableDeclaration","scope":649,"src":"4860:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":640,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":643,"mutability":"mutable","name":"balance","nameLocation":"4884:7:7","nodeType":"VariableDeclaration","scope":649,"src":"4876:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":642,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":645,"mutability":"mutable","name":"needed","nameLocation":"4901:6:7","nodeType":"VariableDeclaration","scope":649,"src":"4893:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":644,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":647,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:7","nodeType":"VariableDeclaration","scope":649,"src":"4909:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":646,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:7"},"src":"4827:99:7"},{"documentation":{"id":650,"nodeType":"StructuredDocumentation","src":"4932:152:7","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":654,"name":"ERC1155InvalidSender","nameLocation":"5095:20:7","nodeType":"ErrorDefinition","parameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"sender","nameLocation":"5124:6:7","nodeType":"VariableDeclaration","scope":654,"src":"5116:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":651,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:7"},"src":"5089:43:7"},{"documentation":{"id":655,"nodeType":"StructuredDocumentation","src":"5138:159:7","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":659,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:7","nodeType":"ErrorDefinition","parameters":{"id":658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:7","nodeType":"VariableDeclaration","scope":659,"src":"5331:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:7"},"src":"5302:47:7"},{"documentation":{"id":660,"nodeType":"StructuredDocumentation","src":"5355:256:7","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":666,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:7","nodeType":"ErrorDefinition","parameters":{"id":665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":662,"mutability":"mutable","name":"operator","nameLocation":"5659:8:7","nodeType":"VariableDeclaration","scope":666,"src":"5651:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":661,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":664,"mutability":"mutable","name":"owner","nameLocation":"5677:5:7","nodeType":"VariableDeclaration","scope":666,"src":"5669:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":663,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:7"},"src":"5616:68:7"},{"documentation":{"id":667,"nodeType":"StructuredDocumentation","src":"5690:174:7","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":671,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:7","nodeType":"ErrorDefinition","parameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":669,"mutability":"mutable","name":"approver","nameLocation":"5906:8:7","nodeType":"VariableDeclaration","scope":671,"src":"5898:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":668,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:7"},"src":"5869:47:7"},{"documentation":{"id":672,"nodeType":"StructuredDocumentation","src":"5922:197:7","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":676,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:7","nodeType":"ErrorDefinition","parameters":{"id":675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"operator","nameLocation":"6161:8:7","nodeType":"VariableDeclaration","scope":676,"src":"6153:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":673,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:7"},"src":"6124:47:7"},{"documentation":{"id":677,"nodeType":"StructuredDocumentation","src":"6177:280:7","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":683,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:7","nodeType":"ErrorDefinition","parameters":{"id":682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":679,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:7","nodeType":"VariableDeclaration","scope":683,"src":"6494:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":678,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":681,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:7","nodeType":"VariableDeclaration","scope":683,"src":"6513:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":680,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:7"},"src":"6462:73:7"}],"scope":685,"src":"4430:2107:7","usedErrors":[649,654,659,666,671,676,683],"usedEvents":[]}],"src":"112:6426:7"},"id":7},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2530],"ERC20":[1199],"IERC20":[1277],"IERC20Errors":[589],"IERC20Metadata":[1303]},"id":1200,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":686,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":688,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1200,"sourceUnit":1278,"src":"131:36:8","symbolAliases":[{"foreign":{"id":687,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"139:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":690,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1200,"sourceUnit":1304,"src":"168:63:8","symbolAliases":[{"foreign":{"id":689,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"176:14:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":692,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1200,"sourceUnit":2531,"src":"232:48:8","symbolAliases":[{"foreign":{"id":691,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"240:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":694,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1200,"sourceUnit":685,"src":"281:65:8","symbolAliases":[{"foreign":{"id":693,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"289:12:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":696,"name":"Context","nameLocations":["1133:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2530,"src":"1133:7:8"},"id":697,"nodeType":"InheritanceSpecifier","src":"1133:7:8"},{"baseName":{"id":698,"name":"IERC20","nameLocations":["1142:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1277,"src":"1142:6:8"},"id":699,"nodeType":"InheritanceSpecifier","src":"1142:6:8"},{"baseName":{"id":700,"name":"IERC20Metadata","nameLocations":["1150:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1303,"src":"1150:14:8"},"id":701,"nodeType":"InheritanceSpecifier","src":"1150:14:8"},{"baseName":{"id":702,"name":"IERC20Errors","nameLocations":["1166:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":589,"src":"1166:12:8"},"id":703,"nodeType":"InheritanceSpecifier","src":"1166:12:8"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":695,"nodeType":"StructuredDocumentation","src":"348:757:8","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":1199,"linearizedBaseContracts":[1199,589,1303,1277,2530],"name":"ERC20","nameLocation":"1124:5:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":707,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:8","nodeType":"VariableDeclaration","scope":1199,"src":"1185:53:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":706,"keyName":"account","keyNameLocation":"1201:7:8","keyType":{"id":704,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":705,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":713,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:8","nodeType":"VariableDeclaration","scope":1199,"src":"1245:83:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":712,"keyName":"account","keyNameLocation":"1261:7:8","keyType":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":711,"keyName":"spender","keyNameLocation":"1288:7:8","keyType":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":710,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":715,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:8","nodeType":"VariableDeclaration","scope":1199,"src":"1335:28:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":714,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":717,"mutability":"mutable","name":"_name","nameLocation":"1385:5:8","nodeType":"VariableDeclaration","scope":1199,"src":"1370:20:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":716,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":719,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:8","nodeType":"VariableDeclaration","scope":1199,"src":"1396:22:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":718,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":735,"nodeType":"Block","src":"1657:57:8","statements":[{"expression":{"id":729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":727,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"1667:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":728,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"1675:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1667:13:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":730,"nodeType":"ExpressionStatement","src":"1667:13:8"},{"expression":{"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":731,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"1690:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":732,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"1700:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1690:17:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":734,"nodeType":"ExpressionStatement","src":"1690:17:8"}]},"documentation":{"id":720,"nodeType":"StructuredDocumentation","src":"1425:171:8","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":736,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":722,"mutability":"mutable","name":"name_","nameLocation":"1627:5:8","nodeType":"VariableDeclaration","scope":736,"src":"1613:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":721,"name":"string","nodeType":"ElementaryTypeName","src":"1613:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":724,"mutability":"mutable","name":"symbol_","nameLocation":"1648:7:8","nodeType":"VariableDeclaration","scope":736,"src":"1634:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":723,"name":"string","nodeType":"ElementaryTypeName","src":"1634:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1612:44:8"},"returnParameters":{"id":726,"nodeType":"ParameterList","parameters":[],"src":"1657:0:8"},"scope":1199,"src":"1601:113:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1290],"body":{"id":744,"nodeType":"Block","src":"1839:29:8","statements":[{"expression":{"id":742,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"1856:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":741,"id":743,"nodeType":"Return","src":"1849:12:8"}]},"documentation":{"id":737,"nodeType":"StructuredDocumentation","src":"1720:54:8","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":745,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1788:4:8","nodeType":"FunctionDefinition","parameters":{"id":738,"nodeType":"ParameterList","parameters":[],"src":"1792:2:8"},"returnParameters":{"id":741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":745,"src":"1824:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":739,"name":"string","nodeType":"ElementaryTypeName","src":"1824:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1823:15:8"},"scope":1199,"src":"1779:89:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1296],"body":{"id":753,"nodeType":"Block","src":"2043:31:8","statements":[{"expression":{"id":751,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"2060:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":750,"id":752,"nodeType":"Return","src":"2053:14:8"}]},"documentation":{"id":746,"nodeType":"StructuredDocumentation","src":"1874:102:8","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":754,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1990:6:8","nodeType":"FunctionDefinition","parameters":{"id":747,"nodeType":"ParameterList","parameters":[],"src":"1996:2:8"},"returnParameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":754,"src":"2028:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":748,"name":"string","nodeType":"ElementaryTypeName","src":"2028:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2027:15:8"},"scope":1199,"src":"1981:93:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1302],"body":{"id":762,"nodeType":"Block","src":"2763:26:8","statements":[{"expression":{"hexValue":"3138","id":760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:2:8","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":759,"id":761,"nodeType":"Return","src":"2773:9:8"}]},"documentation":{"id":755,"nodeType":"StructuredDocumentation","src":"2080:622:8","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":763,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2716:8:8","nodeType":"FunctionDefinition","parameters":{"id":756,"nodeType":"ParameterList","parameters":[],"src":"2724:2:8"},"returnParameters":{"id":759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":763,"src":"2756:5:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":757,"name":"uint8","nodeType":"ElementaryTypeName","src":"2756:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2755:7:8"},"scope":1199,"src":"2707:82:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1226],"body":{"id":771,"nodeType":"Block","src":"2910:36:8","statements":[{"expression":{"id":769,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"2927:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":768,"id":770,"nodeType":"Return","src":"2920:19:8"}]},"documentation":{"id":764,"nodeType":"StructuredDocumentation","src":"2795:49:8","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":772,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2858:11:8","nodeType":"FunctionDefinition","parameters":{"id":765,"nodeType":"ParameterList","parameters":[],"src":"2869:2:8"},"returnParameters":{"id":768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":772,"src":"2901:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":766,"name":"uint256","nodeType":"ElementaryTypeName","src":"2901:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2900:9:8"},"scope":1199,"src":"2849:97:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1234],"body":{"id":784,"nodeType":"Block","src":"3078:42:8","statements":[{"expression":{"baseExpression":{"id":780,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"3095:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":782,"indexExpression":{"id":781,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"3105:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3095:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":779,"id":783,"nodeType":"Return","src":"3088:25:8"}]},"documentation":{"id":773,"nodeType":"StructuredDocumentation","src":"2952:47:8","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":785,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3013:9:8","nodeType":"FunctionDefinition","parameters":{"id":776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":775,"mutability":"mutable","name":"account","nameLocation":"3031:7:8","nodeType":"VariableDeclaration","scope":785,"src":"3023:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":774,"name":"address","nodeType":"ElementaryTypeName","src":"3023:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3022:17:8"},"returnParameters":{"id":779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":785,"src":"3069:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":777,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3068:9:8"},"scope":1199,"src":"3004:116:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1244],"body":{"id":808,"nodeType":"Block","src":"3390:103:8","statements":[{"assignments":[796],"declarations":[{"constant":false,"id":796,"mutability":"mutable","name":"owner","nameLocation":"3408:5:8","nodeType":"VariableDeclaration","scope":808,"src":"3400:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":795,"name":"address","nodeType":"ElementaryTypeName","src":"3400:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":799,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":797,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"3416:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3400:28:8"},{"expression":{"arguments":[{"id":801,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"3448:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":802,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"3455:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"3459:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":800,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"3438:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3438:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":805,"nodeType":"ExpressionStatement","src":"3438:27:8"},{"expression":{"hexValue":"74727565","id":806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3482:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":794,"id":807,"nodeType":"Return","src":"3475:11:8"}]},"documentation":{"id":786,"nodeType":"StructuredDocumentation","src":"3126:184:8","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":809,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3324:8:8","nodeType":"FunctionDefinition","parameters":{"id":791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":788,"mutability":"mutable","name":"to","nameLocation":"3341:2:8","nodeType":"VariableDeclaration","scope":809,"src":"3333:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":787,"name":"address","nodeType":"ElementaryTypeName","src":"3333:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":790,"mutability":"mutable","name":"value","nameLocation":"3353:5:8","nodeType":"VariableDeclaration","scope":809,"src":"3345:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":789,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3332:27:8"},"returnParameters":{"id":794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":809,"src":"3384:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":792,"name":"bool","nodeType":"ElementaryTypeName","src":"3384:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3383:6:8"},"scope":1199,"src":"3315:178:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1254],"body":{"id":825,"nodeType":"Block","src":"3640:51:8","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":819,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"3657:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":821,"indexExpression":{"id":820,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":812,"src":"3669:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":823,"indexExpression":{"id":822,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"3676:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":818,"id":824,"nodeType":"Return","src":"3650:34:8"}]},"documentation":{"id":810,"nodeType":"StructuredDocumentation","src":"3499:47:8","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":826,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3560:9:8","nodeType":"FunctionDefinition","parameters":{"id":815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"mutability":"mutable","name":"owner","nameLocation":"3578:5:8","nodeType":"VariableDeclaration","scope":826,"src":"3570:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":811,"name":"address","nodeType":"ElementaryTypeName","src":"3570:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":814,"mutability":"mutable","name":"spender","nameLocation":"3593:7:8","nodeType":"VariableDeclaration","scope":826,"src":"3585:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"3585:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3569:32:8"},"returnParameters":{"id":818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":817,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":826,"src":"3631:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":816,"name":"uint256","nodeType":"ElementaryTypeName","src":"3631:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3630:9:8"},"scope":1199,"src":"3551:140:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1264],"body":{"id":849,"nodeType":"Block","src":"4077:107:8","statements":[{"assignments":[837],"declarations":[{"constant":false,"id":837,"mutability":"mutable","name":"owner","nameLocation":"4095:5:8","nodeType":"VariableDeclaration","scope":849,"src":"4087:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"4087:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":840,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":838,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"4103:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4087:28:8"},{"expression":{"arguments":[{"id":842,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"4134:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":843,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"4141:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"4150:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":841,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1090,1150],"referencedDeclaration":1090,"src":"4125:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4125:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":846,"nodeType":"ExpressionStatement","src":"4125:31:8"},{"expression":{"hexValue":"74727565","id":847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4173:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":835,"id":848,"nodeType":"Return","src":"4166:11:8"}]},"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"3697:296:8","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":850,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4007:7:8","nodeType":"FunctionDefinition","parameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"spender","nameLocation":"4023:7:8","nodeType":"VariableDeclaration","scope":850,"src":"4015:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"4015:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":831,"mutability":"mutable","name":"value","nameLocation":"4040:5:8","nodeType":"VariableDeclaration","scope":850,"src":"4032:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":830,"name":"uint256","nodeType":"ElementaryTypeName","src":"4032:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4014:32:8"},"returnParameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":850,"src":"4071:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":833,"name":"bool","nodeType":"ElementaryTypeName","src":"4071:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4070:6:8"},"scope":1199,"src":"3998:186:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1276],"body":{"id":881,"nodeType":"Block","src":"4869:151:8","statements":[{"assignments":[863],"declarations":[{"constant":false,"id":863,"mutability":"mutable","name":"spender","nameLocation":"4887:7:8","nodeType":"VariableDeclaration","scope":881,"src":"4879:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":862,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":866,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":864,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"4897:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4897:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4879:30:8"},{"expression":{"arguments":[{"id":868,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"4935:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":869,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"4941:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"4950:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":867,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"4919:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4919:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":872,"nodeType":"ExpressionStatement","src":"4919:37:8"},{"expression":{"arguments":[{"id":874,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"4976:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":875,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"4982:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"4986:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":873,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"4966:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4966:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":878,"nodeType":"ExpressionStatement","src":"4966:26:8"},{"expression":{"hexValue":"74727565","id":879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5009:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":861,"id":880,"nodeType":"Return","src":"5002:11:8"}]},"documentation":{"id":851,"nodeType":"StructuredDocumentation","src":"4190:581:8","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":882,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4785:12:8","nodeType":"FunctionDefinition","parameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":853,"mutability":"mutable","name":"from","nameLocation":"4806:4:8","nodeType":"VariableDeclaration","scope":882,"src":"4798:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":852,"name":"address","nodeType":"ElementaryTypeName","src":"4798:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":855,"mutability":"mutable","name":"to","nameLocation":"4820:2:8","nodeType":"VariableDeclaration","scope":882,"src":"4812:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":854,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":857,"mutability":"mutable","name":"value","nameLocation":"4832:5:8","nodeType":"VariableDeclaration","scope":882,"src":"4824:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":856,"name":"uint256","nodeType":"ElementaryTypeName","src":"4824:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4797:41:8"},"returnParameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":882,"src":"4863:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":859,"name":"bool","nodeType":"ElementaryTypeName","src":"4863:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4862:6:8"},"scope":1199,"src":"4776:244:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":928,"nodeType":"Block","src":"5462:231:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":892,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"5476:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5492:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5484:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"5484:7:8","typeDescriptions":{}}},"id":896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5476:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":906,"nodeType":"IfStatement","src":"5472:86:8","trueBody":{"id":905,"nodeType":"Block","src":"5496:62:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5544:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5536:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":899,"name":"address","nodeType":"ElementaryTypeName","src":"5536:7:8","typeDescriptions":{}}},"id":902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":898,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"5517:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":904,"nodeType":"RevertStatement","src":"5510:37:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":907,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"5571:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5585:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5577:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":908,"name":"address","nodeType":"ElementaryTypeName","src":"5577:7:8","typeDescriptions":{}}},"id":911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5577:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5571:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":921,"nodeType":"IfStatement","src":"5567:86:8","trueBody":{"id":920,"nodeType":"Block","src":"5589:64:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5639:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5631:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":914,"name":"address","nodeType":"ElementaryTypeName","src":"5631:7:8","typeDescriptions":{}}},"id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5631:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":913,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"5610:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":919,"nodeType":"RevertStatement","src":"5603:39:8"}]}},{"expression":{"arguments":[{"id":923,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":885,"src":"5670:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":924,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"5676:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"5680:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":922,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"5662:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5662:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":927,"nodeType":"ExpressionStatement","src":"5662:24:8"}]},"documentation":{"id":883,"nodeType":"StructuredDocumentation","src":"5026:362:8","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":929,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5402:9:8","nodeType":"FunctionDefinition","parameters":{"id":890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"mutability":"mutable","name":"from","nameLocation":"5420:4:8","nodeType":"VariableDeclaration","scope":929,"src":"5412:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":884,"name":"address","nodeType":"ElementaryTypeName","src":"5412:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":887,"mutability":"mutable","name":"to","nameLocation":"5434:2:8","nodeType":"VariableDeclaration","scope":929,"src":"5426:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"5426:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":889,"mutability":"mutable","name":"value","nameLocation":"5446:5:8","nodeType":"VariableDeclaration","scope":929,"src":"5438:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":888,"name":"uint256","nodeType":"ElementaryTypeName","src":"5438:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5411:41:8"},"returnParameters":{"id":891,"nodeType":"ParameterList","parameters":[],"src":"5462:0:8"},"scope":1199,"src":"5393:300:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1005,"nodeType":"Block","src":"6083:1032:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":939,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"6097:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6113:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6105:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":940,"name":"address","nodeType":"ElementaryTypeName","src":"6105:7:8","typeDescriptions":{}}},"id":943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6105:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6097:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":976,"nodeType":"Block","src":"6271:362:8","statements":[{"assignments":[951],"declarations":[{"constant":false,"id":951,"mutability":"mutable","name":"fromBalance","nameLocation":"6293:11:8","nodeType":"VariableDeclaration","scope":976,"src":"6285:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":950,"name":"uint256","nodeType":"ElementaryTypeName","src":"6285:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":955,"initialValue":{"baseExpression":{"id":952,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"6307:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":954,"indexExpression":{"id":953,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"6317:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6307:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6285:37:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":956,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"6340:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"6354:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6340:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":966,"nodeType":"IfStatement","src":"6336:115:8","trueBody":{"id":965,"nodeType":"Block","src":"6361:90:8","statements":[{"errorCall":{"arguments":[{"id":960,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"6411:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":961,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"6417:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"6430:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":959,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"6386:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6386:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":964,"nodeType":"RevertStatement","src":"6379:57:8"}]}},{"id":975,"nodeType":"UncheckedBlock","src":"6464:159:8","statements":[{"expression":{"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":967,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"6571:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":969,"indexExpression":{"id":968,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"6581:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6571:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":970,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"6589:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"6603:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6589:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6571:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":974,"nodeType":"ExpressionStatement","src":"6571:37:8"}]}]},"id":977,"nodeType":"IfStatement","src":"6093:540:8","trueBody":{"id":949,"nodeType":"Block","src":"6117:148:8","statements":[{"expression":{"id":947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":945,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"6233:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"6249:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6233:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":948,"nodeType":"ExpressionStatement","src":"6233:21:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":978,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"6647:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6661:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6653:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":979,"name":"address","nodeType":"ElementaryTypeName","src":"6653:7:8","typeDescriptions":{}}},"id":982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6647:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":997,"nodeType":"Block","src":"6862:206:8","statements":[{"id":996,"nodeType":"UncheckedBlock","src":"6876:182:8","statements":[{"expression":{"id":994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":990,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"7021:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":992,"indexExpression":{"id":991,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"7031:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7021:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"7038:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7021:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":995,"nodeType":"ExpressionStatement","src":"7021:22:8"}]}]},"id":998,"nodeType":"IfStatement","src":"6643:425:8","trueBody":{"id":989,"nodeType":"Block","src":"6665:191:8","statements":[{"id":988,"nodeType":"UncheckedBlock","src":"6679:167:8","statements":[{"expression":{"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":984,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"6810:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":985,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"6826:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6810:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":987,"nodeType":"ExpressionStatement","src":"6810:21:8"}]}]}},{"eventCall":{"arguments":[{"id":1000,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"7092:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1001,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"7098:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":936,"src":"7102:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":999,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"7083:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7083:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1004,"nodeType":"EmitStatement","src":"7078:30:8"}]},"documentation":{"id":930,"nodeType":"StructuredDocumentation","src":"5699:304:8","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1006,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6017:7:8","nodeType":"FunctionDefinition","parameters":{"id":937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":932,"mutability":"mutable","name":"from","nameLocation":"6033:4:8","nodeType":"VariableDeclaration","scope":1006,"src":"6025:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":931,"name":"address","nodeType":"ElementaryTypeName","src":"6025:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":934,"mutability":"mutable","name":"to","nameLocation":"6047:2:8","nodeType":"VariableDeclaration","scope":1006,"src":"6039:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":933,"name":"address","nodeType":"ElementaryTypeName","src":"6039:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":936,"mutability":"mutable","name":"value","nameLocation":"6059:5:8","nodeType":"VariableDeclaration","scope":1006,"src":"6051:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":935,"name":"uint256","nodeType":"ElementaryTypeName","src":"6051:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6024:41:8"},"returnParameters":{"id":938,"nodeType":"ParameterList","parameters":[],"src":"6083:0:8"},"scope":1199,"src":"6008:1107:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1038,"nodeType":"Block","src":"7514:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1014,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"7528:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7547:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7539:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1015,"name":"address","nodeType":"ElementaryTypeName","src":"7539:7:8","typeDescriptions":{}}},"id":1018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7539:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7528:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1028,"nodeType":"IfStatement","src":"7524:91:8","trueBody":{"id":1027,"nodeType":"Block","src":"7551:64:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7601:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7593:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1021,"name":"address","nodeType":"ElementaryTypeName","src":"7593:7:8","typeDescriptions":{}}},"id":1024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1020,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"7572:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7572:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1026,"nodeType":"RevertStatement","src":"7565:39:8"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7640:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7632:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1030,"name":"address","nodeType":"ElementaryTypeName","src":"7632:7:8","typeDescriptions":{}}},"id":1033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7632:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1034,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"7644:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"7653:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1029,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"7624:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7624:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1037,"nodeType":"ExpressionStatement","src":"7624:35:8"}]},"documentation":{"id":1007,"nodeType":"StructuredDocumentation","src":"7121:332:8","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1039,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7467:5:8","nodeType":"FunctionDefinition","parameters":{"id":1012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1009,"mutability":"mutable","name":"account","nameLocation":"7481:7:8","nodeType":"VariableDeclaration","scope":1039,"src":"7473:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1008,"name":"address","nodeType":"ElementaryTypeName","src":"7473:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1011,"mutability":"mutable","name":"value","nameLocation":"7498:5:8","nodeType":"VariableDeclaration","scope":1039,"src":"7490:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1010,"name":"uint256","nodeType":"ElementaryTypeName","src":"7490:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7472:32:8"},"returnParameters":{"id":1013,"nodeType":"ParameterList","parameters":[],"src":"7514:0:8"},"scope":1199,"src":"7458:208:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1071,"nodeType":"Block","src":"8040:150:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1047,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"8054:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8073:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8065:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1048,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:8","typeDescriptions":{}}},"id":1051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8065:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8054:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1061,"nodeType":"IfStatement","src":"8050:89:8","trueBody":{"id":1060,"nodeType":"Block","src":"8077:62:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8125:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8117:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1054,"name":"address","nodeType":"ElementaryTypeName","src":"8117:7:8","typeDescriptions":{}}},"id":1057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8117:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1053,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"8098:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1059,"nodeType":"RevertStatement","src":"8091:37:8"}]}},{"expression":{"arguments":[{"id":1063,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"8156:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8173:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8165:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1064,"name":"address","nodeType":"ElementaryTypeName","src":"8165:7:8","typeDescriptions":{}}},"id":1067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8165:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"8177:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1062,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"8148:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8148:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1070,"nodeType":"ExpressionStatement","src":"8148:35:8"}]},"documentation":{"id":1040,"nodeType":"StructuredDocumentation","src":"7672:307:8","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1072,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7993:5:8","nodeType":"FunctionDefinition","parameters":{"id":1045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"account","nameLocation":"8007:7:8","nodeType":"VariableDeclaration","scope":1072,"src":"7999:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1041,"name":"address","nodeType":"ElementaryTypeName","src":"7999:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1044,"mutability":"mutable","name":"value","nameLocation":"8024:5:8","nodeType":"VariableDeclaration","scope":1072,"src":"8016:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1043,"name":"uint256","nodeType":"ElementaryTypeName","src":"8016:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7998:32:8"},"returnParameters":{"id":1046,"nodeType":"ParameterList","parameters":[],"src":"8040:0:8"},"scope":1199,"src":"7984:206:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1089,"nodeType":"Block","src":"8800:54:8","statements":[{"expression":{"arguments":[{"id":1083,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"8819:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1084,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"8826:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"8835:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8842:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1082,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1090,1150],"referencedDeclaration":1150,"src":"8810:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8810:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1088,"nodeType":"ExpressionStatement","src":"8810:37:8"}]},"documentation":{"id":1073,"nodeType":"StructuredDocumentation","src":"8196:525:8","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1090,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8735:8:8","nodeType":"FunctionDefinition","parameters":{"id":1080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"owner","nameLocation":"8752:5:8","nodeType":"VariableDeclaration","scope":1090,"src":"8744:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1074,"name":"address","nodeType":"ElementaryTypeName","src":"8744:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"spender","nameLocation":"8767:7:8","nodeType":"VariableDeclaration","scope":1090,"src":"8759:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1076,"name":"address","nodeType":"ElementaryTypeName","src":"8759:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1079,"mutability":"mutable","name":"value","nameLocation":"8784:5:8","nodeType":"VariableDeclaration","scope":1090,"src":"8776:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1078,"name":"uint256","nodeType":"ElementaryTypeName","src":"8776:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8743:47:8"},"returnParameters":{"id":1081,"nodeType":"ParameterList","parameters":[],"src":"8800:0:8"},"scope":1199,"src":"8726:128:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1149,"nodeType":"Block","src":"9799:334:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1102,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"9813:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9830:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9822:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1103,"name":"address","nodeType":"ElementaryTypeName","src":"9822:7:8","typeDescriptions":{}}},"id":1106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9813:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1116,"nodeType":"IfStatement","src":"9809:89:8","trueBody":{"id":1115,"nodeType":"Block","src":"9834:64:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9884:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9876:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1109,"name":"address","nodeType":"ElementaryTypeName","src":"9876:7:8","typeDescriptions":{}}},"id":1112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9876:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1108,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"9855:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9855:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1114,"nodeType":"RevertStatement","src":"9848:39:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1117,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"9911:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1118,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:8","typeDescriptions":{}}},"id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9922:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9911:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1131,"nodeType":"IfStatement","src":"9907:90:8","trueBody":{"id":1130,"nodeType":"Block","src":"9934:63:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9983:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9975:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1124,"name":"address","nodeType":"ElementaryTypeName","src":"9975:7:8","typeDescriptions":{}}},"id":1127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9975:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1123,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"9955:19:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9955:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1129,"nodeType":"RevertStatement","src":"9948:38:8"}]}},{"expression":{"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1132,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"10006:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1135,"indexExpression":{"id":1133,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"10018:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10006:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1136,"indexExpression":{"id":1134,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"10025:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10006:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"10036:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10006:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1139,"nodeType":"ExpressionStatement","src":"10006:35:8"},{"condition":{"id":1140,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"10055:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1148,"nodeType":"IfStatement","src":"10051:76:8","trueBody":{"id":1147,"nodeType":"Block","src":"10066:61:8","statements":[{"eventCall":{"arguments":[{"id":1142,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"10094:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1143,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"10101:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"10110:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1141,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"10085:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10085:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1146,"nodeType":"EmitStatement","src":"10080:36:8"}]}}]},"documentation":{"id":1091,"nodeType":"StructuredDocumentation","src":"8860:836:8","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1150,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9710:8:8","nodeType":"FunctionDefinition","parameters":{"id":1100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1093,"mutability":"mutable","name":"owner","nameLocation":"9727:5:8","nodeType":"VariableDeclaration","scope":1150,"src":"9719:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1092,"name":"address","nodeType":"ElementaryTypeName","src":"9719:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1095,"mutability":"mutable","name":"spender","nameLocation":"9742:7:8","nodeType":"VariableDeclaration","scope":1150,"src":"9734:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1094,"name":"address","nodeType":"ElementaryTypeName","src":"9734:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1097,"mutability":"mutable","name":"value","nameLocation":"9759:5:8","nodeType":"VariableDeclaration","scope":1150,"src":"9751:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1096,"name":"uint256","nodeType":"ElementaryTypeName","src":"9751:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1099,"mutability":"mutable","name":"emitEvent","nameLocation":"9771:9:8","nodeType":"VariableDeclaration","scope":1150,"src":"9766:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1098,"name":"bool","nodeType":"ElementaryTypeName","src":"9766:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9718:63:8"},"returnParameters":{"id":1101,"nodeType":"ParameterList","parameters":[],"src":"9799:0:8"},"scope":1199,"src":"9701:432:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1197,"nodeType":"Block","src":"10504:388:8","statements":[{"assignments":[1161],"declarations":[{"constant":false,"id":1161,"mutability":"mutable","name":"currentAllowance","nameLocation":"10522:16:8","nodeType":"VariableDeclaration","scope":1197,"src":"10514:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1160,"name":"uint256","nodeType":"ElementaryTypeName","src":"10514:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1166,"initialValue":{"arguments":[{"id":1163,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"10551:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1164,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"10558:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1162,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"10541:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10541:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10514:52:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1167,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"10580:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10605:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1169,"name":"uint256","nodeType":"ElementaryTypeName","src":"10605:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1168,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10600:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10600:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10614:3:8","memberName":"max","nodeType":"MemberAccess","src":"10600:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10580:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1196,"nodeType":"IfStatement","src":"10576:310:8","trueBody":{"id":1195,"nodeType":"Block","src":"10619:267:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1174,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"10637:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"10656:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10637:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1184,"nodeType":"IfStatement","src":"10633:130:8","trueBody":{"id":1183,"nodeType":"Block","src":"10663:100:8","statements":[{"errorCall":{"arguments":[{"id":1178,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"10715:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1179,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"10724:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"10742:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1177,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"10688:26:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10688:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1182,"nodeType":"RevertStatement","src":"10681:67:8"}]}},{"id":1194,"nodeType":"UncheckedBlock","src":"10776:100:8","statements":[{"expression":{"arguments":[{"id":1186,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"10813:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1187,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"10820:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1188,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"10829:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"10848:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10829:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10855:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1185,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1090,1150],"referencedDeclaration":1150,"src":"10804:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10804:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1193,"nodeType":"ExpressionStatement","src":"10804:57:8"}]}]}}]},"documentation":{"id":1151,"nodeType":"StructuredDocumentation","src":"10139:271:8","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1198,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10424:15:8","nodeType":"FunctionDefinition","parameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1153,"mutability":"mutable","name":"owner","nameLocation":"10448:5:8","nodeType":"VariableDeclaration","scope":1198,"src":"10440:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1152,"name":"address","nodeType":"ElementaryTypeName","src":"10440:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1155,"mutability":"mutable","name":"spender","nameLocation":"10463:7:8","nodeType":"VariableDeclaration","scope":1198,"src":"10455:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1154,"name":"address","nodeType":"ElementaryTypeName","src":"10455:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1157,"mutability":"mutable","name":"value","nameLocation":"10480:5:8","nodeType":"VariableDeclaration","scope":1198,"src":"10472:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1156,"name":"uint256","nodeType":"ElementaryTypeName","src":"10472:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10439:47:8"},"returnParameters":{"id":1159,"nodeType":"ParameterList","parameters":[],"src":"10504:0:8"},"scope":1199,"src":"10415:477:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1200,"src":"1106:9788:8","usedErrors":[559,564,569,578,583,588],"usedEvents":[1211,1220]}],"src":"105:10790:8"},"id":8},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1277]},"id":1278,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1201,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1202,"nodeType":"StructuredDocumentation","src":"132:71:9","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":1277,"linearizedBaseContracts":[1277],"name":"IERC20","nameLocation":"214:6:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1203,"nodeType":"StructuredDocumentation","src":"227:158:9","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1211,"name":"Transfer","nameLocation":"396:8:9","nodeType":"EventDefinition","parameters":{"id":1210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1205,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:9","nodeType":"VariableDeclaration","scope":1211,"src":"405:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1204,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1207,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:9","nodeType":"VariableDeclaration","scope":1211,"src":"427:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1206,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1209,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:9","nodeType":"VariableDeclaration","scope":1211,"src":"447:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1208,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:9"},"src":"390:72:9"},{"anonymous":false,"documentation":{"id":1212,"nodeType":"StructuredDocumentation","src":"468:148:9","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1220,"name":"Approval","nameLocation":"627:8:9","nodeType":"EventDefinition","parameters":{"id":1219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1214,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:9","nodeType":"VariableDeclaration","scope":1220,"src":"636:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1213,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1216,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:9","nodeType":"VariableDeclaration","scope":1220,"src":"659:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1215,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1218,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:9","nodeType":"VariableDeclaration","scope":1220,"src":"684:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1217,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:9"},"src":"621:78:9"},{"documentation":{"id":1221,"nodeType":"StructuredDocumentation","src":"705:65:9","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1226,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:9","nodeType":"FunctionDefinition","parameters":{"id":1222,"nodeType":"ParameterList","parameters":[],"src":"795:2:9"},"returnParameters":{"id":1225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1226,"src":"821:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1223,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:9"},"scope":1277,"src":"775:55:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1227,"nodeType":"StructuredDocumentation","src":"836:71:9","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1234,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:9","nodeType":"FunctionDefinition","parameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1229,"mutability":"mutable","name":"account","nameLocation":"939:7:9","nodeType":"VariableDeclaration","scope":1234,"src":"931:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1228,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:9"},"returnParameters":{"id":1233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1234,"src":"971:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1231,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:9"},"scope":1277,"src":"912:68:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1235,"nodeType":"StructuredDocumentation","src":"986:213:9","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1244,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:9","nodeType":"FunctionDefinition","parameters":{"id":1240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1237,"mutability":"mutable","name":"to","nameLocation":"1230:2:9","nodeType":"VariableDeclaration","scope":1244,"src":"1222:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1236,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1239,"mutability":"mutable","name":"value","nameLocation":"1242:5:9","nodeType":"VariableDeclaration","scope":1244,"src":"1234:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1238,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:9"},"returnParameters":{"id":1243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1244,"src":"1267:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1241,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:9"},"scope":1277,"src":"1204:69:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1245,"nodeType":"StructuredDocumentation","src":"1279:264:9","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1254,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:9","nodeType":"FunctionDefinition","parameters":{"id":1250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1247,"mutability":"mutable","name":"owner","nameLocation":"1575:5:9","nodeType":"VariableDeclaration","scope":1254,"src":"1567:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1249,"mutability":"mutable","name":"spender","nameLocation":"1590:7:9","nodeType":"VariableDeclaration","scope":1254,"src":"1582:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1248,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:9"},"returnParameters":{"id":1253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1254,"src":"1622:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1251,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:9"},"scope":1277,"src":"1548:83:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1255,"nodeType":"StructuredDocumentation","src":"1637:667:9","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1264,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:9","nodeType":"FunctionDefinition","parameters":{"id":1260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1257,"mutability":"mutable","name":"spender","nameLocation":"2334:7:9","nodeType":"VariableDeclaration","scope":1264,"src":"2326:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1256,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1259,"mutability":"mutable","name":"value","nameLocation":"2351:5:9","nodeType":"VariableDeclaration","scope":1264,"src":"2343:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1258,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:9"},"returnParameters":{"id":1263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1264,"src":"2376:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1261,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:9"},"scope":1277,"src":"2309:73:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1265,"nodeType":"StructuredDocumentation","src":"2388:297:9","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1276,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:9","nodeType":"FunctionDefinition","parameters":{"id":1272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1267,"mutability":"mutable","name":"from","nameLocation":"2720:4:9","nodeType":"VariableDeclaration","scope":1276,"src":"2712:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1266,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1269,"mutability":"mutable","name":"to","nameLocation":"2734:2:9","nodeType":"VariableDeclaration","scope":1276,"src":"2726:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1268,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1271,"mutability":"mutable","name":"value","nameLocation":"2746:5:9","nodeType":"VariableDeclaration","scope":1276,"src":"2738:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1270,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:9"},"returnParameters":{"id":1275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1276,"src":"2771:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1273,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:9"},"scope":1277,"src":"2690:87:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1278,"src":"204:2575:9","usedErrors":[],"usedEvents":[1211,1220]}],"src":"106:2674:9"},"id":9},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1277],"IERC20Metadata":[1303]},"id":1304,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1279,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1281,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1304,"sourceUnit":1278,"src":"151:37:10","symbolAliases":[{"foreign":{"id":1280,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"159:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1283,"name":"IERC20","nameLocations":["306:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":1277,"src":"306:6:10"},"id":1284,"nodeType":"InheritanceSpecifier","src":"306:6:10"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1282,"nodeType":"StructuredDocumentation","src":"190:87:10","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":1303,"linearizedBaseContracts":[1303,1277],"name":"IERC20Metadata","nameLocation":"288:14:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1285,"nodeType":"StructuredDocumentation","src":"319:54:10","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1290,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:10","nodeType":"FunctionDefinition","parameters":{"id":1286,"nodeType":"ParameterList","parameters":[],"src":"391:2:10"},"returnParameters":{"id":1289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1290,"src":"417:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1287,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:10"},"scope":1303,"src":"378:54:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1291,"nodeType":"StructuredDocumentation","src":"438:56:10","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1296,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:10","nodeType":"FunctionDefinition","parameters":{"id":1292,"nodeType":"ParameterList","parameters":[],"src":"514:2:10"},"returnParameters":{"id":1295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1296,"src":"540:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1293,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:10"},"scope":1303,"src":"499:56:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1297,"nodeType":"StructuredDocumentation","src":"561:65:10","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1302,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:10","nodeType":"FunctionDefinition","parameters":{"id":1298,"nodeType":"ParameterList","parameters":[],"src":"648:2:10"},"returnParameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1302,"src":"674:5:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1299,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:10"},"scope":1303,"src":"631:50:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1304,"src":"278:405:10","usedErrors":[],"usedEvents":[1211,1220]}],"src":"125:559:10"},"id":10},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[2530],"ERC165":[3391],"ERC721":[2260],"ERC721Utils":[2500],"IERC165":[3403],"IERC721":[2377],"IERC721Errors":[637],"IERC721Metadata":[2423],"Strings":[3019]},"id":2261,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1305,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":1307,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2261,"sourceUnit":2378,"src":"133:38:11","symbolAliases":[{"foreign":{"id":1306,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"141:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":1309,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2261,"sourceUnit":2424,"src":"172:65:11","symbolAliases":[{"foreign":{"id":1308,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"180:15:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":1311,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2261,"sourceUnit":2501,"src":"238:52:11","symbolAliases":[{"foreign":{"id":1310,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"246:11:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1313,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2261,"sourceUnit":2531,"src":"291:48:11","symbolAliases":[{"foreign":{"id":1312,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"299:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":1315,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2261,"sourceUnit":3020,"src":"340:48:11","symbolAliases":[{"foreign":{"id":1314,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3019,"src":"348:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":1318,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2261,"sourceUnit":3392,"src":"389:69:11","symbolAliases":[{"foreign":{"id":1316,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"397:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1317,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"406:6:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1320,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2261,"sourceUnit":685,"src":"459:66:11","symbolAliases":[{"foreign":{"id":1319,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"467:13:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1322,"name":"Context","nameLocations":["803:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":2530,"src":"803:7:11"},"id":1323,"nodeType":"InheritanceSpecifier","src":"803:7:11"},{"baseName":{"id":1324,"name":"ERC165","nameLocations":["812:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":3391,"src":"812:6:11"},"id":1325,"nodeType":"InheritanceSpecifier","src":"812:6:11"},{"baseName":{"id":1326,"name":"IERC721","nameLocations":["820:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":2377,"src":"820:7:11"},"id":1327,"nodeType":"InheritanceSpecifier","src":"820:7:11"},{"baseName":{"id":1328,"name":"IERC721Metadata","nameLocations":["829:15:11"],"nodeType":"IdentifierPath","referencedDeclaration":2423,"src":"829:15:11"},"id":1329,"nodeType":"InheritanceSpecifier","src":"829:15:11"},{"baseName":{"id":1330,"name":"IERC721Errors","nameLocations":["846:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":637,"src":"846:13:11"},"id":1331,"nodeType":"InheritanceSpecifier","src":"846:13:11"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":1321,"nodeType":"StructuredDocumentation","src":"527:247:11","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":2260,"linearizedBaseContracts":[2260,637,2423,2377,3391,3403,2530],"name":"ERC721","nameLocation":"793:6:11","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1334,"libraryName":{"id":1332,"name":"Strings","nameLocations":["872:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":3019,"src":"872:7:11"},"nodeType":"UsingForDirective","src":"866:26:11","typeName":{"id":1333,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1336,"mutability":"mutable","name":"_name","nameLocation":"931:5:11","nodeType":"VariableDeclaration","scope":2260,"src":"916:20:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1335,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1338,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:11","nodeType":"VariableDeclaration","scope":2260,"src":"963:22:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1337,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1342,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:11","nodeType":"VariableDeclaration","scope":2260,"src":"992:51:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1341,"keyName":"tokenId","keyNameLocation":"1008:7:11","keyType":{"id":1339,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1340,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1346,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:11","nodeType":"VariableDeclaration","scope":2260,"src":"1050:51:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1345,"keyName":"owner","keyNameLocation":"1066:5:11","keyType":{"id":1343,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1344,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1350,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:11","nodeType":"VariableDeclaration","scope":2260,"src":"1108:59:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1349,"keyName":"tokenId","keyNameLocation":"1124:7:11","keyType":{"id":1347,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1348,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1356,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:11","nodeType":"VariableDeclaration","scope":2260,"src":"1174:86:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":1355,"keyName":"owner","keyNameLocation":"1190:5:11","keyType":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1354,"keyName":"operator","keyNameLocation":"1215:8:11","keyType":{"id":1352,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1353,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":1372,"nodeType":"Block","src":"1436:57:11","statements":[{"expression":{"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1364,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"1446:5:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1365,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"1454:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1367,"nodeType":"ExpressionStatement","src":"1446:13:11"},{"expression":{"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1368,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"1469:7:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1369,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"1479:7:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1371,"nodeType":"ExpressionStatement","src":"1469:17:11"}]},"documentation":{"id":1357,"nodeType":"StructuredDocumentation","src":"1267:108:11","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":1373,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1359,"mutability":"mutable","name":"name_","nameLocation":"1406:5:11","nodeType":"VariableDeclaration","scope":1373,"src":"1392:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1358,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1361,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:11","nodeType":"VariableDeclaration","scope":1373,"src":"1413:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1360,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:11"},"returnParameters":{"id":1363,"nodeType":"ParameterList","parameters":[],"src":"1436:0:11"},"scope":2260,"src":"1380:113:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3390,3402],"body":{"id":1403,"nodeType":"Block","src":"1668:192:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1384,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"1697:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1386,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"1717:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$2377_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$2377_$","typeString":"type(contract IERC721)"}],"id":1385,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1712:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1712:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$2377","typeString":"type(contract IERC721)"}},"id":1388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1726:11:11","memberName":"interfaceId","nodeType":"MemberAccess","src":"1712:25:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1697:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1390,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"1753:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1392,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"1773:15:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2423_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2423_$","typeString":"type(contract IERC721Metadata)"}],"id":1391,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1768:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1768:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$2423","typeString":"type(contract IERC721Metadata)"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1790:11:11","memberName":"interfaceId","nodeType":"MemberAccess","src":"1768:33:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1753:48:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:104:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1399,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"1841:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1397,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1817:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$2260_$","typeString":"type(contract super ERC721)"}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1823:17:11","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3390,"src":"1817:23:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1817:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:156:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1383,"id":1402,"nodeType":"Return","src":"1678:175:11"}]},"documentation":{"id":1374,"nodeType":"StructuredDocumentation","src":"1499:56:11","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1404,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1569:17:11","nodeType":"FunctionDefinition","overrides":{"id":1380,"nodeType":"OverrideSpecifier","overrides":[{"id":1378,"name":"ERC165","nameLocations":["1636:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":3391,"src":"1636:6:11"},{"id":1379,"name":"IERC165","nameLocations":["1644:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":3403,"src":"1644:7:11"}],"src":"1627:25:11"},"parameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1376,"mutability":"mutable","name":"interfaceId","nameLocation":"1594:11:11","nodeType":"VariableDeclaration","scope":1404,"src":"1587:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1375,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1587:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1586:20:11"},"returnParameters":{"id":1383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1404,"src":"1662:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1381,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:11"},"scope":2260,"src":"1560:300:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2302],"body":{"id":1431,"nodeType":"Block","src":"1991:136:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1412,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"2005:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2022:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2014:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1413,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:11","typeDescriptions":{}}},"id":1416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2014:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2005:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1426,"nodeType":"IfStatement","src":"2001:87:11","trueBody":{"id":1425,"nodeType":"Block","src":"2026:62:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2074:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2066:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1419,"name":"address","nodeType":"ElementaryTypeName","src":"2066:7:11","typeDescriptions":{}}},"id":1422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2066:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1418,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"2047:18:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2047:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1424,"nodeType":"RevertStatement","src":"2040:37:11"}]}},{"expression":{"baseExpression":{"id":1427,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"2104:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1429,"indexExpression":{"id":1428,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"2114:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2104:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1411,"id":1430,"nodeType":"Return","src":"2097:23:11"}]},"documentation":{"id":1405,"nodeType":"StructuredDocumentation","src":"1866:48:11","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":1432,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1928:9:11","nodeType":"FunctionDefinition","parameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"owner","nameLocation":"1946:5:11","nodeType":"VariableDeclaration","scope":1432,"src":"1938:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1406,"name":"address","nodeType":"ElementaryTypeName","src":"1938:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1937:15:11"},"returnParameters":{"id":1411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1432,"src":"1982:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1409,"name":"uint256","nodeType":"ElementaryTypeName","src":"1982:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1981:9:11"},"scope":2260,"src":"1919:208:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2310],"body":{"id":1444,"nodeType":"Block","src":"2256:46:11","statements":[{"expression":{"arguments":[{"id":1441,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"2287:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1440,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"2273:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1439,"id":1443,"nodeType":"Return","src":"2266:29:11"}]},"documentation":{"id":1433,"nodeType":"StructuredDocumentation","src":"2133:46:11","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":1445,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2193:7:11","nodeType":"FunctionDefinition","parameters":{"id":1436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1435,"mutability":"mutable","name":"tokenId","nameLocation":"2209:7:11","nodeType":"VariableDeclaration","scope":1445,"src":"2201:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1434,"name":"uint256","nodeType":"ElementaryTypeName","src":"2201:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2200:17:11"},"returnParameters":{"id":1439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1445,"src":"2247:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1437,"name":"address","nodeType":"ElementaryTypeName","src":"2247:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2246:9:11"},"scope":2260,"src":"2184:118:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2408],"body":{"id":1453,"nodeType":"Block","src":"2424:29:11","statements":[{"expression":{"id":1451,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"2441:5:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1450,"id":1452,"nodeType":"Return","src":"2434:12:11"}]},"documentation":{"id":1446,"nodeType":"StructuredDocumentation","src":"2308:51:11","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":1454,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2373:4:11","nodeType":"FunctionDefinition","parameters":{"id":1447,"nodeType":"ParameterList","parameters":[],"src":"2377:2:11"},"returnParameters":{"id":1450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1454,"src":"2409:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1448,"name":"string","nodeType":"ElementaryTypeName","src":"2409:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2408:15:11"},"scope":2260,"src":"2364:89:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2414],"body":{"id":1462,"nodeType":"Block","src":"2579:31:11","statements":[{"expression":{"id":1460,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"2596:7:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1459,"id":1461,"nodeType":"Return","src":"2589:14:11"}]},"documentation":{"id":1455,"nodeType":"StructuredDocumentation","src":"2459:53:11","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":1463,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2526:6:11","nodeType":"FunctionDefinition","parameters":{"id":1456,"nodeType":"ParameterList","parameters":[],"src":"2532:2:11"},"returnParameters":{"id":1459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1463,"src":"2564:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1457,"name":"string","nodeType":"ElementaryTypeName","src":"2564:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2563:15:11"},"scope":2260,"src":"2517:93:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2422],"body":{"id":1498,"nodeType":"Block","src":"2755:176:11","statements":[{"expression":{"arguments":[{"id":1472,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"2779:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1471,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"2765:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2765:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1474,"nodeType":"ExpressionStatement","src":"2765:22:11"},{"assignments":[1476],"declarations":[{"constant":false,"id":1476,"mutability":"mutable","name":"baseURI","nameLocation":"2812:7:11","nodeType":"VariableDeclaration","scope":1498,"src":"2798:21:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1475,"name":"string","nodeType":"ElementaryTypeName","src":"2798:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1479,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1477,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"2822:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2822:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2798:34:11"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1482,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"2855:7:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2849:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1480,"name":"bytes","nodeType":"ElementaryTypeName","src":"2849:5:11","typeDescriptions":{}}},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2849:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:11","memberName":"length","nodeType":"MemberAccess","src":"2849:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2873:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2849:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2922:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2849:75:11","trueExpression":{"arguments":[{"id":1490,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"2891:7:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1491,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"2900:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2908:8:11","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2767,"src":"2900:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2900:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2877:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1487,"name":"string","nodeType":"ElementaryTypeName","src":"2877:6:11","typeDescriptions":{}}},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2884:6:11","memberName":"concat","nodeType":"MemberAccess","src":"2877:13:11","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2877:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1470,"id":1497,"nodeType":"Return","src":"2842:82:11"}]},"documentation":{"id":1464,"nodeType":"StructuredDocumentation","src":"2616:55:11","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1499,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2685:8:11","nodeType":"FunctionDefinition","parameters":{"id":1467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1466,"mutability":"mutable","name":"tokenId","nameLocation":"2702:7:11","nodeType":"VariableDeclaration","scope":1499,"src":"2694:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1465,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2693:17:11"},"returnParameters":{"id":1470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1469,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1499,"src":"2740:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1468,"name":"string","nodeType":"ElementaryTypeName","src":"2740:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2739:15:11"},"scope":2260,"src":"2676:255:11","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1507,"nodeType":"Block","src":"3239:26:11","statements":[{"expression":{"hexValue":"","id":1505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3256:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1504,"id":1506,"nodeType":"Return","src":"3249:9:11"}]},"documentation":{"id":1500,"nodeType":"StructuredDocumentation","src":"2937:231:11","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":1508,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3182:8:11","nodeType":"FunctionDefinition","parameters":{"id":1501,"nodeType":"ParameterList","parameters":[],"src":"3190:2:11"},"returnParameters":{"id":1504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1508,"src":"3224:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1502,"name":"string","nodeType":"ElementaryTypeName","src":"3224:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3223:15:11"},"scope":2260,"src":"3173:92:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2350],"body":{"id":1523,"nodeType":"Block","src":"3383:52:11","statements":[{"expression":{"arguments":[{"id":1517,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"3402:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1518,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"3406:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1519,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"3415:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3415:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1516,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2127,2193],"referencedDeclaration":2127,"src":"3393:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3393:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1522,"nodeType":"ExpressionStatement","src":"3393:35:11"}]},"documentation":{"id":1509,"nodeType":"StructuredDocumentation","src":"3271:46:11","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":1524,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3331:7:11","nodeType":"FunctionDefinition","parameters":{"id":1514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1511,"mutability":"mutable","name":"to","nameLocation":"3347:2:11","nodeType":"VariableDeclaration","scope":1524,"src":"3339:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1510,"name":"address","nodeType":"ElementaryTypeName","src":"3339:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1513,"mutability":"mutable","name":"tokenId","nameLocation":"3359:7:11","nodeType":"VariableDeclaration","scope":1524,"src":"3351:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1512,"name":"uint256","nodeType":"ElementaryTypeName","src":"3351:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3338:29:11"},"returnParameters":{"id":1515,"nodeType":"ParameterList","parameters":[],"src":"3383:0:11"},"scope":2260,"src":"3322:113:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2366],"body":{"id":1540,"nodeType":"Block","src":"3572:78:11","statements":[{"expression":{"arguments":[{"id":1533,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"3596:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1532,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"3582:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1535,"nodeType":"ExpressionStatement","src":"3582:22:11"},{"expression":{"arguments":[{"id":1537,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"3635:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1536,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"3622:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3622:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1531,"id":1539,"nodeType":"Return","src":"3615:28:11"}]},"documentation":{"id":1525,"nodeType":"StructuredDocumentation","src":"3441:50:11","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":1541,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3505:11:11","nodeType":"FunctionDefinition","parameters":{"id":1528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"mutability":"mutable","name":"tokenId","nameLocation":"3525:7:11","nodeType":"VariableDeclaration","scope":1541,"src":"3517:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1526,"name":"uint256","nodeType":"ElementaryTypeName","src":"3517:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:17:11"},"returnParameters":{"id":1531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1541,"src":"3563:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1529,"name":"address","nodeType":"ElementaryTypeName","src":"3563:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3562:9:11"},"scope":2260,"src":"3496:154:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2358],"body":{"id":1556,"nodeType":"Block","src":"3792:69:11","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1550,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"3821:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1552,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"3835:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1553,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1546,"src":"3845:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1549,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2230,"src":"3802:18:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3802:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1555,"nodeType":"ExpressionStatement","src":"3802:52:11"}]},"documentation":{"id":1542,"nodeType":"StructuredDocumentation","src":"3656:56:11","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":1557,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3726:17:11","nodeType":"FunctionDefinition","parameters":{"id":1547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1544,"mutability":"mutable","name":"operator","nameLocation":"3752:8:11","nodeType":"VariableDeclaration","scope":1557,"src":"3744:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1543,"name":"address","nodeType":"ElementaryTypeName","src":"3744:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1546,"mutability":"mutable","name":"approved","nameLocation":"3767:8:11","nodeType":"VariableDeclaration","scope":1557,"src":"3762:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1545,"name":"bool","nodeType":"ElementaryTypeName","src":"3762:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3743:33:11"},"returnParameters":{"id":1548,"nodeType":"ParameterList","parameters":[],"src":"3792:0:11"},"scope":2260,"src":"3717:144:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2376],"body":{"id":1573,"nodeType":"Block","src":"4021:59:11","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1567,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"4038:18:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1569,"indexExpression":{"id":1568,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"4057:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:25:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1571,"indexExpression":{"id":1570,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"4064:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1566,"id":1572,"nodeType":"Return","src":"4031:42:11"}]},"documentation":{"id":1558,"nodeType":"StructuredDocumentation","src":"3867:55:11","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":1574,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3936:16:11","nodeType":"FunctionDefinition","parameters":{"id":1563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1560,"mutability":"mutable","name":"owner","nameLocation":"3961:5:11","nodeType":"VariableDeclaration","scope":1574,"src":"3953:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1559,"name":"address","nodeType":"ElementaryTypeName","src":"3953:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1562,"mutability":"mutable","name":"operator","nameLocation":"3976:8:11","nodeType":"VariableDeclaration","scope":1574,"src":"3968:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1561,"name":"address","nodeType":"ElementaryTypeName","src":"3968:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3952:33:11"},"returnParameters":{"id":1566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1574,"src":"4015:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1564,"name":"bool","nodeType":"ElementaryTypeName","src":"4015:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4014:6:11"},"scope":2260,"src":"3927:153:11","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2342],"body":{"id":1619,"nodeType":"Block","src":"4222:498:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1584,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"4236:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4250:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4242:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1585,"name":"address","nodeType":"ElementaryTypeName","src":"4242:7:11","typeDescriptions":{}}},"id":1588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4242:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4236:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1598,"nodeType":"IfStatement","src":"4232:87:11","trueBody":{"id":1597,"nodeType":"Block","src":"4254:65:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4305:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4297:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1591,"name":"address","nodeType":"ElementaryTypeName","src":"4297:7:11","typeDescriptions":{}}},"id":1594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1590,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"4275:21:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4275:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1596,"nodeType":"RevertStatement","src":"4268:40:11"}]}},{"assignments":[1600],"declarations":[{"constant":false,"id":1600,"mutability":"mutable","name":"previousOwner","nameLocation":"4545:13:11","nodeType":"VariableDeclaration","scope":1619,"src":"4537:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1599,"name":"address","nodeType":"ElementaryTypeName","src":"4537:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1607,"initialValue":{"arguments":[{"id":1602,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"4569:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1603,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"4573:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1604,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"4582:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4582:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1601,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"4561:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4537:58:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1608,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"4609:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1609,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"4626:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4609:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1618,"nodeType":"IfStatement","src":"4605:109:11","trueBody":{"id":1617,"nodeType":"Block","src":"4632:82:11","statements":[{"errorCall":{"arguments":[{"id":1612,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"4674:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1613,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"4680:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1614,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"4689:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1611,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"4653:20:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4653:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1616,"nodeType":"RevertStatement","src":"4646:57:11"}]}}]},"documentation":{"id":1575,"nodeType":"StructuredDocumentation","src":"4086:51:11","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":1620,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4151:12:11","nodeType":"FunctionDefinition","parameters":{"id":1582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1577,"mutability":"mutable","name":"from","nameLocation":"4172:4:11","nodeType":"VariableDeclaration","scope":1620,"src":"4164:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1576,"name":"address","nodeType":"ElementaryTypeName","src":"4164:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1579,"mutability":"mutable","name":"to","nameLocation":"4186:2:11","nodeType":"VariableDeclaration","scope":1620,"src":"4178:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1578,"name":"address","nodeType":"ElementaryTypeName","src":"4178:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1581,"mutability":"mutable","name":"tokenId","nameLocation":"4198:7:11","nodeType":"VariableDeclaration","scope":1620,"src":"4190:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1580,"name":"uint256","nodeType":"ElementaryTypeName","src":"4190:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4163:43:11"},"returnParameters":{"id":1583,"nodeType":"ParameterList","parameters":[],"src":"4222:0:11"},"scope":2260,"src":"4142:578:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2332],"body":{"id":1637,"nodeType":"Block","src":"4862:56:11","statements":[{"expression":{"arguments":[{"id":1631,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"4889:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1632,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"4895:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1633,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"4899:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4908:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1630,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1638,1668],"referencedDeclaration":1668,"src":"4872:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4872:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1636,"nodeType":"ExpressionStatement","src":"4872:39:11"}]},"documentation":{"id":1621,"nodeType":"StructuredDocumentation","src":"4726:55:11","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":1638,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4795:16:11","nodeType":"FunctionDefinition","parameters":{"id":1628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1623,"mutability":"mutable","name":"from","nameLocation":"4820:4:11","nodeType":"VariableDeclaration","scope":1638,"src":"4812:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1622,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1625,"mutability":"mutable","name":"to","nameLocation":"4834:2:11","nodeType":"VariableDeclaration","scope":1638,"src":"4826:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1624,"name":"address","nodeType":"ElementaryTypeName","src":"4826:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1627,"mutability":"mutable","name":"tokenId","nameLocation":"4846:7:11","nodeType":"VariableDeclaration","scope":1638,"src":"4838:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1626,"name":"uint256","nodeType":"ElementaryTypeName","src":"4838:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4811:43:11"},"returnParameters":{"id":1629,"nodeType":"ParameterList","parameters":[],"src":"4862:0:11"},"scope":2260,"src":"4786:132:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2322],"body":{"id":1667,"nodeType":"Block","src":"5087:130:11","statements":[{"expression":{"arguments":[{"id":1651,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"5110:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1652,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"5116:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1653,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"5120:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1650,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"5097:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5097:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1655,"nodeType":"ExpressionStatement","src":"5097:31:11"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1659,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"5172:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5172:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1661,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"5186:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1662,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"5192:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1663,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"5196:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1664,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"5205:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1656,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"5138:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2500_$","typeString":"type(library ERC721Utils)"}},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5150:21:11","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2499,"src":"5138:33:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5138:72:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1666,"nodeType":"ExpressionStatement","src":"5138:72:11"}]},"documentation":{"id":1639,"nodeType":"StructuredDocumentation","src":"4924:55:11","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":1668,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4993:16:11","nodeType":"FunctionDefinition","parameters":{"id":1648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1641,"mutability":"mutable","name":"from","nameLocation":"5018:4:11","nodeType":"VariableDeclaration","scope":1668,"src":"5010:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1640,"name":"address","nodeType":"ElementaryTypeName","src":"5010:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1643,"mutability":"mutable","name":"to","nameLocation":"5032:2:11","nodeType":"VariableDeclaration","scope":1668,"src":"5024:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1642,"name":"address","nodeType":"ElementaryTypeName","src":"5024:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1645,"mutability":"mutable","name":"tokenId","nameLocation":"5044:7:11","nodeType":"VariableDeclaration","scope":1668,"src":"5036:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1644,"name":"uint256","nodeType":"ElementaryTypeName","src":"5036:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1647,"mutability":"mutable","name":"data","nameLocation":"5066:4:11","nodeType":"VariableDeclaration","scope":1668,"src":"5053:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1646,"name":"bytes","nodeType":"ElementaryTypeName","src":"5053:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5009:62:11"},"returnParameters":{"id":1649,"nodeType":"ParameterList","parameters":[],"src":"5087:0:11"},"scope":2260,"src":"4984:233:11","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1680,"nodeType":"Block","src":"5807:40:11","statements":[{"expression":{"baseExpression":{"id":1676,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"5824:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1678,"indexExpression":{"id":1677,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"5832:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5824:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1675,"id":1679,"nodeType":"Return","src":"5817:23:11"}]},"documentation":{"id":1669,"nodeType":"StructuredDocumentation","src":"5223:504:11","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":1681,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5741:8:11","nodeType":"FunctionDefinition","parameters":{"id":1672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1671,"mutability":"mutable","name":"tokenId","nameLocation":"5758:7:11","nodeType":"VariableDeclaration","scope":1681,"src":"5750:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1670,"name":"uint256","nodeType":"ElementaryTypeName","src":"5750:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5749:17:11"},"returnParameters":{"id":1675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1681,"src":"5798:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1673,"name":"address","nodeType":"ElementaryTypeName","src":"5798:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5797:9:11"},"scope":2260,"src":"5732:115:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1693,"nodeType":"Block","src":"6042:48:11","statements":[{"expression":{"baseExpression":{"id":1689,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"6059:15:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1691,"indexExpression":{"id":1690,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"6075:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6059:24:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1688,"id":1692,"nodeType":"Return","src":"6052:31:11"}]},"documentation":{"id":1682,"nodeType":"StructuredDocumentation","src":"5853:105:11","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":1694,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5972:12:11","nodeType":"FunctionDefinition","parameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"mutability":"mutable","name":"tokenId","nameLocation":"5993:7:11","nodeType":"VariableDeclaration","scope":1694,"src":"5985:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1683,"name":"uint256","nodeType":"ElementaryTypeName","src":"5985:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5984:17:11"},"returnParameters":{"id":1688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1694,"src":"6033:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1686,"name":"address","nodeType":"ElementaryTypeName","src":"6033:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6032:9:11"},"scope":2260,"src":"5963:127:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1729,"nodeType":"Block","src":"6510:163:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1706,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"6539:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6558:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6550:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1707,"name":"address","nodeType":"ElementaryTypeName","src":"6550:7:11","typeDescriptions":{}}},"id":1710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6550:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6539:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1712,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"6577:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1713,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"6586:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6577:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1716,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"6614:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1717,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"6621:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1715,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"6597:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6597:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:52:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1721,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"6646:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1720,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"6633:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6633:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1723,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"6658:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6633:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:88:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1726,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6576:90:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6539:127:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1705,"id":1728,"nodeType":"Return","src":"6520:146:11"}]},"documentation":{"id":1695,"nodeType":"StructuredDocumentation","src":"6096:300:11","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1730,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6410:13:11","nodeType":"FunctionDefinition","parameters":{"id":1702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1697,"mutability":"mutable","name":"owner","nameLocation":"6432:5:11","nodeType":"VariableDeclaration","scope":1730,"src":"6424:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1696,"name":"address","nodeType":"ElementaryTypeName","src":"6424:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1699,"mutability":"mutable","name":"spender","nameLocation":"6447:7:11","nodeType":"VariableDeclaration","scope":1730,"src":"6439:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1698,"name":"address","nodeType":"ElementaryTypeName","src":"6439:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1701,"mutability":"mutable","name":"tokenId","nameLocation":"6464:7:11","nodeType":"VariableDeclaration","scope":1730,"src":"6456:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1700,"name":"uint256","nodeType":"ElementaryTypeName","src":"6456:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6423:49:11"},"returnParameters":{"id":1705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1730,"src":"6504:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1703,"name":"bool","nodeType":"ElementaryTypeName","src":"6504:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6503:6:11"},"scope":2260,"src":"6401:272:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1766,"nodeType":"Block","src":"7202:271:11","statements":[{"condition":{"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7216:39:11","subExpression":{"arguments":[{"id":1741,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"7231:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1742,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"7238:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1743,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"7247:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1740,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"7217:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7217:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1765,"nodeType":"IfStatement","src":"7212:255:11","trueBody":{"id":1764,"nodeType":"Block","src":"7257:210:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1746,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"7275:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7292:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7284:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1747,"name":"address","nodeType":"ElementaryTypeName","src":"7284:7:11","typeDescriptions":{}}},"id":1750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7284:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7275:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1762,"nodeType":"Block","src":"7373:84:11","statements":[{"errorCall":{"arguments":[{"id":1758,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1735,"src":"7425:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1759,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"7434:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1757,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"7398:26:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7398:44:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1761,"nodeType":"RevertStatement","src":"7391:51:11"}]},"id":1763,"nodeType":"IfStatement","src":"7271:186:11","trueBody":{"id":1756,"nodeType":"Block","src":"7296:71:11","statements":[{"errorCall":{"arguments":[{"id":1753,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1737,"src":"7344:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1752,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"7321:22:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7321:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1755,"nodeType":"RevertStatement","src":"7314:38:11"}]}}]}}]},"documentation":{"id":1731,"nodeType":"StructuredDocumentation","src":"6679:421:11","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1767,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"7114:16:11","nodeType":"FunctionDefinition","parameters":{"id":1738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1733,"mutability":"mutable","name":"owner","nameLocation":"7139:5:11","nodeType":"VariableDeclaration","scope":1767,"src":"7131:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1732,"name":"address","nodeType":"ElementaryTypeName","src":"7131:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1735,"mutability":"mutable","name":"spender","nameLocation":"7154:7:11","nodeType":"VariableDeclaration","scope":1767,"src":"7146:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1734,"name":"address","nodeType":"ElementaryTypeName","src":"7146:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1737,"mutability":"mutable","name":"tokenId","nameLocation":"7171:7:11","nodeType":"VariableDeclaration","scope":1767,"src":"7163:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1736,"name":"uint256","nodeType":"ElementaryTypeName","src":"7163:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7130:49:11"},"returnParameters":{"id":1739,"nodeType":"ParameterList","parameters":[],"src":"7202:0:11"},"scope":2260,"src":"7105:368:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1782,"nodeType":"Block","src":"8190:78:11","statements":[{"id":1781,"nodeType":"UncheckedBlock","src":"8200:62:11","statements":[{"expression":{"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1775,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"8224:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1777,"indexExpression":{"id":1776,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"8234:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8224:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"8246:5:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"8224:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1780,"nodeType":"ExpressionStatement","src":"8224:27:11"}]}]},"documentation":{"id":1768,"nodeType":"StructuredDocumentation","src":"7479:631:11","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":1783,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"8124:16:11","nodeType":"FunctionDefinition","parameters":{"id":1773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1770,"mutability":"mutable","name":"account","nameLocation":"8149:7:11","nodeType":"VariableDeclaration","scope":1783,"src":"8141:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1769,"name":"address","nodeType":"ElementaryTypeName","src":"8141:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1772,"mutability":"mutable","name":"value","nameLocation":"8166:5:11","nodeType":"VariableDeclaration","scope":1783,"src":"8158:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1771,"name":"uint128","nodeType":"ElementaryTypeName","src":"8158:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"8140:32:11"},"returnParameters":{"id":1774,"nodeType":"ParameterList","parameters":[],"src":"8190:0:11"},"scope":2260,"src":"8115:153:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1872,"nodeType":"Block","src":"8956:700:11","statements":[{"assignments":[1796],"declarations":[{"constant":false,"id":1796,"mutability":"mutable","name":"from","nameLocation":"8974:4:11","nodeType":"VariableDeclaration","scope":1872,"src":"8966:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1795,"name":"address","nodeType":"ElementaryTypeName","src":"8966:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1800,"initialValue":{"arguments":[{"id":1798,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"8990:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1797,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"8981:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8981:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8966:32:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1801,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"9058:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9074:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9066:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1802,"name":"address","nodeType":"ElementaryTypeName","src":"9066:7:11","typeDescriptions":{}}},"id":1805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9066:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9058:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1814,"nodeType":"IfStatement","src":"9054:86:11","trueBody":{"id":1813,"nodeType":"Block","src":"9078:62:11","statements":[{"expression":{"arguments":[{"id":1808,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"9109:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1809,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"9115:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1810,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"9121:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1807,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"9092:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9092:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1812,"nodeType":"ExpressionStatement","src":"9092:37:11"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1815,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"9184:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9200:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9192:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1816,"name":"address","nodeType":"ElementaryTypeName","src":"9192:7:11","typeDescriptions":{}}},"id":1819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9192:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9184:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1842,"nodeType":"IfStatement","src":"9180:256:11","trueBody":{"id":1841,"nodeType":"Block","src":"9204:232:11","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9317:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9309:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1822,"name":"address","nodeType":"ElementaryTypeName","src":"9309:7:11","typeDescriptions":{}}},"id":1825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9309:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1826,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"9321:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9338:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9330:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1827,"name":"address","nodeType":"ElementaryTypeName","src":"9330:7:11","typeDescriptions":{}}},"id":1830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9330:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":1831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9342:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1821,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2127,2193],"referencedDeclaration":2193,"src":"9300:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9300:48:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1833,"nodeType":"ExpressionStatement","src":"9300:48:11"},{"id":1840,"nodeType":"UncheckedBlock","src":"9363:63:11","statements":[{"expression":{"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1834,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"9391:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1836,"indexExpression":{"id":1835,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"9401:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9391:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9410:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9391:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1839,"nodeType":"ExpressionStatement","src":"9391:20:11"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1843,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"9450:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9464:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9456:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1844,"name":"address","nodeType":"ElementaryTypeName","src":"9456:7:11","typeDescriptions":{}}},"id":1847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9456:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9450:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1857,"nodeType":"IfStatement","src":"9446:107:11","trueBody":{"id":1856,"nodeType":"Block","src":"9468:85:11","statements":[{"id":1855,"nodeType":"UncheckedBlock","src":"9482:61:11","statements":[{"expression":{"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1849,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"9510:9:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1851,"indexExpression":{"id":1850,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"9520:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9510:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9527:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9510:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1854,"nodeType":"ExpressionStatement","src":"9510:18:11"}]}]}},{"expression":{"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1858,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"9563:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1860,"indexExpression":{"id":1859,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"9571:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9563:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1861,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"9582:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9563:21:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1863,"nodeType":"ExpressionStatement","src":"9563:21:11"},{"eventCall":{"arguments":[{"id":1865,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"9609:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1866,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"9615:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1867,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"9619:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1864,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"9600:8:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9600:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1869,"nodeType":"EmitStatement","src":"9595:32:11"},{"expression":{"id":1870,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"9645:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1794,"id":1871,"nodeType":"Return","src":"9638:11:11"}]},"documentation":{"id":1784,"nodeType":"StructuredDocumentation","src":"8274:582:11","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":1873,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8870:7:11","nodeType":"FunctionDefinition","parameters":{"id":1791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1786,"mutability":"mutable","name":"to","nameLocation":"8886:2:11","nodeType":"VariableDeclaration","scope":1873,"src":"8878:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1785,"name":"address","nodeType":"ElementaryTypeName","src":"8878:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1788,"mutability":"mutable","name":"tokenId","nameLocation":"8898:7:11","nodeType":"VariableDeclaration","scope":1873,"src":"8890:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1787,"name":"uint256","nodeType":"ElementaryTypeName","src":"8890:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1790,"mutability":"mutable","name":"auth","nameLocation":"8915:4:11","nodeType":"VariableDeclaration","scope":1873,"src":"8907:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1789,"name":"address","nodeType":"ElementaryTypeName","src":"8907:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:43:11"},"returnParameters":{"id":1794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1873,"src":"8947:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1792,"name":"address","nodeType":"ElementaryTypeName","src":"8947:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8946:9:11"},"scope":2260,"src":"8861:795:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1922,"nodeType":"Block","src":"10031:274:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1881,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"10045:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10059:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10051:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1882,"name":"address","nodeType":"ElementaryTypeName","src":"10051:7:11","typeDescriptions":{}}},"id":1885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10051:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10045:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1895,"nodeType":"IfStatement","src":"10041:87:11","trueBody":{"id":1894,"nodeType":"Block","src":"10063:65:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10114:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10106:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1888,"name":"address","nodeType":"ElementaryTypeName","src":"10106:7:11","typeDescriptions":{}}},"id":1891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1887,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"10084:21:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10084:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1893,"nodeType":"RevertStatement","src":"10077:40:11"}]}},{"assignments":[1897],"declarations":[{"constant":false,"id":1897,"mutability":"mutable","name":"previousOwner","nameLocation":"10145:13:11","nodeType":"VariableDeclaration","scope":1922,"src":"10137:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1896,"name":"address","nodeType":"ElementaryTypeName","src":"10137:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1906,"initialValue":{"arguments":[{"id":1899,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"10169:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1900,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"10173:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10190:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10182:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1901,"name":"address","nodeType":"ElementaryTypeName","src":"10182:7:11","typeDescriptions":{}}},"id":1904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10182:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1898,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"10161:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10161:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10137:56:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1907,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"10207:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10232:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10224:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1908,"name":"address","nodeType":"ElementaryTypeName","src":"10224:7:11","typeDescriptions":{}}},"id":1911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10224:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10207:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1921,"nodeType":"IfStatement","src":"10203:96:11","trueBody":{"id":1920,"nodeType":"Block","src":"10236:63:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10277:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1914,"name":"address","nodeType":"ElementaryTypeName","src":"10277:7:11","typeDescriptions":{}}},"id":1917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10277:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1913,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"10257:19:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10257:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1919,"nodeType":"RevertStatement","src":"10250:38:11"}]}}]},"documentation":{"id":1874,"nodeType":"StructuredDocumentation","src":"9662:311:11","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":1923,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9987:5:11","nodeType":"FunctionDefinition","parameters":{"id":1879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1876,"mutability":"mutable","name":"to","nameLocation":"10001:2:11","nodeType":"VariableDeclaration","scope":1923,"src":"9993:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1875,"name":"address","nodeType":"ElementaryTypeName","src":"9993:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1878,"mutability":"mutable","name":"tokenId","nameLocation":"10013:7:11","nodeType":"VariableDeclaration","scope":1923,"src":"10005:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1877,"name":"uint256","nodeType":"ElementaryTypeName","src":"10005:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9992:29:11"},"returnParameters":{"id":1880,"nodeType":"ParameterList","parameters":[],"src":"10031:0:11"},"scope":2260,"src":"9978:327:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1937,"nodeType":"Block","src":"10713:43:11","statements":[{"expression":{"arguments":[{"id":1932,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1926,"src":"10733:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1933,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1928,"src":"10737:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10746:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1931,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1938,1968],"referencedDeclaration":1968,"src":"10723:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10723:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1936,"nodeType":"ExpressionStatement","src":"10723:26:11"}]},"documentation":{"id":1924,"nodeType":"StructuredDocumentation","src":"10311:340:11","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1938,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10665:9:11","nodeType":"FunctionDefinition","parameters":{"id":1929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1926,"mutability":"mutable","name":"to","nameLocation":"10683:2:11","nodeType":"VariableDeclaration","scope":1938,"src":"10675:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1925,"name":"address","nodeType":"ElementaryTypeName","src":"10675:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1928,"mutability":"mutable","name":"tokenId","nameLocation":"10695:7:11","nodeType":"VariableDeclaration","scope":1938,"src":"10687:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1927,"name":"uint256","nodeType":"ElementaryTypeName","src":"10687:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10674:29:11"},"returnParameters":{"id":1930,"nodeType":"ParameterList","parameters":[],"src":"10713:0:11"},"scope":2260,"src":"10656:100:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1967,"nodeType":"Block","src":"11061:123:11","statements":[{"expression":{"arguments":[{"id":1949,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"11077:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1950,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"11081:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1948,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"11071:5:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11071:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1952,"nodeType":"ExpressionStatement","src":"11071:18:11"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1956,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"11133:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11133:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11155:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11147:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1958,"name":"address","nodeType":"ElementaryTypeName","src":"11147:7:11","typeDescriptions":{}}},"id":1961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11147:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1962,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"11159:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1963,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"11163:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1964,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"11172:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1953,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"11099:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2500_$","typeString":"type(library ERC721Utils)"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11111:21:11","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2499,"src":"11099:33:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11099:78:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1966,"nodeType":"ExpressionStatement","src":"11099:78:11"}]},"documentation":{"id":1939,"nodeType":"StructuredDocumentation","src":"10762:210:11","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1968,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10986:9:11","nodeType":"FunctionDefinition","parameters":{"id":1946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1941,"mutability":"mutable","name":"to","nameLocation":"11004:2:11","nodeType":"VariableDeclaration","scope":1968,"src":"10996:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1940,"name":"address","nodeType":"ElementaryTypeName","src":"10996:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1943,"mutability":"mutable","name":"tokenId","nameLocation":"11016:7:11","nodeType":"VariableDeclaration","scope":1968,"src":"11008:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1942,"name":"uint256","nodeType":"ElementaryTypeName","src":"11008:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1945,"mutability":"mutable","name":"data","nameLocation":"11038:4:11","nodeType":"VariableDeclaration","scope":1968,"src":"11025:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1944,"name":"bytes","nodeType":"ElementaryTypeName","src":"11025:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10995:48:11"},"returnParameters":{"id":1947,"nodeType":"ParameterList","parameters":[],"src":"11061:0:11"},"scope":2260,"src":"10977:207:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2000,"nodeType":"Block","src":"11551:186:11","statements":[{"assignments":[1975],"declarations":[{"constant":false,"id":1975,"mutability":"mutable","name":"previousOwner","nameLocation":"11569:13:11","nodeType":"VariableDeclaration","scope":2000,"src":"11561:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1974,"name":"address","nodeType":"ElementaryTypeName","src":"11561:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1987,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":1979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11601:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11593:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1977,"name":"address","nodeType":"ElementaryTypeName","src":"11593:7:11","typeDescriptions":{}}},"id":1980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11593:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1981,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"11605:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11622:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11614:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1982,"name":"address","nodeType":"ElementaryTypeName","src":"11614:7:11","typeDescriptions":{}}},"id":1985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11614:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1976,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"11585:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11585:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11561:64:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1988,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"11639:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11664:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11656:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1989,"name":"address","nodeType":"ElementaryTypeName","src":"11656:7:11","typeDescriptions":{}}},"id":1992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11656:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11639:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1999,"nodeType":"IfStatement","src":"11635:96:11","trueBody":{"id":1998,"nodeType":"Block","src":"11668:63:11","statements":[{"errorCall":{"arguments":[{"id":1995,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"11712:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1994,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"11689:22:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11689:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1997,"nodeType":"RevertStatement","src":"11682:38:11"}]}}]},"documentation":{"id":1969,"nodeType":"StructuredDocumentation","src":"11190:315:11","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":2001,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11519:5:11","nodeType":"FunctionDefinition","parameters":{"id":1972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1971,"mutability":"mutable","name":"tokenId","nameLocation":"11533:7:11","nodeType":"VariableDeclaration","scope":2001,"src":"11525:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1970,"name":"uint256","nodeType":"ElementaryTypeName","src":"11525:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11524:17:11"},"returnParameters":{"id":1973,"nodeType":"ParameterList","parameters":[],"src":"11551:0:11"},"scope":2260,"src":"11510:227:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2060,"nodeType":"Block","src":"12132:389:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2011,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"12146:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12160:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12152:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2012,"name":"address","nodeType":"ElementaryTypeName","src":"12152:7:11","typeDescriptions":{}}},"id":2015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12152:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12146:16:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2025,"nodeType":"IfStatement","src":"12142:87:11","trueBody":{"id":2024,"nodeType":"Block","src":"12164:65:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12215:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12207:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2018,"name":"address","nodeType":"ElementaryTypeName","src":"12207:7:11","typeDescriptions":{}}},"id":2021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12207:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2017,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"12185:21:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12185:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2023,"nodeType":"RevertStatement","src":"12178:40:11"}]}},{"assignments":[2027],"declarations":[{"constant":false,"id":2027,"mutability":"mutable","name":"previousOwner","nameLocation":"12246:13:11","nodeType":"VariableDeclaration","scope":2060,"src":"12238:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2026,"name":"address","nodeType":"ElementaryTypeName","src":"12238:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2036,"initialValue":{"arguments":[{"id":2029,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"12270:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2030,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"12274:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12291:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12283:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2031,"name":"address","nodeType":"ElementaryTypeName","src":"12283:7:11","typeDescriptions":{}}},"id":2034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2028,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"12262:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12262:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12238:56:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2037,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"12308:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12333:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12325:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2038,"name":"address","nodeType":"ElementaryTypeName","src":"12325:7:11","typeDescriptions":{}}},"id":2041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12325:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12308:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2048,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"12410:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2049,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"12427:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12410:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2058,"nodeType":"IfStatement","src":"12406:109:11","trueBody":{"id":2057,"nodeType":"Block","src":"12433:82:11","statements":[{"errorCall":{"arguments":[{"id":2052,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"12475:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2053,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"12481:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2054,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"12490:13:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2051,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"12454:20:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12454:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2056,"nodeType":"RevertStatement","src":"12447:57:11"}]}},"id":2059,"nodeType":"IfStatement","src":"12304:211:11","trueBody":{"id":2047,"nodeType":"Block","src":"12337:63:11","statements":[{"errorCall":{"arguments":[{"id":2044,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"12381:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2043,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"12358:22:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12358:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2046,"nodeType":"RevertStatement","src":"12351:38:11"}]}}]},"documentation":{"id":2002,"nodeType":"StructuredDocumentation","src":"11743:313:11","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":2061,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"12070:9:11","nodeType":"FunctionDefinition","parameters":{"id":2009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2004,"mutability":"mutable","name":"from","nameLocation":"12088:4:11","nodeType":"VariableDeclaration","scope":2061,"src":"12080:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2003,"name":"address","nodeType":"ElementaryTypeName","src":"12080:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2006,"mutability":"mutable","name":"to","nameLocation":"12102:2:11","nodeType":"VariableDeclaration","scope":2061,"src":"12094:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2005,"name":"address","nodeType":"ElementaryTypeName","src":"12094:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2008,"mutability":"mutable","name":"tokenId","nameLocation":"12114:7:11","nodeType":"VariableDeclaration","scope":2061,"src":"12106:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2007,"name":"uint256","nodeType":"ElementaryTypeName","src":"12106:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12079:43:11"},"returnParameters":{"id":2010,"nodeType":"ParameterList","parameters":[],"src":"12132:0:11"},"scope":2260,"src":"12061:460:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2078,"nodeType":"Block","src":"13530:53:11","statements":[{"expression":{"arguments":[{"id":2072,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"13554:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2073,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"13560:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2074,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"13564:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13573:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2071,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[2079,2109],"referencedDeclaration":2109,"src":"13540:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13540:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2077,"nodeType":"ExpressionStatement","src":"13540:36:11"}]},"documentation":{"id":2062,"nodeType":"StructuredDocumentation","src":"12527:923:11","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":2079,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13464:13:11","nodeType":"FunctionDefinition","parameters":{"id":2069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2064,"mutability":"mutable","name":"from","nameLocation":"13486:4:11","nodeType":"VariableDeclaration","scope":2079,"src":"13478:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2063,"name":"address","nodeType":"ElementaryTypeName","src":"13478:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2066,"mutability":"mutable","name":"to","nameLocation":"13500:2:11","nodeType":"VariableDeclaration","scope":2079,"src":"13492:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2065,"name":"address","nodeType":"ElementaryTypeName","src":"13492:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2068,"mutability":"mutable","name":"tokenId","nameLocation":"13512:7:11","nodeType":"VariableDeclaration","scope":2079,"src":"13504:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2067,"name":"uint256","nodeType":"ElementaryTypeName","src":"13504:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13477:43:11"},"returnParameters":{"id":2070,"nodeType":"ParameterList","parameters":[],"src":"13530:0:11"},"scope":2260,"src":"13455:128:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2108,"nodeType":"Block","src":"13922:127:11","statements":[{"expression":{"arguments":[{"id":2092,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"13942:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2093,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"13948:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2094,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"13952:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2091,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"13932:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13932:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2096,"nodeType":"ExpressionStatement","src":"13932:28:11"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2100,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"14004:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14004:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2102,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"14018:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2103,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2084,"src":"14024:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2104,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"14028:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2105,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"14037:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2097,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"13970:11:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2500_$","typeString":"type(library ERC721Utils)"}},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13982:21:11","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2499,"src":"13970:33:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13970:72:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2107,"nodeType":"ExpressionStatement","src":"13970:72:11"}]},"documentation":{"id":2080,"nodeType":"StructuredDocumentation","src":"13589:226:11","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":2109,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13829:13:11","nodeType":"FunctionDefinition","parameters":{"id":2089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2082,"mutability":"mutable","name":"from","nameLocation":"13851:4:11","nodeType":"VariableDeclaration","scope":2109,"src":"13843:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2081,"name":"address","nodeType":"ElementaryTypeName","src":"13843:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2084,"mutability":"mutable","name":"to","nameLocation":"13865:2:11","nodeType":"VariableDeclaration","scope":2109,"src":"13857:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2083,"name":"address","nodeType":"ElementaryTypeName","src":"13857:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2086,"mutability":"mutable","name":"tokenId","nameLocation":"13877:7:11","nodeType":"VariableDeclaration","scope":2109,"src":"13869:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2085,"name":"uint256","nodeType":"ElementaryTypeName","src":"13869:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2088,"mutability":"mutable","name":"data","nameLocation":"13899:4:11","nodeType":"VariableDeclaration","scope":2109,"src":"13886:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2087,"name":"bytes","nodeType":"ElementaryTypeName","src":"13886:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13842:62:11"},"returnParameters":{"id":2090,"nodeType":"ParameterList","parameters":[],"src":"13922:0:11"},"scope":2260,"src":"13820:229:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2126,"nodeType":"Block","src":"14562:50:11","statements":[{"expression":{"arguments":[{"id":2120,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"14581:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2121,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"14585:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2122,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"14594:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":2123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14600:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2119,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2127,2193],"referencedDeclaration":2193,"src":"14572:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14572:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2125,"nodeType":"ExpressionStatement","src":"14572:33:11"}]},"documentation":{"id":2110,"nodeType":"StructuredDocumentation","src":"14055:432:11","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":2127,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14501:8:11","nodeType":"FunctionDefinition","parameters":{"id":2117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2112,"mutability":"mutable","name":"to","nameLocation":"14518:2:11","nodeType":"VariableDeclaration","scope":2127,"src":"14510:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2111,"name":"address","nodeType":"ElementaryTypeName","src":"14510:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2114,"mutability":"mutable","name":"tokenId","nameLocation":"14530:7:11","nodeType":"VariableDeclaration","scope":2127,"src":"14522:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2113,"name":"uint256","nodeType":"ElementaryTypeName","src":"14522:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2116,"mutability":"mutable","name":"auth","nameLocation":"14547:4:11","nodeType":"VariableDeclaration","scope":2127,"src":"14539:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2115,"name":"address","nodeType":"ElementaryTypeName","src":"14539:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14509:43:11"},"returnParameters":{"id":2118,"nodeType":"ParameterList","parameters":[],"src":"14562:0:11"},"scope":2260,"src":"14492:120:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2192,"nodeType":"Block","src":"14888:568:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2139,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"14954:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2140,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"14967:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14983:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14975:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2141,"name":"address","nodeType":"ElementaryTypeName","src":"14975:7:11","typeDescriptions":{}}},"id":2144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14975:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14967:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14954:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2185,"nodeType":"IfStatement","src":"14950:460:11","trueBody":{"id":2184,"nodeType":"Block","src":"14987:423:11","statements":[{"assignments":[2148],"declarations":[{"constant":false,"id":2148,"mutability":"mutable","name":"owner","nameLocation":"15009:5:11","nodeType":"VariableDeclaration","scope":2184,"src":"15001:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2147,"name":"address","nodeType":"ElementaryTypeName","src":"15001:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2152,"initialValue":{"arguments":[{"id":2150,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"15031:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2149,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"15017:13:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15017:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15001:38:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2153,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"15167:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15183:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2155,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15175:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2154,"name":"address","nodeType":"ElementaryTypeName","src":"15175:7:11","typeDescriptions":{}}},"id":2157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15175:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15167:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2159,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"15189:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2160,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"15198:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15189:13:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15206:30:11","subExpression":{"arguments":[{"id":2164,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"15224:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2165,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"15231:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2163,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1574,"src":"15207:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15207:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:69:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2174,"nodeType":"IfStatement","src":"15163:142:11","trueBody":{"id":2173,"nodeType":"Block","src":"15238:67:11","statements":[{"errorCall":{"arguments":[{"id":2170,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"15285:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2169,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"15263:21:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15263:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2172,"nodeType":"RevertStatement","src":"15256:34:11"}]}},{"condition":{"id":2175,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"15323:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2183,"nodeType":"IfStatement","src":"15319:81:11","trueBody":{"id":2182,"nodeType":"Block","src":"15334:66:11","statements":[{"eventCall":{"arguments":[{"id":2177,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"15366:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2178,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"15373:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2179,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"15377:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2176,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"15357:8:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15357:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2181,"nodeType":"EmitStatement","src":"15352:33:11"}]}}]}},{"expression":{"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2186,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"15420:15:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2188,"indexExpression":{"id":2187,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"15436:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15420:24:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2189,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"15447:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15420:29:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2191,"nodeType":"ExpressionStatement","src":"15420:29:11"}]},"documentation":{"id":2128,"nodeType":"StructuredDocumentation","src":"14618:171:11","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":2193,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14803:8:11","nodeType":"FunctionDefinition","parameters":{"id":2137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2130,"mutability":"mutable","name":"to","nameLocation":"14820:2:11","nodeType":"VariableDeclaration","scope":2193,"src":"14812:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2129,"name":"address","nodeType":"ElementaryTypeName","src":"14812:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2132,"mutability":"mutable","name":"tokenId","nameLocation":"14832:7:11","nodeType":"VariableDeclaration","scope":2193,"src":"14824:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2131,"name":"uint256","nodeType":"ElementaryTypeName","src":"14824:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2134,"mutability":"mutable","name":"auth","nameLocation":"14849:4:11","nodeType":"VariableDeclaration","scope":2193,"src":"14841:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2133,"name":"address","nodeType":"ElementaryTypeName","src":"14841:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2136,"mutability":"mutable","name":"emitEvent","nameLocation":"14860:9:11","nodeType":"VariableDeclaration","scope":2193,"src":"14855:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2135,"name":"bool","nodeType":"ElementaryTypeName","src":"14855:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14811:59:11"},"returnParameters":{"id":2138,"nodeType":"ParameterList","parameters":[],"src":"14888:0:11"},"scope":2260,"src":"14794:662:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2229,"nodeType":"Block","src":"15758:219:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2203,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"15772:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15792:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15784:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2204,"name":"address","nodeType":"ElementaryTypeName","src":"15784:7:11","typeDescriptions":{}}},"id":2207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15784:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15772:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2214,"nodeType":"IfStatement","src":"15768:91:11","trueBody":{"id":2213,"nodeType":"Block","src":"15796:63:11","statements":[{"errorCall":{"arguments":[{"id":2210,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"15839:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2209,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"15817:21:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15817:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2212,"nodeType":"RevertStatement","src":"15810:38:11"}]}},{"expression":{"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2215,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"15868:18:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2218,"indexExpression":{"id":2216,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"15887:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15868:25:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2219,"indexExpression":{"id":2217,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"15894:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15868:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2220,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"15906:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15868:46:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2222,"nodeType":"ExpressionStatement","src":"15868:46:11"},{"eventCall":{"arguments":[{"id":2224,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"15944:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2225,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"15951:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2226,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"15961:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2223,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"15929:14:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15929:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2228,"nodeType":"EmitStatement","src":"15924:46:11"}]},"documentation":{"id":2194,"nodeType":"StructuredDocumentation","src":"15462:198:11","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":2230,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15674:18:11","nodeType":"FunctionDefinition","parameters":{"id":2201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2196,"mutability":"mutable","name":"owner","nameLocation":"15701:5:11","nodeType":"VariableDeclaration","scope":2230,"src":"15693:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2195,"name":"address","nodeType":"ElementaryTypeName","src":"15693:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2198,"mutability":"mutable","name":"operator","nameLocation":"15716:8:11","nodeType":"VariableDeclaration","scope":2230,"src":"15708:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2197,"name":"address","nodeType":"ElementaryTypeName","src":"15708:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2200,"mutability":"mutable","name":"approved","nameLocation":"15731:8:11","nodeType":"VariableDeclaration","scope":2230,"src":"15726:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2199,"name":"bool","nodeType":"ElementaryTypeName","src":"15726:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15692:48:11"},"returnParameters":{"id":2202,"nodeType":"ParameterList","parameters":[],"src":"15758:0:11"},"scope":2260,"src":"15665:312:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2258,"nodeType":"Block","src":"16284:169:11","statements":[{"assignments":[2239],"declarations":[{"constant":false,"id":2239,"mutability":"mutable","name":"owner","nameLocation":"16302:5:11","nodeType":"VariableDeclaration","scope":2258,"src":"16294:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2238,"name":"address","nodeType":"ElementaryTypeName","src":"16294:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2243,"initialValue":{"arguments":[{"id":2241,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"16319:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2240,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"16310:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16310:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16294:33:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2244,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"16341:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16358:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16350:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2245,"name":"address","nodeType":"ElementaryTypeName","src":"16350:7:11","typeDescriptions":{}}},"id":2248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16350:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16341:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2255,"nodeType":"IfStatement","src":"16337:88:11","trueBody":{"id":2254,"nodeType":"Block","src":"16362:63:11","statements":[{"errorCall":{"arguments":[{"id":2251,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2233,"src":"16406:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2250,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"16383:22:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16383:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2253,"nodeType":"RevertStatement","src":"16376:38:11"}]}},{"expression":{"id":2256,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"16441:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2237,"id":2257,"nodeType":"Return","src":"16434:12:11"}]},"documentation":{"id":2231,"nodeType":"StructuredDocumentation","src":"15983:224:11","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":2259,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"16221:13:11","nodeType":"FunctionDefinition","parameters":{"id":2234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2233,"mutability":"mutable","name":"tokenId","nameLocation":"16243:7:11","nodeType":"VariableDeclaration","scope":2259,"src":"16235:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2232,"name":"uint256","nodeType":"ElementaryTypeName","src":"16235:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16234:17:11"},"returnParameters":{"id":2237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2259,"src":"16275:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2235,"name":"address","nodeType":"ElementaryTypeName","src":"16275:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16274:9:11"},"scope":2260,"src":"16212:241:11","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2261,"src":"775:15680:11","usedErrors":[595,600,609,614,619,626,631,636],"usedEvents":[2276,2285,2294]}],"src":"107:16349:11"},"id":11},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[3403],"IERC721":[2377]},"id":2378,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2262,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2264,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2378,"sourceUnit":3404,"src":"134:62:12","symbolAliases":[{"foreign":{"id":2263,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"142:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2266,"name":"IERC165","nameLocations":["288:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":3403,"src":"288:7:12"},"id":2267,"nodeType":"InheritanceSpecifier","src":"288:7:12"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":2265,"nodeType":"StructuredDocumentation","src":"198:68:12","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":2377,"linearizedBaseContracts":[2377,3403],"name":"IERC721","nameLocation":"277:7:12","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2268,"nodeType":"StructuredDocumentation","src":"302:88:12","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2276,"name":"Transfer","nameLocation":"401:8:12","nodeType":"EventDefinition","parameters":{"id":2275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2270,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:12","nodeType":"VariableDeclaration","scope":2276,"src":"410:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2269,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2272,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:12","nodeType":"VariableDeclaration","scope":2276,"src":"432:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2271,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2274,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:12","nodeType":"VariableDeclaration","scope":2276,"src":"452:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2273,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:12"},"src":"395:82:12"},{"anonymous":false,"documentation":{"id":2277,"nodeType":"StructuredDocumentation","src":"483:94:12","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2285,"name":"Approval","nameLocation":"588:8:12","nodeType":"EventDefinition","parameters":{"id":2284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2279,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:12","nodeType":"VariableDeclaration","scope":2285,"src":"597:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2278,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2281,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:12","nodeType":"VariableDeclaration","scope":2285,"src":"620:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2280,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2283,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:12","nodeType":"VariableDeclaration","scope":2285,"src":"646:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2282,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:12"},"src":"582:89:12"},{"anonymous":false,"documentation":{"id":2286,"nodeType":"StructuredDocumentation","src":"677:117:12","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":2294,"name":"ApprovalForAll","nameLocation":"805:14:12","nodeType":"EventDefinition","parameters":{"id":2293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2288,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:12","nodeType":"VariableDeclaration","scope":2294,"src":"820:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2287,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2290,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:12","nodeType":"VariableDeclaration","scope":2294,"src":"843:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2289,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2292,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:12","nodeType":"VariableDeclaration","scope":2294,"src":"869:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2291,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:12"},"src":"799:85:12"},{"documentation":{"id":2295,"nodeType":"StructuredDocumentation","src":"890:76:12","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":2302,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:12","nodeType":"FunctionDefinition","parameters":{"id":2298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2297,"mutability":"mutable","name":"owner","nameLocation":"998:5:12","nodeType":"VariableDeclaration","scope":2302,"src":"990:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2296,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:12"},"returnParameters":{"id":2301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2300,"mutability":"mutable","name":"balance","nameLocation":"1036:7:12","nodeType":"VariableDeclaration","scope":2302,"src":"1028:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2299,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:12"},"scope":2377,"src":"971:74:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2303,"nodeType":"StructuredDocumentation","src":"1051:131:12","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":2310,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:12","nodeType":"FunctionDefinition","parameters":{"id":2306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2305,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:12","nodeType":"VariableDeclaration","scope":2310,"src":"1204:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2304,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:12"},"returnParameters":{"id":2309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2308,"mutability":"mutable","name":"owner","nameLocation":"1252:5:12","nodeType":"VariableDeclaration","scope":2310,"src":"1244:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2307,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:12"},"scope":2377,"src":"1187:72:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2311,"nodeType":"StructuredDocumentation","src":"1265:565:12","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":2322,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:12","nodeType":"FunctionDefinition","parameters":{"id":2320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2313,"mutability":"mutable","name":"from","nameLocation":"1869:4:12","nodeType":"VariableDeclaration","scope":2322,"src":"1861:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2312,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2315,"mutability":"mutable","name":"to","nameLocation":"1883:2:12","nodeType":"VariableDeclaration","scope":2322,"src":"1875:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2314,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2317,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:12","nodeType":"VariableDeclaration","scope":2322,"src":"1887:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2316,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2319,"mutability":"mutable","name":"data","nameLocation":"1919:4:12","nodeType":"VariableDeclaration","scope":2322,"src":"1904:19:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2318,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:12"},"returnParameters":{"id":2321,"nodeType":"ParameterList","parameters":[],"src":"1933:0:12"},"scope":2377,"src":"1835:99:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2323,"nodeType":"StructuredDocumentation","src":"1940:706:12","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":2332,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:12","nodeType":"FunctionDefinition","parameters":{"id":2330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2325,"mutability":"mutable","name":"from","nameLocation":"2685:4:12","nodeType":"VariableDeclaration","scope":2332,"src":"2677:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2324,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2327,"mutability":"mutable","name":"to","nameLocation":"2699:2:12","nodeType":"VariableDeclaration","scope":2332,"src":"2691:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2326,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2329,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:12","nodeType":"VariableDeclaration","scope":2332,"src":"2703:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2328,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:12"},"returnParameters":{"id":2331,"nodeType":"ParameterList","parameters":[],"src":"2728:0:12"},"scope":2377,"src":"2651:78:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2333,"nodeType":"StructuredDocumentation","src":"2735:733:12","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2342,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:12","nodeType":"FunctionDefinition","parameters":{"id":2340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2335,"mutability":"mutable","name":"from","nameLocation":"3503:4:12","nodeType":"VariableDeclaration","scope":2342,"src":"3495:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2334,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2337,"mutability":"mutable","name":"to","nameLocation":"3517:2:12","nodeType":"VariableDeclaration","scope":2342,"src":"3509:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2336,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2339,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:12","nodeType":"VariableDeclaration","scope":2342,"src":"3521:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2338,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:12"},"returnParameters":{"id":2341,"nodeType":"ParameterList","parameters":[],"src":"3546:0:12"},"scope":2377,"src":"3473:74:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2343,"nodeType":"StructuredDocumentation","src":"3553:452:12","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2350,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:12","nodeType":"FunctionDefinition","parameters":{"id":2348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2345,"mutability":"mutable","name":"to","nameLocation":"4035:2:12","nodeType":"VariableDeclaration","scope":2350,"src":"4027:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2344,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2347,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:12","nodeType":"VariableDeclaration","scope":2350,"src":"4039:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2346,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:12"},"returnParameters":{"id":2349,"nodeType":"ParameterList","parameters":[],"src":"4064:0:12"},"scope":2377,"src":"4010:55:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2351,"nodeType":"StructuredDocumentation","src":"4071:315:12","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":2358,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:12","nodeType":"FunctionDefinition","parameters":{"id":2356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2353,"mutability":"mutable","name":"operator","nameLocation":"4426:8:12","nodeType":"VariableDeclaration","scope":2358,"src":"4418:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2352,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2355,"mutability":"mutable","name":"approved","nameLocation":"4441:8:12","nodeType":"VariableDeclaration","scope":2358,"src":"4436:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2354,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:12"},"returnParameters":{"id":2357,"nodeType":"ParameterList","parameters":[],"src":"4459:0:12"},"scope":2377,"src":"4391:69:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2359,"nodeType":"StructuredDocumentation","src":"4466:139:12","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":2366,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:12","nodeType":"FunctionDefinition","parameters":{"id":2362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2361,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:12","nodeType":"VariableDeclaration","scope":2366,"src":"4631:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2360,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:12"},"returnParameters":{"id":2365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2364,"mutability":"mutable","name":"operator","nameLocation":"4679:8:12","nodeType":"VariableDeclaration","scope":2366,"src":"4671:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2363,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:12"},"scope":2377,"src":"4610:79:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2367,"nodeType":"StructuredDocumentation","src":"4695:138:12","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":2376,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:12","nodeType":"FunctionDefinition","parameters":{"id":2372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2369,"mutability":"mutable","name":"owner","nameLocation":"4872:5:12","nodeType":"VariableDeclaration","scope":2376,"src":"4864:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2368,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2371,"mutability":"mutable","name":"operator","nameLocation":"4887:8:12","nodeType":"VariableDeclaration","scope":2376,"src":"4879:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2370,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:12"},"returnParameters":{"id":2375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2376,"src":"4920:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2373,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:12"},"scope":2377,"src":"4838:88:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2378,"src":"267:4661:12","usedErrors":[],"usedEvents":[2276,2285,2294]}],"src":"108:4821:12"},"id":12},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[2395]},"id":2396,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2379,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":2380,"nodeType":"StructuredDocumentation","src":"142:154:13","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":2395,"linearizedBaseContracts":[2395],"name":"IERC721Receiver","nameLocation":"307:15:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2381,"nodeType":"StructuredDocumentation","src":"329:500:13","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":2394,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:13","nodeType":"FunctionDefinition","parameters":{"id":2390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2383,"mutability":"mutable","name":"operator","nameLocation":"877:8:13","nodeType":"VariableDeclaration","scope":2394,"src":"869:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2382,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2385,"mutability":"mutable","name":"from","nameLocation":"903:4:13","nodeType":"VariableDeclaration","scope":2394,"src":"895:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2384,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2387,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:13","nodeType":"VariableDeclaration","scope":2394,"src":"917:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2386,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2389,"mutability":"mutable","name":"data","nameLocation":"957:4:13","nodeType":"VariableDeclaration","scope":2394,"src":"942:19:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2388,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:13"},"returnParameters":{"id":2393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2394,"src":"986:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2391,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:13"},"scope":2395,"src":"834:160:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2396,"src":"297:699:13","usedErrors":[],"usedEvents":[]}],"src":"116:881:13"},"id":13},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[2377],"IERC721Metadata":[2423]},"id":2424,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2397,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"127:24:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":2399,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2424,"sourceUnit":2378,"src":"153:39:14","symbolAliases":[{"foreign":{"id":2398,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"161:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2401,"name":"IERC721","nameLocations":["357:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":2377,"src":"357:7:14"},"id":2402,"nodeType":"InheritanceSpecifier","src":"357:7:14"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2400,"nodeType":"StructuredDocumentation","src":"194:133:14","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2423,"linearizedBaseContracts":[2423,2377,3403],"name":"IERC721Metadata","nameLocation":"338:15:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2403,"nodeType":"StructuredDocumentation","src":"371:58:14","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":2408,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:14","nodeType":"FunctionDefinition","parameters":{"id":2404,"nodeType":"ParameterList","parameters":[],"src":"447:2:14"},"returnParameters":{"id":2407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2408,"src":"473:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2405,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:14"},"scope":2423,"src":"434:54:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2409,"nodeType":"StructuredDocumentation","src":"494:60:14","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":2414,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:14","nodeType":"FunctionDefinition","parameters":{"id":2410,"nodeType":"ParameterList","parameters":[],"src":"574:2:14"},"returnParameters":{"id":2413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2414,"src":"600:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2411,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:14"},"scope":2423,"src":"559:56:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2415,"nodeType":"StructuredDocumentation","src":"621:90:14","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":2422,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:14","nodeType":"FunctionDefinition","parameters":{"id":2418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2417,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:14","nodeType":"VariableDeclaration","scope":2422,"src":"734:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2416,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:14"},"returnParameters":{"id":2421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2422,"src":"774:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2419,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:14"},"scope":2423,"src":"716:73:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2424,"src":"328:463:14","usedErrors":[],"usedEvents":[2276,2285,2294]}],"src":"127:665:14"},"id":14},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[2500],"IERC721Errors":[637],"IERC721Receiver":[2395]},"id":2501,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2425,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":2427,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2501,"sourceUnit":2396,"src":"144:55:15","symbolAliases":[{"foreign":{"id":2426,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"152:15:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":2429,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2501,"sourceUnit":685,"src":"200:69:15","symbolAliases":[{"foreign":{"id":2428,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"208:13:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":2430,"nodeType":"StructuredDocumentation","src":"271:159:15","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":2500,"linearizedBaseContracts":[2500],"name":"ERC721Utils","nameLocation":"439:11:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":2498,"nodeType":"Block","src":"1151:758:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2444,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"1165:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1168:4:15","memberName":"code","nodeType":"MemberAccess","src":"1165:7:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1173:6:15","memberName":"length","nodeType":"MemberAccess","src":"1165:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1182:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1165:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2497,"nodeType":"IfStatement","src":"1161:742:15","trueBody":{"id":2496,"nodeType":"Block","src":"1185:718:15","statements":[{"clauses":[{"block":{"id":2474,"nodeType":"Block","src":"1295:214:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2461,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"1317:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":2462,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"1327:15:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2395_$","typeString":"type(contract IERC721Receiver)"}},"id":2463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1343:16:15","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2394,"src":"1327:32:15","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":2464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1360:8:15","memberName":"selector","nodeType":"MemberAccess","src":"1327:41:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1317:51:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2473,"nodeType":"IfStatement","src":"1313:182:15","trueBody":{"id":2472,"nodeType":"Block","src":"1370:125:15","statements":[{"errorCall":{"arguments":[{"id":2469,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"1473:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2466,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"1437:13:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$637_$","typeString":"type(contract IERC721Errors)"}},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1451:21:15","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":619,"src":"1437:35:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1437:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2471,"nodeType":"RevertStatement","src":"1430:46:15"}]}}]},"errorName":"","id":2475,"nodeType":"TryCatchClause","parameters":{"id":2460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2459,"mutability":"mutable","name":"retval","nameLocation":"1287:6:15","nodeType":"VariableDeclaration","scope":2475,"src":"1280:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2458,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1280:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1279:15:15"},"src":"1271:238:15"},{"block":{"id":2493,"nodeType":"Block","src":"1538:355:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2479,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"1560:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1567:6:15","memberName":"length","nodeType":"MemberAccess","src":"1560:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1577:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1560:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2491,"nodeType":"Block","src":"1728:151:15","statements":[{"AST":{"nativeSrc":"1775:86:15","nodeType":"YulBlock","src":"1775:86:15","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1812:2:15","nodeType":"YulLiteral","src":"1812:2:15","type":"","value":"32"},{"name":"reason","nativeSrc":"1816:6:15","nodeType":"YulIdentifier","src":"1816:6:15"}],"functionName":{"name":"add","nativeSrc":"1808:3:15","nodeType":"YulIdentifier","src":"1808:3:15"},"nativeSrc":"1808:15:15","nodeType":"YulFunctionCall","src":"1808:15:15"},{"arguments":[{"name":"reason","nativeSrc":"1831:6:15","nodeType":"YulIdentifier","src":"1831:6:15"}],"functionName":{"name":"mload","nativeSrc":"1825:5:15","nodeType":"YulIdentifier","src":"1825:5:15"},"nativeSrc":"1825:13:15","nodeType":"YulFunctionCall","src":"1825:13:15"}],"functionName":{"name":"revert","nativeSrc":"1801:6:15","nodeType":"YulIdentifier","src":"1801:6:15"},"nativeSrc":"1801:38:15","nodeType":"YulFunctionCall","src":"1801:38:15"},"nativeSrc":"1801:38:15","nodeType":"YulExpressionStatement","src":"1801:38:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":2477,"isOffset":false,"isSlot":false,"src":"1816:6:15","valueSize":1},{"declaration":2477,"isOffset":false,"isSlot":false,"src":"1831:6:15","valueSize":1}],"flags":["memory-safe"],"id":2490,"nodeType":"InlineAssembly","src":"1750:111:15"}]},"id":2492,"nodeType":"IfStatement","src":"1556:323:15","trueBody":{"id":2489,"nodeType":"Block","src":"1580:142:15","statements":[{"errorCall":{"arguments":[{"id":2486,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"1700:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2483,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"1664:13:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$637_$","typeString":"type(contract IERC721Errors)"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1678:21:15","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":619,"src":"1664:35:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2488,"nodeType":"RevertStatement","src":"1657:46:15"}]}}]},"errorName":"","id":2494,"nodeType":"TryCatchClause","parameters":{"id":2478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2477,"mutability":"mutable","name":"reason","nameLocation":"1530:6:15","nodeType":"VariableDeclaration","scope":2494,"src":"1517:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2476,"name":"bytes","nodeType":"ElementaryTypeName","src":"1517:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1516:21:15"},"src":"1510:383:15"}],"externalCall":{"arguments":[{"id":2453,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"1240:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2454,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"1250:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2455,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2439,"src":"1256:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2456,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"1265:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2450,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"1219:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2449,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"1203:15:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2395_$","typeString":"type(contract IERC721Receiver)"}},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1203:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$2395","typeString":"contract IERC721Receiver"}},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1223:16:15","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2394,"src":"1203:36:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1203:67:15","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2495,"nodeType":"TryStatement","src":"1199:694:15"}]}}]},"documentation":{"id":2431,"nodeType":"StructuredDocumentation","src":"457:523:15","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":2499,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"994:21:15","nodeType":"FunctionDefinition","parameters":{"id":2442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2433,"mutability":"mutable","name":"operator","nameLocation":"1033:8:15","nodeType":"VariableDeclaration","scope":2499,"src":"1025:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2432,"name":"address","nodeType":"ElementaryTypeName","src":"1025:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2435,"mutability":"mutable","name":"from","nameLocation":"1059:4:15","nodeType":"VariableDeclaration","scope":2499,"src":"1051:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2434,"name":"address","nodeType":"ElementaryTypeName","src":"1051:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2437,"mutability":"mutable","name":"to","nameLocation":"1081:2:15","nodeType":"VariableDeclaration","scope":2499,"src":"1073:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2436,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2439,"mutability":"mutable","name":"tokenId","nameLocation":"1101:7:15","nodeType":"VariableDeclaration","scope":2499,"src":"1093:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2438,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2441,"mutability":"mutable","name":"data","nameLocation":"1131:4:15","nodeType":"VariableDeclaration","scope":2499,"src":"1118:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2440,"name":"bytes","nodeType":"ElementaryTypeName","src":"1118:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1015:126:15"},"returnParameters":{"id":2443,"nodeType":"ParameterList","parameters":[],"src":"1151:0:15"},"scope":2500,"src":"985:924:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2501,"src":"431:1480:15","usedErrors":[],"usedEvents":[]}],"src":"118:1794:15"},"id":15},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2530]},"id":2531,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2502,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:16"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2503,"nodeType":"StructuredDocumentation","src":"127:496:16","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2530,"linearizedBaseContracts":[2530],"name":"Context","nameLocation":"642:7:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":2511,"nodeType":"Block","src":"718:34:16","statements":[{"expression":{"expression":{"id":2508,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:16","memberName":"sender","nodeType":"MemberAccess","src":"735:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2507,"id":2510,"nodeType":"Return","src":"728:17:16"}]},"id":2512,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:16","nodeType":"FunctionDefinition","parameters":{"id":2504,"nodeType":"ParameterList","parameters":[],"src":"675:2:16"},"returnParameters":{"id":2507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2506,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2512,"src":"709:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2505,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:16"},"scope":2530,"src":"656:96:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2520,"nodeType":"Block","src":"825:32:16","statements":[{"expression":{"expression":{"id":2517,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:16","memberName":"data","nodeType":"MemberAccess","src":"842:8:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2516,"id":2519,"nodeType":"Return","src":"835:15:16"}]},"id":2521,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:16","nodeType":"FunctionDefinition","parameters":{"id":2513,"nodeType":"ParameterList","parameters":[],"src":"775:2:16"},"returnParameters":{"id":2516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2521,"src":"809:14:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2514,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:16"},"scope":2530,"src":"758:99:16","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2528,"nodeType":"Block","src":"935:25:16","statements":[{"expression":{"hexValue":"30","id":2526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2525,"id":2527,"nodeType":"Return","src":"945:8:16"}]},"id":2529,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:16","nodeType":"FunctionDefinition","parameters":{"id":2522,"nodeType":"ParameterList","parameters":[],"src":"892:2:16"},"returnParameters":{"id":2525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2529,"src":"926:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2523,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:16"},"scope":2530,"src":"863:97:16","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2531,"src":"624:338:16","usedErrors":[],"usedEvents":[]}],"src":"101:862:16"},"id":16},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[2582]},"id":2583,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2532,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2533,"nodeType":"StructuredDocumentation","src":"125:489:17","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":2582,"linearizedBaseContracts":[2582],"name":"Panic","nameLocation":"665:5:17","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2534,"nodeType":"StructuredDocumentation","src":"677:36:17","text":"@dev generic / unspecified error"},"id":2537,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:17","nodeType":"VariableDeclaration","scope":2582,"src":"718:40:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2535,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":2536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":2538,"nodeType":"StructuredDocumentation","src":"764:37:17","text":"@dev used by the assert() builtin"},"id":2541,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:17","nodeType":"VariableDeclaration","scope":2582,"src":"806:39:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2539,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":2540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":2542,"nodeType":"StructuredDocumentation","src":"851:41:17","text":"@dev arithmetic underflow or overflow"},"id":2545,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:17","nodeType":"VariableDeclaration","scope":2582,"src":"897:47:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2543,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":2544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:17","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":2546,"nodeType":"StructuredDocumentation","src":"950:35:17","text":"@dev division or modulo by zero"},"id":2549,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:17","nodeType":"VariableDeclaration","scope":2582,"src":"990:49:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2547,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":2548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:17","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":2550,"nodeType":"StructuredDocumentation","src":"1045:30:17","text":"@dev enum conversion error"},"id":2553,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:17","nodeType":"VariableDeclaration","scope":2582,"src":"1080:54:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2551,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":2552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:17","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":2554,"nodeType":"StructuredDocumentation","src":"1140:36:17","text":"@dev invalid encoding in storage"},"id":2557,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:17","nodeType":"VariableDeclaration","scope":2582,"src":"1181:55:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2555,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":2556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:17","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":2558,"nodeType":"StructuredDocumentation","src":"1242:24:17","text":"@dev empty array pop"},"id":2561,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:17","nodeType":"VariableDeclaration","scope":2582,"src":"1271:48:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2559,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":2560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:17","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":2562,"nodeType":"StructuredDocumentation","src":"1325:35:17","text":"@dev array out of bounds access"},"id":2565,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:17","nodeType":"VariableDeclaration","scope":2582,"src":"1365:52:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2563,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":2564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:17","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":2566,"nodeType":"StructuredDocumentation","src":"1423:65:17","text":"@dev resource error (too large allocation or too large array)"},"id":2569,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:17","nodeType":"VariableDeclaration","scope":2582,"src":"1493:47:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2567,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":2568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:17","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":2570,"nodeType":"StructuredDocumentation","src":"1546:42:17","text":"@dev calling invalid internal function"},"id":2573,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:17","nodeType":"VariableDeclaration","scope":2582,"src":"1593:58:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2571,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":2572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:17","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":2580,"nodeType":"Block","src":"1819:151:17","statements":[{"AST":{"nativeSrc":"1854:110:17","nodeType":"YulBlock","src":"1854:110:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:17","nodeType":"YulLiteral","src":"1875:4:17","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:17","nodeType":"YulLiteral","src":"1881:10:17","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:17","nodeType":"YulIdentifier","src":"1868:6:17"},"nativeSrc":"1868:24:17","nodeType":"YulFunctionCall","src":"1868:24:17"},"nativeSrc":"1868:24:17","nodeType":"YulExpressionStatement","src":"1868:24:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:17","nodeType":"YulLiteral","src":"1912:4:17","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:17","nodeType":"YulIdentifier","src":"1918:4:17"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:17","nodeType":"YulIdentifier","src":"1905:6:17"},"nativeSrc":"1905:18:17","nodeType":"YulFunctionCall","src":"1905:18:17"},"nativeSrc":"1905:18:17","nodeType":"YulExpressionStatement","src":"1905:18:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:17","nodeType":"YulLiteral","src":"1943:4:17","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:17","nodeType":"YulLiteral","src":"1949:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:17","nodeType":"YulIdentifier","src":"1936:6:17"},"nativeSrc":"1936:18:17","nodeType":"YulFunctionCall","src":"1936:18:17"},"nativeSrc":"1936:18:17","nodeType":"YulExpressionStatement","src":"1936:18:17"}]},"evmVersion":"paris","externalReferences":[{"declaration":2576,"isOffset":false,"isSlot":false,"src":"1918:4:17","valueSize":1}],"flags":["memory-safe"],"id":2579,"nodeType":"InlineAssembly","src":"1829:135:17"}]},"documentation":{"id":2574,"nodeType":"StructuredDocumentation","src":"1658:113:17","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":2581,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:17","nodeType":"FunctionDefinition","parameters":{"id":2577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2576,"mutability":"mutable","name":"code","nameLocation":"1799:4:17","nodeType":"VariableDeclaration","scope":2581,"src":"1791:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2575,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:17"},"returnParameters":{"id":2578,"nodeType":"ParameterList","parameters":[],"src":"1819:0:17"},"scope":2582,"src":"1776:194:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2583,"src":"657:1315:17","usedErrors":[],"usedEvents":[]}],"src":"99:1874:17"},"id":17},"@openzeppelin/contracts/utils/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","exportedSymbols":{"Context":[2530],"Pausable":[2699]},"id":2700,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2584,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2586,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2700,"sourceUnit":2531,"src":"128:45:18","symbolAliases":[{"foreign":{"id":2585,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"136:7:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2588,"name":"Context","nameLocations":["645:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":2530,"src":"645:7:18"},"id":2589,"nodeType":"InheritanceSpecifier","src":"645:7:18"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2587,"nodeType":"StructuredDocumentation","src":"175:439:18","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":2699,"linearizedBaseContracts":[2699,2530],"name":"Pausable","nameLocation":"633:8:18","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2591,"mutability":"mutable","name":"_paused","nameLocation":"672:7:18","nodeType":"VariableDeclaration","scope":2699,"src":"659:20:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2590,"name":"bool","nodeType":"ElementaryTypeName","src":"659:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":2592,"nodeType":"StructuredDocumentation","src":"686:73:18","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":2596,"name":"Paused","nameLocation":"770:6:18","nodeType":"EventDefinition","parameters":{"id":2595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2594,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"785:7:18","nodeType":"VariableDeclaration","scope":2596,"src":"777:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2593,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:17:18"},"src":"764:30:18"},{"anonymous":false,"documentation":{"id":2597,"nodeType":"StructuredDocumentation","src":"800:70:18","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":2601,"name":"Unpaused","nameLocation":"881:8:18","nodeType":"EventDefinition","parameters":{"id":2600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2599,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"898:7:18","nodeType":"VariableDeclaration","scope":2601,"src":"890:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2598,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:17:18"},"src":"875:32:18"},{"documentation":{"id":2602,"nodeType":"StructuredDocumentation","src":"913:76:18","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":2604,"name":"EnforcedPause","nameLocation":"1000:13:18","nodeType":"ErrorDefinition","parameters":{"id":2603,"nodeType":"ParameterList","parameters":[],"src":"1013:2:18"},"src":"994:22:18"},{"documentation":{"id":2605,"nodeType":"StructuredDocumentation","src":"1022:80:18","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":2607,"name":"ExpectedPause","nameLocation":"1113:13:18","nodeType":"ErrorDefinition","parameters":{"id":2606,"nodeType":"ParameterList","parameters":[],"src":"1126:2:18"},"src":"1107:22:18"},{"body":{"id":2615,"nodeType":"Block","src":"1221:32:18","statements":[{"expression":{"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2611,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"1231:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1241:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1231:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2614,"nodeType":"ExpressionStatement","src":"1231:15:18"}]},"documentation":{"id":2608,"nodeType":"StructuredDocumentation","src":"1135:67:18","text":" @dev Initializes the contract in unpaused state."},"id":2616,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2609,"nodeType":"ParameterList","parameters":[],"src":"1218:2:18"},"returnParameters":{"id":2610,"nodeType":"ParameterList","parameters":[],"src":"1221:0:18"},"scope":2699,"src":"1207:46:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2623,"nodeType":"Block","src":"1464:47:18","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2619,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"1474:17:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1474:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2621,"nodeType":"ExpressionStatement","src":"1474:19:18"},{"id":2622,"nodeType":"PlaceholderStatement","src":"1503:1:18"}]},"documentation":{"id":2617,"nodeType":"StructuredDocumentation","src":"1259:175:18","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":2624,"name":"whenNotPaused","nameLocation":"1448:13:18","nodeType":"ModifierDefinition","parameters":{"id":2618,"nodeType":"ParameterList","parameters":[],"src":"1461:2:18"},"src":"1439:72:18","virtual":false,"visibility":"internal"},{"body":{"id":2631,"nodeType":"Block","src":"1711:44:18","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2627,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"1721:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1721:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2629,"nodeType":"ExpressionStatement","src":"1721:16:18"},{"id":2630,"nodeType":"PlaceholderStatement","src":"1747:1:18"}]},"documentation":{"id":2625,"nodeType":"StructuredDocumentation","src":"1517:167:18","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":2632,"name":"whenPaused","nameLocation":"1698:10:18","nodeType":"ModifierDefinition","parameters":{"id":2626,"nodeType":"ParameterList","parameters":[],"src":"1708:2:18"},"src":"1689:66:18","virtual":false,"visibility":"internal"},{"body":{"id":2640,"nodeType":"Block","src":"1903:31:18","statements":[{"expression":{"id":2638,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"1920:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2637,"id":2639,"nodeType":"Return","src":"1913:14:18"}]},"documentation":{"id":2633,"nodeType":"StructuredDocumentation","src":"1761:84:18","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":2641,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1859:6:18","nodeType":"FunctionDefinition","parameters":{"id":2634,"nodeType":"ParameterList","parameters":[],"src":"1865:2:18"},"returnParameters":{"id":2637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2641,"src":"1897:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2635,"name":"bool","nodeType":"ElementaryTypeName","src":"1897:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1896:6:18"},"scope":2699,"src":"1850:84:18","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2652,"nodeType":"Block","src":"2053:77:18","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":2645,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"2067:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2067:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2651,"nodeType":"IfStatement","src":"2063:61:18","trueBody":{"id":2650,"nodeType":"Block","src":"2077:47:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2647,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"2098:13:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2098:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2649,"nodeType":"RevertStatement","src":"2091:22:18"}]}}]},"documentation":{"id":2642,"nodeType":"StructuredDocumentation","src":"1940:57:18","text":" @dev Throws if the contract is paused."},"id":2653,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2011:17:18","nodeType":"FunctionDefinition","parameters":{"id":2643,"nodeType":"ParameterList","parameters":[],"src":"2028:2:18"},"returnParameters":{"id":2644,"nodeType":"ParameterList","parameters":[],"src":"2053:0:18"},"scope":2699,"src":"2002:128:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2665,"nodeType":"Block","src":"2250:78:18","statements":[{"condition":{"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2264:9:18","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2657,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"2265:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2265:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2664,"nodeType":"IfStatement","src":"2260:62:18","trueBody":{"id":2663,"nodeType":"Block","src":"2275:47:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2660,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2607,"src":"2296:13:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2662,"nodeType":"RevertStatement","src":"2289:22:18"}]}}]},"documentation":{"id":2654,"nodeType":"StructuredDocumentation","src":"2136:61:18","text":" @dev Throws if the contract is not paused."},"id":2666,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2211:14:18","nodeType":"FunctionDefinition","parameters":{"id":2655,"nodeType":"ParameterList","parameters":[],"src":"2225:2:18"},"returnParameters":{"id":2656,"nodeType":"ParameterList","parameters":[],"src":"2250:0:18"},"scope":2699,"src":"2202:126:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2681,"nodeType":"Block","src":"2512:66:18","statements":[{"expression":{"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2672,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"2522:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2532:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2522:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2675,"nodeType":"ExpressionStatement","src":"2522:14:18"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2677,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"2558:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2558:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2676,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"2551:6:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2551:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2680,"nodeType":"EmitStatement","src":"2546:25:18"}]},"documentation":{"id":2667,"nodeType":"StructuredDocumentation","src":"2334:124:18","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":2682,"implemented":true,"kind":"function","modifiers":[{"id":2670,"kind":"modifierInvocation","modifierName":{"id":2669,"name":"whenNotPaused","nameLocations":["2498:13:18"],"nodeType":"IdentifierPath","referencedDeclaration":2624,"src":"2498:13:18"},"nodeType":"ModifierInvocation","src":"2498:13:18"}],"name":"_pause","nameLocation":"2472:6:18","nodeType":"FunctionDefinition","parameters":{"id":2668,"nodeType":"ParameterList","parameters":[],"src":"2478:2:18"},"returnParameters":{"id":2671,"nodeType":"ParameterList","parameters":[],"src":"2512:0:18"},"scope":2699,"src":"2463:115:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2697,"nodeType":"Block","src":"2758:69:18","statements":[{"expression":{"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2688,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"2768:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2778:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2768:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2691,"nodeType":"ExpressionStatement","src":"2768:15:18"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2693,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"2807:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2807:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2692,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"2798:8:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2798:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2696,"nodeType":"EmitStatement","src":"2793:27:18"}]},"documentation":{"id":2683,"nodeType":"StructuredDocumentation","src":"2584:121:18","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":2698,"implemented":true,"kind":"function","modifiers":[{"id":2686,"kind":"modifierInvocation","modifierName":{"id":2685,"name":"whenPaused","nameLocations":["2747:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":2632,"src":"2747:10:18"},"nodeType":"ModifierInvocation","src":"2747:10:18"}],"name":"_unpause","nameLocation":"2719:8:18","nodeType":"FunctionDefinition","parameters":{"id":2684,"nodeType":"ParameterList","parameters":[],"src":"2727:2:18"},"returnParameters":{"id":2687,"nodeType":"ParameterList","parameters":[],"src":"2758:0:18"},"scope":2699,"src":"2710:117:18","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2700,"src":"615:2214:18","usedErrors":[2604,2607],"usedEvents":[2596,2601]}],"src":"102:2728:18"},"id":18},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5009],"SignedMath":[6918],"Strings":[3019]},"id":3020,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2701,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2703,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3020,"sourceUnit":5010,"src":"127:37:19","symbolAliases":[{"foreign":{"id":2702,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"135:4:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2705,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3020,"sourceUnit":6919,"src":"165:49:19","symbolAliases":[{"foreign":{"id":2704,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6918,"src":"173:10:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2706,"nodeType":"StructuredDocumentation","src":"216:34:19","text":" @dev String operations."},"fullyImplemented":true,"id":3019,"linearizedBaseContracts":[3019],"name":"Strings","nameLocation":"259:7:19","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2709,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:19","nodeType":"VariableDeclaration","scope":3019,"src":"273:56:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2707,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:19","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2712,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:19","nodeType":"VariableDeclaration","scope":3019,"src":"335:42:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2710,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:19","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":2713,"nodeType":"StructuredDocumentation","src":"384:81:19","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2719,"name":"StringsInsufficientHexLength","nameLocation":"476:28:19","nodeType":"ErrorDefinition","parameters":{"id":2718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2715,"mutability":"mutable","name":"value","nameLocation":"513:5:19","nodeType":"VariableDeclaration","scope":2719,"src":"505:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2714,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2717,"mutability":"mutable","name":"length","nameLocation":"528:6:19","nodeType":"VariableDeclaration","scope":2719,"src":"520:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2716,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:19"},"src":"470:66:19"},{"body":{"id":2766,"nodeType":"Block","src":"708:561:19","statements":[{"id":2765,"nodeType":"UncheckedBlock","src":"718:545:19","statements":[{"assignments":[2728],"declarations":[{"constant":false,"id":2728,"mutability":"mutable","name":"length","nameLocation":"750:6:19","nodeType":"VariableDeclaration","scope":2765,"src":"742:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2727,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2735,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"770:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2729,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"759:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5009_$","typeString":"type(library Math)"}},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:19","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4781,"src":"759:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:19"},{"assignments":[2737],"declarations":[{"constant":false,"id":2737,"mutability":"mutable","name":"buffer","nameLocation":"808:6:19","nodeType":"VariableDeclaration","scope":2765,"src":"794:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2736,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2742,"initialValue":{"arguments":[{"id":2740,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"828:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2738,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:19"},{"assignments":[2744],"declarations":[{"constant":false,"id":2744,"mutability":"mutable","name":"ptr","nameLocation":"857:3:19","nodeType":"VariableDeclaration","scope":2765,"src":"849:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2743,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2745,"nodeType":"VariableDeclarationStatement","src":"849:11:19"},{"AST":{"nativeSrc":"899:67:19","nodeType":"YulBlock","src":"899:67:19","statements":[{"nativeSrc":"917:35:19","nodeType":"YulAssignment","src":"917:35:19","value":{"arguments":[{"name":"buffer","nativeSrc":"928:6:19","nodeType":"YulIdentifier","src":"928:6:19"},{"arguments":[{"kind":"number","nativeSrc":"940:2:19","nodeType":"YulLiteral","src":"940:2:19","type":"","value":"32"},{"name":"length","nativeSrc":"944:6:19","nodeType":"YulIdentifier","src":"944:6:19"}],"functionName":{"name":"add","nativeSrc":"936:3:19","nodeType":"YulIdentifier","src":"936:3:19"},"nativeSrc":"936:15:19","nodeType":"YulFunctionCall","src":"936:15:19"}],"functionName":{"name":"add","nativeSrc":"924:3:19","nodeType":"YulIdentifier","src":"924:3:19"},"nativeSrc":"924:28:19","nodeType":"YulFunctionCall","src":"924:28:19"},"variableNames":[{"name":"ptr","nativeSrc":"917:3:19","nodeType":"YulIdentifier","src":"917:3:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2737,"isOffset":false,"isSlot":false,"src":"928:6:19","valueSize":1},{"declaration":2728,"isOffset":false,"isSlot":false,"src":"944:6:19","valueSize":1},{"declaration":2744,"isOffset":false,"isSlot":false,"src":"917:3:19","valueSize":1}],"flags":["memory-safe"],"id":2746,"nodeType":"InlineAssembly","src":"874:92:19"},{"body":{"id":2761,"nodeType":"Block","src":"992:234:19","statements":[{"expression":{"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1010:5:19","subExpression":{"id":2748,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"1010:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2750,"nodeType":"ExpressionStatement","src":"1010:5:19"},{"AST":{"nativeSrc":"1058:86:19","nodeType":"YulBlock","src":"1058:86:19","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1088:3:19","nodeType":"YulIdentifier","src":"1088:3:19"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1102:5:19","nodeType":"YulIdentifier","src":"1102:5:19"},{"kind":"number","nativeSrc":"1109:2:19","nodeType":"YulLiteral","src":"1109:2:19","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1098:3:19","nodeType":"YulIdentifier","src":"1098:3:19"},"nativeSrc":"1098:14:19","nodeType":"YulFunctionCall","src":"1098:14:19"},{"name":"HEX_DIGITS","nativeSrc":"1114:10:19","nodeType":"YulIdentifier","src":"1114:10:19"}],"functionName":{"name":"byte","nativeSrc":"1093:4:19","nodeType":"YulIdentifier","src":"1093:4:19"},"nativeSrc":"1093:32:19","nodeType":"YulFunctionCall","src":"1093:32:19"}],"functionName":{"name":"mstore8","nativeSrc":"1080:7:19","nodeType":"YulIdentifier","src":"1080:7:19"},"nativeSrc":"1080:46:19","nodeType":"YulFunctionCall","src":"1080:46:19"},"nativeSrc":"1080:46:19","nodeType":"YulExpressionStatement","src":"1080:46:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":2709,"isOffset":false,"isSlot":false,"src":"1114:10:19","valueSize":1},{"declaration":2744,"isOffset":false,"isSlot":false,"src":"1088:3:19","valueSize":1},{"declaration":2722,"isOffset":false,"isSlot":false,"src":"1102:5:19","valueSize":1}],"flags":["memory-safe"],"id":2751,"nodeType":"InlineAssembly","src":"1033:111:19"},{"expression":{"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"1161:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1170:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1161:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2755,"nodeType":"ExpressionStatement","src":"1161:11:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"1194:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1203:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1194:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2760,"nodeType":"IfStatement","src":"1190:21:19","trueBody":{"id":2759,"nodeType":"Break","src":"1206:5:19"}}]},"condition":{"hexValue":"74727565","id":2747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"986:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2762,"nodeType":"WhileStatement","src":"979:247:19"},{"expression":{"id":2763,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"1246:6:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2726,"id":2764,"nodeType":"Return","src":"1239:13:19"}]}]},"documentation":{"id":2720,"nodeType":"StructuredDocumentation","src":"542:90:19","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2767,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:19","nodeType":"FunctionDefinition","parameters":{"id":2723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2722,"mutability":"mutable","name":"value","nameLocation":"663:5:19","nodeType":"VariableDeclaration","scope":2767,"src":"655:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2721,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:19"},"returnParameters":{"id":2726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2767,"src":"693:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2724,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:19"},"scope":3019,"src":"637:632:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2792,"nodeType":"Block","src":"1445:92:19","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"1476:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1484:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1494:2:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1476:20:19","trueExpression":{"hexValue":"2d","id":2781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1488:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"1522:5:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2785,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6918,"src":"1507:10:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6918_$","typeString":"type(library SignedMath)"}},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1518:3:19","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6917,"src":"1507:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1507:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2784,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"1498:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1498:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1462:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2775,"name":"string","nodeType":"ElementaryTypeName","src":"1462:6:19","typeDescriptions":{}}},"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:6:19","memberName":"concat","nodeType":"MemberAccess","src":"1462:13:19","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1462:68:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2774,"id":2791,"nodeType":"Return","src":"1455:75:19"}]},"documentation":{"id":2768,"nodeType":"StructuredDocumentation","src":"1275:89:19","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2793,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1378:14:19","nodeType":"FunctionDefinition","parameters":{"id":2771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2770,"mutability":"mutable","name":"value","nameLocation":"1400:5:19","nodeType":"VariableDeclaration","scope":2793,"src":"1393:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2769,"name":"int256","nodeType":"ElementaryTypeName","src":"1393:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1392:14:19"},"returnParameters":{"id":2774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2793,"src":"1430:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2772,"name":"string","nodeType":"ElementaryTypeName","src":"1430:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1429:15:19"},"scope":3019,"src":"1369:168:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2812,"nodeType":"Block","src":"1716:100:19","statements":[{"id":2811,"nodeType":"UncheckedBlock","src":"1726:84:19","statements":[{"expression":{"arguments":[{"id":2802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"1769:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"1788:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2803,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"1776:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5009_$","typeString":"type(library Math)"}},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1781:6:19","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4952,"src":"1776:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1776:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1776:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2801,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2813,2896,2916],"referencedDeclaration":2896,"src":"1757:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2800,"id":2810,"nodeType":"Return","src":"1750:49:19"}]}]},"documentation":{"id":2794,"nodeType":"StructuredDocumentation","src":"1543:94:19","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2813,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1651:11:19","nodeType":"FunctionDefinition","parameters":{"id":2797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2796,"mutability":"mutable","name":"value","nameLocation":"1671:5:19","nodeType":"VariableDeclaration","scope":2813,"src":"1663:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2795,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1662:15:19"},"returnParameters":{"id":2800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2813,"src":"1701:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2798,"name":"string","nodeType":"ElementaryTypeName","src":"1701:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1700:15:19"},"scope":3019,"src":"1642:174:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2895,"nodeType":"Block","src":"2029:435:19","statements":[{"assignments":[2824],"declarations":[{"constant":false,"id":2824,"mutability":"mutable","name":"localValue","nameLocation":"2047:10:19","nodeType":"VariableDeclaration","scope":2895,"src":"2039:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2823,"name":"uint256","nodeType":"ElementaryTypeName","src":"2039:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2826,"initialValue":{"id":2825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"2060:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2039:26:19"},{"assignments":[2828],"declarations":[{"constant":false,"id":2828,"mutability":"mutable","name":"buffer","nameLocation":"2088:6:19","nodeType":"VariableDeclaration","scope":2895,"src":"2075:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2827,"name":"bytes","nodeType":"ElementaryTypeName","src":"2075:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2837,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2107:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2832,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"2111:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2107:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2120:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2107:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2097:9:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2829,"name":"bytes","nodeType":"ElementaryTypeName","src":"2101:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2097:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2075:47:19"},{"expression":{"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2838,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"2132:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2840,"indexExpression":{"hexValue":"30","id":2839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2139:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2132:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2144:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2132:15:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2843,"nodeType":"ExpressionStatement","src":"2132:15:19"},{"expression":{"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2844,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"2157:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2846,"indexExpression":{"hexValue":"31","id":2845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2164:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2157:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2169:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2157:15:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2849,"nodeType":"ExpressionStatement","src":"2157:15:19"},{"body":{"id":2878,"nodeType":"Block","src":"2227:95:19","statements":[{"expression":{"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2864,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"2241:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2866,"indexExpression":{"id":2865,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2851,"src":"2248:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2241:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2867,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"2253:10:19","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2871,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2868,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"2264:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2277:3:19","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2264:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2253:28:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2241:40:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2873,"nodeType":"ExpressionStatement","src":"2241:40:19"},{"expression":{"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2874,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"2295:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2310:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2295:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2877,"nodeType":"ExpressionStatement","src":"2295:16:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2858,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2851,"src":"2215:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2219:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2215:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2879,"initializationExpression":{"assignments":[2851],"declarations":[{"constant":false,"id":2851,"mutability":"mutable","name":"i","nameLocation":"2195:1:19","nodeType":"VariableDeclaration","scope":2879,"src":"2187:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2850,"name":"uint256","nodeType":"ElementaryTypeName","src":"2187:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2857,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2199:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2853,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"2203:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2199:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2212:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2199:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2187:26:19"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2222:3:19","subExpression":{"id":2861,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2851,"src":"2224:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2863,"nodeType":"ExpressionStatement","src":"2222:3:19"},"nodeType":"ForStatement","src":"2182:140:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2880,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"2335:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2335:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2889,"nodeType":"IfStatement","src":"2331:96:19","trueBody":{"id":2888,"nodeType":"Block","src":"2352:75:19","statements":[{"errorCall":{"arguments":[{"id":2884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"2402:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2885,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"2409:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2883,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2719,"src":"2373:28:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2373:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2887,"nodeType":"RevertStatement","src":"2366:50:19"}]}},{"expression":{"arguments":[{"id":2892,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"2450:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2443:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2890,"name":"string","nodeType":"ElementaryTypeName","src":"2443:6:19","typeDescriptions":{}}},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2443:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2822,"id":2894,"nodeType":"Return","src":"2436:21:19"}]},"documentation":{"id":2814,"nodeType":"StructuredDocumentation","src":"1822:112:19","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2896,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1948:11:19","nodeType":"FunctionDefinition","parameters":{"id":2819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2816,"mutability":"mutable","name":"value","nameLocation":"1968:5:19","nodeType":"VariableDeclaration","scope":2896,"src":"1960:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2815,"name":"uint256","nodeType":"ElementaryTypeName","src":"1960:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2818,"mutability":"mutable","name":"length","nameLocation":"1983:6:19","nodeType":"VariableDeclaration","scope":2896,"src":"1975:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2817,"name":"uint256","nodeType":"ElementaryTypeName","src":"1975:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1959:31:19"},"returnParameters":{"id":2822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2896,"src":"2014:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2820,"name":"string","nodeType":"ElementaryTypeName","src":"2014:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2013:15:19"},"scope":3019,"src":"1939:525:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2915,"nodeType":"Block","src":"2696:75:19","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2909,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"2741:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2733:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2907,"name":"uint160","nodeType":"ElementaryTypeName","src":"2733:7:19","typeDescriptions":{}}},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2733:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2725:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2905,"name":"uint256","nodeType":"ElementaryTypeName","src":"2725:7:19","typeDescriptions":{}}},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2912,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"2749:14:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2904,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2813,2896,2916],"referencedDeclaration":2896,"src":"2713:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2903,"id":2914,"nodeType":"Return","src":"2706:58:19"}]},"documentation":{"id":2897,"nodeType":"StructuredDocumentation","src":"2470:148:19","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2916,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2632:11:19","nodeType":"FunctionDefinition","parameters":{"id":2900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2899,"mutability":"mutable","name":"addr","nameLocation":"2652:4:19","nodeType":"VariableDeclaration","scope":2916,"src":"2644:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2898,"name":"address","nodeType":"ElementaryTypeName","src":"2644:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2643:14:19"},"returnParameters":{"id":2903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2916,"src":"2681:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2901,"name":"string","nodeType":"ElementaryTypeName","src":"2681:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2680:15:19"},"scope":3019,"src":"2623:148:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2980,"nodeType":"Block","src":"3028:642:19","statements":[{"assignments":[2925],"declarations":[{"constant":false,"id":2925,"mutability":"mutable","name":"buffer","nameLocation":"3051:6:19","nodeType":"VariableDeclaration","scope":2980,"src":"3038:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2924,"name":"bytes","nodeType":"ElementaryTypeName","src":"3038:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2932,"initialValue":{"arguments":[{"arguments":[{"id":2929,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"3078:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2928,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2813,2896,2916],"referencedDeclaration":2916,"src":"3066:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3066:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3060:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2926,"name":"bytes","nodeType":"ElementaryTypeName","src":"3060:5:19","typeDescriptions":{}}},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3060:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3038:46:19"},{"assignments":[2934],"declarations":[{"constant":false,"id":2934,"mutability":"mutable","name":"hashValue","nameLocation":"3177:9:19","nodeType":"VariableDeclaration","scope":2980,"src":"3169:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2933,"name":"uint256","nodeType":"ElementaryTypeName","src":"3169:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2935,"nodeType":"VariableDeclarationStatement","src":"3169:17:19"},{"AST":{"nativeSrc":"3221:78:19","nodeType":"YulBlock","src":"3221:78:19","statements":[{"nativeSrc":"3235:54:19","nodeType":"YulAssignment","src":"3235:54:19","value":{"arguments":[{"kind":"number","nativeSrc":"3252:2:19","nodeType":"YulLiteral","src":"3252:2:19","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3270:6:19","nodeType":"YulIdentifier","src":"3270:6:19"},{"kind":"number","nativeSrc":"3278:4:19","nodeType":"YulLiteral","src":"3278:4:19","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3266:3:19","nodeType":"YulIdentifier","src":"3266:3:19"},"nativeSrc":"3266:17:19","nodeType":"YulFunctionCall","src":"3266:17:19"},{"kind":"number","nativeSrc":"3285:2:19","nodeType":"YulLiteral","src":"3285:2:19","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3256:9:19","nodeType":"YulIdentifier","src":"3256:9:19"},"nativeSrc":"3256:32:19","nodeType":"YulFunctionCall","src":"3256:32:19"}],"functionName":{"name":"shr","nativeSrc":"3248:3:19","nodeType":"YulIdentifier","src":"3248:3:19"},"nativeSrc":"3248:41:19","nodeType":"YulFunctionCall","src":"3248:41:19"},"variableNames":[{"name":"hashValue","nativeSrc":"3235:9:19","nodeType":"YulIdentifier","src":"3235:9:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2925,"isOffset":false,"isSlot":false,"src":"3270:6:19","valueSize":1},{"declaration":2934,"isOffset":false,"isSlot":false,"src":"3235:9:19","valueSize":1}],"flags":["memory-safe"],"id":2936,"nodeType":"InlineAssembly","src":"3196:103:19"},{"body":{"id":2973,"nodeType":"Block","src":"3342:291:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2947,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"3448:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3460:3:19","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3448:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3466:1:19","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3448:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2954,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"3477:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2956,"indexExpression":{"id":2955,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"3484:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3477:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3471:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2952,"name":"uint8","nodeType":"ElementaryTypeName","src":"3471:5:19","typeDescriptions":{}}},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3471:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3490:2:19","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3471:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3448:44:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2968,"nodeType":"IfStatement","src":"3444:150:19","trueBody":{"id":2967,"nodeType":"Block","src":"3494:100:19","statements":[{"expression":{"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2961,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"3562:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2963,"indexExpression":{"id":2962,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"3569:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3562:9:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3575:4:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3562:17:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2966,"nodeType":"ExpressionStatement","src":"3562:17:19"}]}},{"expression":{"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2969,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"3607:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3621:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3607:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2972,"nodeType":"ExpressionStatement","src":"3607:15:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2941,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"3330:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3334:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3330:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2974,"initializationExpression":{"assignments":[2938],"declarations":[{"constant":false,"id":2938,"mutability":"mutable","name":"i","nameLocation":"3322:1:19","nodeType":"VariableDeclaration","scope":2974,"src":"3314:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2937,"name":"uint256","nodeType":"ElementaryTypeName","src":"3314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2940,"initialValue":{"hexValue":"3431","id":2939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3326:2:19","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3314:14:19"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3337:3:19","subExpression":{"id":2944,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"3339:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2946,"nodeType":"ExpressionStatement","src":"3337:3:19"},"nodeType":"ForStatement","src":"3309:324:19"},{"expression":{"arguments":[{"id":2977,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"3656:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3649:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2975,"name":"string","nodeType":"ElementaryTypeName","src":"3649:6:19","typeDescriptions":{}}},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3649:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2923,"id":2979,"nodeType":"Return","src":"3642:21:19"}]},"documentation":{"id":2917,"nodeType":"StructuredDocumentation","src":"2777:165:19","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2981,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"2956:19:19","nodeType":"FunctionDefinition","parameters":{"id":2920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2919,"mutability":"mutable","name":"addr","nameLocation":"2984:4:19","nodeType":"VariableDeclaration","scope":2981,"src":"2976:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2918,"name":"address","nodeType":"ElementaryTypeName","src":"2976:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2975:14:19"},"returnParameters":{"id":2923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2981,"src":"3013:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2921,"name":"string","nodeType":"ElementaryTypeName","src":"3013:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3012:15:19"},"scope":3019,"src":"2947:723:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3017,"nodeType":"Block","src":"3825:104:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2993,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"3848:1:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3842:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2991,"name":"bytes","nodeType":"ElementaryTypeName","src":"3842:5:19","typeDescriptions":{}}},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3842:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3851:6:19","memberName":"length","nodeType":"MemberAccess","src":"3842:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2998,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"3867:1:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3861:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2996,"name":"bytes","nodeType":"ElementaryTypeName","src":"3861:5:19","typeDescriptions":{}}},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:6:19","memberName":"length","nodeType":"MemberAccess","src":"3861:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3842:34:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3005,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"3896:1:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3890:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3003,"name":"bytes","nodeType":"ElementaryTypeName","src":"3890:5:19","typeDescriptions":{}}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3002,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3880:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3880:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3011,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"3919:1:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3913:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3009,"name":"bytes","nodeType":"ElementaryTypeName","src":"3913:5:19","typeDescriptions":{}}},"id":3012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3913:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3008,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3903:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3880:42:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3842:80:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2990,"id":3016,"nodeType":"Return","src":"3835:87:19"}]},"documentation":{"id":2982,"nodeType":"StructuredDocumentation","src":"3676:66:19","text":" @dev Returns true if the two strings are equal."},"id":3018,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"3756:5:19","nodeType":"FunctionDefinition","parameters":{"id":2987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2984,"mutability":"mutable","name":"a","nameLocation":"3776:1:19","nodeType":"VariableDeclaration","scope":3018,"src":"3762:15:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2983,"name":"string","nodeType":"ElementaryTypeName","src":"3762:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2986,"mutability":"mutable","name":"b","nameLocation":"3793:1:19","nodeType":"VariableDeclaration","scope":3018,"src":"3779:15:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2985,"name":"string","nodeType":"ElementaryTypeName","src":"3779:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3761:34:19"},"returnParameters":{"id":2990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3018,"src":"3819:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2988,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:19"},"scope":3019,"src":"3747:182:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3020,"src":"251:3680:19","usedErrors":[2719],"usedEvents":[]}],"src":"101:3831:19"},"id":19},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3367]},"id":3368,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3021,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3022,"nodeType":"StructuredDocumentation","src":"138:205:20","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3367,"linearizedBaseContracts":[3367],"name":"ECDSA","nameLocation":"352:5:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3027,"members":[{"id":3023,"name":"NoError","nameLocation":"392:7:20","nodeType":"EnumValue","src":"392:7:20"},{"id":3024,"name":"InvalidSignature","nameLocation":"409:16:20","nodeType":"EnumValue","src":"409:16:20"},{"id":3025,"name":"InvalidSignatureLength","nameLocation":"435:22:20","nodeType":"EnumValue","src":"435:22:20"},{"id":3026,"name":"InvalidSignatureS","nameLocation":"467:17:20","nodeType":"EnumValue","src":"467:17:20"}],"name":"RecoverError","nameLocation":"369:12:20","nodeType":"EnumDefinition","src":"364:126:20"},{"documentation":{"id":3028,"nodeType":"StructuredDocumentation","src":"496:63:20","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":3030,"name":"ECDSAInvalidSignature","nameLocation":"570:21:20","nodeType":"ErrorDefinition","parameters":{"id":3029,"nodeType":"ParameterList","parameters":[],"src":"591:2:20"},"src":"564:30:20"},{"documentation":{"id":3031,"nodeType":"StructuredDocumentation","src":"600:60:20","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":3035,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:20","nodeType":"ErrorDefinition","parameters":{"id":3034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3033,"mutability":"mutable","name":"length","nameLocation":"707:6:20","nodeType":"VariableDeclaration","scope":3035,"src":"699:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3032,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:20"},"src":"665:50:20"},{"documentation":{"id":3036,"nodeType":"StructuredDocumentation","src":"721:85:20","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":3040,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:20","nodeType":"ErrorDefinition","parameters":{"id":3039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3038,"mutability":"mutable","name":"s","nameLocation":"848:1:20","nodeType":"VariableDeclaration","scope":3040,"src":"840:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3037,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:20"},"src":"811:40:20"},{"body":{"id":3092,"nodeType":"Block","src":"2285:622:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3055,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"2299:9:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:20","memberName":"length","nodeType":"MemberAccess","src":"2299:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:20","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3090,"nodeType":"Block","src":"2793:108:20","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3077,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:20","typeDescriptions":{}}},"id":3080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3081,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"2827:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3027_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:20","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3025,"src":"2827:35:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":3085,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"2872:9:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:20","memberName":"length","nodeType":"MemberAccess","src":"2872:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3083,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:20","typeDescriptions":{}}},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3088,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3027_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3054,"id":3089,"nodeType":"Return","src":"2807:83:20"}]},"id":3091,"nodeType":"IfStatement","src":"2295:606:20","trueBody":{"id":3076,"nodeType":"Block","src":"2323:464:20","statements":[{"assignments":[3060],"declarations":[{"constant":false,"id":3060,"mutability":"mutable","name":"r","nameLocation":"2345:1:20","nodeType":"VariableDeclaration","scope":3076,"src":"2337:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3059,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3061,"nodeType":"VariableDeclarationStatement","src":"2337:9:20"},{"assignments":[3063],"declarations":[{"constant":false,"id":3063,"mutability":"mutable","name":"s","nameLocation":"2368:1:20","nodeType":"VariableDeclaration","scope":3076,"src":"2360:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3062,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3064,"nodeType":"VariableDeclarationStatement","src":"2360:9:20"},{"assignments":[3066],"declarations":[{"constant":false,"id":3066,"mutability":"mutable","name":"v","nameLocation":"2389:1:20","nodeType":"VariableDeclaration","scope":3076,"src":"2383:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3065,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3067,"nodeType":"VariableDeclarationStatement","src":"2383:7:20"},{"AST":{"nativeSrc":"2560:171:20","nodeType":"YulBlock","src":"2560:171:20","statements":[{"nativeSrc":"2578:32:20","nodeType":"YulAssignment","src":"2578:32:20","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:20","nodeType":"YulIdentifier","src":"2593:9:20"},{"kind":"number","nativeSrc":"2604:4:20","nodeType":"YulLiteral","src":"2604:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:20","nodeType":"YulIdentifier","src":"2589:3:20"},"nativeSrc":"2589:20:20","nodeType":"YulFunctionCall","src":"2589:20:20"}],"functionName":{"name":"mload","nativeSrc":"2583:5:20","nodeType":"YulIdentifier","src":"2583:5:20"},"nativeSrc":"2583:27:20","nodeType":"YulFunctionCall","src":"2583:27:20"},"variableNames":[{"name":"r","nativeSrc":"2578:1:20","nodeType":"YulIdentifier","src":"2578:1:20"}]},{"nativeSrc":"2627:32:20","nodeType":"YulAssignment","src":"2627:32:20","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:20","nodeType":"YulIdentifier","src":"2642:9:20"},{"kind":"number","nativeSrc":"2653:4:20","nodeType":"YulLiteral","src":"2653:4:20","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:20","nodeType":"YulIdentifier","src":"2638:3:20"},"nativeSrc":"2638:20:20","nodeType":"YulFunctionCall","src":"2638:20:20"}],"functionName":{"name":"mload","nativeSrc":"2632:5:20","nodeType":"YulIdentifier","src":"2632:5:20"},"nativeSrc":"2632:27:20","nodeType":"YulFunctionCall","src":"2632:27:20"},"variableNames":[{"name":"s","nativeSrc":"2627:1:20","nodeType":"YulIdentifier","src":"2627:1:20"}]},{"nativeSrc":"2676:41:20","nodeType":"YulAssignment","src":"2676:41:20","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:20","nodeType":"YulLiteral","src":"2686:1:20","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:20","nodeType":"YulIdentifier","src":"2699:9:20"},{"kind":"number","nativeSrc":"2710:4:20","nodeType":"YulLiteral","src":"2710:4:20","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:20","nodeType":"YulIdentifier","src":"2695:3:20"},"nativeSrc":"2695:20:20","nodeType":"YulFunctionCall","src":"2695:20:20"}],"functionName":{"name":"mload","nativeSrc":"2689:5:20","nodeType":"YulIdentifier","src":"2689:5:20"},"nativeSrc":"2689:27:20","nodeType":"YulFunctionCall","src":"2689:27:20"}],"functionName":{"name":"byte","nativeSrc":"2681:4:20","nodeType":"YulIdentifier","src":"2681:4:20"},"nativeSrc":"2681:36:20","nodeType":"YulFunctionCall","src":"2681:36:20"},"variableNames":[{"name":"v","nativeSrc":"2676:1:20","nodeType":"YulIdentifier","src":"2676:1:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3060,"isOffset":false,"isSlot":false,"src":"2578:1:20","valueSize":1},{"declaration":3063,"isOffset":false,"isSlot":false,"src":"2627:1:20","valueSize":1},{"declaration":3045,"isOffset":false,"isSlot":false,"src":"2593:9:20","valueSize":1},{"declaration":3045,"isOffset":false,"isSlot":false,"src":"2642:9:20","valueSize":1},{"declaration":3045,"isOffset":false,"isSlot":false,"src":"2699:9:20","valueSize":1},{"declaration":3066,"isOffset":false,"isSlot":false,"src":"2676:1:20","valueSize":1}],"flags":["memory-safe"],"id":3068,"nodeType":"InlineAssembly","src":"2535:196:20"},{"expression":{"arguments":[{"id":3070,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3043,"src":"2762:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3071,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"2768:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3072,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"2771:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3073,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3063,"src":"2774:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3069,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3093,3173,3281],"referencedDeclaration":3281,"src":"2751:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3027_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3027_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3054,"id":3075,"nodeType":"Return","src":"2744:32:20"}]}}]},"documentation":{"id":3041,"nodeType":"StructuredDocumentation","src":"857:1267:20","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":3093,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:20","nodeType":"FunctionDefinition","parameters":{"id":3046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3043,"mutability":"mutable","name":"hash","nameLocation":"2166:4:20","nodeType":"VariableDeclaration","scope":3093,"src":"2158:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3042,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3045,"mutability":"mutable","name":"signature","nameLocation":"2193:9:20","nodeType":"VariableDeclaration","scope":3093,"src":"2180:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3044,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:20"},"returnParameters":{"id":3054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3048,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:20","nodeType":"VariableDeclaration","scope":3093,"src":"2232:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3047,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3051,"mutability":"mutable","name":"err","nameLocation":"2264:3:20","nodeType":"VariableDeclaration","scope":3093,"src":"2251:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3050,"nodeType":"UserDefinedTypeName","pathNode":{"id":3049,"name":"RecoverError","nameLocations":["2251:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":3027,"src":"2251:12:20"},"referencedDeclaration":3027,"src":"2251:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3053,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:20","nodeType":"VariableDeclaration","scope":3093,"src":"2269:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3052,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:20"},"scope":3367,"src":"2129:778:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3122,"nodeType":"Block","src":"3801:168:20","statements":[{"assignments":[3104,3107,3109],"declarations":[{"constant":false,"id":3104,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:20","nodeType":"VariableDeclaration","scope":3122,"src":"3812:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3103,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3107,"mutability":"mutable","name":"error","nameLocation":"3844:5:20","nodeType":"VariableDeclaration","scope":3122,"src":"3831:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3106,"nodeType":"UserDefinedTypeName","pathNode":{"id":3105,"name":"RecoverError","nameLocations":["3831:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":3027,"src":"3831:12:20"},"referencedDeclaration":3027,"src":"3831:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3109,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:20","nodeType":"VariableDeclaration","scope":3122,"src":"3851:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3108,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3114,"initialValue":{"arguments":[{"id":3111,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"3882:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3112,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"3888:9:20","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3110,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3093,3173,3281],"referencedDeclaration":3093,"src":"3871:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3027_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3027_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:20"},{"expression":{"arguments":[{"id":3116,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"3920:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"}},{"id":3117,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"3927:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3115,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"3908:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3027_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3119,"nodeType":"ExpressionStatement","src":"3908:28:20"},{"expression":{"id":3120,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"3953:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3102,"id":3121,"nodeType":"Return","src":"3946:16:20"}]},"documentation":{"id":3094,"nodeType":"StructuredDocumentation","src":"2913:796:20","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":3123,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:20","nodeType":"FunctionDefinition","parameters":{"id":3099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3096,"mutability":"mutable","name":"hash","nameLocation":"3739:4:20","nodeType":"VariableDeclaration","scope":3123,"src":"3731:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3095,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3098,"mutability":"mutable","name":"signature","nameLocation":"3758:9:20","nodeType":"VariableDeclaration","scope":3123,"src":"3745:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3097,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:20"},"returnParameters":{"id":3102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3123,"src":"3792:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3100,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:20"},"scope":3367,"src":"3714:255:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3172,"nodeType":"Block","src":"4348:342:20","statements":[{"id":3171,"nodeType":"UncheckedBlock","src":"4358:326:20","statements":[{"assignments":[3141],"declarations":[{"constant":false,"id":3141,"mutability":"mutable","name":"s","nameLocation":"4390:1:20","nodeType":"VariableDeclaration","scope":3171,"src":"4382:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3140,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3148,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3142,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"4394:2:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:20","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3143,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:20","typeDescriptions":{}}},"id":3146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:20"},{"assignments":[3150],"declarations":[{"constant":false,"id":3150,"mutability":"mutable","name":"v","nameLocation":"4591:1:20","nodeType":"VariableDeclaration","scope":3171,"src":"4585:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3149,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3163,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3155,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"4610:2:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3153,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:20","typeDescriptions":{}}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3159,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:20","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3151,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:20","typeDescriptions":{}}},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:20"},{"expression":{"arguments":[{"id":3165,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"4659:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3166,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3150,"src":"4665:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3167,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"4668:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3168,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"4671:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3164,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3093,3173,3281],"referencedDeclaration":3281,"src":"4648:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3027_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3027_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3139,"id":3170,"nodeType":"Return","src":"4641:32:20"}]}]},"documentation":{"id":3124,"nodeType":"StructuredDocumentation","src":"3975:205:20","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":3173,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:20","nodeType":"FunctionDefinition","parameters":{"id":3131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3126,"mutability":"mutable","name":"hash","nameLocation":"4222:4:20","nodeType":"VariableDeclaration","scope":3173,"src":"4214:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3125,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3128,"mutability":"mutable","name":"r","nameLocation":"4244:1:20","nodeType":"VariableDeclaration","scope":3173,"src":"4236:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3127,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3130,"mutability":"mutable","name":"vs","nameLocation":"4263:2:20","nodeType":"VariableDeclaration","scope":3173,"src":"4255:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3129,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:20"},"returnParameters":{"id":3139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3133,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:20","nodeType":"VariableDeclaration","scope":3173,"src":"4295:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3132,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3136,"mutability":"mutable","name":"err","nameLocation":"4327:3:20","nodeType":"VariableDeclaration","scope":3173,"src":"4314:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3135,"nodeType":"UserDefinedTypeName","pathNode":{"id":3134,"name":"RecoverError","nameLocations":["4314:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":3027,"src":"4314:12:20"},"referencedDeclaration":3027,"src":"4314:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3138,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:20","nodeType":"VariableDeclaration","scope":3173,"src":"4332:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:20"},"scope":3367,"src":"4185:505:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3205,"nodeType":"Block","src":"4903:164:20","statements":[{"assignments":[3186,3189,3191],"declarations":[{"constant":false,"id":3186,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:20","nodeType":"VariableDeclaration","scope":3205,"src":"4914:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3185,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3189,"mutability":"mutable","name":"error","nameLocation":"4946:5:20","nodeType":"VariableDeclaration","scope":3205,"src":"4933:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3188,"nodeType":"UserDefinedTypeName","pathNode":{"id":3187,"name":"RecoverError","nameLocations":["4933:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":3027,"src":"4933:12:20"},"referencedDeclaration":3027,"src":"4933:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3191,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:20","nodeType":"VariableDeclaration","scope":3205,"src":"4953:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3190,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3197,"initialValue":{"arguments":[{"id":3193,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3176,"src":"4984:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3194,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"4990:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3195,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3180,"src":"4993:2:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3192,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3093,3173,3281],"referencedDeclaration":3173,"src":"4973:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3027_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3027_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:20"},{"expression":{"arguments":[{"id":3199,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"5018:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"}},{"id":3200,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"5025:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3198,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"5006:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3027_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3202,"nodeType":"ExpressionStatement","src":"5006:28:20"},{"expression":{"id":3203,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"5051:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3184,"id":3204,"nodeType":"Return","src":"5044:16:20"}]},"documentation":{"id":3174,"nodeType":"StructuredDocumentation","src":"4696:116:20","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3206,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:20","nodeType":"FunctionDefinition","parameters":{"id":3181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3176,"mutability":"mutable","name":"hash","nameLocation":"4842:4:20","nodeType":"VariableDeclaration","scope":3206,"src":"4834:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3175,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3178,"mutability":"mutable","name":"r","nameLocation":"4856:1:20","nodeType":"VariableDeclaration","scope":3206,"src":"4848:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3177,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3180,"mutability":"mutable","name":"vs","nameLocation":"4867:2:20","nodeType":"VariableDeclaration","scope":3206,"src":"4859:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3179,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:20"},"returnParameters":{"id":3184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3206,"src":"4894:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3182,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:20"},"scope":3367,"src":"4817:250:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3280,"nodeType":"Block","src":"5382:1372:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3227,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"6278:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3225,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:20","typeDescriptions":{}}},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:20","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3241,"nodeType":"IfStatement","src":"6266:164:20","trueBody":{"id":3240,"nodeType":"Block","src":"6351:79:20","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3231,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:20","typeDescriptions":{}}},"id":3234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3235,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"6385:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3027_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:20","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3026,"src":"6385:30:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"}},{"id":3237,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"6417:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3238,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3027_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3224,"id":3239,"nodeType":"Return","src":"6365:54:20"}]}},{"assignments":[3243],"declarations":[{"constant":false,"id":3243,"mutability":"mutable","name":"signer","nameLocation":"6532:6:20","nodeType":"VariableDeclaration","scope":3280,"src":"6524:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3242,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3250,"initialValue":{"arguments":[{"id":3245,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"6551:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3246,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"6557:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3247,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"6560:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3248,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"6563:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3244,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:20","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:20"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3251,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"6579:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3252,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:20","typeDescriptions":{}}},"id":3255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3270,"nodeType":"IfStatement","src":"6575:113:20","trueBody":{"id":3269,"nodeType":"Block","src":"6601:87:20","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3257,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:20","typeDescriptions":{}}},"id":3260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3261,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"6635:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3027_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:20","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3024,"src":"6635:29:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3263,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:20","typeDescriptions":{}}},"id":3266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3267,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3027_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3224,"id":3268,"nodeType":"Return","src":"6615:62:20"}]}},{"expression":{"components":[{"id":3271,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"6706:6:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3272,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"6714:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3027_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:20","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3023,"src":"6714:20:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3274,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:20","typeDescriptions":{}}},"id":3277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3278,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3027_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3224,"id":3279,"nodeType":"Return","src":"6698:49:20"}]},"documentation":{"id":3207,"nodeType":"StructuredDocumentation","src":"5073:125:20","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3281,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:20","nodeType":"FunctionDefinition","parameters":{"id":3216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3209,"mutability":"mutable","name":"hash","nameLocation":"5240:4:20","nodeType":"VariableDeclaration","scope":3281,"src":"5232:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3208,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3211,"mutability":"mutable","name":"v","nameLocation":"5260:1:20","nodeType":"VariableDeclaration","scope":3281,"src":"5254:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3210,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3213,"mutability":"mutable","name":"r","nameLocation":"5279:1:20","nodeType":"VariableDeclaration","scope":3281,"src":"5271:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3212,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3215,"mutability":"mutable","name":"s","nameLocation":"5298:1:20","nodeType":"VariableDeclaration","scope":3281,"src":"5290:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3214,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:20"},"returnParameters":{"id":3224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3218,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:20","nodeType":"VariableDeclaration","scope":3281,"src":"5329:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3217,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3221,"mutability":"mutable","name":"err","nameLocation":"5361:3:20","nodeType":"VariableDeclaration","scope":3281,"src":"5348:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3220,"nodeType":"UserDefinedTypeName","pathNode":{"id":3219,"name":"RecoverError","nameLocations":["5348:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":3027,"src":"5348:12:20"},"referencedDeclaration":3027,"src":"5348:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3223,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:20","nodeType":"VariableDeclaration","scope":3281,"src":"5366:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3222,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:20"},"scope":3367,"src":"5203:1551:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3316,"nodeType":"Block","src":"6981:166:20","statements":[{"assignments":[3296,3299,3301],"declarations":[{"constant":false,"id":3296,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:20","nodeType":"VariableDeclaration","scope":3316,"src":"6992:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3295,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3299,"mutability":"mutable","name":"error","nameLocation":"7024:5:20","nodeType":"VariableDeclaration","scope":3316,"src":"7011:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3298,"nodeType":"UserDefinedTypeName","pathNode":{"id":3297,"name":"RecoverError","nameLocations":["7011:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":3027,"src":"7011:12:20"},"referencedDeclaration":3027,"src":"7011:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3301,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:20","nodeType":"VariableDeclaration","scope":3316,"src":"7031:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3300,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3308,"initialValue":{"arguments":[{"id":3303,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"7062:4:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3304,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"7068:1:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3305,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"7071:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3306,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"7074:1:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3302,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3093,3173,3281],"referencedDeclaration":3281,"src":"7051:10:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3027_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3027_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:20"},{"expression":{"arguments":[{"id":3310,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"7098:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"}},{"id":3311,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"7105:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3309,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"7086:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3027_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3313,"nodeType":"ExpressionStatement","src":"7086:28:20"},{"expression":{"id":3314,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"7131:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3294,"id":3315,"nodeType":"Return","src":"7124:16:20"}]},"documentation":{"id":3282,"nodeType":"StructuredDocumentation","src":"6760:122:20","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3317,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:20","nodeType":"FunctionDefinition","parameters":{"id":3291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3284,"mutability":"mutable","name":"hash","nameLocation":"6912:4:20","nodeType":"VariableDeclaration","scope":3317,"src":"6904:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3283,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3286,"mutability":"mutable","name":"v","nameLocation":"6924:1:20","nodeType":"VariableDeclaration","scope":3317,"src":"6918:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3285,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3288,"mutability":"mutable","name":"r","nameLocation":"6935:1:20","nodeType":"VariableDeclaration","scope":3317,"src":"6927:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3287,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3290,"mutability":"mutable","name":"s","nameLocation":"6946:1:20","nodeType":"VariableDeclaration","scope":3317,"src":"6938:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3289,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:20"},"returnParameters":{"id":3294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3317,"src":"6972:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3292,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:20"},"scope":3367,"src":"6887:260:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3365,"nodeType":"Block","src":"7352:460:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3326,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"7366:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3327,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"7375:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3027_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:20","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3023,"src":"7375:20:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3332,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"7462:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3333,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"7471:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3027_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:20","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3024,"src":"7471:29:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3340,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"7567:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3341,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"7576:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3027_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:20","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3025,"src":"7576:35:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3352,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"7701:5:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3353,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"7710:12:20","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3027_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:20","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3026,"src":"7710:30:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3361,"nodeType":"IfStatement","src":"7697:109:20","trueBody":{"id":3360,"nodeType":"Block","src":"7742:64:20","statements":[{"errorCall":{"arguments":[{"id":3357,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3323,"src":"7786:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3356,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"7763:22:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3359,"nodeType":"RevertStatement","src":"7756:39:20"}]}},"id":3362,"nodeType":"IfStatement","src":"7563:243:20","trueBody":{"id":3351,"nodeType":"Block","src":"7613:78:20","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3347,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3323,"src":"7670:8:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3345,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:20","typeDescriptions":{}}},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3344,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"7634:27:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3350,"nodeType":"RevertStatement","src":"7627:53:20"}]}},"id":3363,"nodeType":"IfStatement","src":"7458:348:20","trueBody":{"id":3339,"nodeType":"Block","src":"7502:55:20","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3336,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"7523:21:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3338,"nodeType":"RevertStatement","src":"7516:30:20"}]}},"id":3364,"nodeType":"IfStatement","src":"7362:444:20","trueBody":{"id":3331,"nodeType":"Block","src":"7397:55:20","statements":[{"functionReturnParameters":3325,"id":3330,"nodeType":"Return","src":"7411:7:20"}]}}]},"documentation":{"id":3318,"nodeType":"StructuredDocumentation","src":"7153:122:20","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3366,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:20","nodeType":"FunctionDefinition","parameters":{"id":3324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3321,"mutability":"mutable","name":"error","nameLocation":"7314:5:20","nodeType":"VariableDeclaration","scope":3366,"src":"7301:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3320,"nodeType":"UserDefinedTypeName","pathNode":{"id":3319,"name":"RecoverError","nameLocations":["7301:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":3027,"src":"7301:12:20"},"referencedDeclaration":3027,"src":"7301:12:20","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3027","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3323,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:20","nodeType":"VariableDeclaration","scope":3366,"src":"7321:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:20"},"returnParameters":{"id":3325,"nodeType":"ParameterList","parameters":[],"src":"7352:0:20"},"scope":3367,"src":"7280:532:20","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3368,"src":"344:7470:20","usedErrors":[3030,3035,3040],"usedEvents":[]}],"src":"112:7703:20"},"id":20},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[3391],"IERC165":[3403]},"id":3392,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3369,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3371,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3392,"sourceUnit":3404,"src":"140:38:21","symbolAliases":[{"foreign":{"id":3370,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"148:7:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3373,"name":"IERC165","nameLocations":["688:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":3403,"src":"688:7:21"},"id":3374,"nodeType":"InheritanceSpecifier","src":"688:7:21"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3372,"nodeType":"StructuredDocumentation","src":"180:479:21","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":3391,"linearizedBaseContracts":[3391,3403],"name":"ERC165","nameLocation":"678:6:21","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3402],"body":{"id":3389,"nodeType":"Block","src":"845:64:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3382,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"862:11:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3384,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"882:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3403_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3403_$","typeString":"type(contract IERC165)"}],"id":3383,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3403","typeString":"type(contract IERC165)"}},"id":3386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:21","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3381,"id":3388,"nodeType":"Return","src":"855:47:21"}]},"documentation":{"id":3375,"nodeType":"StructuredDocumentation","src":"702:56:21","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3390,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:21","nodeType":"FunctionDefinition","parameters":{"id":3378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3377,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:21","nodeType":"VariableDeclaration","scope":3390,"src":"790:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3376,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:21","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:21"},"returnParameters":{"id":3381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3390,"src":"839:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3379,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:21"},"scope":3391,"src":"763:146:21","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3392,"src":"660:251:21","usedErrors":[],"usedEvents":[]}],"src":"114:798:21"},"id":21},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3403]},"id":3404,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3393,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3394,"nodeType":"StructuredDocumentation","src":"141:280:22","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3403,"linearizedBaseContracts":[3403],"name":"IERC165","nameLocation":"432:7:22","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3395,"nodeType":"StructuredDocumentation","src":"446:340:22","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3402,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:22","nodeType":"FunctionDefinition","parameters":{"id":3398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3397,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:22","nodeType":"VariableDeclaration","scope":3402,"src":"818:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3396,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:22"},"returnParameters":{"id":3401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3402,"src":"861:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3399,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:22"},"scope":3403,"src":"791:76:22","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3404,"src":"422:447:22","usedErrors":[],"usedEvents":[]}],"src":"115:755:22"},"id":22},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5009],"Panic":[2582],"SafeCast":[6774]},"id":5010,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3405,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:23"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3407,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5010,"sourceUnit":2583,"src":"129:35:23","symbolAliases":[{"foreign":{"id":3406,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"137:5:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3409,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5010,"sourceUnit":6775,"src":"165:40:23","symbolAliases":[{"foreign":{"id":3408,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"173:8:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3410,"nodeType":"StructuredDocumentation","src":"207:73:23","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5009,"linearizedBaseContracts":[5009],"name":"Math","nameLocation":"289:4:23","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3415,"members":[{"id":3411,"name":"Floor","nameLocation":"324:5:23","nodeType":"EnumValue","src":"324:5:23"},{"id":3412,"name":"Ceil","nameLocation":"367:4:23","nodeType":"EnumValue","src":"367:4:23"},{"id":3413,"name":"Trunc","nameLocation":"409:5:23","nodeType":"EnumValue","src":"409:5:23"},{"id":3414,"name":"Expand","nameLocation":"439:6:23","nodeType":"EnumValue","src":"439:6:23"}],"name":"Rounding","nameLocation":"305:8:23","nodeType":"EnumDefinition","src":"300:169:23"},{"body":{"id":3446,"nodeType":"Block","src":"677:140:23","statements":[{"id":3445,"nodeType":"UncheckedBlock","src":"687:124:23","statements":[{"assignments":[3428],"declarations":[{"constant":false,"id":3428,"mutability":"mutable","name":"c","nameLocation":"719:1:23","nodeType":"VariableDeclaration","scope":3445,"src":"711:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3427,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3432,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3429,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"723:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3430,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"727:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3433,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"746:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3434,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"750:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3440,"nodeType":"IfStatement","src":"742:28:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3438,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3426,"id":3439,"nodeType":"Return","src":"753:17:23"}},{"expression":{"components":[{"hexValue":"74727565","id":3441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3442,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"798:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3443,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3426,"id":3444,"nodeType":"Return","src":"784:16:23"}]}]},"documentation":{"id":3416,"nodeType":"StructuredDocumentation","src":"475:106:23","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":3447,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:23","nodeType":"FunctionDefinition","parameters":{"id":3421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3418,"mutability":"mutable","name":"a","nameLocation":"610:1:23","nodeType":"VariableDeclaration","scope":3447,"src":"602:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3417,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3420,"mutability":"mutable","name":"b","nameLocation":"621:1:23","nodeType":"VariableDeclaration","scope":3447,"src":"613:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3419,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:23"},"returnParameters":{"id":3426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3423,"mutability":"mutable","name":"success","nameLocation":"652:7:23","nodeType":"VariableDeclaration","scope":3447,"src":"647:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3422,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3425,"mutability":"mutable","name":"result","nameLocation":"669:6:23","nodeType":"VariableDeclaration","scope":3447,"src":"661:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3424,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:23"},"scope":5009,"src":"586:231:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3474,"nodeType":"Block","src":"1028:113:23","statements":[{"id":3473,"nodeType":"UncheckedBlock","src":"1038:97:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3459,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"1066:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3460,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"1070:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3466,"nodeType":"IfStatement","src":"1062:28:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3464,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3458,"id":3465,"nodeType":"Return","src":"1073:17:23"}},{"expression":{"components":[{"hexValue":"74727565","id":3467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3468,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"1118:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3469,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"1122:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3471,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3458,"id":3472,"nodeType":"Return","src":"1104:20:23"}]}]},"documentation":{"id":3448,"nodeType":"StructuredDocumentation","src":"823:109:23","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":3475,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:23","nodeType":"FunctionDefinition","parameters":{"id":3453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3450,"mutability":"mutable","name":"a","nameLocation":"961:1:23","nodeType":"VariableDeclaration","scope":3475,"src":"953:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3449,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3452,"mutability":"mutable","name":"b","nameLocation":"972:1:23","nodeType":"VariableDeclaration","scope":3475,"src":"964:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3451,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:23"},"returnParameters":{"id":3458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3455,"mutability":"mutable","name":"success","nameLocation":"1003:7:23","nodeType":"VariableDeclaration","scope":3475,"src":"998:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3454,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3457,"mutability":"mutable","name":"result","nameLocation":"1020:6:23","nodeType":"VariableDeclaration","scope":3475,"src":"1012:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3456,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:23"},"scope":5009,"src":"937:204:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3516,"nodeType":"Block","src":"1355:417:23","statements":[{"id":3515,"nodeType":"UncheckedBlock","src":"1365:401:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3487,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"1623:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3494,"nodeType":"IfStatement","src":"1619:28:23","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":3490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":3491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3492,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3486,"id":3493,"nodeType":"Return","src":"1631:16:23"}},{"assignments":[3496],"declarations":[{"constant":false,"id":3496,"mutability":"mutable","name":"c","nameLocation":"1669:1:23","nodeType":"VariableDeclaration","scope":3515,"src":"1661:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3495,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3500,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3497,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"1673:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3498,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"1677:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3501,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"1696:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3502,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"1700:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3504,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"1705:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3510,"nodeType":"IfStatement","src":"1692:33:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3508,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3486,"id":3509,"nodeType":"Return","src":"1708:17:23"}},{"expression":{"components":[{"hexValue":"74727565","id":3511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3512,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"1753:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3513,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3486,"id":3514,"nodeType":"Return","src":"1739:16:23"}]}]},"documentation":{"id":3476,"nodeType":"StructuredDocumentation","src":"1147:112:23","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":3517,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:23","nodeType":"FunctionDefinition","parameters":{"id":3481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3478,"mutability":"mutable","name":"a","nameLocation":"1288:1:23","nodeType":"VariableDeclaration","scope":3517,"src":"1280:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3477,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3480,"mutability":"mutable","name":"b","nameLocation":"1299:1:23","nodeType":"VariableDeclaration","scope":3517,"src":"1291:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3479,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:23"},"returnParameters":{"id":3486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3483,"mutability":"mutable","name":"success","nameLocation":"1330:7:23","nodeType":"VariableDeclaration","scope":3517,"src":"1325:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3482,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3485,"mutability":"mutable","name":"result","nameLocation":"1347:6:23","nodeType":"VariableDeclaration","scope":3517,"src":"1339:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3484,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:23"},"scope":5009,"src":"1264:508:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3544,"nodeType":"Block","src":"1987:114:23","statements":[{"id":3543,"nodeType":"UncheckedBlock","src":"1997:98:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3529,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"2025:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3536,"nodeType":"IfStatement","src":"2021:29:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3534,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3528,"id":3535,"nodeType":"Return","src":"2033:17:23"}},{"expression":{"components":[{"hexValue":"74727565","id":3537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3538,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"2078:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3539,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"2082:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3541,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3528,"id":3542,"nodeType":"Return","src":"2064:20:23"}]}]},"documentation":{"id":3518,"nodeType":"StructuredDocumentation","src":"1778:113:23","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3545,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:23","nodeType":"FunctionDefinition","parameters":{"id":3523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3520,"mutability":"mutable","name":"a","nameLocation":"1920:1:23","nodeType":"VariableDeclaration","scope":3545,"src":"1912:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3519,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3522,"mutability":"mutable","name":"b","nameLocation":"1931:1:23","nodeType":"VariableDeclaration","scope":3545,"src":"1923:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3521,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:23"},"returnParameters":{"id":3528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3525,"mutability":"mutable","name":"success","nameLocation":"1962:7:23","nodeType":"VariableDeclaration","scope":3545,"src":"1957:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3524,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3527,"mutability":"mutable","name":"result","nameLocation":"1979:6:23","nodeType":"VariableDeclaration","scope":3545,"src":"1971:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3526,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:23"},"scope":5009,"src":"1896:205:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3572,"nodeType":"Block","src":"2326:114:23","statements":[{"id":3571,"nodeType":"UncheckedBlock","src":"2336:98:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3557,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"2364:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3564,"nodeType":"IfStatement","src":"2360:29:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3562,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3556,"id":3563,"nodeType":"Return","src":"2372:17:23"}},{"expression":{"components":[{"hexValue":"74727565","id":3565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3566,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3548,"src":"2417:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3567,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"2421:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3569,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3556,"id":3570,"nodeType":"Return","src":"2403:20:23"}]}]},"documentation":{"id":3546,"nodeType":"StructuredDocumentation","src":"2107:123:23","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3573,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:23","nodeType":"FunctionDefinition","parameters":{"id":3551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3548,"mutability":"mutable","name":"a","nameLocation":"2259:1:23","nodeType":"VariableDeclaration","scope":3573,"src":"2251:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3547,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3550,"mutability":"mutable","name":"b","nameLocation":"2270:1:23","nodeType":"VariableDeclaration","scope":3573,"src":"2262:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3549,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:23"},"returnParameters":{"id":3556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3553,"mutability":"mutable","name":"success","nameLocation":"2301:7:23","nodeType":"VariableDeclaration","scope":3573,"src":"2296:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3552,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3555,"mutability":"mutable","name":"result","nameLocation":"2318:6:23","nodeType":"VariableDeclaration","scope":3573,"src":"2310:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3554,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:23"},"scope":5009,"src":"2235:205:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3599,"nodeType":"Block","src":"2912:207:23","statements":[{"id":3598,"nodeType":"UncheckedBlock","src":"2922:191:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3585,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"3060:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3586,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"3066:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3587,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"3070:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3589,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3592,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3576,"src":"3091:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3590,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"3075:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6774_$","typeString":"type(library SafeCast)"}},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6773,"src":"3075:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3595,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3584,"id":3597,"nodeType":"Return","src":"3053:49:23"}]}]},"documentation":{"id":3574,"nodeType":"StructuredDocumentation","src":"2446:374:23","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3600,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:23","nodeType":"FunctionDefinition","parameters":{"id":3581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3576,"mutability":"mutable","name":"condition","nameLocation":"2847:9:23","nodeType":"VariableDeclaration","scope":3600,"src":"2842:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3575,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3578,"mutability":"mutable","name":"a","nameLocation":"2866:1:23","nodeType":"VariableDeclaration","scope":3600,"src":"2858:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3577,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3580,"mutability":"mutable","name":"b","nameLocation":"2877:1:23","nodeType":"VariableDeclaration","scope":3600,"src":"2869:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3579,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:23"},"returnParameters":{"id":3584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3600,"src":"2903:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3582,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:23"},"scope":5009,"src":"2825:294:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3618,"nodeType":"Block","src":"3256:44:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3611,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"3281:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3612,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"3285:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3614,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3603,"src":"3288:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3615,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3605,"src":"3291:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3610,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"3273:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3609,"id":3617,"nodeType":"Return","src":"3266:27:23"}]},"documentation":{"id":3601,"nodeType":"StructuredDocumentation","src":"3125:59:23","text":" @dev Returns the largest of two numbers."},"id":3619,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:23","nodeType":"FunctionDefinition","parameters":{"id":3606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3603,"mutability":"mutable","name":"a","nameLocation":"3210:1:23","nodeType":"VariableDeclaration","scope":3619,"src":"3202:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3602,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3605,"mutability":"mutable","name":"b","nameLocation":"3221:1:23","nodeType":"VariableDeclaration","scope":3619,"src":"3213:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3604,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:23"},"returnParameters":{"id":3609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3608,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3619,"src":"3247:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3607,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:23"},"scope":5009,"src":"3189:111:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3637,"nodeType":"Block","src":"3438:44:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3630,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"3463:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3631,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"3467:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3633,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"3470:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3634,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"3473:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3629,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"3455:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3628,"id":3636,"nodeType":"Return","src":"3448:27:23"}]},"documentation":{"id":3620,"nodeType":"StructuredDocumentation","src":"3306:60:23","text":" @dev Returns the smallest of two numbers."},"id":3638,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:23","nodeType":"FunctionDefinition","parameters":{"id":3625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3622,"mutability":"mutable","name":"a","nameLocation":"3392:1:23","nodeType":"VariableDeclaration","scope":3638,"src":"3384:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3621,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3624,"mutability":"mutable","name":"b","nameLocation":"3403:1:23","nodeType":"VariableDeclaration","scope":3638,"src":"3395:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3623,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:23"},"returnParameters":{"id":3628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3638,"src":"3429:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3626,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:23"},"scope":5009,"src":"3371:111:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3660,"nodeType":"Block","src":"3666:82:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3648,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3641,"src":"3721:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3649,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3643,"src":"3725:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3651,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3652,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3641,"src":"3731:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3653,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3643,"src":"3735:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3655,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3647,"id":3659,"nodeType":"Return","src":"3713:28:23"}]},"documentation":{"id":3639,"nodeType":"StructuredDocumentation","src":"3488:102:23","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3661,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:23","nodeType":"FunctionDefinition","parameters":{"id":3644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3641,"mutability":"mutable","name":"a","nameLocation":"3620:1:23","nodeType":"VariableDeclaration","scope":3661,"src":"3612:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3640,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3643,"mutability":"mutable","name":"b","nameLocation":"3631:1:23","nodeType":"VariableDeclaration","scope":3661,"src":"3623:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3642,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:23"},"returnParameters":{"id":3647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3646,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3661,"src":"3657:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3645,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:23"},"scope":5009,"src":"3595:153:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3701,"nodeType":"Block","src":"4040:633:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3671,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"4054:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3682,"nodeType":"IfStatement","src":"4050:150:23","trueBody":{"id":3681,"nodeType":"Block","src":"4062:138:23","statements":[{"expression":{"arguments":[{"expression":{"id":3677,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"4166:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2582_$","typeString":"type(library Panic)"}},"id":3678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:23","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2549,"src":"4166:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3674,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"4154:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2582_$","typeString":"type(library Panic)"}},"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:23","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2581,"src":"4154:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3680,"nodeType":"ExpressionStatement","src":"4154:35:23"}]}},{"id":3700,"nodeType":"UncheckedBlock","src":"4583:84:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3685,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3664,"src":"4630:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3683,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"4614:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6774_$","typeString":"type(library SafeCast)"}},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6773,"src":"4614:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3689,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3664,"src":"4641:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3692,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3693,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"4650:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3697,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3670,"id":3699,"nodeType":"Return","src":"4607:49:23"}]}]},"documentation":{"id":3662,"nodeType":"StructuredDocumentation","src":"3754:210:23","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3702,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:23","nodeType":"FunctionDefinition","parameters":{"id":3667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3664,"mutability":"mutable","name":"a","nameLocation":"3994:1:23","nodeType":"VariableDeclaration","scope":3702,"src":"3986:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3663,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3666,"mutability":"mutable","name":"b","nameLocation":"4005:1:23","nodeType":"VariableDeclaration","scope":3702,"src":"3997:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3665,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:23"},"returnParameters":{"id":3670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3669,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3702,"src":"4031:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3668,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:23"},"scope":5009,"src":"3969:704:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3838,"nodeType":"Block","src":"5094:4128:23","statements":[{"id":3837,"nodeType":"UncheckedBlock","src":"5104:4112:23","statements":[{"assignments":[3715],"declarations":[{"constant":false,"id":3715,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:23","nodeType":"VariableDeclaration","scope":3837,"src":"5433:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3714,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3719,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3716,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3705,"src":"5449:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3717,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3707,"src":"5453:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:23"},{"assignments":[3721],"declarations":[{"constant":false,"id":3721,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:23","nodeType":"VariableDeclaration","scope":3837,"src":"5513:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3720,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3722,"nodeType":"VariableDeclarationStatement","src":"5513:13:23"},{"AST":{"nativeSrc":"5593:122:23","nodeType":"YulBlock","src":"5593:122:23","statements":[{"nativeSrc":"5611:30:23","nodeType":"YulVariableDeclaration","src":"5611:30:23","value":{"arguments":[{"name":"x","nativeSrc":"5628:1:23","nodeType":"YulIdentifier","src":"5628:1:23"},{"name":"y","nativeSrc":"5631:1:23","nodeType":"YulIdentifier","src":"5631:1:23"},{"arguments":[{"kind":"number","nativeSrc":"5638:1:23","nodeType":"YulLiteral","src":"5638:1:23","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5634:3:23","nodeType":"YulIdentifier","src":"5634:3:23"},"nativeSrc":"5634:6:23","nodeType":"YulFunctionCall","src":"5634:6:23"}],"functionName":{"name":"mulmod","nativeSrc":"5621:6:23","nodeType":"YulIdentifier","src":"5621:6:23"},"nativeSrc":"5621:20:23","nodeType":"YulFunctionCall","src":"5621:20:23"},"variables":[{"name":"mm","nativeSrc":"5615:2:23","nodeType":"YulTypedName","src":"5615:2:23","type":""}]},{"nativeSrc":"5658:43:23","nodeType":"YulAssignment","src":"5658:43:23","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"5675:2:23","nodeType":"YulIdentifier","src":"5675:2:23"},{"name":"prod0","nativeSrc":"5679:5:23","nodeType":"YulIdentifier","src":"5679:5:23"}],"functionName":{"name":"sub","nativeSrc":"5671:3:23","nodeType":"YulIdentifier","src":"5671:3:23"},"nativeSrc":"5671:14:23","nodeType":"YulFunctionCall","src":"5671:14:23"},{"arguments":[{"name":"mm","nativeSrc":"5690:2:23","nodeType":"YulIdentifier","src":"5690:2:23"},{"name":"prod0","nativeSrc":"5694:5:23","nodeType":"YulIdentifier","src":"5694:5:23"}],"functionName":{"name":"lt","nativeSrc":"5687:2:23","nodeType":"YulIdentifier","src":"5687:2:23"},"nativeSrc":"5687:13:23","nodeType":"YulFunctionCall","src":"5687:13:23"}],"functionName":{"name":"sub","nativeSrc":"5667:3:23","nodeType":"YulIdentifier","src":"5667:3:23"},"nativeSrc":"5667:34:23","nodeType":"YulFunctionCall","src":"5667:34:23"},"variableNames":[{"name":"prod1","nativeSrc":"5658:5:23","nodeType":"YulIdentifier","src":"5658:5:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3715,"isOffset":false,"isSlot":false,"src":"5679:5:23","valueSize":1},{"declaration":3715,"isOffset":false,"isSlot":false,"src":"5694:5:23","valueSize":1},{"declaration":3721,"isOffset":false,"isSlot":false,"src":"5658:5:23","valueSize":1},{"declaration":3705,"isOffset":false,"isSlot":false,"src":"5628:1:23","valueSize":1},{"declaration":3707,"isOffset":false,"isSlot":false,"src":"5631:1:23","valueSize":1}],"id":3723,"nodeType":"InlineAssembly","src":"5584:131:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3724,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"5796:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3732,"nodeType":"IfStatement","src":"5792:368:23","trueBody":{"id":3731,"nodeType":"Block","src":"5808:352:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3727,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"6126:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3728,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"6134:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3713,"id":3730,"nodeType":"Return","src":"6119:26:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3733,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"6270:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3734,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"6285:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3751,"nodeType":"IfStatement","src":"6266:143:23","trueBody":{"id":3750,"nodeType":"Block","src":"6292:117:23","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3740,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"6330:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3743,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"6348:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2582_$","typeString":"type(library Panic)"}},"id":3744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:23","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2549,"src":"6348:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3745,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"6372:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2582_$","typeString":"type(library Panic)"}},"id":3746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:23","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2545,"src":"6372:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3739,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"6322:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3736,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"6310:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2582_$","typeString":"type(library Panic)"}},"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:23","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2581,"src":"6310:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3749,"nodeType":"ExpressionStatement","src":"6310:84:23"}]}},{"assignments":[3753],"declarations":[{"constant":false,"id":3753,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:23","nodeType":"VariableDeclaration","scope":3837,"src":"6664:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3752,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3754,"nodeType":"VariableDeclarationStatement","src":"6664:17:23"},{"AST":{"nativeSrc":"6704:291:23","nodeType":"YulBlock","src":"6704:291:23","statements":[{"nativeSrc":"6773:38:23","nodeType":"YulAssignment","src":"6773:38:23","value":{"arguments":[{"name":"x","nativeSrc":"6793:1:23","nodeType":"YulIdentifier","src":"6793:1:23"},{"name":"y","nativeSrc":"6796:1:23","nodeType":"YulIdentifier","src":"6796:1:23"},{"name":"denominator","nativeSrc":"6799:11:23","nodeType":"YulIdentifier","src":"6799:11:23"}],"functionName":{"name":"mulmod","nativeSrc":"6786:6:23","nodeType":"YulIdentifier","src":"6786:6:23"},"nativeSrc":"6786:25:23","nodeType":"YulFunctionCall","src":"6786:25:23"},"variableNames":[{"name":"remainder","nativeSrc":"6773:9:23","nodeType":"YulIdentifier","src":"6773:9:23"}]},{"nativeSrc":"6893:41:23","nodeType":"YulAssignment","src":"6893:41:23","value":{"arguments":[{"name":"prod1","nativeSrc":"6906:5:23","nodeType":"YulIdentifier","src":"6906:5:23"},{"arguments":[{"name":"remainder","nativeSrc":"6916:9:23","nodeType":"YulIdentifier","src":"6916:9:23"},{"name":"prod0","nativeSrc":"6927:5:23","nodeType":"YulIdentifier","src":"6927:5:23"}],"functionName":{"name":"gt","nativeSrc":"6913:2:23","nodeType":"YulIdentifier","src":"6913:2:23"},"nativeSrc":"6913:20:23","nodeType":"YulFunctionCall","src":"6913:20:23"}],"functionName":{"name":"sub","nativeSrc":"6902:3:23","nodeType":"YulIdentifier","src":"6902:3:23"},"nativeSrc":"6902:32:23","nodeType":"YulFunctionCall","src":"6902:32:23"},"variableNames":[{"name":"prod1","nativeSrc":"6893:5:23","nodeType":"YulIdentifier","src":"6893:5:23"}]},{"nativeSrc":"6951:30:23","nodeType":"YulAssignment","src":"6951:30:23","value":{"arguments":[{"name":"prod0","nativeSrc":"6964:5:23","nodeType":"YulIdentifier","src":"6964:5:23"},{"name":"remainder","nativeSrc":"6971:9:23","nodeType":"YulIdentifier","src":"6971:9:23"}],"functionName":{"name":"sub","nativeSrc":"6960:3:23","nodeType":"YulIdentifier","src":"6960:3:23"},"nativeSrc":"6960:21:23","nodeType":"YulFunctionCall","src":"6960:21:23"},"variableNames":[{"name":"prod0","nativeSrc":"6951:5:23","nodeType":"YulIdentifier","src":"6951:5:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3709,"isOffset":false,"isSlot":false,"src":"6799:11:23","valueSize":1},{"declaration":3715,"isOffset":false,"isSlot":false,"src":"6927:5:23","valueSize":1},{"declaration":3715,"isOffset":false,"isSlot":false,"src":"6951:5:23","valueSize":1},{"declaration":3715,"isOffset":false,"isSlot":false,"src":"6964:5:23","valueSize":1},{"declaration":3721,"isOffset":false,"isSlot":false,"src":"6893:5:23","valueSize":1},{"declaration":3721,"isOffset":false,"isSlot":false,"src":"6906:5:23","valueSize":1},{"declaration":3753,"isOffset":false,"isSlot":false,"src":"6773:9:23","valueSize":1},{"declaration":3753,"isOffset":false,"isSlot":false,"src":"6916:9:23","valueSize":1},{"declaration":3753,"isOffset":false,"isSlot":false,"src":"6971:9:23","valueSize":1},{"declaration":3705,"isOffset":false,"isSlot":false,"src":"6793:1:23","valueSize":1},{"declaration":3707,"isOffset":false,"isSlot":false,"src":"6796:1:23","valueSize":1}],"id":3755,"nodeType":"InlineAssembly","src":"6695:300:23"},{"assignments":[3757],"declarations":[{"constant":false,"id":3757,"mutability":"mutable","name":"twos","nameLocation":"7207:4:23","nodeType":"VariableDeclaration","scope":3837,"src":"7199:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3756,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3764,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3758,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"7214:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3760,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"7233:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3762,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:23"},{"AST":{"nativeSrc":"7268:366:23","nodeType":"YulBlock","src":"7268:366:23","statements":[{"nativeSrc":"7333:37:23","nodeType":"YulAssignment","src":"7333:37:23","value":{"arguments":[{"name":"denominator","nativeSrc":"7352:11:23","nodeType":"YulIdentifier","src":"7352:11:23"},{"name":"twos","nativeSrc":"7365:4:23","nodeType":"YulIdentifier","src":"7365:4:23"}],"functionName":{"name":"div","nativeSrc":"7348:3:23","nodeType":"YulIdentifier","src":"7348:3:23"},"nativeSrc":"7348:22:23","nodeType":"YulFunctionCall","src":"7348:22:23"},"variableNames":[{"name":"denominator","nativeSrc":"7333:11:23","nodeType":"YulIdentifier","src":"7333:11:23"}]},{"nativeSrc":"7437:25:23","nodeType":"YulAssignment","src":"7437:25:23","value":{"arguments":[{"name":"prod0","nativeSrc":"7450:5:23","nodeType":"YulIdentifier","src":"7450:5:23"},{"name":"twos","nativeSrc":"7457:4:23","nodeType":"YulIdentifier","src":"7457:4:23"}],"functionName":{"name":"div","nativeSrc":"7446:3:23","nodeType":"YulIdentifier","src":"7446:3:23"},"nativeSrc":"7446:16:23","nodeType":"YulFunctionCall","src":"7446:16:23"},"variableNames":[{"name":"prod0","nativeSrc":"7437:5:23","nodeType":"YulIdentifier","src":"7437:5:23"}]},{"nativeSrc":"7581:39:23","nodeType":"YulAssignment","src":"7581:39:23","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7601:1:23","nodeType":"YulLiteral","src":"7601:1:23","type":"","value":"0"},{"name":"twos","nativeSrc":"7604:4:23","nodeType":"YulIdentifier","src":"7604:4:23"}],"functionName":{"name":"sub","nativeSrc":"7597:3:23","nodeType":"YulIdentifier","src":"7597:3:23"},"nativeSrc":"7597:12:23","nodeType":"YulFunctionCall","src":"7597:12:23"},{"name":"twos","nativeSrc":"7611:4:23","nodeType":"YulIdentifier","src":"7611:4:23"}],"functionName":{"name":"div","nativeSrc":"7593:3:23","nodeType":"YulIdentifier","src":"7593:3:23"},"nativeSrc":"7593:23:23","nodeType":"YulFunctionCall","src":"7593:23:23"},{"kind":"number","nativeSrc":"7618:1:23","nodeType":"YulLiteral","src":"7618:1:23","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7589:3:23","nodeType":"YulIdentifier","src":"7589:3:23"},"nativeSrc":"7589:31:23","nodeType":"YulFunctionCall","src":"7589:31:23"},"variableNames":[{"name":"twos","nativeSrc":"7581:4:23","nodeType":"YulIdentifier","src":"7581:4:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3709,"isOffset":false,"isSlot":false,"src":"7333:11:23","valueSize":1},{"declaration":3709,"isOffset":false,"isSlot":false,"src":"7352:11:23","valueSize":1},{"declaration":3715,"isOffset":false,"isSlot":false,"src":"7437:5:23","valueSize":1},{"declaration":3715,"isOffset":false,"isSlot":false,"src":"7450:5:23","valueSize":1},{"declaration":3757,"isOffset":false,"isSlot":false,"src":"7365:4:23","valueSize":1},{"declaration":3757,"isOffset":false,"isSlot":false,"src":"7457:4:23","valueSize":1},{"declaration":3757,"isOffset":false,"isSlot":false,"src":"7581:4:23","valueSize":1},{"declaration":3757,"isOffset":false,"isSlot":false,"src":"7604:4:23","valueSize":1},{"declaration":3757,"isOffset":false,"isSlot":false,"src":"7611:4:23","valueSize":1}],"id":3765,"nodeType":"InlineAssembly","src":"7259:375:23"},{"expression":{"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3766,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"7700:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3767,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"7709:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3768,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3757,"src":"7717:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3771,"nodeType":"ExpressionStatement","src":"7700:21:23"},{"assignments":[3773],"declarations":[{"constant":false,"id":3773,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:23","nodeType":"VariableDeclaration","scope":3837,"src":"8056:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3772,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3780,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3775,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"8079:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3777,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:23"},{"expression":{"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3781,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"8312:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3783,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"8327:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3784,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"8341:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3788,"nodeType":"ExpressionStatement","src":"8312:36:23"},{"expression":{"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3789,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"8382:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3791,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"8397:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3792,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"8411:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3796,"nodeType":"ExpressionStatement","src":"8382:36:23"},{"expression":{"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3797,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"8454:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3799,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"8469:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3800,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"8483:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3804,"nodeType":"ExpressionStatement","src":"8454:36:23"},{"expression":{"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3805,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"8525:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3807,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"8540:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3808,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"8554:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3812,"nodeType":"ExpressionStatement","src":"8525:36:23"},{"expression":{"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3813,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"8598:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3815,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"8613:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3816,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"8627:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3820,"nodeType":"ExpressionStatement","src":"8598:36:23"},{"expression":{"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3821,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"8672:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3823,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"8687:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3824,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"8701:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3828,"nodeType":"ExpressionStatement","src":"8672:36:23"},{"expression":{"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3829,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"9154:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3830,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"9163:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3831,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"9171:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3834,"nodeType":"ExpressionStatement","src":"9154:24:23"},{"expression":{"id":3835,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"9199:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3713,"id":3836,"nodeType":"Return","src":"9192:13:23"}]}]},"documentation":{"id":3703,"nodeType":"StructuredDocumentation","src":"4679:312:23","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3839,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:23","nodeType":"FunctionDefinition","parameters":{"id":3710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3705,"mutability":"mutable","name":"x","nameLocation":"5020:1:23","nodeType":"VariableDeclaration","scope":3839,"src":"5012:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3704,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3707,"mutability":"mutable","name":"y","nameLocation":"5031:1:23","nodeType":"VariableDeclaration","scope":3839,"src":"5023:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3706,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3709,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:23","nodeType":"VariableDeclaration","scope":3839,"src":"5034:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3708,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:23"},"returnParameters":{"id":3713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3712,"mutability":"mutable","name":"result","nameLocation":"5086:6:23","nodeType":"VariableDeclaration","scope":3839,"src":"5078:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3711,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:23"},"scope":5009,"src":"4996:4226:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3875,"nodeType":"Block","src":"9461:128:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3855,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"9485:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3856,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"9488:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3857,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"9491:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3854,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3839,3876],"referencedDeclaration":3839,"src":"9478:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3862,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"9539:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3415","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3415","typeString":"enum Math.Rounding"}],"id":3861,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"9522:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3415_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3865,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"9559:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3866,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"9562:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3867,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"9565:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3864,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:23","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3859,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"9506:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6774_$","typeString":"type(library SafeCast)"}},"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6773,"src":"9506:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3853,"id":3874,"nodeType":"Return","src":"9471:111:23"}]},"documentation":{"id":3840,"nodeType":"StructuredDocumentation","src":"9228:118:23","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3876,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:23","nodeType":"FunctionDefinition","parameters":{"id":3850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3842,"mutability":"mutable","name":"x","nameLocation":"9375:1:23","nodeType":"VariableDeclaration","scope":3876,"src":"9367:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3841,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3844,"mutability":"mutable","name":"y","nameLocation":"9386:1:23","nodeType":"VariableDeclaration","scope":3876,"src":"9378:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3843,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3846,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:23","nodeType":"VariableDeclaration","scope":3876,"src":"9389:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3845,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3849,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:23","nodeType":"VariableDeclaration","scope":3876,"src":"9410:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3415","typeString":"enum Math.Rounding"},"typeName":{"id":3848,"nodeType":"UserDefinedTypeName","pathNode":{"id":3847,"name":"Rounding","nameLocations":["9410:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":3415,"src":"9410:8:23"},"referencedDeclaration":3415,"src":"9410:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3415","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:23"},"returnParameters":{"id":3853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3876,"src":"9452:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3851,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:23"},"scope":5009,"src":"9351:238:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3972,"nodeType":"Block","src":"10223:1849:23","statements":[{"id":3971,"nodeType":"UncheckedBlock","src":"10233:1833:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3886,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3881,"src":"10261:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3891,"nodeType":"IfStatement","src":"10257:20:23","trueBody":{"expression":{"hexValue":"30","id":3889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3885,"id":3890,"nodeType":"Return","src":"10269:8:23"}},{"assignments":[3893],"declarations":[{"constant":false,"id":3893,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:23","nodeType":"VariableDeclaration","scope":3971,"src":"10748:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3892,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3897,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3894,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"10768:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3895,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3881,"src":"10772:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:23"},{"assignments":[3899],"declarations":[{"constant":false,"id":3899,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:23","nodeType":"VariableDeclaration","scope":3971,"src":"10787:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3898,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3901,"initialValue":{"id":3900,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3881,"src":"10801:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:23"},{"assignments":[3903],"declarations":[{"constant":false,"id":3903,"mutability":"mutable","name":"x","nameLocation":"10945:1:23","nodeType":"VariableDeclaration","scope":3971,"src":"10938:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3902,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3905,"initialValue":{"hexValue":"30","id":3904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:23"},{"assignments":[3907],"declarations":[{"constant":false,"id":3907,"mutability":"mutable","name":"y","nameLocation":"10971:1:23","nodeType":"VariableDeclaration","scope":3971,"src":"10964:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3906,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3909,"initialValue":{"hexValue":"31","id":3908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:23"},{"body":{"id":3946,"nodeType":"Block","src":"11014:882:23","statements":[{"assignments":[3914],"declarations":[{"constant":false,"id":3914,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:23","nodeType":"VariableDeclaration","scope":3946,"src":"11032:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3913,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3918,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3915,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"11051:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3916,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"11057:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:23"},{"expression":{"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3919,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"11086:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3920,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"11091:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3921,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3922,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"11191:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3923,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"11436:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3924,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"11442:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3925,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"11454:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3928,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:23","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3930,"nodeType":"ExpressionStatement","src":"11085:395:23"},{"expression":{"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3931,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"11500:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3932,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"11503:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3933,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3934,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"11585:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3935,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"11839:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3936,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"11843:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3939,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"11854:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3937,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:23","typeDescriptions":{}}},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3943,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:23","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3945,"nodeType":"ExpressionStatement","src":"11499:382:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3910,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"10998:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3947,"nodeType":"WhileStatement","src":"10991:905:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3948,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3899,"src":"11914:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":3949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3953,"nodeType":"IfStatement","src":"11910:22:23","trueBody":{"expression":{"hexValue":"30","id":3951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3885,"id":3952,"nodeType":"Return","src":"11924:8:23"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3955,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"11983:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3958,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3881,"src":"11990:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:23","subExpression":{"id":3961,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"12003:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3959,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:23","typeDescriptions":{}}},"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3967,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"12015:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3965,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:23","typeDescriptions":{}}},"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3954,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3600,"src":"11975:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3885,"id":3970,"nodeType":"Return","src":"11968:50:23"}]}]},"documentation":{"id":3877,"nodeType":"StructuredDocumentation","src":"9595:553:23","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":3973,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:23","nodeType":"FunctionDefinition","parameters":{"id":3882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3879,"mutability":"mutable","name":"a","nameLocation":"10177:1:23","nodeType":"VariableDeclaration","scope":3973,"src":"10169:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3878,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3881,"mutability":"mutable","name":"n","nameLocation":"10188:1:23","nodeType":"VariableDeclaration","scope":3973,"src":"10180:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3880,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:23"},"returnParameters":{"id":3885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3973,"src":"10214:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3883,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:23"},"scope":5009,"src":"10153:1919:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3993,"nodeType":"Block","src":"12672:82:23","statements":[{"id":3992,"nodeType":"UncheckedBlock","src":"12682:66:23","statements":[{"expression":{"arguments":[{"id":3985,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"12725:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3986,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"12728:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":3987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3989,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"12735:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3983,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"12713:4:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5009_$","typeString":"type(library Math)"}},"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:23","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4030,"src":"12713:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3982,"id":3991,"nodeType":"Return","src":"12706:31:23"}]}]},"documentation":{"id":3974,"nodeType":"StructuredDocumentation","src":"12078:514:23","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":3994,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:23","nodeType":"FunctionDefinition","parameters":{"id":3979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3976,"mutability":"mutable","name":"a","nameLocation":"12626:1:23","nodeType":"VariableDeclaration","scope":3994,"src":"12618:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3975,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3978,"mutability":"mutable","name":"p","nameLocation":"12637:1:23","nodeType":"VariableDeclaration","scope":3994,"src":"12629:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3977,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:23"},"returnParameters":{"id":3982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3994,"src":"12663:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3980,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:23"},"scope":5009,"src":"12597:157:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4029,"nodeType":"Block","src":"13524:174:23","statements":[{"assignments":[4007,4009],"declarations":[{"constant":false,"id":4007,"mutability":"mutable","name":"success","nameLocation":"13540:7:23","nodeType":"VariableDeclaration","scope":4029,"src":"13535:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4006,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4009,"mutability":"mutable","name":"result","nameLocation":"13557:6:23","nodeType":"VariableDeclaration","scope":4029,"src":"13549:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4008,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4015,"initialValue":{"arguments":[{"id":4011,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3997,"src":"13577:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4012,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"13580:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4013,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"13583:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4010,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4054,4136],"referencedDeclaration":4054,"src":"13567:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:23"},{"condition":{"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:23","subExpression":{"id":4016,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"13600:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4026,"nodeType":"IfStatement","src":"13595:74:23","trueBody":{"id":4025,"nodeType":"Block","src":"13609:60:23","statements":[{"expression":{"arguments":[{"expression":{"id":4021,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"13635:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2582_$","typeString":"type(library Panic)"}},"id":4022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:23","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2549,"src":"13635:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4018,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"13623:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2582_$","typeString":"type(library Panic)"}},"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:23","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2581,"src":"13623:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4024,"nodeType":"ExpressionStatement","src":"13623:35:23"}]}},{"expression":{"id":4027,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"13685:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4005,"id":4028,"nodeType":"Return","src":"13678:13:23"}]},"documentation":{"id":3995,"nodeType":"StructuredDocumentation","src":"12760:678:23","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4030,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:23","nodeType":"FunctionDefinition","parameters":{"id":4002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3997,"mutability":"mutable","name":"b","nameLocation":"13467:1:23","nodeType":"VariableDeclaration","scope":4030,"src":"13459:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3996,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3999,"mutability":"mutable","name":"e","nameLocation":"13478:1:23","nodeType":"VariableDeclaration","scope":4030,"src":"13470:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3998,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4001,"mutability":"mutable","name":"m","nameLocation":"13489:1:23","nodeType":"VariableDeclaration","scope":4030,"src":"13481:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4000,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:23"},"returnParameters":{"id":4005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4030,"src":"13515:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4003,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:23"},"scope":5009,"src":"13443:255:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4053,"nodeType":"Block","src":"14552:1493:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4044,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"14566:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4051,"nodeType":"IfStatement","src":"14562:29:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4049,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4043,"id":4050,"nodeType":"Return","src":"14574:17:23"}},{"AST":{"nativeSrc":"14626:1413:23","nodeType":"YulBlock","src":"14626:1413:23","statements":[{"nativeSrc":"14640:22:23","nodeType":"YulVariableDeclaration","src":"14640:22:23","value":{"arguments":[{"kind":"number","nativeSrc":"14657:4:23","nodeType":"YulLiteral","src":"14657:4:23","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"14651:5:23","nodeType":"YulIdentifier","src":"14651:5:23"},"nativeSrc":"14651:11:23","nodeType":"YulFunctionCall","src":"14651:11:23"},"variables":[{"name":"ptr","nativeSrc":"14644:3:23","nodeType":"YulTypedName","src":"14644:3:23","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"15570:3:23","nodeType":"YulIdentifier","src":"15570:3:23"},{"kind":"number","nativeSrc":"15575:4:23","nodeType":"YulLiteral","src":"15575:4:23","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15563:6:23","nodeType":"YulIdentifier","src":"15563:6:23"},"nativeSrc":"15563:17:23","nodeType":"YulFunctionCall","src":"15563:17:23"},"nativeSrc":"15563:17:23","nodeType":"YulExpressionStatement","src":"15563:17:23"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15604:3:23","nodeType":"YulIdentifier","src":"15604:3:23"},{"kind":"number","nativeSrc":"15609:4:23","nodeType":"YulLiteral","src":"15609:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15600:3:23","nodeType":"YulIdentifier","src":"15600:3:23"},"nativeSrc":"15600:14:23","nodeType":"YulFunctionCall","src":"15600:14:23"},{"kind":"number","nativeSrc":"15616:4:23","nodeType":"YulLiteral","src":"15616:4:23","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15593:6:23","nodeType":"YulIdentifier","src":"15593:6:23"},"nativeSrc":"15593:28:23","nodeType":"YulFunctionCall","src":"15593:28:23"},"nativeSrc":"15593:28:23","nodeType":"YulExpressionStatement","src":"15593:28:23"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15645:3:23","nodeType":"YulIdentifier","src":"15645:3:23"},{"kind":"number","nativeSrc":"15650:4:23","nodeType":"YulLiteral","src":"15650:4:23","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15641:3:23","nodeType":"YulIdentifier","src":"15641:3:23"},"nativeSrc":"15641:14:23","nodeType":"YulFunctionCall","src":"15641:14:23"},{"kind":"number","nativeSrc":"15657:4:23","nodeType":"YulLiteral","src":"15657:4:23","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15634:6:23","nodeType":"YulIdentifier","src":"15634:6:23"},"nativeSrc":"15634:28:23","nodeType":"YulFunctionCall","src":"15634:28:23"},"nativeSrc":"15634:28:23","nodeType":"YulExpressionStatement","src":"15634:28:23"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15686:3:23","nodeType":"YulIdentifier","src":"15686:3:23"},{"kind":"number","nativeSrc":"15691:4:23","nodeType":"YulLiteral","src":"15691:4:23","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"15682:3:23","nodeType":"YulIdentifier","src":"15682:3:23"},"nativeSrc":"15682:14:23","nodeType":"YulFunctionCall","src":"15682:14:23"},{"name":"b","nativeSrc":"15698:1:23","nodeType":"YulIdentifier","src":"15698:1:23"}],"functionName":{"name":"mstore","nativeSrc":"15675:6:23","nodeType":"YulIdentifier","src":"15675:6:23"},"nativeSrc":"15675:25:23","nodeType":"YulFunctionCall","src":"15675:25:23"},"nativeSrc":"15675:25:23","nodeType":"YulExpressionStatement","src":"15675:25:23"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15724:3:23","nodeType":"YulIdentifier","src":"15724:3:23"},{"kind":"number","nativeSrc":"15729:4:23","nodeType":"YulLiteral","src":"15729:4:23","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"15720:3:23","nodeType":"YulIdentifier","src":"15720:3:23"},"nativeSrc":"15720:14:23","nodeType":"YulFunctionCall","src":"15720:14:23"},{"name":"e","nativeSrc":"15736:1:23","nodeType":"YulIdentifier","src":"15736:1:23"}],"functionName":{"name":"mstore","nativeSrc":"15713:6:23","nodeType":"YulIdentifier","src":"15713:6:23"},"nativeSrc":"15713:25:23","nodeType":"YulFunctionCall","src":"15713:25:23"},"nativeSrc":"15713:25:23","nodeType":"YulExpressionStatement","src":"15713:25:23"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15762:3:23","nodeType":"YulIdentifier","src":"15762:3:23"},{"kind":"number","nativeSrc":"15767:4:23","nodeType":"YulLiteral","src":"15767:4:23","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"15758:3:23","nodeType":"YulIdentifier","src":"15758:3:23"},"nativeSrc":"15758:14:23","nodeType":"YulFunctionCall","src":"15758:14:23"},{"name":"m","nativeSrc":"15774:1:23","nodeType":"YulIdentifier","src":"15774:1:23"}],"functionName":{"name":"mstore","nativeSrc":"15751:6:23","nodeType":"YulIdentifier","src":"15751:6:23"},"nativeSrc":"15751:25:23","nodeType":"YulFunctionCall","src":"15751:25:23"},"nativeSrc":"15751:25:23","nodeType":"YulExpressionStatement","src":"15751:25:23"},{"nativeSrc":"15938:57:23","nodeType":"YulAssignment","src":"15938:57:23","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"15960:3:23","nodeType":"YulIdentifier","src":"15960:3:23"},"nativeSrc":"15960:5:23","nodeType":"YulFunctionCall","src":"15960:5:23"},{"kind":"number","nativeSrc":"15967:4:23","nodeType":"YulLiteral","src":"15967:4:23","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"15973:3:23","nodeType":"YulIdentifier","src":"15973:3:23"},{"kind":"number","nativeSrc":"15978:4:23","nodeType":"YulLiteral","src":"15978:4:23","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"15984:4:23","nodeType":"YulLiteral","src":"15984:4:23","type":"","value":"0x00"},{"kind":"number","nativeSrc":"15990:4:23","nodeType":"YulLiteral","src":"15990:4:23","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"15949:10:23","nodeType":"YulIdentifier","src":"15949:10:23"},"nativeSrc":"15949:46:23","nodeType":"YulFunctionCall","src":"15949:46:23"},"variableNames":[{"name":"success","nativeSrc":"15938:7:23","nodeType":"YulIdentifier","src":"15938:7:23"}]},{"nativeSrc":"16008:21:23","nodeType":"YulAssignment","src":"16008:21:23","value":{"arguments":[{"kind":"number","nativeSrc":"16024:4:23","nodeType":"YulLiteral","src":"16024:4:23","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"16018:5:23","nodeType":"YulIdentifier","src":"16018:5:23"},"nativeSrc":"16018:11:23","nodeType":"YulFunctionCall","src":"16018:11:23"},"variableNames":[{"name":"result","nativeSrc":"16008:6:23","nodeType":"YulIdentifier","src":"16008:6:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4033,"isOffset":false,"isSlot":false,"src":"15698:1:23","valueSize":1},{"declaration":4035,"isOffset":false,"isSlot":false,"src":"15736:1:23","valueSize":1},{"declaration":4037,"isOffset":false,"isSlot":false,"src":"15774:1:23","valueSize":1},{"declaration":4042,"isOffset":false,"isSlot":false,"src":"16008:6:23","valueSize":1},{"declaration":4040,"isOffset":false,"isSlot":false,"src":"15938:7:23","valueSize":1}],"flags":["memory-safe"],"id":4052,"nodeType":"InlineAssembly","src":"14601:1438:23"}]},"documentation":{"id":4031,"nodeType":"StructuredDocumentation","src":"13704:738:23","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4054,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:23","nodeType":"FunctionDefinition","parameters":{"id":4038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4033,"mutability":"mutable","name":"b","nameLocation":"14474:1:23","nodeType":"VariableDeclaration","scope":4054,"src":"14466:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4032,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4035,"mutability":"mutable","name":"e","nameLocation":"14485:1:23","nodeType":"VariableDeclaration","scope":4054,"src":"14477:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4034,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4037,"mutability":"mutable","name":"m","nameLocation":"14496:1:23","nodeType":"VariableDeclaration","scope":4054,"src":"14488:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4036,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:23"},"returnParameters":{"id":4043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4040,"mutability":"mutable","name":"success","nameLocation":"14527:7:23","nodeType":"VariableDeclaration","scope":4054,"src":"14522:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4039,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4042,"mutability":"mutable","name":"result","nameLocation":"14544:6:23","nodeType":"VariableDeclaration","scope":4054,"src":"14536:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4041,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:23"},"scope":5009,"src":"14447:1598:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4089,"nodeType":"Block","src":"16242:179:23","statements":[{"assignments":[4067,4069],"declarations":[{"constant":false,"id":4067,"mutability":"mutable","name":"success","nameLocation":"16258:7:23","nodeType":"VariableDeclaration","scope":4089,"src":"16253:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4066,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4069,"mutability":"mutable","name":"result","nameLocation":"16280:6:23","nodeType":"VariableDeclaration","scope":4089,"src":"16267:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4068,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4075,"initialValue":{"arguments":[{"id":4071,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"16300:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4072,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"16303:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4073,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"16306:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4070,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4054,4136],"referencedDeclaration":4136,"src":"16290:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:23"},{"condition":{"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:23","subExpression":{"id":4076,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"16323:7:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4086,"nodeType":"IfStatement","src":"16318:74:23","trueBody":{"id":4085,"nodeType":"Block","src":"16332:60:23","statements":[{"expression":{"arguments":[{"expression":{"id":4081,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"16358:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2582_$","typeString":"type(library Panic)"}},"id":4082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:23","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2549,"src":"16358:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4078,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"16346:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2582_$","typeString":"type(library Panic)"}},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:23","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2581,"src":"16346:11:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4084,"nodeType":"ExpressionStatement","src":"16346:35:23"}]}},{"expression":{"id":4087,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"16408:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4065,"id":4088,"nodeType":"Return","src":"16401:13:23"}]},"documentation":{"id":4055,"nodeType":"StructuredDocumentation","src":"16051:85:23","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4090,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:23","nodeType":"FunctionDefinition","parameters":{"id":4062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4057,"mutability":"mutable","name":"b","nameLocation":"16170:1:23","nodeType":"VariableDeclaration","scope":4090,"src":"16157:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4056,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4059,"mutability":"mutable","name":"e","nameLocation":"16186:1:23","nodeType":"VariableDeclaration","scope":4090,"src":"16173:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4058,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4061,"mutability":"mutable","name":"m","nameLocation":"16202:1:23","nodeType":"VariableDeclaration","scope":4090,"src":"16189:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4060,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:23"},"returnParameters":{"id":4065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4090,"src":"16228:12:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4063,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:23"},"scope":5009,"src":"16141:280:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4135,"nodeType":"Block","src":"16675:771:23","statements":[{"condition":{"arguments":[{"id":4105,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"16700:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4104,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"16689:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4114,"nodeType":"IfStatement","src":"16685:47:23","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:23","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4108,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4112,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4103,"id":4113,"nodeType":"Return","src":"16704:28:23"}},{"assignments":[4116],"declarations":[{"constant":false,"id":4116,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:23","nodeType":"VariableDeclaration","scope":4135,"src":"16743:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4115,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4119,"initialValue":{"expression":{"id":4117,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"16758:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:23","memberName":"length","nodeType":"MemberAccess","src":"16758:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:23"},{"expression":{"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4120,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"16848:6:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4123,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"16874:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:23","memberName":"length","nodeType":"MemberAccess","src":"16874:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4125,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"16884:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:23","memberName":"length","nodeType":"MemberAccess","src":"16884:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4127,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4116,"src":"16894:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4128,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"16900:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4129,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"16903:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4130,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"16906:1:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4121,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:23","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:23","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4133,"nodeType":"ExpressionStatement","src":"16848:60:23"},{"AST":{"nativeSrc":"16944:496:23","nodeType":"YulBlock","src":"16944:496:23","statements":[{"nativeSrc":"16958:32:23","nodeType":"YulVariableDeclaration","src":"16958:32:23","value":{"arguments":[{"name":"result","nativeSrc":"16977:6:23","nodeType":"YulIdentifier","src":"16977:6:23"},{"kind":"number","nativeSrc":"16985:4:23","nodeType":"YulLiteral","src":"16985:4:23","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16973:3:23","nodeType":"YulIdentifier","src":"16973:3:23"},"nativeSrc":"16973:17:23","nodeType":"YulFunctionCall","src":"16973:17:23"},"variables":[{"name":"dataPtr","nativeSrc":"16962:7:23","nodeType":"YulTypedName","src":"16962:7:23","type":""}]},{"nativeSrc":"17080:73:23","nodeType":"YulAssignment","src":"17080:73:23","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"17102:3:23","nodeType":"YulIdentifier","src":"17102:3:23"},"nativeSrc":"17102:5:23","nodeType":"YulFunctionCall","src":"17102:5:23"},{"kind":"number","nativeSrc":"17109:4:23","nodeType":"YulLiteral","src":"17109:4:23","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"17115:7:23","nodeType":"YulIdentifier","src":"17115:7:23"},{"arguments":[{"name":"result","nativeSrc":"17130:6:23","nodeType":"YulIdentifier","src":"17130:6:23"}],"functionName":{"name":"mload","nativeSrc":"17124:5:23","nodeType":"YulIdentifier","src":"17124:5:23"},"nativeSrc":"17124:13:23","nodeType":"YulFunctionCall","src":"17124:13:23"},{"name":"dataPtr","nativeSrc":"17139:7:23","nodeType":"YulIdentifier","src":"17139:7:23"},{"name":"mLen","nativeSrc":"17148:4:23","nodeType":"YulIdentifier","src":"17148:4:23"}],"functionName":{"name":"staticcall","nativeSrc":"17091:10:23","nodeType":"YulIdentifier","src":"17091:10:23"},"nativeSrc":"17091:62:23","nodeType":"YulFunctionCall","src":"17091:62:23"},"variableNames":[{"name":"success","nativeSrc":"17080:7:23","nodeType":"YulIdentifier","src":"17080:7:23"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"17309:6:23","nodeType":"YulIdentifier","src":"17309:6:23"},{"name":"mLen","nativeSrc":"17317:4:23","nodeType":"YulIdentifier","src":"17317:4:23"}],"functionName":{"name":"mstore","nativeSrc":"17302:6:23","nodeType":"YulIdentifier","src":"17302:6:23"},"nativeSrc":"17302:20:23","nodeType":"YulFunctionCall","src":"17302:20:23"},"nativeSrc":"17302:20:23","nodeType":"YulExpressionStatement","src":"17302:20:23"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17405:4:23","nodeType":"YulLiteral","src":"17405:4:23","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"17415:7:23","nodeType":"YulIdentifier","src":"17415:7:23"},{"name":"mLen","nativeSrc":"17424:4:23","nodeType":"YulIdentifier","src":"17424:4:23"}],"functionName":{"name":"add","nativeSrc":"17411:3:23","nodeType":"YulIdentifier","src":"17411:3:23"},"nativeSrc":"17411:18:23","nodeType":"YulFunctionCall","src":"17411:18:23"}],"functionName":{"name":"mstore","nativeSrc":"17398:6:23","nodeType":"YulIdentifier","src":"17398:6:23"},"nativeSrc":"17398:32:23","nodeType":"YulFunctionCall","src":"17398:32:23"},"nativeSrc":"17398:32:23","nodeType":"YulExpressionStatement","src":"17398:32:23"}]},"evmVersion":"paris","externalReferences":[{"declaration":4116,"isOffset":false,"isSlot":false,"src":"17148:4:23","valueSize":1},{"declaration":4116,"isOffset":false,"isSlot":false,"src":"17317:4:23","valueSize":1},{"declaration":4116,"isOffset":false,"isSlot":false,"src":"17424:4:23","valueSize":1},{"declaration":4102,"isOffset":false,"isSlot":false,"src":"16977:6:23","valueSize":1},{"declaration":4102,"isOffset":false,"isSlot":false,"src":"17130:6:23","valueSize":1},{"declaration":4102,"isOffset":false,"isSlot":false,"src":"17309:6:23","valueSize":1},{"declaration":4100,"isOffset":false,"isSlot":false,"src":"17080:7:23","valueSize":1}],"flags":["memory-safe"],"id":4134,"nodeType":"InlineAssembly","src":"16919:521:23"}]},"documentation":{"id":4091,"nodeType":"StructuredDocumentation","src":"16427:88:23","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4136,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:23","nodeType":"FunctionDefinition","parameters":{"id":4098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4093,"mutability":"mutable","name":"b","nameLocation":"16561:1:23","nodeType":"VariableDeclaration","scope":4136,"src":"16548:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4092,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4095,"mutability":"mutable","name":"e","nameLocation":"16585:1:23","nodeType":"VariableDeclaration","scope":4136,"src":"16572:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4094,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4097,"mutability":"mutable","name":"m","nameLocation":"16609:1:23","nodeType":"VariableDeclaration","scope":4136,"src":"16596:14:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4096,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:23"},"returnParameters":{"id":4103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4100,"mutability":"mutable","name":"success","nameLocation":"16645:7:23","nodeType":"VariableDeclaration","scope":4136,"src":"16640:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4099,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4102,"mutability":"mutable","name":"result","nameLocation":"16667:6:23","nodeType":"VariableDeclaration","scope":4136,"src":"16654:19:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4101,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:23"},"scope":5009,"src":"16520:926:23","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4168,"nodeType":"Block","src":"17601:176:23","statements":[{"body":{"id":4164,"nodeType":"Block","src":"17658:92:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4155,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"17676:9:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4157,"indexExpression":{"id":4156,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"17686:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:23","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4163,"nodeType":"IfStatement","src":"17672:68:23","trueBody":{"id":4162,"nodeType":"Block","src":"17695:45:23","statements":[{"expression":{"hexValue":"66616c7365","id":4160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4143,"id":4161,"nodeType":"Return","src":"17713:12:23"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4148,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"17631:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4149,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"17635:9:23","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:23","memberName":"length","nodeType":"MemberAccess","src":"17635:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4165,"initializationExpression":{"assignments":[4145],"declarations":[{"constant":false,"id":4145,"mutability":"mutable","name":"i","nameLocation":"17624:1:23","nodeType":"VariableDeclaration","scope":4165,"src":"17616:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4144,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4147,"initialValue":{"hexValue":"30","id":4146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:23"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:23","subExpression":{"id":4152,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"17655:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4154,"nodeType":"ExpressionStatement","src":"17653:3:23"},"nodeType":"ForStatement","src":"17611:139:23"},{"expression":{"hexValue":"74727565","id":4166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4143,"id":4167,"nodeType":"Return","src":"17759:11:23"}]},"documentation":{"id":4137,"nodeType":"StructuredDocumentation","src":"17452:72:23","text":" @dev Returns whether the provided byte array is zero."},"id":4169,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:23","nodeType":"FunctionDefinition","parameters":{"id":4140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4139,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:23","nodeType":"VariableDeclaration","scope":4169,"src":"17549:22:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4138,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:23"},"returnParameters":{"id":4143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4169,"src":"17595:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4141,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:23"},"scope":5009,"src":"17529:248:23","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4387,"nodeType":"Block","src":"18137:5124:23","statements":[{"id":4386,"nodeType":"UncheckedBlock","src":"18147:5108:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4177,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"18241:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4183,"nodeType":"IfStatement","src":"18237:53:23","trueBody":{"id":4182,"nodeType":"Block","src":"18249:41:23","statements":[{"expression":{"id":4180,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"18274:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4176,"id":4181,"nodeType":"Return","src":"18267:8:23"}]}},{"assignments":[4185],"declarations":[{"constant":false,"id":4185,"mutability":"mutable","name":"aa","nameLocation":"19225:2:23","nodeType":"VariableDeclaration","scope":4386,"src":"19217:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4184,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4187,"initialValue":{"id":4186,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"19230:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:23"},{"assignments":[4189],"declarations":[{"constant":false,"id":4189,"mutability":"mutable","name":"xn","nameLocation":"19253:2:23","nodeType":"VariableDeclaration","scope":4386,"src":"19245:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4188,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4191,"initialValue":{"hexValue":"31","id":4190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4192,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"19278:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:23","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4196,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:23","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4207,"nodeType":"IfStatement","src":"19274:92:23","trueBody":{"id":4206,"nodeType":"Block","src":"19296:70:23","statements":[{"expression":{"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4198,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"19314:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4201,"nodeType":"ExpressionStatement","src":"19314:10:23"},{"expression":{"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4202,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"19342:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4205,"nodeType":"ExpressionStatement","src":"19342:9:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4208,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"19383:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:23","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4212,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:23","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4223,"nodeType":"IfStatement","src":"19379:90:23","trueBody":{"id":4222,"nodeType":"Block","src":"19400:69:23","statements":[{"expression":{"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4214,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"19418:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4217,"nodeType":"ExpressionStatement","src":"19418:9:23"},{"expression":{"id":4220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4218,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"19445:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4221,"nodeType":"ExpressionStatement","src":"19445:9:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4224,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"19486:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:23","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4228,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:23","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4239,"nodeType":"IfStatement","src":"19482:90:23","trueBody":{"id":4238,"nodeType":"Block","src":"19503:69:23","statements":[{"expression":{"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4230,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"19521:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4233,"nodeType":"ExpressionStatement","src":"19521:9:23"},{"expression":{"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4234,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"19548:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4237,"nodeType":"ExpressionStatement","src":"19548:9:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4240,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"19589:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:23","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4244,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:23","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4255,"nodeType":"IfStatement","src":"19585:89:23","trueBody":{"id":4254,"nodeType":"Block","src":"19606:68:23","statements":[{"expression":{"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4246,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"19624:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4249,"nodeType":"ExpressionStatement","src":"19624:9:23"},{"expression":{"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4250,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"19651:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4253,"nodeType":"ExpressionStatement","src":"19651:8:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4256,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"19691:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:23","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4260,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:23","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4271,"nodeType":"IfStatement","src":"19687:87:23","trueBody":{"id":4270,"nodeType":"Block","src":"19707:67:23","statements":[{"expression":{"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4262,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"19725:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4265,"nodeType":"ExpressionStatement","src":"19725:8:23"},{"expression":{"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4266,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"19751:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4269,"nodeType":"ExpressionStatement","src":"19751:8:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4272,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"19791:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4276,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4287,"nodeType":"IfStatement","src":"19787:87:23","trueBody":{"id":4286,"nodeType":"Block","src":"19807:67:23","statements":[{"expression":{"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4278,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"19825:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4281,"nodeType":"ExpressionStatement","src":"19825:8:23"},{"expression":{"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4282,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"19851:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4285,"nodeType":"ExpressionStatement","src":"19851:8:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4288,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"19891:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4292,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4299,"nodeType":"IfStatement","src":"19887:61:23","trueBody":{"id":4298,"nodeType":"Block","src":"19907:41:23","statements":[{"expression":{"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4294,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"19925:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4297,"nodeType":"ExpressionStatement","src":"19925:8:23"}]}},{"expression":{"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4300,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"20368:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4302,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"20378:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4304,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4308,"nodeType":"ExpressionStatement","src":"20368:18:23"},{"expression":{"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4309,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"22273:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4310,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"22279:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4311,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"22284:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4312,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"22288:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4315,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4319,"nodeType":"ExpressionStatement","src":"22273:23:23"},{"expression":{"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4320,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"22382:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4321,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"22388:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4322,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"22393:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4323,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"22397:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4326,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4330,"nodeType":"ExpressionStatement","src":"22382:23:23"},{"expression":{"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4331,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"22493:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4332,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"22499:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4333,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"22504:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4334,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"22508:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4337,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4341,"nodeType":"ExpressionStatement","src":"22493:23:23"},{"expression":{"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4342,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"22602:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4343,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"22608:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4344,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"22613:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4345,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"22617:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4348,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4352,"nodeType":"ExpressionStatement","src":"22602:23:23"},{"expression":{"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4353,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"22712:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4354,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"22718:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4355,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"22723:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4356,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"22727:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4359,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4363,"nodeType":"ExpressionStatement","src":"22712:23:23"},{"expression":{"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4364,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"22822:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4365,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"22828:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4366,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"22833:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4367,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"22837:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4370,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4374,"nodeType":"ExpressionStatement","src":"22822:23:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4375,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"23211:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4378,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"23232:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4379,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"23237:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4380,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"23241:2:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4376,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"23216:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6774_$","typeString":"type(library SafeCast)"}},"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6773,"src":"23216:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4176,"id":4385,"nodeType":"Return","src":"23204:40:23"}]}]},"documentation":{"id":4170,"nodeType":"StructuredDocumentation","src":"17783:292:23","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4388,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:23","nodeType":"FunctionDefinition","parameters":{"id":4173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4172,"mutability":"mutable","name":"a","nameLocation":"18102:1:23","nodeType":"VariableDeclaration","scope":4388,"src":"18094:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4171,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:23"},"returnParameters":{"id":4176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4388,"src":"18128:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4174,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:23"},"scope":5009,"src":"18080:5181:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4421,"nodeType":"Block","src":"23434:171:23","statements":[{"id":4420,"nodeType":"UncheckedBlock","src":"23444:155:23","statements":[{"assignments":[4400],"declarations":[{"constant":false,"id":4400,"mutability":"mutable","name":"result","nameLocation":"23476:6:23","nodeType":"VariableDeclaration","scope":4420,"src":"23468:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4399,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4404,"initialValue":{"arguments":[{"id":4402,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"23490:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4401,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4388,4422],"referencedDeclaration":4388,"src":"23485:4:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4405,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"23513:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4409,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"23555:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3415","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3415","typeString":"enum Math.Rounding"}],"id":4408,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"23538:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3415_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4411,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"23568:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4412,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"23577:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4414,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4391,"src":"23586:1:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4406,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"23522:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6774_$","typeString":"type(library SafeCast)"}},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6773,"src":"23522:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4398,"id":4419,"nodeType":"Return","src":"23506:82:23"}]}]},"documentation":{"id":4389,"nodeType":"StructuredDocumentation","src":"23267:86:23","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4422,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:23","nodeType":"FunctionDefinition","parameters":{"id":4395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4391,"mutability":"mutable","name":"a","nameLocation":"23380:1:23","nodeType":"VariableDeclaration","scope":4422,"src":"23372:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4390,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4394,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:23","nodeType":"VariableDeclaration","scope":4422,"src":"23383:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3415","typeString":"enum Math.Rounding"},"typeName":{"id":4393,"nodeType":"UserDefinedTypeName","pathNode":{"id":4392,"name":"Rounding","nameLocations":["23383:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":3415,"src":"23383:8:23"},"referencedDeclaration":3415,"src":"23383:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3415","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:23"},"returnParameters":{"id":4398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4422,"src":"23425:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4396,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:23"},"scope":5009,"src":"23358:247:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4617,"nodeType":"Block","src":"23796:981:23","statements":[{"assignments":[4431],"declarations":[{"constant":false,"id":4431,"mutability":"mutable","name":"result","nameLocation":"23814:6:23","nodeType":"VariableDeclaration","scope":4617,"src":"23806:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4430,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4433,"initialValue":{"hexValue":"30","id":4432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:23"},{"assignments":[4435],"declarations":[{"constant":false,"id":4435,"mutability":"mutable","name":"exp","nameLocation":"23842:3:23","nodeType":"VariableDeclaration","scope":4617,"src":"23834:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4434,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4436,"nodeType":"VariableDeclarationStatement","src":"23834:11:23"},{"id":4614,"nodeType":"UncheckedBlock","src":"23855:893:23","statements":[{"expression":{"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4437,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"23879:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":4438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"23907:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":4447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:23","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4445,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:23","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:23","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4439,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"23891:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6774_$","typeString":"type(library SafeCast)"}},"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6773,"src":"23891:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4452,"nodeType":"ExpressionStatement","src":"23879:51:23"},{"expression":{"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"23944:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4454,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"23954:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4456,"nodeType":"ExpressionStatement","src":"23944:13:23"},{"expression":{"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4457,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"23971:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4458,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"23981:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4460,"nodeType":"ExpressionStatement","src":"23971:13:23"},{"expression":{"id":4475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4461,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"23999:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":4462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"24026:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":4471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:23","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4469,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:23","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:23","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4463,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"24010:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6774_$","typeString":"type(library SafeCast)"}},"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6773,"src":"24010:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4476,"nodeType":"ExpressionStatement","src":"23999:49:23"},{"expression":{"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"24062:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4478,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"24072:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4480,"nodeType":"ExpressionStatement","src":"24062:13:23"},{"expression":{"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4481,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"24089:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4482,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"24099:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4484,"nodeType":"ExpressionStatement","src":"24089:13:23"},{"expression":{"id":4499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4485,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"24117:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":4486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"24144:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":4495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:23","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4493,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:23","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:23","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4487,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"24128:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6774_$","typeString":"type(library SafeCast)"}},"id":4488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6773,"src":"24128:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4500,"nodeType":"ExpressionStatement","src":"24117:49:23"},{"expression":{"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"24180:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4502,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"24190:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4504,"nodeType":"ExpressionStatement","src":"24180:13:23"},{"expression":{"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4505,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"24207:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4506,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"24217:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4508,"nodeType":"ExpressionStatement","src":"24207:13:23"},{"expression":{"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4509,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"24235:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":4510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"24262:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":4519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:23","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4517,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:23","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:23","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4511,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"24246:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6774_$","typeString":"type(library SafeCast)"}},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6773,"src":"24246:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4524,"nodeType":"ExpressionStatement","src":"24235:49:23"},{"expression":{"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"24298:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4526,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"24308:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4528,"nodeType":"ExpressionStatement","src":"24298:13:23"},{"expression":{"id":4531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4529,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"24325:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4530,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"24335:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4532,"nodeType":"ExpressionStatement","src":"24325:13:23"},{"expression":{"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4533,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"24353:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":4534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"24379:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":4543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:23","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4541,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:23","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4535,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"24363:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6774_$","typeString":"type(library SafeCast)"}},"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6773,"src":"24363:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4548,"nodeType":"ExpressionStatement","src":"24353:47:23"},{"expression":{"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"24414:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4550,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"24424:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4552,"nodeType":"ExpressionStatement","src":"24414:13:23"},{"expression":{"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4553,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"24441:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4554,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"24451:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4556,"nodeType":"ExpressionStatement","src":"24441:13:23"},{"expression":{"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4557,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"24469:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":4558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"24495:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":4567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4565,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:23","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4559,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"24479:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6774_$","typeString":"type(library SafeCast)"}},"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6773,"src":"24479:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4572,"nodeType":"ExpressionStatement","src":"24469:47:23"},{"expression":{"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"24530:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4574,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"24540:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4576,"nodeType":"ExpressionStatement","src":"24530:13:23"},{"expression":{"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4577,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"24557:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4578,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"24567:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4580,"nodeType":"ExpressionStatement","src":"24557:13:23"},{"expression":{"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4581,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"24585:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"24611:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":4591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4589,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4583,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"24595:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6774_$","typeString":"type(library SafeCast)"}},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6773,"src":"24595:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4596,"nodeType":"ExpressionStatement","src":"24585:47:23"},{"expression":{"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"24646:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4598,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"24656:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4600,"nodeType":"ExpressionStatement","src":"24646:13:23"},{"expression":{"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4601,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"24673:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4602,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"24683:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4604,"nodeType":"ExpressionStatement","src":"24673:13:23"},{"expression":{"id":4612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4605,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"24701:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"24727:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4606,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"24711:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6774_$","typeString":"type(library SafeCast)"}},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6773,"src":"24711:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4613,"nodeType":"ExpressionStatement","src":"24701:36:23"}]},{"expression":{"id":4615,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4431,"src":"24764:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4429,"id":4616,"nodeType":"Return","src":"24757:13:23"}]},"documentation":{"id":4423,"nodeType":"StructuredDocumentation","src":"23611:119:23","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4618,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:23","nodeType":"FunctionDefinition","parameters":{"id":4426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4425,"mutability":"mutable","name":"value","nameLocation":"23757:5:23","nodeType":"VariableDeclaration","scope":4618,"src":"23749:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4424,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:23"},"returnParameters":{"id":4429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4428,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4618,"src":"23787:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4427,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:23"},"scope":5009,"src":"23735:1042:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4651,"nodeType":"Block","src":"25010:175:23","statements":[{"id":4650,"nodeType":"UncheckedBlock","src":"25020:159:23","statements":[{"assignments":[4630],"declarations":[{"constant":false,"id":4630,"mutability":"mutable","name":"result","nameLocation":"25052:6:23","nodeType":"VariableDeclaration","scope":4650,"src":"25044:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4629,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4634,"initialValue":{"arguments":[{"id":4632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"25066:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4631,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4618,4652],"referencedDeclaration":4618,"src":"25061:4:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4635,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"25093:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4639,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"25135:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3415","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3415","typeString":"enum Math.Rounding"}],"id":4638,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"25118:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3415_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4642,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"25153:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"25162:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4636,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"25102:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6774_$","typeString":"type(library SafeCast)"}},"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6773,"src":"25102:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4628,"id":4649,"nodeType":"Return","src":"25086:82:23"}]}]},"documentation":{"id":4619,"nodeType":"StructuredDocumentation","src":"24783:142:23","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4652,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:23","nodeType":"FunctionDefinition","parameters":{"id":4625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4621,"mutability":"mutable","name":"value","nameLocation":"24952:5:23","nodeType":"VariableDeclaration","scope":4652,"src":"24944:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4620,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4624,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:23","nodeType":"VariableDeclaration","scope":4652,"src":"24959:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3415","typeString":"enum Math.Rounding"},"typeName":{"id":4623,"nodeType":"UserDefinedTypeName","pathNode":{"id":4622,"name":"Rounding","nameLocations":["24959:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":3415,"src":"24959:8:23"},"referencedDeclaration":3415,"src":"24959:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3415","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:23"},"returnParameters":{"id":4628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4652,"src":"25001:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4626,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:23"},"scope":5009,"src":"24930:255:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4780,"nodeType":"Block","src":"25378:854:23","statements":[{"assignments":[4661],"declarations":[{"constant":false,"id":4661,"mutability":"mutable","name":"result","nameLocation":"25396:6:23","nodeType":"VariableDeclaration","scope":4780,"src":"25388:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4660,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4663,"initialValue":{"hexValue":"30","id":4662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:23"},{"id":4777,"nodeType":"UncheckedBlock","src":"25416:787:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"25444:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4680,"nodeType":"IfStatement","src":"25440:103:23","trueBody":{"id":4679,"nodeType":"Block","src":"25463:80:23","statements":[{"expression":{"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"25481:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4674,"nodeType":"ExpressionStatement","src":"25481:17:23"},{"expression":{"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4675,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"25516:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4678,"nodeType":"ExpressionStatement","src":"25516:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"25560:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4697,"nodeType":"IfStatement","src":"25556:103:23","trueBody":{"id":4696,"nodeType":"Block","src":"25579:80:23","statements":[{"expression":{"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"25597:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4691,"nodeType":"ExpressionStatement","src":"25597:17:23"},{"expression":{"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4692,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"25632:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4695,"nodeType":"ExpressionStatement","src":"25632:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"25676:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4714,"nodeType":"IfStatement","src":"25672:103:23","trueBody":{"id":4713,"nodeType":"Block","src":"25695:80:23","statements":[{"expression":{"id":4707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"25713:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:23","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4708,"nodeType":"ExpressionStatement","src":"25713:17:23"},{"expression":{"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4709,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"25748:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4712,"nodeType":"ExpressionStatement","src":"25748:12:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"25792:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4731,"nodeType":"IfStatement","src":"25788:100:23","trueBody":{"id":4730,"nodeType":"Block","src":"25810:78:23","statements":[{"expression":{"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"25828:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:23","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4725,"nodeType":"ExpressionStatement","src":"25828:16:23"},{"expression":{"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4726,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"25862:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4729,"nodeType":"ExpressionStatement","src":"25862:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"25905:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:23","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4748,"nodeType":"IfStatement","src":"25901:100:23","trueBody":{"id":4747,"nodeType":"Block","src":"25923:78:23","statements":[{"expression":{"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"25941:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:23","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4742,"nodeType":"ExpressionStatement","src":"25941:16:23"},{"expression":{"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4743,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"25975:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4746,"nodeType":"ExpressionStatement","src":"25975:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"26018:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:23","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4765,"nodeType":"IfStatement","src":"26014:100:23","trueBody":{"id":4764,"nodeType":"Block","src":"26036:78:23","statements":[{"expression":{"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"26054:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:23","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4759,"nodeType":"ExpressionStatement","src":"26054:16:23"},{"expression":{"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4760,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"26088:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4763,"nodeType":"ExpressionStatement","src":"26088:11:23"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"26131:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4776,"nodeType":"IfStatement","src":"26127:66:23","trueBody":{"id":4775,"nodeType":"Block","src":"26149:44:23","statements":[{"expression":{"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4771,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"26167:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4774,"nodeType":"ExpressionStatement","src":"26167:11:23"}]}}]},{"expression":{"id":4778,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"26219:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4659,"id":4779,"nodeType":"Return","src":"26212:13:23"}]},"documentation":{"id":4653,"nodeType":"StructuredDocumentation","src":"25191:120:23","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4781,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:23","nodeType":"FunctionDefinition","parameters":{"id":4656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4655,"mutability":"mutable","name":"value","nameLocation":"25339:5:23","nodeType":"VariableDeclaration","scope":4781,"src":"25331:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4654,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:23"},"returnParameters":{"id":4659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4781,"src":"25369:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4657,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:23"},"scope":5009,"src":"25316:916:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4814,"nodeType":"Block","src":"26467:177:23","statements":[{"id":4813,"nodeType":"UncheckedBlock","src":"26477:161:23","statements":[{"assignments":[4793],"declarations":[{"constant":false,"id":4793,"mutability":"mutable","name":"result","nameLocation":"26509:6:23","nodeType":"VariableDeclaration","scope":4813,"src":"26501:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4792,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4797,"initialValue":{"arguments":[{"id":4795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4784,"src":"26524:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4794,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4781,4815],"referencedDeclaration":4781,"src":"26518:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4798,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4793,"src":"26551:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4802,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"26593:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3415","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3415","typeString":"enum Math.Rounding"}],"id":4801,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"26576:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3415_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4805,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4793,"src":"26612:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4784,"src":"26621:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4799,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"26560:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6774_$","typeString":"type(library SafeCast)"}},"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6773,"src":"26560:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4791,"id":4812,"nodeType":"Return","src":"26544:83:23"}]}]},"documentation":{"id":4782,"nodeType":"StructuredDocumentation","src":"26238:143:23","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4815,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:23","nodeType":"FunctionDefinition","parameters":{"id":4788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4784,"mutability":"mutable","name":"value","nameLocation":"26409:5:23","nodeType":"VariableDeclaration","scope":4815,"src":"26401:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4783,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4787,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:23","nodeType":"VariableDeclaration","scope":4815,"src":"26416:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3415","typeString":"enum Math.Rounding"},"typeName":{"id":4786,"nodeType":"UserDefinedTypeName","pathNode":{"id":4785,"name":"Rounding","nameLocations":["26416:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":3415,"src":"26416:8:23"},"referencedDeclaration":3415,"src":"26416:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3415","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:23"},"returnParameters":{"id":4791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4815,"src":"26458:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4789,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:23"},"scope":5009,"src":"26386:258:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4951,"nodeType":"Block","src":"26964:674:23","statements":[{"assignments":[4824],"declarations":[{"constant":false,"id":4824,"mutability":"mutable","name":"result","nameLocation":"26982:6:23","nodeType":"VariableDeclaration","scope":4951,"src":"26974:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4823,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4826,"initialValue":{"hexValue":"30","id":4825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:23"},{"assignments":[4828],"declarations":[{"constant":false,"id":4828,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:23","nodeType":"VariableDeclaration","scope":4951,"src":"27002:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4827,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4829,"nodeType":"VariableDeclarationStatement","src":"27002:12:23"},{"id":4948,"nodeType":"UncheckedBlock","src":"27024:585:23","statements":[{"expression":{"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4830,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"27048:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"27071:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":4839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:23","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4837,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:23","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:23","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4831,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"27055:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6774_$","typeString":"type(library SafeCast)"}},"id":4832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6773,"src":"27055:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4843,"nodeType":"ExpressionStatement","src":"27048:46:23"},{"expression":{"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"27108:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4845,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"27118:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":4846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4849,"nodeType":"ExpressionStatement","src":"27108:20:23"},{"expression":{"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4850,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"27142:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4851,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"27152:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":4852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4855,"nodeType":"ExpressionStatement","src":"27142:19:23"},{"expression":{"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4856,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"27176:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"27199:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":4865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:23","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4863,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:23","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:23","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4857,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"27183:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6774_$","typeString":"type(library SafeCast)"}},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6773,"src":"27183:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4869,"nodeType":"ExpressionStatement","src":"27176:45:23"},{"expression":{"id":4874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"27235:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4871,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"27245:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":4872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4875,"nodeType":"ExpressionStatement","src":"27235:19:23"},{"expression":{"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4876,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"27268:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4877,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"27278:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":4878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4881,"nodeType":"ExpressionStatement","src":"27268:18:23"},{"expression":{"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4882,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"27301:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"27324:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":4891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:23","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4889,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:23","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:23","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4883,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"27308:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6774_$","typeString":"type(library SafeCast)"}},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6773,"src":"27308:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4895,"nodeType":"ExpressionStatement","src":"27301:45:23"},{"expression":{"id":4900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"27360:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4897,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"27370:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":4898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4901,"nodeType":"ExpressionStatement","src":"27360:19:23"},{"expression":{"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4902,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"27393:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4903,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"27403:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":4904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:23","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4907,"nodeType":"ExpressionStatement","src":"27393:18:23"},{"expression":{"id":4920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4908,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"27426:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"27449:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":4917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:23","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4915,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:23","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:23","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4909,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"27433:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6774_$","typeString":"type(library SafeCast)"}},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6773,"src":"27433:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4921,"nodeType":"ExpressionStatement","src":"27426:45:23"},{"expression":{"id":4926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"27485:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4923,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"27495:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":4924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4927,"nodeType":"ExpressionStatement","src":"27485:19:23"},{"expression":{"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4928,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"27518:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4929,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4828,"src":"27528:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4933,"nodeType":"ExpressionStatement","src":"27518:18:23"},{"expression":{"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4934,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"27551:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"27577:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":4943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:23","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4941,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:23","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4935,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"27561:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6774_$","typeString":"type(library SafeCast)"}},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6773,"src":"27561:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4947,"nodeType":"ExpressionStatement","src":"27551:47:23"}]},{"expression":{"id":4949,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"27625:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4822,"id":4950,"nodeType":"Return","src":"27618:13:23"}]},"documentation":{"id":4816,"nodeType":"StructuredDocumentation","src":"26650:246:23","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4952,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:23","nodeType":"FunctionDefinition","parameters":{"id":4819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4818,"mutability":"mutable","name":"value","nameLocation":"26925:5:23","nodeType":"VariableDeclaration","scope":4952,"src":"26917:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4817,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:23"},"returnParameters":{"id":4822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4952,"src":"26955:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4820,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:23"},"scope":5009,"src":"26901:737:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4988,"nodeType":"Block","src":"27875:184:23","statements":[{"id":4987,"nodeType":"UncheckedBlock","src":"27885:168:23","statements":[{"assignments":[4964],"declarations":[{"constant":false,"id":4964,"mutability":"mutable","name":"result","nameLocation":"27917:6:23","nodeType":"VariableDeclaration","scope":4987,"src":"27909:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4963,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4968,"initialValue":{"arguments":[{"id":4966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4955,"src":"27933:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4965,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4952,4989],"referencedDeclaration":4952,"src":"27926:6:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4969,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4964,"src":"27960:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4973,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4958,"src":"28002:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3415","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3415","typeString":"enum Math.Rounding"}],"id":4972,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5008,"src":"27985:16:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3415_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4976,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4964,"src":"28021:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:23","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4979,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4955,"src":"28036:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4970,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"27969:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6774_$","typeString":"type(library SafeCast)"}},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6773,"src":"27969:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4962,"id":4986,"nodeType":"Return","src":"27953:89:23"}]}]},"documentation":{"id":4953,"nodeType":"StructuredDocumentation","src":"27644:144:23","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4989,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:23","nodeType":"FunctionDefinition","parameters":{"id":4959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4955,"mutability":"mutable","name":"value","nameLocation":"27817:5:23","nodeType":"VariableDeclaration","scope":4989,"src":"27809:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4954,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4958,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:23","nodeType":"VariableDeclaration","scope":4989,"src":"27824:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3415","typeString":"enum Math.Rounding"},"typeName":{"id":4957,"nodeType":"UserDefinedTypeName","pathNode":{"id":4956,"name":"Rounding","nameLocations":["27824:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":3415,"src":"27824:8:23"},"referencedDeclaration":3415,"src":"27824:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3415","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:23"},"returnParameters":{"id":4962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4989,"src":"27866:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4960,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:23"},"scope":5009,"src":"27793:266:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5007,"nodeType":"Block","src":"28257:48:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5000,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4993,"src":"28280:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3415","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3415","typeString":"enum Math.Rounding"}],"id":4999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4998,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:23","typeDescriptions":{}}},"id":5001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4997,"id":5006,"nodeType":"Return","src":"28267:31:23"}]},"documentation":{"id":4990,"nodeType":"StructuredDocumentation","src":"28065:113:23","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5008,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:23","nodeType":"FunctionDefinition","parameters":{"id":4994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4993,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:23","nodeType":"VariableDeclaration","scope":5008,"src":"28209:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3415","typeString":"enum Math.Rounding"},"typeName":{"id":4992,"nodeType":"UserDefinedTypeName","pathNode":{"id":4991,"name":"Rounding","nameLocations":["28209:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":3415,"src":"28209:8:23"},"referencedDeclaration":3415,"src":"28209:8:23","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3415","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:23"},"returnParameters":{"id":4997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5008,"src":"28251:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4995,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:23"},"scope":5009,"src":"28183:122:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5010,"src":"281:28026:23","usedErrors":[],"usedEvents":[]}],"src":"103:28205:23"},"id":23},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6774]},"id":6775,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5011,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:24"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5012,"nodeType":"StructuredDocumentation","src":"218:550:24","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6774,"linearizedBaseContracts":[6774],"name":"SafeCast","nameLocation":"777:8:24","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5013,"nodeType":"StructuredDocumentation","src":"792:68:24","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5019,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:24","nodeType":"ErrorDefinition","parameters":{"id":5018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5015,"mutability":"mutable","name":"bits","nameLocation":"908:4:24","nodeType":"VariableDeclaration","scope":5019,"src":"902:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5014,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5017,"mutability":"mutable","name":"value","nameLocation":"922:5:24","nodeType":"VariableDeclaration","scope":5019,"src":"914:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5016,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:24"},"src":"865:64:24"},{"documentation":{"id":5020,"nodeType":"StructuredDocumentation","src":"935:75:24","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5024,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:24","nodeType":"ErrorDefinition","parameters":{"id":5023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5022,"mutability":"mutable","name":"value","nameLocation":"1056:5:24","nodeType":"VariableDeclaration","scope":5024,"src":"1049:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5021,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:24"},"src":"1015:48:24"},{"documentation":{"id":5025,"nodeType":"StructuredDocumentation","src":"1069:67:24","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5031,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:24","nodeType":"ErrorDefinition","parameters":{"id":5030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5027,"mutability":"mutable","name":"bits","nameLocation":"1183:4:24","nodeType":"VariableDeclaration","scope":5031,"src":"1177:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5026,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5029,"mutability":"mutable","name":"value","nameLocation":"1196:5:24","nodeType":"VariableDeclaration","scope":5031,"src":"1189:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5028,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:24"},"src":"1141:62:24"},{"documentation":{"id":5032,"nodeType":"StructuredDocumentation","src":"1209:75:24","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5036,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:24","nodeType":"ErrorDefinition","parameters":{"id":5035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5034,"mutability":"mutable","name":"value","nameLocation":"1331:5:24","nodeType":"VariableDeclaration","scope":5036,"src":"1323:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5033,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:24"},"src":"1289:49:24"},{"body":{"id":5063,"nodeType":"Block","src":"1695:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"1709:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5046,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5045,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:24","memberName":"max","nodeType":"MemberAccess","src":"1717:17:24","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5057,"nodeType":"IfStatement","src":"1705:105:24","trueBody":{"id":5056,"nodeType":"Block","src":"1736:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:24","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"1793:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5051,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"1757:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5055,"nodeType":"RevertStatement","src":"1750:49:24"}]}},{"expression":{"arguments":[{"id":5060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5039,"src":"1834:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5058,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:24","typeDescriptions":{}}},"id":5061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5043,"id":5062,"nodeType":"Return","src":"1819:21:24"}]},"documentation":{"id":5037,"nodeType":"StructuredDocumentation","src":"1344:280:24","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5064,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:24","nodeType":"FunctionDefinition","parameters":{"id":5040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5039,"mutability":"mutable","name":"value","nameLocation":"1656:5:24","nodeType":"VariableDeclaration","scope":5064,"src":"1648:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5038,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:24"},"returnParameters":{"id":5043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5064,"src":"1686:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5041,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:24","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:24"},"scope":6774,"src":"1629:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5091,"nodeType":"Block","src":"2204:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5067,"src":"2218:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5074,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5073,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:24","memberName":"max","nodeType":"MemberAccess","src":"2226:17:24","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5085,"nodeType":"IfStatement","src":"2214:105:24","trueBody":{"id":5084,"nodeType":"Block","src":"2245:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:24","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5067,"src":"2302:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5079,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"2266:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5083,"nodeType":"RevertStatement","src":"2259:49:24"}]}},{"expression":{"arguments":[{"id":5088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5067,"src":"2343:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5086,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:24","typeDescriptions":{}}},"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5071,"id":5090,"nodeType":"Return","src":"2328:21:24"}]},"documentation":{"id":5065,"nodeType":"StructuredDocumentation","src":"1853:280:24","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5092,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:24","nodeType":"FunctionDefinition","parameters":{"id":5068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5067,"mutability":"mutable","name":"value","nameLocation":"2165:5:24","nodeType":"VariableDeclaration","scope":5092,"src":"2157:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5066,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:24"},"returnParameters":{"id":5071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5092,"src":"2195:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5069,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:24","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:24"},"scope":6774,"src":"2138:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5119,"nodeType":"Block","src":"2713:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5095,"src":"2727:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5102,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5101,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:24","memberName":"max","nodeType":"MemberAccess","src":"2735:17:24","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5113,"nodeType":"IfStatement","src":"2723:105:24","trueBody":{"id":5112,"nodeType":"Block","src":"2754:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:24","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5095,"src":"2811:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5107,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"2775:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5111,"nodeType":"RevertStatement","src":"2768:49:24"}]}},{"expression":{"arguments":[{"id":5116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5095,"src":"2852:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5114,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:24","typeDescriptions":{}}},"id":5117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5099,"id":5118,"nodeType":"Return","src":"2837:21:24"}]},"documentation":{"id":5093,"nodeType":"StructuredDocumentation","src":"2362:280:24","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5120,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:24","nodeType":"FunctionDefinition","parameters":{"id":5096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5095,"mutability":"mutable","name":"value","nameLocation":"2674:5:24","nodeType":"VariableDeclaration","scope":5120,"src":"2666:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5094,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:24"},"returnParameters":{"id":5099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5120,"src":"2704:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5097,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:24","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:24"},"scope":6774,"src":"2647:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5147,"nodeType":"Block","src":"3222:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"3236:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5130,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5129,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:24","memberName":"max","nodeType":"MemberAccess","src":"3244:17:24","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5141,"nodeType":"IfStatement","src":"3232:105:24","trueBody":{"id":5140,"nodeType":"Block","src":"3263:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:24","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"3320:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5135,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"3284:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5139,"nodeType":"RevertStatement","src":"3277:49:24"}]}},{"expression":{"arguments":[{"id":5144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"3361:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5142,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:24","typeDescriptions":{}}},"id":5145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5127,"id":5146,"nodeType":"Return","src":"3346:21:24"}]},"documentation":{"id":5121,"nodeType":"StructuredDocumentation","src":"2871:280:24","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5148,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:24","nodeType":"FunctionDefinition","parameters":{"id":5124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5123,"mutability":"mutable","name":"value","nameLocation":"3183:5:24","nodeType":"VariableDeclaration","scope":5148,"src":"3175:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5122,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:24"},"returnParameters":{"id":5127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5148,"src":"3213:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5125,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:24","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:24"},"scope":6774,"src":"3156:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5175,"nodeType":"Block","src":"3731:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"3745:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5158,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5157,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:24","memberName":"max","nodeType":"MemberAccess","src":"3753:17:24","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5169,"nodeType":"IfStatement","src":"3741:105:24","trueBody":{"id":5168,"nodeType":"Block","src":"3772:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:24","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"3829:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5163,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"3793:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5167,"nodeType":"RevertStatement","src":"3786:49:24"}]}},{"expression":{"arguments":[{"id":5172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5151,"src":"3870:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5170,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:24","typeDescriptions":{}}},"id":5173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5155,"id":5174,"nodeType":"Return","src":"3855:21:24"}]},"documentation":{"id":5149,"nodeType":"StructuredDocumentation","src":"3380:280:24","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5176,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:24","nodeType":"FunctionDefinition","parameters":{"id":5152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5151,"mutability":"mutable","name":"value","nameLocation":"3692:5:24","nodeType":"VariableDeclaration","scope":5176,"src":"3684:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5150,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:24"},"returnParameters":{"id":5155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5176,"src":"3722:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5153,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:24","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:24"},"scope":6774,"src":"3665:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5203,"nodeType":"Block","src":"4240:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5179,"src":"4254:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5186,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5185,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:24","memberName":"max","nodeType":"MemberAccess","src":"4262:17:24","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5197,"nodeType":"IfStatement","src":"4250:105:24","trueBody":{"id":5196,"nodeType":"Block","src":"4281:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:24","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5179,"src":"4338:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5191,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"4302:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5195,"nodeType":"RevertStatement","src":"4295:49:24"}]}},{"expression":{"arguments":[{"id":5200,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5179,"src":"4379:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5198,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:24","typeDescriptions":{}}},"id":5201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5183,"id":5202,"nodeType":"Return","src":"4364:21:24"}]},"documentation":{"id":5177,"nodeType":"StructuredDocumentation","src":"3889:280:24","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5204,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:24","nodeType":"FunctionDefinition","parameters":{"id":5180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5179,"mutability":"mutable","name":"value","nameLocation":"4201:5:24","nodeType":"VariableDeclaration","scope":5204,"src":"4193:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5178,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:24"},"returnParameters":{"id":5183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5204,"src":"4231:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5181,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:24","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:24"},"scope":6774,"src":"4174:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5231,"nodeType":"Block","src":"4749:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5207,"src":"4763:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5214,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5213,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:24","memberName":"max","nodeType":"MemberAccess","src":"4771:17:24","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5225,"nodeType":"IfStatement","src":"4759:105:24","trueBody":{"id":5224,"nodeType":"Block","src":"4790:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:24","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5221,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5207,"src":"4847:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5219,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"4811:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5223,"nodeType":"RevertStatement","src":"4804:49:24"}]}},{"expression":{"arguments":[{"id":5228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5207,"src":"4888:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5226,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:24","typeDescriptions":{}}},"id":5229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5211,"id":5230,"nodeType":"Return","src":"4873:21:24"}]},"documentation":{"id":5205,"nodeType":"StructuredDocumentation","src":"4398:280:24","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5232,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:24","nodeType":"FunctionDefinition","parameters":{"id":5208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5207,"mutability":"mutable","name":"value","nameLocation":"4710:5:24","nodeType":"VariableDeclaration","scope":5232,"src":"4702:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5206,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:24"},"returnParameters":{"id":5211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5232,"src":"4740:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5209,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:24","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:24"},"scope":6774,"src":"4683:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5259,"nodeType":"Block","src":"5258:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5235,"src":"5272:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5242,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5241,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:24","memberName":"max","nodeType":"MemberAccess","src":"5280:17:24","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5253,"nodeType":"IfStatement","src":"5268:105:24","trueBody":{"id":5252,"nodeType":"Block","src":"5299:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:24","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5235,"src":"5356:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5247,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"5320:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5251,"nodeType":"RevertStatement","src":"5313:49:24"}]}},{"expression":{"arguments":[{"id":5256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5235,"src":"5397:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5254,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:24","typeDescriptions":{}}},"id":5257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5239,"id":5258,"nodeType":"Return","src":"5382:21:24"}]},"documentation":{"id":5233,"nodeType":"StructuredDocumentation","src":"4907:280:24","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5260,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:24","nodeType":"FunctionDefinition","parameters":{"id":5236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5235,"mutability":"mutable","name":"value","nameLocation":"5219:5:24","nodeType":"VariableDeclaration","scope":5260,"src":"5211:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5234,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:24"},"returnParameters":{"id":5239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5260,"src":"5249:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5237,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:24","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:24"},"scope":6774,"src":"5192:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5287,"nodeType":"Block","src":"5767:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"5781:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5270,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5269,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:24","memberName":"max","nodeType":"MemberAccess","src":"5789:17:24","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5281,"nodeType":"IfStatement","src":"5777:105:24","trueBody":{"id":5280,"nodeType":"Block","src":"5808:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:24","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"5865:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5275,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"5829:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5279,"nodeType":"RevertStatement","src":"5822:49:24"}]}},{"expression":{"arguments":[{"id":5284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5263,"src":"5906:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5282,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:24","typeDescriptions":{}}},"id":5285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5267,"id":5286,"nodeType":"Return","src":"5891:21:24"}]},"documentation":{"id":5261,"nodeType":"StructuredDocumentation","src":"5416:280:24","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5288,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:24","nodeType":"FunctionDefinition","parameters":{"id":5264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5263,"mutability":"mutable","name":"value","nameLocation":"5728:5:24","nodeType":"VariableDeclaration","scope":5288,"src":"5720:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5262,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:24"},"returnParameters":{"id":5267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5288,"src":"5758:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5265,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:24","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:24"},"scope":6774,"src":"5701:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5315,"nodeType":"Block","src":"6276:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"6290:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5298,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5297,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:24","memberName":"max","nodeType":"MemberAccess","src":"6298:17:24","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5309,"nodeType":"IfStatement","src":"6286:105:24","trueBody":{"id":5308,"nodeType":"Block","src":"6317:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:24","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"6374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5303,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"6338:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5307,"nodeType":"RevertStatement","src":"6331:49:24"}]}},{"expression":{"arguments":[{"id":5312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5291,"src":"6415:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5310,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:24","typeDescriptions":{}}},"id":5313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5295,"id":5314,"nodeType":"Return","src":"6400:21:24"}]},"documentation":{"id":5289,"nodeType":"StructuredDocumentation","src":"5925:280:24","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5316,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:24","nodeType":"FunctionDefinition","parameters":{"id":5292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5291,"mutability":"mutable","name":"value","nameLocation":"6237:5:24","nodeType":"VariableDeclaration","scope":5316,"src":"6229:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5290,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:24"},"returnParameters":{"id":5295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5316,"src":"6267:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5293,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:24","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:24"},"scope":6774,"src":"6210:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5343,"nodeType":"Block","src":"6785:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5319,"src":"6799:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5326,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5325,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:24","memberName":"max","nodeType":"MemberAccess","src":"6807:17:24","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5337,"nodeType":"IfStatement","src":"6795:105:24","trueBody":{"id":5336,"nodeType":"Block","src":"6826:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:24","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5319,"src":"6883:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5331,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"6847:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5335,"nodeType":"RevertStatement","src":"6840:49:24"}]}},{"expression":{"arguments":[{"id":5340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5319,"src":"6924:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5338,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:24","typeDescriptions":{}}},"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5323,"id":5342,"nodeType":"Return","src":"6909:21:24"}]},"documentation":{"id":5317,"nodeType":"StructuredDocumentation","src":"6434:280:24","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5344,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:24","nodeType":"FunctionDefinition","parameters":{"id":5320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5319,"mutability":"mutable","name":"value","nameLocation":"6746:5:24","nodeType":"VariableDeclaration","scope":5344,"src":"6738:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5318,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:24"},"returnParameters":{"id":5323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5344,"src":"6776:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5321,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:24","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:24"},"scope":6774,"src":"6719:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5371,"nodeType":"Block","src":"7294:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5347,"src":"7308:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5354,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5353,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:24","memberName":"max","nodeType":"MemberAccess","src":"7316:17:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5365,"nodeType":"IfStatement","src":"7304:105:24","trueBody":{"id":5364,"nodeType":"Block","src":"7335:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:24","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5361,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5347,"src":"7392:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5359,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"7356:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5363,"nodeType":"RevertStatement","src":"7349:49:24"}]}},{"expression":{"arguments":[{"id":5368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5347,"src":"7433:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5366,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:24","typeDescriptions":{}}},"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5351,"id":5370,"nodeType":"Return","src":"7418:21:24"}]},"documentation":{"id":5345,"nodeType":"StructuredDocumentation","src":"6943:280:24","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5372,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:24","nodeType":"FunctionDefinition","parameters":{"id":5348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5347,"mutability":"mutable","name":"value","nameLocation":"7255:5:24","nodeType":"VariableDeclaration","scope":5372,"src":"7247:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5346,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:24"},"returnParameters":{"id":5351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5372,"src":"7285:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5349,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:24","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:24"},"scope":6774,"src":"7228:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5399,"nodeType":"Block","src":"7803:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5375,"src":"7817:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5382,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5381,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:24","memberName":"max","nodeType":"MemberAccess","src":"7825:17:24","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5393,"nodeType":"IfStatement","src":"7813:105:24","trueBody":{"id":5392,"nodeType":"Block","src":"7844:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:24","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5389,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5375,"src":"7901:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5387,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"7865:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5391,"nodeType":"RevertStatement","src":"7858:49:24"}]}},{"expression":{"arguments":[{"id":5396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5375,"src":"7942:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5394,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:24","typeDescriptions":{}}},"id":5397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5379,"id":5398,"nodeType":"Return","src":"7927:21:24"}]},"documentation":{"id":5373,"nodeType":"StructuredDocumentation","src":"7452:280:24","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5400,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:24","nodeType":"FunctionDefinition","parameters":{"id":5376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5375,"mutability":"mutable","name":"value","nameLocation":"7764:5:24","nodeType":"VariableDeclaration","scope":5400,"src":"7756:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5374,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:24"},"returnParameters":{"id":5379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5400,"src":"7794:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5377,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:24","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:24"},"scope":6774,"src":"7737:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5427,"nodeType":"Block","src":"8312:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5403,"src":"8326:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5410,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5409,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:24","memberName":"max","nodeType":"MemberAccess","src":"8334:17:24","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5421,"nodeType":"IfStatement","src":"8322:105:24","trueBody":{"id":5420,"nodeType":"Block","src":"8353:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:24","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5403,"src":"8410:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5415,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"8374:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5419,"nodeType":"RevertStatement","src":"8367:49:24"}]}},{"expression":{"arguments":[{"id":5424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5403,"src":"8451:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5422,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:24","typeDescriptions":{}}},"id":5425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5407,"id":5426,"nodeType":"Return","src":"8436:21:24"}]},"documentation":{"id":5401,"nodeType":"StructuredDocumentation","src":"7961:280:24","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5428,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:24","nodeType":"FunctionDefinition","parameters":{"id":5404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5403,"mutability":"mutable","name":"value","nameLocation":"8273:5:24","nodeType":"VariableDeclaration","scope":5428,"src":"8265:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5402,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:24"},"returnParameters":{"id":5407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5428,"src":"8303:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5405,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:24","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:24"},"scope":6774,"src":"8246:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5455,"nodeType":"Block","src":"8821:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5431,"src":"8835:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5438,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5437,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:24","memberName":"max","nodeType":"MemberAccess","src":"8843:17:24","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5449,"nodeType":"IfStatement","src":"8831:105:24","trueBody":{"id":5448,"nodeType":"Block","src":"8862:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:24","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5431,"src":"8919:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5443,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"8883:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5447,"nodeType":"RevertStatement","src":"8876:49:24"}]}},{"expression":{"arguments":[{"id":5452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5431,"src":"8960:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5450,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:24","typeDescriptions":{}}},"id":5453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5435,"id":5454,"nodeType":"Return","src":"8945:21:24"}]},"documentation":{"id":5429,"nodeType":"StructuredDocumentation","src":"8470:280:24","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5456,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:24","nodeType":"FunctionDefinition","parameters":{"id":5432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5431,"mutability":"mutable","name":"value","nameLocation":"8782:5:24","nodeType":"VariableDeclaration","scope":5456,"src":"8774:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5430,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:24"},"returnParameters":{"id":5435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5456,"src":"8812:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5433,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:24","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:24"},"scope":6774,"src":"8755:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5483,"nodeType":"Block","src":"9330:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5459,"src":"9344:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5466,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5465,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:24","memberName":"max","nodeType":"MemberAccess","src":"9352:17:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5477,"nodeType":"IfStatement","src":"9340:105:24","trueBody":{"id":5476,"nodeType":"Block","src":"9371:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5459,"src":"9428:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5471,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"9392:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5475,"nodeType":"RevertStatement","src":"9385:49:24"}]}},{"expression":{"arguments":[{"id":5480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5459,"src":"9469:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5478,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:24","typeDescriptions":{}}},"id":5481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5463,"id":5482,"nodeType":"Return","src":"9454:21:24"}]},"documentation":{"id":5457,"nodeType":"StructuredDocumentation","src":"8979:280:24","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5484,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:24","nodeType":"FunctionDefinition","parameters":{"id":5460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5459,"mutability":"mutable","name":"value","nameLocation":"9291:5:24","nodeType":"VariableDeclaration","scope":5484,"src":"9283:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5458,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:24"},"returnParameters":{"id":5463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5484,"src":"9321:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5461,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:24","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:24"},"scope":6774,"src":"9264:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5511,"nodeType":"Block","src":"9839:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5487,"src":"9853:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5494,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5493,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:24","memberName":"max","nodeType":"MemberAccess","src":"9861:17:24","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5505,"nodeType":"IfStatement","src":"9849:105:24","trueBody":{"id":5504,"nodeType":"Block","src":"9880:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:24","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5487,"src":"9937:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5499,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"9901:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5503,"nodeType":"RevertStatement","src":"9894:49:24"}]}},{"expression":{"arguments":[{"id":5508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5487,"src":"9978:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5506,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:24","typeDescriptions":{}}},"id":5509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5491,"id":5510,"nodeType":"Return","src":"9963:21:24"}]},"documentation":{"id":5485,"nodeType":"StructuredDocumentation","src":"9488:280:24","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5512,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:24","nodeType":"FunctionDefinition","parameters":{"id":5488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5487,"mutability":"mutable","name":"value","nameLocation":"9800:5:24","nodeType":"VariableDeclaration","scope":5512,"src":"9792:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5486,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:24"},"returnParameters":{"id":5491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5490,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5512,"src":"9830:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5489,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:24","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:24"},"scope":6774,"src":"9773:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5539,"nodeType":"Block","src":"10348:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"10362:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5522,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5521,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:24","memberName":"max","nodeType":"MemberAccess","src":"10370:17:24","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5533,"nodeType":"IfStatement","src":"10358:105:24","trueBody":{"id":5532,"nodeType":"Block","src":"10389:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:24","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"10446:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5527,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"10410:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5531,"nodeType":"RevertStatement","src":"10403:49:24"}]}},{"expression":{"arguments":[{"id":5536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5515,"src":"10487:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5534,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:24","typeDescriptions":{}}},"id":5537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5519,"id":5538,"nodeType":"Return","src":"10472:21:24"}]},"documentation":{"id":5513,"nodeType":"StructuredDocumentation","src":"9997:280:24","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5540,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:24","nodeType":"FunctionDefinition","parameters":{"id":5516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5515,"mutability":"mutable","name":"value","nameLocation":"10309:5:24","nodeType":"VariableDeclaration","scope":5540,"src":"10301:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5514,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:24"},"returnParameters":{"id":5519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5540,"src":"10339:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5517,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:24","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:24"},"scope":6774,"src":"10282:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5567,"nodeType":"Block","src":"10857:152:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"10871:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5550,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5549,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:24","memberName":"max","nodeType":"MemberAccess","src":"10879:17:24","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5561,"nodeType":"IfStatement","src":"10867:105:24","trueBody":{"id":5560,"nodeType":"Block","src":"10898:74:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:24","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"10955:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5555,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"10919:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5559,"nodeType":"RevertStatement","src":"10912:49:24"}]}},{"expression":{"arguments":[{"id":5564,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"10996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5562,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:24","typeDescriptions":{}}},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5547,"id":5566,"nodeType":"Return","src":"10981:21:24"}]},"documentation":{"id":5541,"nodeType":"StructuredDocumentation","src":"10506:280:24","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5568,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:24","nodeType":"FunctionDefinition","parameters":{"id":5544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5543,"mutability":"mutable","name":"value","nameLocation":"10818:5:24","nodeType":"VariableDeclaration","scope":5568,"src":"10810:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5542,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:24"},"returnParameters":{"id":5547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5568,"src":"10848:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5545,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:24","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:24"},"scope":6774,"src":"10791:218:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5595,"nodeType":"Block","src":"11360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5571,"src":"11374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5578,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5577,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:24","memberName":"max","nodeType":"MemberAccess","src":"11382:16:24","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5589,"nodeType":"IfStatement","src":"11370:103:24","trueBody":{"id":5588,"nodeType":"Block","src":"11400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5571,"src":"11456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5583,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"11421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5587,"nodeType":"RevertStatement","src":"11414:48:24"}]}},{"expression":{"arguments":[{"id":5592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5571,"src":"11496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5590,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:24","typeDescriptions":{}}},"id":5593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5575,"id":5594,"nodeType":"Return","src":"11482:20:24"}]},"documentation":{"id":5569,"nodeType":"StructuredDocumentation","src":"11015:276:24","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5596,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:24","nodeType":"FunctionDefinition","parameters":{"id":5572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5571,"mutability":"mutable","name":"value","nameLocation":"11322:5:24","nodeType":"VariableDeclaration","scope":5596,"src":"11314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5570,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:24"},"returnParameters":{"id":5575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5596,"src":"11352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5573,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:24","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:24"},"scope":6774,"src":"11296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5623,"nodeType":"Block","src":"11860:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5599,"src":"11874:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5606,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5605,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:24","memberName":"max","nodeType":"MemberAccess","src":"11882:16:24","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5617,"nodeType":"IfStatement","src":"11870:103:24","trueBody":{"id":5616,"nodeType":"Block","src":"11900:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:24","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5599,"src":"11956:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5611,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"11921:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5615,"nodeType":"RevertStatement","src":"11914:48:24"}]}},{"expression":{"arguments":[{"id":5620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5599,"src":"11996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5618,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:24","typeDescriptions":{}}},"id":5621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5603,"id":5622,"nodeType":"Return","src":"11982:20:24"}]},"documentation":{"id":5597,"nodeType":"StructuredDocumentation","src":"11515:276:24","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5624,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:24","nodeType":"FunctionDefinition","parameters":{"id":5600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5599,"mutability":"mutable","name":"value","nameLocation":"11822:5:24","nodeType":"VariableDeclaration","scope":5624,"src":"11814:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5598,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:24"},"returnParameters":{"id":5603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5624,"src":"11852:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5601,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:24","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:24"},"scope":6774,"src":"11796:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5651,"nodeType":"Block","src":"12360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"12374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5634,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5633,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:24","memberName":"max","nodeType":"MemberAccess","src":"12382:16:24","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5645,"nodeType":"IfStatement","src":"12370:103:24","trueBody":{"id":5644,"nodeType":"Block","src":"12400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"12456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5639,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"12421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5643,"nodeType":"RevertStatement","src":"12414:48:24"}]}},{"expression":{"arguments":[{"id":5648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5627,"src":"12496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5646,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:24","typeDescriptions":{}}},"id":5649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5631,"id":5650,"nodeType":"Return","src":"12482:20:24"}]},"documentation":{"id":5625,"nodeType":"StructuredDocumentation","src":"12015:276:24","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5652,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:24","nodeType":"FunctionDefinition","parameters":{"id":5628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5627,"mutability":"mutable","name":"value","nameLocation":"12322:5:24","nodeType":"VariableDeclaration","scope":5652,"src":"12314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5626,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:24"},"returnParameters":{"id":5631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5652,"src":"12352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5629,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:24","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:24"},"scope":6774,"src":"12296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5679,"nodeType":"Block","src":"12860:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5655,"src":"12874:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5662,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5661,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:24","memberName":"max","nodeType":"MemberAccess","src":"12882:16:24","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5673,"nodeType":"IfStatement","src":"12870:103:24","trueBody":{"id":5672,"nodeType":"Block","src":"12900:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:24","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5655,"src":"12956:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5667,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"12921:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5671,"nodeType":"RevertStatement","src":"12914:48:24"}]}},{"expression":{"arguments":[{"id":5676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5655,"src":"12996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5674,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:24","typeDescriptions":{}}},"id":5677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5659,"id":5678,"nodeType":"Return","src":"12982:20:24"}]},"documentation":{"id":5653,"nodeType":"StructuredDocumentation","src":"12515:276:24","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5680,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:24","nodeType":"FunctionDefinition","parameters":{"id":5656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5655,"mutability":"mutable","name":"value","nameLocation":"12822:5:24","nodeType":"VariableDeclaration","scope":5680,"src":"12814:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5654,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:24"},"returnParameters":{"id":5659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5680,"src":"12852:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5657,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:24","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:24"},"scope":6774,"src":"12796:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5707,"nodeType":"Block","src":"13360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"13374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5690,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5689,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:24","memberName":"max","nodeType":"MemberAccess","src":"13382:16:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5701,"nodeType":"IfStatement","src":"13370:103:24","trueBody":{"id":5700,"nodeType":"Block","src":"13400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"13456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5695,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"13421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5699,"nodeType":"RevertStatement","src":"13414:48:24"}]}},{"expression":{"arguments":[{"id":5704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5683,"src":"13496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5703,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5702,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:24","typeDescriptions":{}}},"id":5705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5687,"id":5706,"nodeType":"Return","src":"13482:20:24"}]},"documentation":{"id":5681,"nodeType":"StructuredDocumentation","src":"13015:276:24","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5708,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:24","nodeType":"FunctionDefinition","parameters":{"id":5684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5683,"mutability":"mutable","name":"value","nameLocation":"13322:5:24","nodeType":"VariableDeclaration","scope":5708,"src":"13314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5682,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:24"},"returnParameters":{"id":5687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5708,"src":"13352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5685,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:24"},"scope":6774,"src":"13296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5735,"nodeType":"Block","src":"13860:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5716,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"13874:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5718,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5717,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:24","memberName":"max","nodeType":"MemberAccess","src":"13882:16:24","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5729,"nodeType":"IfStatement","src":"13870:103:24","trueBody":{"id":5728,"nodeType":"Block","src":"13900:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:24","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"13956:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5723,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"13921:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5727,"nodeType":"RevertStatement","src":"13914:48:24"}]}},{"expression":{"arguments":[{"id":5732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"13996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5730,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:24","typeDescriptions":{}}},"id":5733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5715,"id":5734,"nodeType":"Return","src":"13982:20:24"}]},"documentation":{"id":5709,"nodeType":"StructuredDocumentation","src":"13515:276:24","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5736,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:24","nodeType":"FunctionDefinition","parameters":{"id":5712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5711,"mutability":"mutable","name":"value","nameLocation":"13822:5:24","nodeType":"VariableDeclaration","scope":5736,"src":"13814:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5710,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:24"},"returnParameters":{"id":5715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5736,"src":"13852:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5713,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:24","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:24"},"scope":6774,"src":"13796:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5763,"nodeType":"Block","src":"14360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5739,"src":"14374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5746,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5745,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:24","memberName":"max","nodeType":"MemberAccess","src":"14382:16:24","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5757,"nodeType":"IfStatement","src":"14370:103:24","trueBody":{"id":5756,"nodeType":"Block","src":"14400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5739,"src":"14456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5751,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"14421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5755,"nodeType":"RevertStatement","src":"14414:48:24"}]}},{"expression":{"arguments":[{"id":5760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5739,"src":"14496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5758,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:24","typeDescriptions":{}}},"id":5761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5743,"id":5762,"nodeType":"Return","src":"14482:20:24"}]},"documentation":{"id":5737,"nodeType":"StructuredDocumentation","src":"14015:276:24","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5764,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:24","nodeType":"FunctionDefinition","parameters":{"id":5740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5739,"mutability":"mutable","name":"value","nameLocation":"14322:5:24","nodeType":"VariableDeclaration","scope":5764,"src":"14314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5738,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:24"},"returnParameters":{"id":5743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5764,"src":"14352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5741,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:24","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:24"},"scope":6774,"src":"14296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5791,"nodeType":"Block","src":"14860:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5767,"src":"14874:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5774,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5773,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:24","memberName":"max","nodeType":"MemberAccess","src":"14882:16:24","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5785,"nodeType":"IfStatement","src":"14870:103:24","trueBody":{"id":5784,"nodeType":"Block","src":"14900:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:24","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5767,"src":"14956:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5779,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"14921:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5783,"nodeType":"RevertStatement","src":"14914:48:24"}]}},{"expression":{"arguments":[{"id":5788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5767,"src":"14996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5786,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:24","typeDescriptions":{}}},"id":5789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5771,"id":5790,"nodeType":"Return","src":"14982:20:24"}]},"documentation":{"id":5765,"nodeType":"StructuredDocumentation","src":"14515:276:24","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5792,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:24","nodeType":"FunctionDefinition","parameters":{"id":5768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5767,"mutability":"mutable","name":"value","nameLocation":"14822:5:24","nodeType":"VariableDeclaration","scope":5792,"src":"14814:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5766,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:24"},"returnParameters":{"id":5771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5792,"src":"14852:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5769,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:24","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:24"},"scope":6774,"src":"14796:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5819,"nodeType":"Block","src":"15360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"15374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5802,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5801,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:24","memberName":"max","nodeType":"MemberAccess","src":"15382:16:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5813,"nodeType":"IfStatement","src":"15370:103:24","trueBody":{"id":5812,"nodeType":"Block","src":"15400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"15456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5807,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"15421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5811,"nodeType":"RevertStatement","src":"15414:48:24"}]}},{"expression":{"arguments":[{"id":5816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5795,"src":"15496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5814,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:24","typeDescriptions":{}}},"id":5817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5799,"id":5818,"nodeType":"Return","src":"15482:20:24"}]},"documentation":{"id":5793,"nodeType":"StructuredDocumentation","src":"15015:276:24","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5820,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:24","nodeType":"FunctionDefinition","parameters":{"id":5796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5795,"mutability":"mutable","name":"value","nameLocation":"15322:5:24","nodeType":"VariableDeclaration","scope":5820,"src":"15314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5794,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:24"},"returnParameters":{"id":5799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5820,"src":"15352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5797,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:24"},"scope":6774,"src":"15296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5847,"nodeType":"Block","src":"15860:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5823,"src":"15874:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5830,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5829,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:24","memberName":"max","nodeType":"MemberAccess","src":"15882:16:24","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5841,"nodeType":"IfStatement","src":"15870:103:24","trueBody":{"id":5840,"nodeType":"Block","src":"15900:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:24","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5823,"src":"15956:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5835,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"15921:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5839,"nodeType":"RevertStatement","src":"15914:48:24"}]}},{"expression":{"arguments":[{"id":5844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5823,"src":"15996:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5842,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:24","typeDescriptions":{}}},"id":5845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5827,"id":5846,"nodeType":"Return","src":"15982:20:24"}]},"documentation":{"id":5821,"nodeType":"StructuredDocumentation","src":"15515:276:24","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5848,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:24","nodeType":"FunctionDefinition","parameters":{"id":5824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5823,"mutability":"mutable","name":"value","nameLocation":"15822:5:24","nodeType":"VariableDeclaration","scope":5848,"src":"15814:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5822,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:24"},"returnParameters":{"id":5827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5848,"src":"15852:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5825,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:24","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:24"},"scope":6774,"src":"15796:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5875,"nodeType":"Block","src":"16360:149:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"16374:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5858,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5857,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:24","memberName":"max","nodeType":"MemberAccess","src":"16382:16:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5869,"nodeType":"IfStatement","src":"16370:103:24","trueBody":{"id":5868,"nodeType":"Block","src":"16400:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"16456:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5863,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"16421:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5867,"nodeType":"RevertStatement","src":"16414:48:24"}]}},{"expression":{"arguments":[{"id":5872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5851,"src":"16496:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5870,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:24","typeDescriptions":{}}},"id":5873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5855,"id":5874,"nodeType":"Return","src":"16482:20:24"}]},"documentation":{"id":5849,"nodeType":"StructuredDocumentation","src":"16015:276:24","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5876,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:24","nodeType":"FunctionDefinition","parameters":{"id":5852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5851,"mutability":"mutable","name":"value","nameLocation":"16322:5:24","nodeType":"VariableDeclaration","scope":5876,"src":"16314:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5850,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:24"},"returnParameters":{"id":5855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5854,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5876,"src":"16352:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5853,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:24"},"scope":6774,"src":"16296:213:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5903,"nodeType":"Block","src":"16854:146:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5879,"src":"16868:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5886,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5885,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:24","memberName":"max","nodeType":"MemberAccess","src":"16876:15:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5897,"nodeType":"IfStatement","src":"16864:101:24","trueBody":{"id":5896,"nodeType":"Block","src":"16893:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5879,"src":"16948:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5891,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"16914:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5895,"nodeType":"RevertStatement","src":"16907:47:24"}]}},{"expression":{"arguments":[{"id":5900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5879,"src":"16987:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5898,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:24","typeDescriptions":{}}},"id":5901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5883,"id":5902,"nodeType":"Return","src":"16974:19:24"}]},"documentation":{"id":5877,"nodeType":"StructuredDocumentation","src":"16515:272:24","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5904,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:24","nodeType":"FunctionDefinition","parameters":{"id":5880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5879,"mutability":"mutable","name":"value","nameLocation":"16817:5:24","nodeType":"VariableDeclaration","scope":5904,"src":"16809:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5878,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:24"},"returnParameters":{"id":5883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5904,"src":"16847:5:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5881,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:24"},"scope":6774,"src":"16792:208:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5926,"nodeType":"Block","src":"17236:128:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"17250:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5920,"nodeType":"IfStatement","src":"17246:81:24","trueBody":{"id":5919,"nodeType":"Block","src":"17261:66:24","statements":[{"errorCall":{"arguments":[{"id":5916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"17310:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5915,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"17282:27:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":5917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5918,"nodeType":"RevertStatement","src":"17275:41:24"}]}},{"expression":{"arguments":[{"id":5923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"17351:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5921,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:24","typeDescriptions":{}}},"id":5924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5911,"id":5925,"nodeType":"Return","src":"17336:21:24"}]},"documentation":{"id":5905,"nodeType":"StructuredDocumentation","src":"17006:160:24","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5927,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:24","nodeType":"FunctionDefinition","parameters":{"id":5908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5907,"mutability":"mutable","name":"value","nameLocation":"17197:5:24","nodeType":"VariableDeclaration","scope":5927,"src":"17190:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5906,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:24"},"returnParameters":{"id":5911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5910,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5927,"src":"17227:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5909,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:24"},"scope":6774,"src":"17171:193:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5952,"nodeType":"Block","src":"17761:150:24","statements":[{"expression":{"id":5940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5935,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5933,"src":"17771:10:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"17791:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5936,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:24","typeDescriptions":{}}},"id":5939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5941,"nodeType":"ExpressionStatement","src":"17771:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5942,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5933,"src":"17811:10:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"17825:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5951,"nodeType":"IfStatement","src":"17807:98:24","trueBody":{"id":5950,"nodeType":"Block","src":"17832:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:24","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"17888:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5945,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"17853:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5949,"nodeType":"RevertStatement","src":"17846:48:24"}]}}]},"documentation":{"id":5928,"nodeType":"StructuredDocumentation","src":"17370:312:24","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5953,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:24","nodeType":"FunctionDefinition","parameters":{"id":5931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5930,"mutability":"mutable","name":"value","nameLocation":"17712:5:24","nodeType":"VariableDeclaration","scope":5953,"src":"17705:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5929,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:24"},"returnParameters":{"id":5934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5933,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:24","nodeType":"VariableDeclaration","scope":5953,"src":"17742:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5932,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:24","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:24"},"scope":6774,"src":"17687:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5978,"nodeType":"Block","src":"18308:150:24","statements":[{"expression":{"id":5966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5961,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5959,"src":"18318:10:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"18338:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5962,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:24","typeDescriptions":{}}},"id":5965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5967,"nodeType":"ExpressionStatement","src":"18318:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5968,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5959,"src":"18358:10:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"18372:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5977,"nodeType":"IfStatement","src":"18354:98:24","trueBody":{"id":5976,"nodeType":"Block","src":"18379:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:24","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5956,"src":"18435:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5971,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"18400:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5975,"nodeType":"RevertStatement","src":"18393:48:24"}]}}]},"documentation":{"id":5954,"nodeType":"StructuredDocumentation","src":"17917:312:24","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5979,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:24","nodeType":"FunctionDefinition","parameters":{"id":5957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5956,"mutability":"mutable","name":"value","nameLocation":"18259:5:24","nodeType":"VariableDeclaration","scope":5979,"src":"18252:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5955,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:24"},"returnParameters":{"id":5960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5959,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:24","nodeType":"VariableDeclaration","scope":5979,"src":"18289:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5958,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:24","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:24"},"scope":6774,"src":"18234:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6004,"nodeType":"Block","src":"18855:150:24","statements":[{"expression":{"id":5992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5987,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"18865:10:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5982,"src":"18885:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5988,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:24","typeDescriptions":{}}},"id":5991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5993,"nodeType":"ExpressionStatement","src":"18865:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5994,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"18905:10:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5982,"src":"18919:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6003,"nodeType":"IfStatement","src":"18901:98:24","trueBody":{"id":6002,"nodeType":"Block","src":"18926:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:24","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5982,"src":"18982:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5997,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"18947:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6001,"nodeType":"RevertStatement","src":"18940:48:24"}]}}]},"documentation":{"id":5980,"nodeType":"StructuredDocumentation","src":"18464:312:24","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6005,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:24","nodeType":"FunctionDefinition","parameters":{"id":5983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5982,"mutability":"mutable","name":"value","nameLocation":"18806:5:24","nodeType":"VariableDeclaration","scope":6005,"src":"18799:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5981,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:24"},"returnParameters":{"id":5986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5985,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:24","nodeType":"VariableDeclaration","scope":6005,"src":"18836:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5984,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:24","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:24"},"scope":6774,"src":"18781:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6030,"nodeType":"Block","src":"19402:150:24","statements":[{"expression":{"id":6018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6013,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6011,"src":"19412:10:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6016,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6008,"src":"19432:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6014,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:24","typeDescriptions":{}}},"id":6017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6019,"nodeType":"ExpressionStatement","src":"19412:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6020,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6011,"src":"19452:10:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6008,"src":"19466:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6029,"nodeType":"IfStatement","src":"19448:98:24","trueBody":{"id":6028,"nodeType":"Block","src":"19473:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:24","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6025,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6008,"src":"19529:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6023,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"19494:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6027,"nodeType":"RevertStatement","src":"19487:48:24"}]}}]},"documentation":{"id":6006,"nodeType":"StructuredDocumentation","src":"19011:312:24","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6031,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:24","nodeType":"FunctionDefinition","parameters":{"id":6009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6008,"mutability":"mutable","name":"value","nameLocation":"19353:5:24","nodeType":"VariableDeclaration","scope":6031,"src":"19346:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6007,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:24"},"returnParameters":{"id":6012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6011,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:24","nodeType":"VariableDeclaration","scope":6031,"src":"19383:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6010,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:24","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:24"},"scope":6774,"src":"19328:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6056,"nodeType":"Block","src":"19949:150:24","statements":[{"expression":{"id":6044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6039,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"19959:10:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"19979:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6040,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:24","typeDescriptions":{}}},"id":6043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6045,"nodeType":"ExpressionStatement","src":"19959:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6046,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"19999:10:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"20013:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6055,"nodeType":"IfStatement","src":"19995:98:24","trueBody":{"id":6054,"nodeType":"Block","src":"20020:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:24","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"20076:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6049,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"20041:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6053,"nodeType":"RevertStatement","src":"20034:48:24"}]}}]},"documentation":{"id":6032,"nodeType":"StructuredDocumentation","src":"19558:312:24","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6057,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:24","nodeType":"FunctionDefinition","parameters":{"id":6035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6034,"mutability":"mutable","name":"value","nameLocation":"19900:5:24","nodeType":"VariableDeclaration","scope":6057,"src":"19893:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6033,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:24"},"returnParameters":{"id":6038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6037,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:24","nodeType":"VariableDeclaration","scope":6057,"src":"19930:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6036,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:24","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:24"},"scope":6774,"src":"19875:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6082,"nodeType":"Block","src":"20496:150:24","statements":[{"expression":{"id":6070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6065,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6063,"src":"20506:10:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6068,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"20526:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6066,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:24","typeDescriptions":{}}},"id":6069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6071,"nodeType":"ExpressionStatement","src":"20506:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6072,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6063,"src":"20546:10:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"20560:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6081,"nodeType":"IfStatement","src":"20542:98:24","trueBody":{"id":6080,"nodeType":"Block","src":"20567:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:24","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6060,"src":"20623:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6075,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"20588:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6079,"nodeType":"RevertStatement","src":"20581:48:24"}]}}]},"documentation":{"id":6058,"nodeType":"StructuredDocumentation","src":"20105:312:24","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6083,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:24","nodeType":"FunctionDefinition","parameters":{"id":6061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6060,"mutability":"mutable","name":"value","nameLocation":"20447:5:24","nodeType":"VariableDeclaration","scope":6083,"src":"20440:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6059,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:24"},"returnParameters":{"id":6064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6063,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:24","nodeType":"VariableDeclaration","scope":6083,"src":"20477:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6062,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:24","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:24"},"scope":6774,"src":"20422:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6108,"nodeType":"Block","src":"21043:150:24","statements":[{"expression":{"id":6096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6091,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6089,"src":"21053:10:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"21073:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6092,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:24","typeDescriptions":{}}},"id":6095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6097,"nodeType":"ExpressionStatement","src":"21053:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6098,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6089,"src":"21093:10:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"21107:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6107,"nodeType":"IfStatement","src":"21089:98:24","trueBody":{"id":6106,"nodeType":"Block","src":"21114:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:24","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6086,"src":"21170:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6101,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"21135:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6105,"nodeType":"RevertStatement","src":"21128:48:24"}]}}]},"documentation":{"id":6084,"nodeType":"StructuredDocumentation","src":"20652:312:24","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6109,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:24","nodeType":"FunctionDefinition","parameters":{"id":6087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6086,"mutability":"mutable","name":"value","nameLocation":"20994:5:24","nodeType":"VariableDeclaration","scope":6109,"src":"20987:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6085,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:24"},"returnParameters":{"id":6090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6089,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:24","nodeType":"VariableDeclaration","scope":6109,"src":"21024:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6088,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:24","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:24"},"scope":6774,"src":"20969:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6134,"nodeType":"Block","src":"21590:150:24","statements":[{"expression":{"id":6122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6117,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"21600:10:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6120,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6112,"src":"21620:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6118,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:24","typeDescriptions":{}}},"id":6121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6123,"nodeType":"ExpressionStatement","src":"21600:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6124,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"21640:10:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6112,"src":"21654:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6133,"nodeType":"IfStatement","src":"21636:98:24","trueBody":{"id":6132,"nodeType":"Block","src":"21661:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:24","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6112,"src":"21717:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6127,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"21682:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6131,"nodeType":"RevertStatement","src":"21675:48:24"}]}}]},"documentation":{"id":6110,"nodeType":"StructuredDocumentation","src":"21199:312:24","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6135,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:24","nodeType":"FunctionDefinition","parameters":{"id":6113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6112,"mutability":"mutable","name":"value","nameLocation":"21541:5:24","nodeType":"VariableDeclaration","scope":6135,"src":"21534:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6111,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:24"},"returnParameters":{"id":6116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6115,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:24","nodeType":"VariableDeclaration","scope":6135,"src":"21571:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6114,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:24","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:24"},"scope":6774,"src":"21516:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6160,"nodeType":"Block","src":"22137:150:24","statements":[{"expression":{"id":6148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6143,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6141,"src":"22147:10:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"22167:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6144,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:24","typeDescriptions":{}}},"id":6147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6149,"nodeType":"ExpressionStatement","src":"22147:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6150,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6141,"src":"22187:10:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"22201:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6159,"nodeType":"IfStatement","src":"22183:98:24","trueBody":{"id":6158,"nodeType":"Block","src":"22208:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:24","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6138,"src":"22264:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6153,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"22229:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6157,"nodeType":"RevertStatement","src":"22222:48:24"}]}}]},"documentation":{"id":6136,"nodeType":"StructuredDocumentation","src":"21746:312:24","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6161,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:24","nodeType":"FunctionDefinition","parameters":{"id":6139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6138,"mutability":"mutable","name":"value","nameLocation":"22088:5:24","nodeType":"VariableDeclaration","scope":6161,"src":"22081:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6137,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:24"},"returnParameters":{"id":6142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6141,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:24","nodeType":"VariableDeclaration","scope":6161,"src":"22118:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6140,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:24","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:24"},"scope":6774,"src":"22063:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6186,"nodeType":"Block","src":"22684:150:24","statements":[{"expression":{"id":6174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6169,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6167,"src":"22694:10:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6164,"src":"22714:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6170,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:24","typeDescriptions":{}}},"id":6173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6175,"nodeType":"ExpressionStatement","src":"22694:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6176,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6167,"src":"22734:10:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6164,"src":"22748:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6185,"nodeType":"IfStatement","src":"22730:98:24","trueBody":{"id":6184,"nodeType":"Block","src":"22755:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:24","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6164,"src":"22811:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6179,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"22776:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6183,"nodeType":"RevertStatement","src":"22769:48:24"}]}}]},"documentation":{"id":6162,"nodeType":"StructuredDocumentation","src":"22293:312:24","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6187,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:24","nodeType":"FunctionDefinition","parameters":{"id":6165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6164,"mutability":"mutable","name":"value","nameLocation":"22635:5:24","nodeType":"VariableDeclaration","scope":6187,"src":"22628:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6163,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:24"},"returnParameters":{"id":6168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6167,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:24","nodeType":"VariableDeclaration","scope":6187,"src":"22665:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6166,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:24","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:24"},"scope":6774,"src":"22610:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6212,"nodeType":"Block","src":"23231:150:24","statements":[{"expression":{"id":6200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6195,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6193,"src":"23241:10:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6190,"src":"23261:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6196,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:24","typeDescriptions":{}}},"id":6199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6201,"nodeType":"ExpressionStatement","src":"23241:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6202,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6193,"src":"23281:10:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6190,"src":"23295:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6211,"nodeType":"IfStatement","src":"23277:98:24","trueBody":{"id":6210,"nodeType":"Block","src":"23302:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:24","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6190,"src":"23358:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6205,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"23323:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6209,"nodeType":"RevertStatement","src":"23316:48:24"}]}}]},"documentation":{"id":6188,"nodeType":"StructuredDocumentation","src":"22840:312:24","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6213,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:24","nodeType":"FunctionDefinition","parameters":{"id":6191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6190,"mutability":"mutable","name":"value","nameLocation":"23182:5:24","nodeType":"VariableDeclaration","scope":6213,"src":"23175:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6189,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:24"},"returnParameters":{"id":6194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6193,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:24","nodeType":"VariableDeclaration","scope":6213,"src":"23212:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6192,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:24","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:24"},"scope":6774,"src":"23157:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6238,"nodeType":"Block","src":"23778:150:24","statements":[{"expression":{"id":6226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6221,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6219,"src":"23788:10:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6216,"src":"23808:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6222,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:24","typeDescriptions":{}}},"id":6225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6227,"nodeType":"ExpressionStatement","src":"23788:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6228,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6219,"src":"23828:10:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6216,"src":"23842:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6237,"nodeType":"IfStatement","src":"23824:98:24","trueBody":{"id":6236,"nodeType":"Block","src":"23849:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:24","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6216,"src":"23905:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6231,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"23870:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6235,"nodeType":"RevertStatement","src":"23863:48:24"}]}}]},"documentation":{"id":6214,"nodeType":"StructuredDocumentation","src":"23387:312:24","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6239,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:24","nodeType":"FunctionDefinition","parameters":{"id":6217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6216,"mutability":"mutable","name":"value","nameLocation":"23729:5:24","nodeType":"VariableDeclaration","scope":6239,"src":"23722:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6215,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:24"},"returnParameters":{"id":6220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6219,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:24","nodeType":"VariableDeclaration","scope":6239,"src":"23759:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6218,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:24","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:24"},"scope":6774,"src":"23704:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6264,"nodeType":"Block","src":"24325:150:24","statements":[{"expression":{"id":6252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6247,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6245,"src":"24335:10:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6242,"src":"24355:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6248,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:24","typeDescriptions":{}}},"id":6251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6253,"nodeType":"ExpressionStatement","src":"24335:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6254,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6245,"src":"24375:10:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6242,"src":"24389:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6263,"nodeType":"IfStatement","src":"24371:98:24","trueBody":{"id":6262,"nodeType":"Block","src":"24396:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:24","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6242,"src":"24452:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6257,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"24417:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6261,"nodeType":"RevertStatement","src":"24410:48:24"}]}}]},"documentation":{"id":6240,"nodeType":"StructuredDocumentation","src":"23934:312:24","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6265,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:24","nodeType":"FunctionDefinition","parameters":{"id":6243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6242,"mutability":"mutable","name":"value","nameLocation":"24276:5:24","nodeType":"VariableDeclaration","scope":6265,"src":"24269:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6241,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:24"},"returnParameters":{"id":6246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6245,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:24","nodeType":"VariableDeclaration","scope":6265,"src":"24306:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6244,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:24","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:24"},"scope":6774,"src":"24251:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6290,"nodeType":"Block","src":"24872:150:24","statements":[{"expression":{"id":6278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6273,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"24882:10:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6268,"src":"24902:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6274,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:24","typeDescriptions":{}}},"id":6277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6279,"nodeType":"ExpressionStatement","src":"24882:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6280,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"24922:10:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6268,"src":"24936:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6289,"nodeType":"IfStatement","src":"24918:98:24","trueBody":{"id":6288,"nodeType":"Block","src":"24943:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:24","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6268,"src":"24999:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6283,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"24964:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6287,"nodeType":"RevertStatement","src":"24957:48:24"}]}}]},"documentation":{"id":6266,"nodeType":"StructuredDocumentation","src":"24481:312:24","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6291,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:24","nodeType":"FunctionDefinition","parameters":{"id":6269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6268,"mutability":"mutable","name":"value","nameLocation":"24823:5:24","nodeType":"VariableDeclaration","scope":6291,"src":"24816:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6267,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:24"},"returnParameters":{"id":6272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6271,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:24","nodeType":"VariableDeclaration","scope":6291,"src":"24853:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6270,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:24","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:24"},"scope":6774,"src":"24798:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6316,"nodeType":"Block","src":"25419:150:24","statements":[{"expression":{"id":6304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6299,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6297,"src":"25429:10:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6294,"src":"25449:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6300,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:24","typeDescriptions":{}}},"id":6303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6305,"nodeType":"ExpressionStatement","src":"25429:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6306,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6297,"src":"25469:10:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6294,"src":"25483:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6315,"nodeType":"IfStatement","src":"25465:98:24","trueBody":{"id":6314,"nodeType":"Block","src":"25490:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:24","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6294,"src":"25546:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6309,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"25511:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6313,"nodeType":"RevertStatement","src":"25504:48:24"}]}}]},"documentation":{"id":6292,"nodeType":"StructuredDocumentation","src":"25028:312:24","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6317,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:24","nodeType":"FunctionDefinition","parameters":{"id":6295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6294,"mutability":"mutable","name":"value","nameLocation":"25370:5:24","nodeType":"VariableDeclaration","scope":6317,"src":"25363:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6293,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:24"},"returnParameters":{"id":6298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6297,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:24","nodeType":"VariableDeclaration","scope":6317,"src":"25400:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6296,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:24","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:24"},"scope":6774,"src":"25345:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6342,"nodeType":"Block","src":"25966:150:24","statements":[{"expression":{"id":6330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6325,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"25976:10:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"25996:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6326,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:24","typeDescriptions":{}}},"id":6329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6331,"nodeType":"ExpressionStatement","src":"25976:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6332,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"26016:10:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"26030:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6341,"nodeType":"IfStatement","src":"26012:98:24","trueBody":{"id":6340,"nodeType":"Block","src":"26037:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6320,"src":"26093:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6335,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"26058:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6339,"nodeType":"RevertStatement","src":"26051:48:24"}]}}]},"documentation":{"id":6318,"nodeType":"StructuredDocumentation","src":"25575:312:24","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6343,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:24","nodeType":"FunctionDefinition","parameters":{"id":6321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6320,"mutability":"mutable","name":"value","nameLocation":"25917:5:24","nodeType":"VariableDeclaration","scope":6343,"src":"25910:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6319,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:24"},"returnParameters":{"id":6324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6323,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:24","nodeType":"VariableDeclaration","scope":6343,"src":"25947:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6322,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:24","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:24"},"scope":6774,"src":"25892:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6368,"nodeType":"Block","src":"26513:150:24","statements":[{"expression":{"id":6356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6351,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6349,"src":"26523:10:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6346,"src":"26543:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6352,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:24","typeDescriptions":{}}},"id":6355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6357,"nodeType":"ExpressionStatement","src":"26523:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6358,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6349,"src":"26563:10:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6346,"src":"26577:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6367,"nodeType":"IfStatement","src":"26559:98:24","trueBody":{"id":6366,"nodeType":"Block","src":"26584:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:24","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6346,"src":"26640:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6361,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"26605:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6365,"nodeType":"RevertStatement","src":"26598:48:24"}]}}]},"documentation":{"id":6344,"nodeType":"StructuredDocumentation","src":"26122:312:24","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6369,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:24","nodeType":"FunctionDefinition","parameters":{"id":6347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6346,"mutability":"mutable","name":"value","nameLocation":"26464:5:24","nodeType":"VariableDeclaration","scope":6369,"src":"26457:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6345,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:24"},"returnParameters":{"id":6350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6349,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:24","nodeType":"VariableDeclaration","scope":6369,"src":"26494:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6348,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:24","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:24"},"scope":6774,"src":"26439:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6394,"nodeType":"Block","src":"27060:150:24","statements":[{"expression":{"id":6382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6377,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6375,"src":"27070:10:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"27090:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6378,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:24","typeDescriptions":{}}},"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6383,"nodeType":"ExpressionStatement","src":"27070:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6384,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6375,"src":"27110:10:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"27124:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6393,"nodeType":"IfStatement","src":"27106:98:24","trueBody":{"id":6392,"nodeType":"Block","src":"27131:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:24","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6389,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6372,"src":"27187:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6387,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"27152:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6391,"nodeType":"RevertStatement","src":"27145:48:24"}]}}]},"documentation":{"id":6370,"nodeType":"StructuredDocumentation","src":"26669:312:24","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6395,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:24","nodeType":"FunctionDefinition","parameters":{"id":6373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6372,"mutability":"mutable","name":"value","nameLocation":"27011:5:24","nodeType":"VariableDeclaration","scope":6395,"src":"27004:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6371,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:24"},"returnParameters":{"id":6376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6375,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:24","nodeType":"VariableDeclaration","scope":6395,"src":"27041:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6374,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:24","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:24"},"scope":6774,"src":"26986:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6420,"nodeType":"Block","src":"27607:150:24","statements":[{"expression":{"id":6408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6403,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6401,"src":"27617:10:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6398,"src":"27637:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6404,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:24","typeDescriptions":{}}},"id":6407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6409,"nodeType":"ExpressionStatement","src":"27617:26:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6410,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6401,"src":"27657:10:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6398,"src":"27671:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6419,"nodeType":"IfStatement","src":"27653:98:24","trueBody":{"id":6418,"nodeType":"Block","src":"27678:73:24","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:24","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6398,"src":"27734:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6413,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"27699:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6417,"nodeType":"RevertStatement","src":"27692:48:24"}]}}]},"documentation":{"id":6396,"nodeType":"StructuredDocumentation","src":"27216:312:24","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6421,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:24","nodeType":"FunctionDefinition","parameters":{"id":6399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6398,"mutability":"mutable","name":"value","nameLocation":"27558:5:24","nodeType":"VariableDeclaration","scope":6421,"src":"27551:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6397,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:24"},"returnParameters":{"id":6402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6401,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:24","nodeType":"VariableDeclaration","scope":6421,"src":"27588:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6400,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:24","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:24"},"scope":6774,"src":"27533:224:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6446,"nodeType":"Block","src":"28147:148:24","statements":[{"expression":{"id":6434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6429,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6427,"src":"28157:10:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6424,"src":"28176:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6430,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:24","typeDescriptions":{}}},"id":6433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6435,"nodeType":"ExpressionStatement","src":"28157:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6436,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6427,"src":"28196:10:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6424,"src":"28210:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6445,"nodeType":"IfStatement","src":"28192:97:24","trueBody":{"id":6444,"nodeType":"Block","src":"28217:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:24","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6424,"src":"28272:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6439,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"28238:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6443,"nodeType":"RevertStatement","src":"28231:47:24"}]}}]},"documentation":{"id":6422,"nodeType":"StructuredDocumentation","src":"27763:307:24","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6447,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:24","nodeType":"FunctionDefinition","parameters":{"id":6425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6424,"mutability":"mutable","name":"value","nameLocation":"28099:5:24","nodeType":"VariableDeclaration","scope":6447,"src":"28092:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6423,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:24"},"returnParameters":{"id":6428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6427,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:24","nodeType":"VariableDeclaration","scope":6447,"src":"28129:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6426,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:24","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:24"},"scope":6774,"src":"28075:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6472,"nodeType":"Block","src":"28685:148:24","statements":[{"expression":{"id":6460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6455,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6453,"src":"28695:10:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6450,"src":"28714:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6456,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:24","typeDescriptions":{}}},"id":6459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6461,"nodeType":"ExpressionStatement","src":"28695:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6462,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6453,"src":"28734:10:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6450,"src":"28748:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6471,"nodeType":"IfStatement","src":"28730:97:24","trueBody":{"id":6470,"nodeType":"Block","src":"28755:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:24","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6450,"src":"28810:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6465,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"28776:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6469,"nodeType":"RevertStatement","src":"28769:47:24"}]}}]},"documentation":{"id":6448,"nodeType":"StructuredDocumentation","src":"28301:307:24","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6473,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:24","nodeType":"FunctionDefinition","parameters":{"id":6451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6450,"mutability":"mutable","name":"value","nameLocation":"28637:5:24","nodeType":"VariableDeclaration","scope":6473,"src":"28630:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6449,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:24"},"returnParameters":{"id":6454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6453,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:24","nodeType":"VariableDeclaration","scope":6473,"src":"28667:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6452,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:24","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:24"},"scope":6774,"src":"28613:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6498,"nodeType":"Block","src":"29223:148:24","statements":[{"expression":{"id":6486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6481,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6479,"src":"29233:10:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6484,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6476,"src":"29252:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6482,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:24","typeDescriptions":{}}},"id":6485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6487,"nodeType":"ExpressionStatement","src":"29233:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6488,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6479,"src":"29272:10:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6476,"src":"29286:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6497,"nodeType":"IfStatement","src":"29268:97:24","trueBody":{"id":6496,"nodeType":"Block","src":"29293:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:24","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6476,"src":"29348:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6491,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"29314:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6495,"nodeType":"RevertStatement","src":"29307:47:24"}]}}]},"documentation":{"id":6474,"nodeType":"StructuredDocumentation","src":"28839:307:24","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6499,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:24","nodeType":"FunctionDefinition","parameters":{"id":6477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6476,"mutability":"mutable","name":"value","nameLocation":"29175:5:24","nodeType":"VariableDeclaration","scope":6499,"src":"29168:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6475,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:24"},"returnParameters":{"id":6480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6479,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:24","nodeType":"VariableDeclaration","scope":6499,"src":"29205:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6478,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:24","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:24"},"scope":6774,"src":"29151:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6524,"nodeType":"Block","src":"29761:148:24","statements":[{"expression":{"id":6512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6507,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6505,"src":"29771:10:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"29790:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6508,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:24","typeDescriptions":{}}},"id":6511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6513,"nodeType":"ExpressionStatement","src":"29771:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6514,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6505,"src":"29810:10:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"29824:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6523,"nodeType":"IfStatement","src":"29806:97:24","trueBody":{"id":6522,"nodeType":"Block","src":"29831:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:24","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6502,"src":"29886:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6517,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"29852:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6521,"nodeType":"RevertStatement","src":"29845:47:24"}]}}]},"documentation":{"id":6500,"nodeType":"StructuredDocumentation","src":"29377:307:24","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6525,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:24","nodeType":"FunctionDefinition","parameters":{"id":6503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6502,"mutability":"mutable","name":"value","nameLocation":"29713:5:24","nodeType":"VariableDeclaration","scope":6525,"src":"29706:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6501,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:24"},"returnParameters":{"id":6506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6505,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:24","nodeType":"VariableDeclaration","scope":6525,"src":"29743:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6504,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:24","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:24"},"scope":6774,"src":"29689:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6550,"nodeType":"Block","src":"30299:148:24","statements":[{"expression":{"id":6538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6533,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"30309:10:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6528,"src":"30328:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6534,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:24","typeDescriptions":{}}},"id":6537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6539,"nodeType":"ExpressionStatement","src":"30309:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6540,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"30348:10:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6528,"src":"30362:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6549,"nodeType":"IfStatement","src":"30344:97:24","trueBody":{"id":6548,"nodeType":"Block","src":"30369:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6528,"src":"30424:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6543,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"30390:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6547,"nodeType":"RevertStatement","src":"30383:47:24"}]}}]},"documentation":{"id":6526,"nodeType":"StructuredDocumentation","src":"29915:307:24","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6551,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:24","nodeType":"FunctionDefinition","parameters":{"id":6529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6528,"mutability":"mutable","name":"value","nameLocation":"30251:5:24","nodeType":"VariableDeclaration","scope":6551,"src":"30244:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6527,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:24"},"returnParameters":{"id":6532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6531,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:24","nodeType":"VariableDeclaration","scope":6551,"src":"30281:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6530,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:24","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:24"},"scope":6774,"src":"30227:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6576,"nodeType":"Block","src":"30837:148:24","statements":[{"expression":{"id":6564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6559,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"30847:10:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6554,"src":"30866:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6560,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:24","typeDescriptions":{}}},"id":6563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6565,"nodeType":"ExpressionStatement","src":"30847:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6566,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"30886:10:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6554,"src":"30900:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6575,"nodeType":"IfStatement","src":"30882:97:24","trueBody":{"id":6574,"nodeType":"Block","src":"30907:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:24","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6554,"src":"30962:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6569,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"30928:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6573,"nodeType":"RevertStatement","src":"30921:47:24"}]}}]},"documentation":{"id":6552,"nodeType":"StructuredDocumentation","src":"30453:307:24","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6577,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:24","nodeType":"FunctionDefinition","parameters":{"id":6555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6554,"mutability":"mutable","name":"value","nameLocation":"30789:5:24","nodeType":"VariableDeclaration","scope":6577,"src":"30782:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6553,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:24"},"returnParameters":{"id":6558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6557,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:24","nodeType":"VariableDeclaration","scope":6577,"src":"30819:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6556,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:24","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:24"},"scope":6774,"src":"30765:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6602,"nodeType":"Block","src":"31375:148:24","statements":[{"expression":{"id":6590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6585,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6583,"src":"31385:10:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6588,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6580,"src":"31404:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6586,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:24","typeDescriptions":{}}},"id":6589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6591,"nodeType":"ExpressionStatement","src":"31385:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6592,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6583,"src":"31424:10:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6580,"src":"31438:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6601,"nodeType":"IfStatement","src":"31420:97:24","trueBody":{"id":6600,"nodeType":"Block","src":"31445:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:24","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6580,"src":"31500:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6595,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"31466:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6599,"nodeType":"RevertStatement","src":"31459:47:24"}]}}]},"documentation":{"id":6578,"nodeType":"StructuredDocumentation","src":"30991:307:24","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6603,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:24","nodeType":"FunctionDefinition","parameters":{"id":6581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6580,"mutability":"mutable","name":"value","nameLocation":"31327:5:24","nodeType":"VariableDeclaration","scope":6603,"src":"31320:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6579,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:24"},"returnParameters":{"id":6584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6583,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:24","nodeType":"VariableDeclaration","scope":6603,"src":"31357:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6582,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:24","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:24"},"scope":6774,"src":"31303:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6628,"nodeType":"Block","src":"31913:148:24","statements":[{"expression":{"id":6616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6611,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6609,"src":"31923:10:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6606,"src":"31942:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6612,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:24","typeDescriptions":{}}},"id":6615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6617,"nodeType":"ExpressionStatement","src":"31923:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6618,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6609,"src":"31962:10:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6606,"src":"31976:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6627,"nodeType":"IfStatement","src":"31958:97:24","trueBody":{"id":6626,"nodeType":"Block","src":"31983:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:24","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6606,"src":"32038:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6621,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"32004:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6625,"nodeType":"RevertStatement","src":"31997:47:24"}]}}]},"documentation":{"id":6604,"nodeType":"StructuredDocumentation","src":"31529:307:24","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6629,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:24","nodeType":"FunctionDefinition","parameters":{"id":6607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6606,"mutability":"mutable","name":"value","nameLocation":"31865:5:24","nodeType":"VariableDeclaration","scope":6629,"src":"31858:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6605,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:24"},"returnParameters":{"id":6610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6609,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:24","nodeType":"VariableDeclaration","scope":6629,"src":"31895:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6608,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:24","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:24"},"scope":6774,"src":"31841:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6654,"nodeType":"Block","src":"32451:148:24","statements":[{"expression":{"id":6642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6637,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6635,"src":"32461:10:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6632,"src":"32480:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6638,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:24","typeDescriptions":{}}},"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6643,"nodeType":"ExpressionStatement","src":"32461:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6644,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6635,"src":"32500:10:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6632,"src":"32514:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6653,"nodeType":"IfStatement","src":"32496:97:24","trueBody":{"id":6652,"nodeType":"Block","src":"32521:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6632,"src":"32576:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6647,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"32542:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6651,"nodeType":"RevertStatement","src":"32535:47:24"}]}}]},"documentation":{"id":6630,"nodeType":"StructuredDocumentation","src":"32067:307:24","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6655,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:24","nodeType":"FunctionDefinition","parameters":{"id":6633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6632,"mutability":"mutable","name":"value","nameLocation":"32403:5:24","nodeType":"VariableDeclaration","scope":6655,"src":"32396:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6631,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:24"},"returnParameters":{"id":6636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6635,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:24","nodeType":"VariableDeclaration","scope":6655,"src":"32433:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6634,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:24","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:24"},"scope":6774,"src":"32379:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6680,"nodeType":"Block","src":"32989:148:24","statements":[{"expression":{"id":6668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6663,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"32999:10:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6658,"src":"33018:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6664,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:24","typeDescriptions":{}}},"id":6667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6669,"nodeType":"ExpressionStatement","src":"32999:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6670,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6661,"src":"33038:10:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6658,"src":"33052:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6679,"nodeType":"IfStatement","src":"33034:97:24","trueBody":{"id":6678,"nodeType":"Block","src":"33059:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:24","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6658,"src":"33114:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6673,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"33080:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6677,"nodeType":"RevertStatement","src":"33073:47:24"}]}}]},"documentation":{"id":6656,"nodeType":"StructuredDocumentation","src":"32605:307:24","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6681,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:24","nodeType":"FunctionDefinition","parameters":{"id":6659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6658,"mutability":"mutable","name":"value","nameLocation":"32941:5:24","nodeType":"VariableDeclaration","scope":6681,"src":"32934:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6657,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:24"},"returnParameters":{"id":6662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6661,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:24","nodeType":"VariableDeclaration","scope":6681,"src":"32971:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6660,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:24","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:24"},"scope":6774,"src":"32917:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6706,"nodeType":"Block","src":"33527:148:24","statements":[{"expression":{"id":6694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6689,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6687,"src":"33537:10:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"33556:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6690,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:24","typeDescriptions":{}}},"id":6693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6695,"nodeType":"ExpressionStatement","src":"33537:25:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6696,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6687,"src":"33576:10:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"33590:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6705,"nodeType":"IfStatement","src":"33572:97:24","trueBody":{"id":6704,"nodeType":"Block","src":"33597:72:24","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"33652:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6699,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"33618:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6703,"nodeType":"RevertStatement","src":"33611:47:24"}]}}]},"documentation":{"id":6682,"nodeType":"StructuredDocumentation","src":"33143:307:24","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6707,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:24","nodeType":"FunctionDefinition","parameters":{"id":6685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6684,"mutability":"mutable","name":"value","nameLocation":"33479:5:24","nodeType":"VariableDeclaration","scope":6707,"src":"33472:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6683,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:24"},"returnParameters":{"id":6688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6687,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:24","nodeType":"VariableDeclaration","scope":6707,"src":"33509:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6686,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:24","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:24"},"scope":6774,"src":"33455:220:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6732,"nodeType":"Block","src":"34058:146:24","statements":[{"expression":{"id":6720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6715,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6713,"src":"34068:10:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6710,"src":"34086:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6716,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:24","typeDescriptions":{}}},"id":6719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6721,"nodeType":"ExpressionStatement","src":"34068:24:24"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6722,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6713,"src":"34106:10:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6710,"src":"34120:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6731,"nodeType":"IfStatement","src":"34102:96:24","trueBody":{"id":6730,"nodeType":"Block","src":"34127:71:24","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6710,"src":"34181:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6725,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"34148:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6729,"nodeType":"RevertStatement","src":"34141:46:24"}]}}]},"documentation":{"id":6708,"nodeType":"StructuredDocumentation","src":"33681:302:24","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6733,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:24","nodeType":"FunctionDefinition","parameters":{"id":6711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6710,"mutability":"mutable","name":"value","nameLocation":"34011:5:24","nodeType":"VariableDeclaration","scope":6733,"src":"34004:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6709,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:24"},"returnParameters":{"id":6714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6713,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:24","nodeType":"VariableDeclaration","scope":6733,"src":"34041:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6712,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:24","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:24"},"scope":6774,"src":"33988:216:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6762,"nodeType":"Block","src":"34444:250:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6736,"src":"34557:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6745,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6744,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:24","memberName":"max","nodeType":"MemberAccess","src":"34573:16:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6742,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:24","typeDescriptions":{}}},"id":6749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6756,"nodeType":"IfStatement","src":"34553:105:24","trueBody":{"id":6755,"nodeType":"Block","src":"34592:66:24","statements":[{"errorCall":{"arguments":[{"id":6752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6736,"src":"34641:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6751,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5036,"src":"34613:27:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6754,"nodeType":"RevertStatement","src":"34606:41:24"}]}},{"expression":{"arguments":[{"id":6759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6736,"src":"34681:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6757,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:24","typeDescriptions":{}}},"id":6760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6740,"id":6761,"nodeType":"Return","src":"34667:20:24"}]},"documentation":{"id":6734,"nodeType":"StructuredDocumentation","src":"34210:165:24","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6763,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:24","nodeType":"FunctionDefinition","parameters":{"id":6737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6736,"mutability":"mutable","name":"value","nameLocation":"34406:5:24","nodeType":"VariableDeclaration","scope":6763,"src":"34398:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6735,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:24"},"returnParameters":{"id":6740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6763,"src":"34436:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6738,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:24"},"scope":6774,"src":"34380:314:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6772,"nodeType":"Block","src":"34853:87:24","statements":[{"AST":{"nativeSrc":"34888:46:24","nodeType":"YulBlock","src":"34888:46:24","statements":[{"nativeSrc":"34902:22:24","nodeType":"YulAssignment","src":"34902:22:24","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:24","nodeType":"YulIdentifier","src":"34921:1:24"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:24","nodeType":"YulIdentifier","src":"34914:6:24"},"nativeSrc":"34914:9:24","nodeType":"YulFunctionCall","src":"34914:9:24"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:24","nodeType":"YulIdentifier","src":"34907:6:24"},"nativeSrc":"34907:17:24","nodeType":"YulFunctionCall","src":"34907:17:24"},"variableNames":[{"name":"u","nativeSrc":"34902:1:24","nodeType":"YulIdentifier","src":"34902:1:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6766,"isOffset":false,"isSlot":false,"src":"34921:1:24","valueSize":1},{"declaration":6769,"isOffset":false,"isSlot":false,"src":"34902:1:24","valueSize":1}],"flags":["memory-safe"],"id":6771,"nodeType":"InlineAssembly","src":"34863:71:24"}]},"documentation":{"id":6764,"nodeType":"StructuredDocumentation","src":"34700:90:24","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6773,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:24","nodeType":"FunctionDefinition","parameters":{"id":6767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6766,"mutability":"mutable","name":"b","nameLocation":"34816:1:24","nodeType":"VariableDeclaration","scope":6773,"src":"34811:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6765,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:24"},"returnParameters":{"id":6770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6769,"mutability":"mutable","name":"u","nameLocation":"34850:1:24","nodeType":"VariableDeclaration","scope":6773,"src":"34842:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6768,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:24"},"scope":6774,"src":"34795:145:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6775,"src":"769:34173:24","usedErrors":[5019,5024,5031,5036],"usedEvents":[]}],"src":"192:34751:24"},"id":24},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6774],"SignedMath":[6918]},"id":6919,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6776,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:25"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6778,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6919,"sourceUnit":6775,"src":"135:40:25","symbolAliases":[{"foreign":{"id":6777,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"143:8:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6779,"nodeType":"StructuredDocumentation","src":"177:80:25","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6918,"linearizedBaseContracts":[6918],"name":"SignedMath","nameLocation":"266:10:25","nodeType":"ContractDefinition","nodes":[{"body":{"id":6808,"nodeType":"Block","src":"746:215:25","statements":[{"id":6807,"nodeType":"UncheckedBlock","src":"756:199:25","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6791,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6786,"src":"894:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6792,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6784,"src":"900:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6793,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6786,"src":"904:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6795,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":6800,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6782,"src":"932:9:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6798,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"916:8:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6774_$","typeString":"type(library SafeCast)"}},"id":6799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:25","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6773,"src":"916:15:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6796,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:25","typeDescriptions":{}}},"id":6802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6804,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6790,"id":6806,"nodeType":"Return","src":"887:57:25"}]}]},"documentation":{"id":6780,"nodeType":"StructuredDocumentation","src":"283:374:25","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6809,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:25","nodeType":"FunctionDefinition","parameters":{"id":6787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6782,"mutability":"mutable","name":"condition","nameLocation":"684:9:25","nodeType":"VariableDeclaration","scope":6809,"src":"679:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6781,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6784,"mutability":"mutable","name":"a","nameLocation":"702:1:25","nodeType":"VariableDeclaration","scope":6809,"src":"695:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6783,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6786,"mutability":"mutable","name":"b","nameLocation":"712:1:25","nodeType":"VariableDeclaration","scope":6809,"src":"705:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6785,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:25"},"returnParameters":{"id":6790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6809,"src":"738:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6788,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:25"},"scope":6918,"src":"662:299:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6827,"nodeType":"Block","src":"1102:44:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6820,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"1127:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6821,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6814,"src":"1131:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6823,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"1134:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6824,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6814,"src":"1137:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6819,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6809,"src":"1119:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6818,"id":6826,"nodeType":"Return","src":"1112:27:25"}]},"documentation":{"id":6810,"nodeType":"StructuredDocumentation","src":"967:66:25","text":" @dev Returns the largest of two signed numbers."},"id":6828,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:25","nodeType":"FunctionDefinition","parameters":{"id":6815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6812,"mutability":"mutable","name":"a","nameLocation":"1058:1:25","nodeType":"VariableDeclaration","scope":6828,"src":"1051:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6811,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6814,"mutability":"mutable","name":"b","nameLocation":"1068:1:25","nodeType":"VariableDeclaration","scope":6828,"src":"1061:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6813,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:25"},"returnParameters":{"id":6818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6817,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6828,"src":"1094:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6816,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:25"},"scope":6918,"src":"1038:108:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6846,"nodeType":"Block","src":"1288:44:25","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6839,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"1313:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6840,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"1317:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6842,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6831,"src":"1320:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6843,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6833,"src":"1323:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6838,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6809,"src":"1305:7:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6837,"id":6845,"nodeType":"Return","src":"1298:27:25"}]},"documentation":{"id":6829,"nodeType":"StructuredDocumentation","src":"1152:67:25","text":" @dev Returns the smallest of two signed numbers."},"id":6847,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:25","nodeType":"FunctionDefinition","parameters":{"id":6834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6831,"mutability":"mutable","name":"a","nameLocation":"1244:1:25","nodeType":"VariableDeclaration","scope":6847,"src":"1237:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6830,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6833,"mutability":"mutable","name":"b","nameLocation":"1254:1:25","nodeType":"VariableDeclaration","scope":6847,"src":"1247:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6832,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:25"},"returnParameters":{"id":6837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6847,"src":"1280:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6835,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:25"},"scope":6918,"src":"1224:108:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6890,"nodeType":"Block","src":"1537:162:25","statements":[{"assignments":[6858],"declarations":[{"constant":false,"id":6858,"mutability":"mutable","name":"x","nameLocation":"1606:1:25","nodeType":"VariableDeclaration","scope":6890,"src":"1599:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6857,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6871,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6859,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6850,"src":"1611:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6860,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6852,"src":"1615:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6862,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6863,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6850,"src":"1622:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6864,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6852,"src":"1626:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6866,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6869,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:25"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6872,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6858,"src":"1651:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6877,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6858,"src":"1671:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6875,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:25","typeDescriptions":{}}},"id":6878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:25","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6873,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:25","typeDescriptions":{}}},"id":6881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6882,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6850,"src":"1685:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6883,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6852,"src":"1689:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6885,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6887,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6856,"id":6889,"nodeType":"Return","src":"1644:48:25"}]},"documentation":{"id":6848,"nodeType":"StructuredDocumentation","src":"1338:126:25","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6891,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:25","nodeType":"FunctionDefinition","parameters":{"id":6853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6850,"mutability":"mutable","name":"a","nameLocation":"1493:1:25","nodeType":"VariableDeclaration","scope":6891,"src":"1486:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6849,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6852,"mutability":"mutable","name":"b","nameLocation":"1503:1:25","nodeType":"VariableDeclaration","scope":6891,"src":"1496:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6851,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:25"},"returnParameters":{"id":6856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6891,"src":"1529:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6854,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:25"},"scope":6918,"src":"1469:230:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6916,"nodeType":"Block","src":"1843:767:25","statements":[{"id":6915,"nodeType":"UncheckedBlock","src":"1853:751:25","statements":[{"assignments":[6900],"declarations":[{"constant":false,"id":6900,"mutability":"mutable","name":"mask","nameLocation":"2424:4:25","nodeType":"VariableDeclaration","scope":6915,"src":"2417:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6899,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6904,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6901,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"2431:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:25","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:25"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6907,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"2576:1:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6908,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"2580:4:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6910,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6911,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6900,"src":"2588:4:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6905,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:25","typeDescriptions":{}}},"id":6913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6898,"id":6914,"nodeType":"Return","src":"2560:33:25"}]}]},"documentation":{"id":6892,"nodeType":"StructuredDocumentation","src":"1705:78:25","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6917,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:25","nodeType":"FunctionDefinition","parameters":{"id":6895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6894,"mutability":"mutable","name":"n","nameLocation":"1808:1:25","nodeType":"VariableDeclaration","scope":6917,"src":"1801:8:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6893,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:25"},"returnParameters":{"id":6898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6897,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6917,"src":"1834:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6896,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:25"},"scope":6918,"src":"1788:822:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6919,"src":"258:2354:25","usedErrors":[],"usedEvents":[]}],"src":"109:2504:25"},"id":25},"contracts/SampleERC20.sol":{"ast":{"absolutePath":"contracts/SampleERC20.sol","exportedSymbols":{"Context":[2530],"ERC20":[1199],"IERC20":[1277],"IERC20Errors":[589],"IERC20Metadata":[1303],"Ownable":[547],"SBC":[6998]},"id":6999,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":6920,"literals":["solidity","^","0.8",".23"],"nodeType":"PragmaDirective","src":"39:24:26"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":6921,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6999,"sourceUnit":1200,"src":"65:55:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":6922,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6999,"sourceUnit":548,"src":"121:52:26","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6924,"name":"ERC20","nameLocations":["290:5:26"],"nodeType":"IdentifierPath","referencedDeclaration":1199,"src":"290:5:26"},"id":6925,"nodeType":"InheritanceSpecifier","src":"290:5:26"},{"baseName":{"id":6926,"name":"Ownable","nameLocations":["297:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":547,"src":"297:7:26"},"id":6927,"nodeType":"InheritanceSpecifier","src":"297:7:26"}],"canonicalName":"SBC","contractDependencies":[],"contractKind":"contract","documentation":{"id":6923,"nodeType":"StructuredDocumentation","src":"175:98:26","text":" @title SBC Token\n @dev Simple ERC20 Token for testing the SignatureVerifyingPaymaster"},"fullyImplemented":true,"id":6998,"linearizedBaseContracts":[6998,547,1199,589,1303,1277,2530],"name":"SBC","nameLocation":"283:3:26","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":6930,"mutability":"constant","name":"DECIMALS","nameLocation":"374:8:26","nodeType":"VariableDeclaration","scope":6998,"src":"351:36:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6928,"name":"uint8","nodeType":"ElementaryTypeName","src":"351:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3138","id":6929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"385:2:26","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"visibility":"private"},{"constant":true,"id":6933,"mutability":"constant","name":"INITIAL_SUPPLY","nameLocation":"460:14:26","nodeType":"VariableDeclaration","scope":6998,"src":"435:51:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6931,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"315f3030305f303030","id":6932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"477:9:26","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1_000_000"},"visibility":"private"},{"body":{"id":6955,"nodeType":"Block","src":"639:65:26","statements":[{"expression":{"arguments":[{"expression":{"id":6946,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"655:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"659:6:26","memberName":"sender","nodeType":"MemberAccess","src":"655:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":6948,"name":"INITIAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6933,"src":"667:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"684:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":6950,"name":"DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"688:8:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"684:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"667:29:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6945,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"649:5:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"649:48:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6954,"nodeType":"ExpressionStatement","src":"649:48:26"}]},"documentation":{"id":6934,"nodeType":"StructuredDocumentation","src":"493:68:26","text":" @dev Constructor mints initial supply to deployer"},"id":6956,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"537461626c6520436f696e205465737420546f6b656e","id":6937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"586:24:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_f564625d96668ece53873fc0b5ceb812cdc62fde6ab28132d8ff5d7ff4cd7c8a","typeString":"literal_string \"Stable Coin Test Token\""},"value":"Stable Coin Test Token"},{"hexValue":"534243","id":6938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"612:5:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6bd34552b0e78476814d380c2d3a3872d1385d8d5b08b12e7ebcfc93181aab5","typeString":"literal_string \"SBC\""},"value":"SBC"}],"id":6939,"kind":"baseConstructorSpecifier","modifierName":{"id":6936,"name":"ERC20","nameLocations":["580:5:26"],"nodeType":"IdentifierPath","referencedDeclaration":1199,"src":"580:5:26"},"nodeType":"ModifierInvocation","src":"580:38:26"},{"arguments":[{"expression":{"id":6941,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"627:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"631:6:26","memberName":"sender","nodeType":"MemberAccess","src":"627:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6943,"kind":"baseConstructorSpecifier","modifierName":{"id":6940,"name":"Ownable","nameLocations":["619:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":547,"src":"619:7:26"},"nodeType":"ModifierInvocation","src":"619:19:26"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6935,"nodeType":"ParameterList","parameters":[],"src":"577:2:26"},"returnParameters":{"id":6944,"nodeType":"ParameterList","parameters":[],"src":"639:0:26"},"scope":6998,"src":"566:138:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6971,"nodeType":"Block","src":"917:34:26","statements":[{"expression":{"arguments":[{"id":6967,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"933:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6968,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6961,"src":"937:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6966,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"927:5:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"927:17:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6970,"nodeType":"ExpressionStatement","src":"927:17:26"}]},"documentation":{"id":6957,"nodeType":"StructuredDocumentation","src":"710:141:26","text":" @dev Mint new tokens (only owner)\n @param to Address to mint tokens to\n @param amount Amount of tokens to mint"},"functionSelector":"40c10f19","id":6972,"implemented":true,"kind":"function","modifiers":[{"id":6964,"kind":"modifierInvocation","modifierName":{"id":6963,"name":"onlyOwner","nameLocations":["907:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":458,"src":"907:9:26"},"nodeType":"ModifierInvocation","src":"907:9:26"}],"name":"mint","nameLocation":"865:4:26","nodeType":"FunctionDefinition","parameters":{"id":6962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6959,"mutability":"mutable","name":"to","nameLocation":"878:2:26","nodeType":"VariableDeclaration","scope":6972,"src":"870:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6958,"name":"address","nodeType":"ElementaryTypeName","src":"870:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6961,"mutability":"mutable","name":"amount","nameLocation":"890:6:26","nodeType":"VariableDeclaration","scope":6972,"src":"882:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6960,"name":"uint256","nodeType":"ElementaryTypeName","src":"882:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"869:28:26"},"returnParameters":{"id":6965,"nodeType":"ParameterList","parameters":[],"src":"917:0:26"},"scope":6998,"src":"856:95:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6986,"nodeType":"Block","src":"1142:74:26","statements":[{"expression":{"arguments":[{"expression":{"id":6977,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1158:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1162:6:26","memberName":"sender","nodeType":"MemberAccess","src":"1158:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313030","id":6979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1170:3:26","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1176:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":6981,"name":"DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"1180:8:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"1176:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1170:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6976,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"1152:5:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":6984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1152:37:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6985,"nodeType":"ExpressionStatement","src":"1152:37:26"}]},"documentation":{"id":6973,"nodeType":"StructuredDocumentation","src":"957:145:26","text":" @dev Public function to mint small amount of tokens for testing\n @notice Limited to 100 tokens per mint to prevent abuse"},"functionSelector":"121874a1","id":6987,"implemented":true,"kind":"function","modifiers":[],"name":"mintTestTokens","nameLocation":"1116:14:26","nodeType":"FunctionDefinition","parameters":{"id":6974,"nodeType":"ParameterList","parameters":[],"src":"1130:2:26"},"returnParameters":{"id":6975,"nodeType":"ParameterList","parameters":[],"src":"1142:0:26"},"scope":6998,"src":"1107:109:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[763],"body":{"id":6996,"nodeType":"Block","src":"1343:32:26","statements":[{"expression":{"id":6994,"name":"DECIMALS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"1360:8:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6993,"id":6995,"nodeType":"Return","src":"1353:15:26"}]},"documentation":{"id":6988,"nodeType":"StructuredDocumentation","src":"1222:59:26","text":" @dev Override decimals to match constant"},"functionSelector":"313ce567","id":6997,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"1295:8:26","nodeType":"FunctionDefinition","overrides":{"id":6990,"nodeType":"OverrideSpecifier","overrides":[],"src":"1318:8:26"},"parameters":{"id":6989,"nodeType":"ParameterList","parameters":[],"src":"1303:2:26"},"returnParameters":{"id":6993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6992,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6997,"src":"1336:5:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6991,"name":"uint8","nodeType":"ElementaryTypeName","src":"1336:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1335:7:26"},"scope":6998,"src":"1286:89:26","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":6999,"src":"274:1103:26","usedErrors":[413,418,559,564,569,578,583,588],"usedEvents":[424,1211,1220]}],"src":"39:1339:26"},"id":26},"contracts/SampleNFT.sol":{"ast":{"absolutePath":"contracts/SampleNFT.sol","exportedSymbols":{"Context":[2530],"ERC165":[3391],"ERC721":[2260],"ERC721Utils":[2500],"IERC165":[3403],"IERC721":[2377],"IERC721Errors":[637],"IERC721Metadata":[2423],"Ownable":[547],"SampleNFT":[7069],"Strings":[3019]},"id":7070,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7000,"literals":["solidity","^","0.8",".23"],"nodeType":"PragmaDirective","src":"32:24:27"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":7001,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7070,"sourceUnit":2261,"src":"58:57:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7002,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7070,"sourceUnit":548,"src":"116:52:27","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7003,"name":"ERC721","nameLocations":["192:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":2260,"src":"192:6:27"},"id":7004,"nodeType":"InheritanceSpecifier","src":"192:6:27"},{"baseName":{"id":7005,"name":"Ownable","nameLocations":["200:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":547,"src":"200:7:27"},"id":7006,"nodeType":"InheritanceSpecifier","src":"200:7:27"}],"canonicalName":"SampleNFT","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7069,"linearizedBaseContracts":[7069,547,2260,637,2423,2377,3391,3403,2530],"name":"SampleNFT","nameLocation":"179:9:27","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7008,"mutability":"mutable","name":"_tokenIds","nameLocation":"230:9:27","nodeType":"VariableDeclaration","scope":7069,"src":"214:25:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7007,"name":"uint256","nodeType":"ElementaryTypeName","src":"214:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":7010,"mutability":"mutable","name":"_baseTokenURI","nameLocation":"290:13:27","nodeType":"VariableDeclaration","scope":7069,"src":"275:28:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":7009,"name":"string","nodeType":"ElementaryTypeName","src":"275:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":7025,"nodeType":"Block","src":"427:2:27","statements":[]},"id":7026,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":7017,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7012,"src":"393:4:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7018,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7014,"src":"399:6:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7019,"kind":"baseConstructorSpecifier","modifierName":{"id":7016,"name":"ERC721","nameLocations":["386:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":2260,"src":"386:6:27"},"nodeType":"ModifierInvocation","src":"386:20:27"},{"arguments":[{"expression":{"id":7021,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"415:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"419:6:27","memberName":"sender","nodeType":"MemberAccess","src":"415:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7023,"kind":"baseConstructorSpecifier","modifierName":{"id":7020,"name":"Ownable","nameLocations":["407:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":547,"src":"407:7:27"},"nodeType":"ModifierInvocation","src":"407:19:27"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7012,"mutability":"mutable","name":"name","nameLocation":"345:4:27","nodeType":"VariableDeclaration","scope":7026,"src":"331:18:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7011,"name":"string","nodeType":"ElementaryTypeName","src":"331:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7014,"mutability":"mutable","name":"symbol","nameLocation":"373:6:27","nodeType":"VariableDeclaration","scope":7026,"src":"359:20:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7013,"name":"string","nodeType":"ElementaryTypeName","src":"359:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"321:64:27"},"returnParameters":{"id":7024,"nodeType":"ParameterList","parameters":[],"src":"427:0:27"},"scope":7069,"src":"310:119:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7037,"nodeType":"Block","src":"528:40:27","statements":[{"expression":{"id":7035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7033,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"538:13:27","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7034,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7028,"src":"554:7:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"538:23:27","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7036,"nodeType":"ExpressionStatement","src":"538:23:27"}]},"functionSelector":"55f804b3","id":7038,"implemented":true,"kind":"function","modifiers":[{"id":7031,"kind":"modifierInvocation","modifierName":{"id":7030,"name":"onlyOwner","nameLocations":["518:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":458,"src":"518:9:27"},"nodeType":"ModifierInvocation","src":"518:9:27"}],"name":"setBaseURI","nameLocation":"477:10:27","nodeType":"FunctionDefinition","parameters":{"id":7029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7028,"mutability":"mutable","name":"baseURI","nameLocation":"502:7:27","nodeType":"VariableDeclaration","scope":7038,"src":"488:21:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7027,"name":"string","nodeType":"ElementaryTypeName","src":"488:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"487:23:27"},"returnParameters":{"id":7032,"nodeType":"ParameterList","parameters":[],"src":"528:0:27"},"scope":7069,"src":"468:100:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1508],"body":{"id":7046,"nodeType":"Block","src":"692:37:27","statements":[{"expression":{"id":7044,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"709:13:27","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":7043,"id":7045,"nodeType":"Return","src":"702:20:27"}]},"id":7047,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"626:8:27","nodeType":"FunctionDefinition","overrides":{"id":7040,"nodeType":"OverrideSpecifier","overrides":[],"src":"659:8:27"},"parameters":{"id":7039,"nodeType":"ParameterList","parameters":[],"src":"634:2:27"},"returnParameters":{"id":7043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7047,"src":"677:13:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7041,"name":"string","nodeType":"ElementaryTypeName","src":"677:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"676:15:27"},"scope":7069,"src":"617:112:27","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":7067,"nodeType":"Block","src":"848:117:27","statements":[{"assignments":[7055],"declarations":[{"constant":false,"id":7055,"mutability":"mutable","name":"newItemId","nameLocation":"866:9:27","nodeType":"VariableDeclaration","scope":7067,"src":"858:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7054,"name":"uint256","nodeType":"ElementaryTypeName","src":"858:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7059,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7056,"name":"_tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7008,"src":"878:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":7057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"890:1:27","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"878:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"858:33:27"},{"expression":{"arguments":[{"id":7061,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"911:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7062,"name":"newItemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7055,"src":"922:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7060,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1938,1968],"referencedDeclaration":1938,"src":"901:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"901:31:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7064,"nodeType":"ExpressionStatement","src":"901:31:27"},{"expression":{"id":7065,"name":"newItemId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7055,"src":"949:9:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7053,"id":7066,"nodeType":"Return","src":"942:16:27"}]},"functionSelector":"54ba0f27","id":7068,"implemented":true,"kind":"function","modifiers":[],"name":"mintNFT","nameLocation":"796:7:27","nodeType":"FunctionDefinition","parameters":{"id":7050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7049,"mutability":"mutable","name":"recipient","nameLocation":"812:9:27","nodeType":"VariableDeclaration","scope":7068,"src":"804:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7048,"name":"address","nodeType":"ElementaryTypeName","src":"804:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"803:19:27"},"returnParameters":{"id":7053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7068,"src":"839:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7051,"name":"uint256","nodeType":"ElementaryTypeName","src":"839:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"838:9:27"},"scope":7069,"src":"787:178:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":7070,"src":"170:797:27","usedErrors":[413,418,595,600,609,614,619,626,631,636],"usedEvents":[424,2276,2285,2294]}],"src":"32:936:27"},"id":27},"contracts/SignatureVerifyingPaymaster.sol":{"ast":{"absolutePath":"contracts/SignatureVerifyingPaymaster.sol","exportedSymbols":{"Context":[2530],"ECDSA":[3367],"IAggregator":[33],"IERC20":[1277],"IEntryPoint":[217],"INonceManager":[236],"IPaymaster":[273],"IStakeManager":[377],"Ownable":[547],"PackedUserOperation":[399],"Pausable":[2699],"SignatureVerifyingPaymaster":[7600]},"id":7601,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":7071,"literals":["solidity","^","0.8",".23"],"nodeType":"PragmaDirective","src":"39:24:28"},{"absolutePath":"@account-abstraction/contracts/interfaces/IPaymaster.sol","file":"@account-abstraction/contracts/interfaces/IPaymaster.sol","id":7072,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7601,"sourceUnit":274,"src":"108:66:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7073,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7601,"sourceUnit":548,"src":"240:52:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":7074,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7601,"sourceUnit":1278,"src":"344:56:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":7075,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7601,"sourceUnit":3368,"src":"459:62:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"@openzeppelin/contracts/utils/Pausable.sol","id":7076,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7601,"sourceUnit":2700,"src":"576:52:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@account-abstraction/contracts/interfaces/IEntryPoint.sol","file":"@account-abstraction/contracts/interfaces/IEntryPoint.sol","id":7077,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7601,"sourceUnit":218,"src":"668:67:28","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7078,"name":"IPaymaster","nameLocations":["901:10:28"],"nodeType":"IdentifierPath","referencedDeclaration":273,"src":"901:10:28"},"id":7079,"nodeType":"InheritanceSpecifier","src":"901:10:28"},{"baseName":{"id":7080,"name":"Ownable","nameLocations":["913:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":547,"src":"913:7:28"},"id":7081,"nodeType":"InheritanceSpecifier","src":"913:7:28"},{"baseName":{"id":7082,"name":"Pausable","nameLocations":["922:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":2699,"src":"922:8:28"},"id":7083,"nodeType":"InheritanceSpecifier","src":"922:8:28"}],"canonicalName":"SignatureVerifyingPaymaster","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7600,"linearizedBaseContracts":[7600,2699,547,2530,273],"name":"SignatureVerifyingPaymaster","nameLocation":"870:27:28","nodeType":"ContractDefinition","nodes":[{"global":false,"id":7086,"libraryName":{"id":7084,"name":"ECDSA","nameLocations":["1016:5:28"],"nodeType":"IdentifierPath","referencedDeclaration":3367,"src":"1016:5:28"},"nodeType":"UsingForDirective","src":"1010:24:28","typeName":{"id":7085,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1026:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"constant":false,"functionSelector":"ca1d7ba3","id":7088,"mutability":"immutable","name":"SBC_TOKEN","nameLocation":"1143:9:28","nodeType":"VariableDeclaration","scope":7600,"src":"1118:34:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7087,"name":"address","nodeType":"ElementaryTypeName","src":"1118:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"795112c9","id":7090,"mutability":"immutable","name":"REQUIRED_SBC_BALANCE","nameLocation":"1258:20:28","nodeType":"VariableDeclaration","scope":7600,"src":"1233:45:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7089,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"functionSelector":"4fe11c8b","id":7093,"mutability":"constant","name":"MAX_EXPIRY_DURATION","nameLocation":"1366:19:28","nodeType":"VariableDeclaration","scope":7600,"src":"1342:52:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7091,"name":"uint256","nodeType":"ElementaryTypeName","src":"1342:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"37","id":7092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1388:6:28","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_604800_by_1","typeString":"int_const 604800"},"value":"7"},"visibility":"public"},{"constant":false,"functionSelector":"c771909c","id":7095,"mutability":"mutable","name":"authorizedSigner","nameLocation":"1474:16:28","nodeType":"VariableDeclaration","scope":7600,"src":"1459:31:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7094,"name":"address","nodeType":"ElementaryTypeName","src":"1459:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"feb61724","id":7099,"mutability":"mutable","name":"usedNonces","nameLocation":"1590:10:28","nodeType":"VariableDeclaration","scope":7600,"src":"1558:42:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":7098,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7096,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1566:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1558:24:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7097,"name":"bool","nodeType":"ElementaryTypeName","src":"1577:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"b0d691fe","id":7102,"mutability":"immutable","name":"entryPoint","nameLocation":"1716:10:28","nodeType":"VariableDeclaration","scope":7600,"src":"1687:39:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$217","typeString":"contract IEntryPoint"},"typeName":{"id":7101,"nodeType":"UserDefinedTypeName","pathNode":{"id":7100,"name":"IEntryPoint","nameLocations":["1687:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":217,"src":"1687:11:28"},"referencedDeclaration":217,"src":"1687:11:28","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$217","typeString":"contract IEntryPoint"}},"visibility":"public"},{"anonymous":false,"eventSelector":"5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c73","id":7106,"name":"SignerUpdated","nameLocation":"1798:13:28","nodeType":"EventDefinition","parameters":{"id":7105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7104,"indexed":true,"mutability":"mutable","name":"newSigner","nameLocation":"1828:9:28","nodeType":"VariableDeclaration","scope":7106,"src":"1812:25:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7103,"name":"address","nodeType":"ElementaryTypeName","src":"1812:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1811:27:28"},"src":"1792:47:28"},{"anonymous":false,"eventSelector":"86e12680725060749e4481672cf4b5dde58e5f7222c1f01c7d94f40eba96e923","id":7110,"name":"NonceUsed","nameLocation":"1902:9:28","nodeType":"EventDefinition","parameters":{"id":7109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7108,"indexed":true,"mutability":"mutable","name":"nonceHash","nameLocation":"1928:9:28","nodeType":"VariableDeclaration","scope":7110,"src":"1912:25:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7107,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1912:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1911:27:28"},"src":"1896:43:28"},{"anonymous":false,"eventSelector":"8c62601349aea45c56ebe7a2ec7c24eb877c26b369547dad762528da3ecf2ce5","id":7116,"name":"PaymasterDeposit","nameLocation":"2010:16:28","nodeType":"EventDefinition","parameters":{"id":7115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7112,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"2043:4:28","nodeType":"VariableDeclaration","scope":7116,"src":"2027:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7111,"name":"address","nodeType":"ElementaryTypeName","src":"2027:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7114,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2057:6:28","nodeType":"VariableDeclaration","scope":7116,"src":"2049:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7113,"name":"uint256","nodeType":"ElementaryTypeName","src":"2049:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2026:38:28"},"src":"2004:61:28"},{"anonymous":false,"eventSelector":"dc320249be6042385e00f08969a7a6f67f21fb2c393186199f265da66452750e","id":7122,"name":"PaymasterWithdrawal","nameLocation":"2138:19:28","nodeType":"EventDefinition","parameters":{"id":7121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7118,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2174:2:28","nodeType":"VariableDeclaration","scope":7122,"src":"2158:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7117,"name":"address","nodeType":"ElementaryTypeName","src":"2158:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7120,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2186:6:28","nodeType":"VariableDeclaration","scope":7122,"src":"2178:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7119,"name":"uint256","nodeType":"ElementaryTypeName","src":"2178:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2157:36:28"},"src":"2132:62:28"},{"anonymous":false,"eventSelector":"127f277caf8451a4a4b3cc01664c207db03cf985a0bf7827592a33ba5e0823de","id":7128,"name":"PaymasterPayment","nameLocation":"2261:16:28","nodeType":"EventDefinition","parameters":{"id":7127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7124,"indexed":false,"mutability":"mutable","name":"actualGasCost","nameLocation":"2286:13:28","nodeType":"VariableDeclaration","scope":7128,"src":"2278:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7123,"name":"uint256","nodeType":"ElementaryTypeName","src":"2278:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7126,"indexed":false,"mutability":"mutable","name":"actualUserOpFeePerGas","nameLocation":"2309:21:28","nodeType":"VariableDeclaration","scope":7128,"src":"2301:29:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7125,"name":"uint256","nodeType":"ElementaryTypeName","src":"2301:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2277:54:28"},"src":"2255:77:28"},{"body":{"id":7198,"nodeType":"Block","src":"2747:584:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7144,"name":"_authorizedSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7130,"src":"2845:17:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2874:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2866:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7145,"name":"address","nodeType":"ElementaryTypeName","src":"2866:7:28","typeDescriptions":{}}},"id":7148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2866:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2845:31:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5a65726f2061646472657373207369676e6572","id":7150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2878:21:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_d855b2d93307064cc81c5bde1af450b2b7b0dc078110db13366d856e1e12d1d2","typeString":"literal_string \"Zero address signer\""},"value":"Zero address signer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d855b2d93307064cc81c5bde1af450b2b7b0dc078110db13366d856e1e12d1d2","typeString":"literal_string \"Zero address signer\""}],"id":7143,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2837:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2837:63:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7152,"nodeType":"ExpressionStatement","src":"2837:63:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7154,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7132,"src":"2918:11:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2941:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2933:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7155,"name":"address","nodeType":"ElementaryTypeName","src":"2933:7:28","typeDescriptions":{}}},"id":7158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2933:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2918:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5a65726f206164647265737320656e747279506f696e74","id":7160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2945:25:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_4a73a5f1dae303024db18f321a348e9400bcbcc4f26b4977dda1d77e1580b91a","typeString":"literal_string \"Zero address entryPoint\""},"value":"Zero address entryPoint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4a73a5f1dae303024db18f321a348e9400bcbcc4f26b4977dda1d77e1580b91a","typeString":"literal_string \"Zero address entryPoint\""}],"id":7153,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2910:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2910:61:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7162,"nodeType":"ExpressionStatement","src":"2910:61:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7164,"name":"_sbcToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7134,"src":"2989:9:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3010:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3002:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7165,"name":"address","nodeType":"ElementaryTypeName","src":"3002:7:28","typeDescriptions":{}}},"id":7168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3002:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2989:23:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5a65726f206164647265737320746f6b656e","id":7170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3014:20:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_bd439a42997d101650d4aa359dd62e89f1890f0be164a36e3edb3096e27e0b93","typeString":"literal_string \"Zero address token\""},"value":"Zero address token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bd439a42997d101650d4aa359dd62e89f1890f0be164a36e3edb3096e27e0b93","typeString":"literal_string \"Zero address token\""}],"id":7163,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2981:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2981:54:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7172,"nodeType":"ExpressionStatement","src":"2981:54:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7174,"name":"_requiredBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7136,"src":"3053:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3072:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3053:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5a65726f2062616c616e636520726571756972656d656e74","id":7177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3075:26:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_7ba039f2e5c1f7bb61f3fc17bbfabfe46dc6a0e877279b9521301539aa1e283f","typeString":"literal_string \"Zero balance requirement\""},"value":"Zero balance requirement"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7ba039f2e5c1f7bb61f3fc17bbfabfe46dc6a0e877279b9521301539aa1e283f","typeString":"literal_string \"Zero balance requirement\""}],"id":7173,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3045:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3045:57:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7179,"nodeType":"ExpressionStatement","src":"3045:57:28"},{"expression":{"id":7182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7180,"name":"authorizedSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7095,"src":"3161:16:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7181,"name":"_authorizedSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7130,"src":"3180:17:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3161:36:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7183,"nodeType":"ExpressionStatement","src":"3161:36:28"},{"expression":{"id":7188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7184,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"3207:10:28","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$217","typeString":"contract IEntryPoint"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7186,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7132,"src":"3232:11:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7185,"name":"IEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"3220:11:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IEntryPoint_$217_$","typeString":"type(contract IEntryPoint)"}},"id":7187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3220:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$217","typeString":"contract IEntryPoint"}},"src":"3207:37:28","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$217","typeString":"contract IEntryPoint"}},"id":7189,"nodeType":"ExpressionStatement","src":"3207:37:28"},{"expression":{"id":7192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7190,"name":"SBC_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7088,"src":"3254:9:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7191,"name":"_sbcToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7134,"src":"3266:9:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3254:21:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7193,"nodeType":"ExpressionStatement","src":"3254:21:28"},{"expression":{"id":7196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7194,"name":"REQUIRED_SBC_BALANCE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7090,"src":"3285:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7195,"name":"_requiredBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7136,"src":"3308:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3285:39:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7197,"nodeType":"ExpressionStatement","src":"3285:39:28"}]},"id":7199,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":7139,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2735:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2739:6:28","memberName":"sender","nodeType":"MemberAccess","src":"2735:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7141,"kind":"baseConstructorSpecifier","modifierName":{"id":7138,"name":"Ownable","nameLocations":["2727:7:28"],"nodeType":"IdentifierPath","referencedDeclaration":547,"src":"2727:7:28"},"nodeType":"ModifierInvocation","src":"2727:19:28"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7130,"mutability":"mutable","name":"_authorizedSigner","nameLocation":"2434:17:28","nodeType":"VariableDeclaration","scope":7199,"src":"2426:25:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7129,"name":"address","nodeType":"ElementaryTypeName","src":"2426:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7132,"mutability":"mutable","name":"_entryPoint","nameLocation":"2516:11:28","nodeType":"VariableDeclaration","scope":7199,"src":"2508:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7131,"name":"address","nodeType":"ElementaryTypeName","src":"2508:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7134,"mutability":"mutable","name":"_sbcToken","nameLocation":"2591:9:28","nodeType":"VariableDeclaration","scope":7199,"src":"2583:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7133,"name":"address","nodeType":"ElementaryTypeName","src":"2583:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7136,"mutability":"mutable","name":"_requiredBalance","nameLocation":"2665:16:28","nodeType":"VariableDeclaration","scope":7199,"src":"2657:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7135,"name":"uint256","nodeType":"ElementaryTypeName","src":"2657:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2416:310:28"},"returnParameters":{"id":7142,"nodeType":"ParameterList","parameters":[],"src":"2747:0:28"},"scope":7600,"src":"2405:926:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7225,"nodeType":"Block","src":"3527:152:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7208,"name":"_newSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7202,"src":"3545:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3567:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3559:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7209,"name":"address","nodeType":"ElementaryTypeName","src":"3559:7:28","typeDescriptions":{}}},"id":7212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3559:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3545:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5a65726f2061646472657373207369676e6572","id":7214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3571:21:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_d855b2d93307064cc81c5bde1af450b2b7b0dc078110db13366d856e1e12d1d2","typeString":"literal_string \"Zero address signer\""},"value":"Zero address signer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d855b2d93307064cc81c5bde1af450b2b7b0dc078110db13366d856e1e12d1d2","typeString":"literal_string \"Zero address signer\""}],"id":7207,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3537:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3537:56:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7216,"nodeType":"ExpressionStatement","src":"3537:56:28"},{"expression":{"id":7219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7217,"name":"authorizedSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7095,"src":"3603:16:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7218,"name":"_newSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7202,"src":"3622:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3603:29:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7220,"nodeType":"ExpressionStatement","src":"3603:29:28"},{"eventCall":{"arguments":[{"id":7222,"name":"_newSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7202,"src":"3661:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7221,"name":"SignerUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7106,"src":"3647:13:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3647:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7224,"nodeType":"EmitStatement","src":"3642:30:28"}]},"documentation":{"id":7200,"nodeType":"StructuredDocumentation","src":"3337:127:28","text":" Allow owner to update the authorized signer address\n @param _newSigner - New authorized signer address"},"functionSelector":"6c19e783","id":7226,"implemented":true,"kind":"function","modifiers":[{"id":7205,"kind":"modifierInvocation","modifierName":{"id":7204,"name":"onlyOwner","nameLocations":["3517:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":458,"src":"3517:9:28"},"nodeType":"ModifierInvocation","src":"3517:9:28"}],"name":"setSigner","nameLocation":"3478:9:28","nodeType":"FunctionDefinition","parameters":{"id":7203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7202,"mutability":"mutable","name":"_newSigner","nameLocation":"3496:10:28","nodeType":"VariableDeclaration","scope":7226,"src":"3488:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7201,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3487:20:28"},"returnParameters":{"id":7206,"nodeType":"ParameterList","parameters":[],"src":"3527:0:28"},"scope":7600,"src":"3469:210:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[259],"body":{"id":7410,"nodeType":"Block","src":"4484:2371:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7244,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4563:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4567:6:28","memberName":"sender","nodeType":"MemberAccess","src":"4563:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":7248,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"4585:10:28","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$217","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$217","typeString":"contract IEntryPoint"}],"id":7247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4577:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7246,"name":"address","nodeType":"ElementaryTypeName","src":"4577:7:28","typeDescriptions":{}}},"id":7249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4577:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4563:33:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206e6f7420456e747279506f696e74","id":7251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4598:23:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc544a183a74889e2f0f71a19573312cb640b492ec6195283ec98b45e5f0af57","typeString":"literal_string \"Caller not EntryPoint\""},"value":"Caller not EntryPoint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc544a183a74889e2f0f71a19573312cb640b492ec6195283ec98b45e5f0af57","typeString":"literal_string \"Caller not EntryPoint\""}],"id":7243,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4555:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4555:67:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7253,"nodeType":"ExpressionStatement","src":"4555:67:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":7259,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4748:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_SignatureVerifyingPaymaster_$7600","typeString":"contract SignatureVerifyingPaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SignatureVerifyingPaymaster_$7600","typeString":"contract SignatureVerifyingPaymaster"}],"id":7258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4740:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7257,"name":"address","nodeType":"ElementaryTypeName","src":"4740:7:28","typeDescriptions":{}}},"id":7260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4740:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7255,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"4719:10:28","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$217","typeString":"contract IEntryPoint"}},"id":7256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4730:9:28","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":346,"src":"4719:20:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4719:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7262,"name":"maxCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"4758:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4719:46:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74207061796d6173746572206465706f736974","id":7264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4767:32:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_80d90a95737f313c53d0bb6837e1fa3081c533ef624cd896bb37942cc6750a82","typeString":"literal_string \"Insufficient paymaster deposit\""},"value":"Insufficient paymaster deposit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_80d90a95737f313c53d0bb6837e1fa3081c533ef624cd896bb37942cc6750a82","typeString":"literal_string \"Insufficient paymaster deposit\""}],"id":7254,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4711:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4711:89:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7266,"nodeType":"ExpressionStatement","src":"4711:89:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":7268,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7230,"src":"4970:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$399_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":7269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4977:16:28","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":396,"src":"4970:23:28","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":7270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4994:6:28","memberName":"length","nodeType":"MemberAccess","src":"4970:30:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"313439","id":7271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5004:3:28","typeDescriptions":{"typeIdentifier":"t_rational_149_by_1","typeString":"int_const 149"},"value":"149"},"src":"4970:37:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207061796d6173746572416e6444617461206c656e677468","id":7273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5009:33:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_cfe5951392790b135f98d77ba09049bfbc1a1776c53987baf509c661787d5e3b","typeString":"literal_string \"Invalid paymasterAndData length\""},"value":"Invalid paymasterAndData length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cfe5951392790b135f98d77ba09049bfbc1a1776c53987baf509c661787d5e3b","typeString":"literal_string \"Invalid paymasterAndData length\""}],"id":7267,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4962:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4962:81:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7275,"nodeType":"ExpressionStatement","src":"4962:81:28"},{"assignments":[7277],"declarations":[{"constant":false,"id":7277,"mutability":"mutable","name":"paymasterAndData","nameLocation":"5066:16:28","nodeType":"VariableDeclaration","scope":7410,"src":"5053:29:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7276,"name":"bytes","nodeType":"ElementaryTypeName","src":"5053:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":7280,"initialValue":{"expression":{"id":7278,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7230,"src":"5085:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$399_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":7279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5092:16:28","memberName":"paymasterAndData","nodeType":"MemberAccess","referencedDeclaration":396,"src":"5085:23:28","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"nodeType":"VariableDeclarationStatement","src":"5053:55:28"},{"assignments":[7282],"declarations":[{"constant":false,"id":7282,"mutability":"mutable","name":"nonce","nameLocation":"5192:5:28","nodeType":"VariableDeclaration","scope":7410,"src":"5184:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7281,"name":"uint256","nodeType":"ElementaryTypeName","src":"5184:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7294,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":7288,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7277,"src":"5222:16:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"3230","id":7289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5240:2:28","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},{"hexValue":"3332","id":7290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5244:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":7287,"name":"slice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7599,"src":"5216:5:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint256,uint256) pure returns (bytes memory)"}},"id":7291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5216:31:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5208:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5208:7:28","typeDescriptions":{}}},"id":7292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5208:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5200:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7283,"name":"uint256","nodeType":"ElementaryTypeName","src":"5200:7:28","typeDescriptions":{}}},"id":7293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5200:49:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5184:65:28"},{"assignments":[7296],"declarations":[{"constant":false,"id":7296,"mutability":"mutable","name":"expiry","nameLocation":"5313:6:28","nodeType":"VariableDeclaration","scope":7410,"src":"5305:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7295,"name":"uint256","nodeType":"ElementaryTypeName","src":"5305:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7308,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":7302,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7277,"src":"5344:16:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"3532","id":7303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5362:2:28","typeDescriptions":{"typeIdentifier":"t_rational_52_by_1","typeString":"int_const 52"},"value":"52"},{"hexValue":"3332","id":7304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5366:2:28","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_52_by_1","typeString":"int_const 52"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":7301,"name":"slice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7599,"src":"5338:5:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint256,uint256) pure returns (bytes memory)"}},"id":7305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5338:31:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5330:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7299,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5330:7:28","typeDescriptions":{}}},"id":7306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5330:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5322:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7297,"name":"uint256","nodeType":"ElementaryTypeName","src":"5322:7:28","typeDescriptions":{}}},"id":7307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5322:49:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5305:66:28"},{"assignments":[7310],"declarations":[{"constant":false,"id":7310,"mutability":"mutable","name":"nonceHash","nameLocation":"5489:9:28","nodeType":"VariableDeclaration","scope":7410,"src":"5481:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7309,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5481:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7317,"initialValue":{"arguments":[{"arguments":[{"id":7314,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7282,"src":"5522:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7312,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5511:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5515:6:28","memberName":"encode","nodeType":"MemberAccess","src":"5511:10:28","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5511:17:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7311,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5501:9:28","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5501:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5481:48:28"},{"expression":{"arguments":[{"id":7322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5547:22:28","subExpression":{"baseExpression":{"id":7319,"name":"usedNonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7099,"src":"5548:10:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":7321,"indexExpression":{"id":7320,"name":"nonceHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7310,"src":"5559:9:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5548:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f6e636520616c72656164792075736564","id":7323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5571:20:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_923b8cbbcee77e95e0614b96c81a4cbd157e2cc78e2937caa0bed8e1c5641a28","typeString":"literal_string \"Nonce already used\""},"value":"Nonce already used"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_923b8cbbcee77e95e0614b96c81a4cbd157e2cc78e2937caa0bed8e1c5641a28","typeString":"literal_string \"Nonce already used\""}],"id":7318,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5539:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5539:53:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7325,"nodeType":"ExpressionStatement","src":"5539:53:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7327,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7296,"src":"5654:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":7328,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5663:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5669:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"5663:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5654:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5369676e61747572652065787069726564","id":7331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5680:19:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517","typeString":"literal_string \"Signature expired\""},"value":"Signature expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517","typeString":"literal_string \"Signature expired\""}],"id":7326,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5646:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5646:54:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7333,"nodeType":"ExpressionStatement","src":"5646:54:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7335,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7296,"src":"5718:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7336,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5728:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5734:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"5728:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7338,"name":"MAX_EXPIRY_DURATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7093,"src":"5746:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5728:37:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5718:47:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45787069727920746f6f2066617220696e20667574757265","id":7341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5767:26:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_ecfa266217da3a80d0171313986f68cbc4cac0cae9e6359310dca2ed53539b73","typeString":"literal_string \"Expiry too far in future\""},"value":"Expiry too far in future"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ecfa266217da3a80d0171313986f68cbc4cac0cae9e6359310dca2ed53539b73","typeString":"literal_string \"Expiry too far in future\""}],"id":7334,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5710:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5710:84:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7343,"nodeType":"ExpressionStatement","src":"5710:84:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":7349,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7230,"src":"5906:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$399_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":7350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5913:6:28","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":382,"src":"5906:13:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":7346,"name":"SBC_TOKEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7088,"src":"5885:9:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7345,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"5878:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1277_$","typeString":"type(contract IERC20)"}},"id":7347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5878:17:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1277","typeString":"contract IERC20"}},"id":7348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5896:9:28","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1234,"src":"5878:27:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5878:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7352,"name":"REQUIRED_SBC_BALANCE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7090,"src":"5924:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5878:66:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74205342432062616c616e6365","id":7354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5958:26:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_5dc47c422d9659e6766e8592ccdda1f843855cf468f696abb546c21a24e75228","typeString":"literal_string \"Insufficient SBC balance\""},"value":"Insufficient SBC balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5dc47c422d9659e6766e8592ccdda1f843855cf468f696abb546c21a24e75228","typeString":"literal_string \"Insufficient SBC balance\""}],"id":7344,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5857:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5857:137:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7356,"nodeType":"ExpressionStatement","src":"5857:137:28"},{"assignments":[7358],"declarations":[{"constant":false,"id":7358,"mutability":"mutable","name":"signature","nameLocation":"6064:9:28","nodeType":"VariableDeclaration","scope":7410,"src":"6051:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7357,"name":"bytes","nodeType":"ElementaryTypeName","src":"6051:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":7364,"initialValue":{"arguments":[{"id":7360,"name":"paymasterAndData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7277,"src":"6082:16:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"3834","id":7361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6100:2:28","typeDescriptions":{"typeIdentifier":"t_rational_84_by_1","typeString":"int_const 84"},"value":"84"},{"hexValue":"3635","id":7362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6104:2:28","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_84_by_1","typeString":"int_const 84"},{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"}],"id":7359,"name":"slice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7599,"src":"6076:5:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint256,uint256) pure returns (bytes memory)"}},"id":7363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6076:31:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6051:56:28"},{"assignments":[7366],"declarations":[{"constant":false,"id":7366,"mutability":"mutable","name":"messageHash","nameLocation":"6277:11:28","nodeType":"VariableDeclaration","scope":7410,"src":"6269:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6269:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7379,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":7370,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6325:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6331:7:28","memberName":"chainid","nodeType":"MemberAccess","src":"6325:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7372,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7230,"src":"6352:6:28","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$399_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},"id":7373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6359:6:28","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":382,"src":"6352:13:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7374,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7282,"src":"6379:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7375,"name":"expiry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7296,"src":"6398:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7376,"name":"userOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"6418:10:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":7368,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6301:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6305:6:28","memberName":"encode","nodeType":"MemberAccess","src":"6301:10:28","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:137:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7367,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6291:9:28","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6291:148:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6269:170:28"},{"assignments":[7381],"declarations":[{"constant":false,"id":7381,"mutability":"mutable","name":"recovered","nameLocation":"6519:9:28","nodeType":"VariableDeclaration","scope":7410,"src":"6511:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7380,"name":"address","nodeType":"ElementaryTypeName","src":"6511:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7387,"initialValue":{"arguments":[{"id":7384,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7366,"src":"6545:11:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7385,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7358,"src":"6558:9:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7382,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3367,"src":"6531:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3367_$","typeString":"type(library ECDSA)"}},"id":7383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6537:7:28","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3123,"src":"6531:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":7386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6531:37:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6511:57:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7389,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7381,"src":"6586:9:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7390,"name":"authorizedSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7095,"src":"6599:16:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6586:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e6174757265","id":7392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6617:19:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""},"value":"Invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""}],"id":7388,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6578:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6578:59:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7394,"nodeType":"ExpressionStatement","src":"6578:59:28"},{"expression":{"id":7400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7395,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7239,"src":"6708:7:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7398,"name":"nonceHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7310,"src":"6729:9:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":7396,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6718:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6722:6:28","memberName":"encode","nodeType":"MemberAccess","src":"6718:10:28","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6718:21:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"6708:31:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7401,"nodeType":"ExpressionStatement","src":"6708:31:28"},{"expression":{"id":7404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7402,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"6749:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":7403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6766:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6749:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7405,"nodeType":"ExpressionStatement","src":"6749:18:28"},{"expression":{"components":[{"id":7406,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7239,"src":"6824:7:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7407,"name":"validationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"6833:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7408,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6823:25:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"tuple(bytes memory,uint256)"}},"functionReturnParameters":7242,"id":7409,"nodeType":"Return","src":"6816:32:28"}]},"documentation":{"id":7227,"nodeType":"StructuredDocumentation","src":"3685:421:28","text":" Main validation function called by the EntryPoint contract\n @param userOp - The user operation to validate\n @param userOpHash - Hash of the user operation (excluding signatures)\n @param maxCost - Maximum cost of this operation (unused in this implementation)\n @return context - Data to be passed to postOp\n @return validationData - Packed validation data (0 means success)"},"functionSelector":"52b7512c","id":7411,"implemented":true,"kind":"function","modifiers":[{"id":7237,"kind":"modifierInvocation","modifierName":{"id":7236,"name":"whenNotPaused","nameLocations":["4415:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":2624,"src":"4415:13:28"},"nodeType":"ModifierInvocation","src":"4415:13:28"}],"name":"validatePaymasterUserOp","nameLocation":"4120:23:28","nodeType":"FunctionDefinition","parameters":{"id":7235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7230,"mutability":"mutable","name":"userOp","nameLocation":"4182:6:28","nodeType":"VariableDeclaration","scope":7411,"src":"4153:35:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$399_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":7229,"nodeType":"UserDefinedTypeName","pathNode":{"id":7228,"name":"PackedUserOperation","nameLocations":["4153:19:28"],"nodeType":"IdentifierPath","referencedDeclaration":399,"src":"4153:19:28"},"referencedDeclaration":399,"src":"4153:19:28","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$399_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":7232,"mutability":"mutable","name":"userOpHash","nameLocation":"4241:10:28","nodeType":"VariableDeclaration","scope":7411,"src":"4233:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4233:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7234,"mutability":"mutable","name":"maxCost","nameLocation":"4317:7:28","nodeType":"VariableDeclaration","scope":7411,"src":"4309:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7233,"name":"uint256","nodeType":"ElementaryTypeName","src":"4309:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4143:257:28"},"returnParameters":{"id":7242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7239,"mutability":"mutable","name":"context","nameLocation":"4451:7:28","nodeType":"VariableDeclaration","scope":7411,"src":"4438:20:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7238,"name":"bytes","nodeType":"ElementaryTypeName","src":"4438:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7241,"mutability":"mutable","name":"validationData","nameLocation":"4468:14:28","nodeType":"VariableDeclaration","scope":7411,"src":"4460:22:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7240,"name":"uint256","nodeType":"ElementaryTypeName","src":"4460:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4437:46:28"},"scope":7600,"src":"4111:2744:28","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[272],"body":{"id":7466,"nodeType":"Block","src":"7578:486:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7425,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7657:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7661:6:28","memberName":"sender","nodeType":"MemberAccess","src":"7657:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":7429,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"7679:10:28","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$217","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$217","typeString":"contract IEntryPoint"}],"id":7428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7671:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7427,"name":"address","nodeType":"ElementaryTypeName","src":"7671:7:28","typeDescriptions":{}}},"id":7430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7671:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7657:33:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206e6f7420456e747279506f696e74","id":7432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7692:23:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc544a183a74889e2f0f71a19573312cb640b492ec6195283ec98b45e5f0af57","typeString":"literal_string \"Caller not EntryPoint\""},"value":"Caller not EntryPoint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc544a183a74889e2f0f71a19573312cb640b492ec6195283ec98b45e5f0af57","typeString":"literal_string \"Caller not EntryPoint\""}],"id":7424,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7649:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7649:67:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7434,"nodeType":"ExpressionStatement","src":"7649:67:28"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_PostOpMode_$244","typeString":"enum IPaymaster.PostOpMode"},"id":7438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7435,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7415,"src":"7797:4:28","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$244","typeString":"enum IPaymaster.PostOpMode"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7436,"name":"PostOpMode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"7805:10:28","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_PostOpMode_$244_$","typeString":"type(enum IPaymaster.PostOpMode)"}},"id":7437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7816:11:28","memberName":"opSucceeded","nodeType":"MemberAccess","referencedDeclaration":241,"src":"7805:22:28","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$244","typeString":"enum IPaymaster.PostOpMode"}},"src":"7797:30:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7465,"nodeType":"IfStatement","src":"7793:265:28","trueBody":{"id":7464,"nodeType":"Block","src":"7829:229:28","statements":[{"assignments":[7440],"declarations":[{"constant":false,"id":7440,"mutability":"mutable","name":"nonceHash","nameLocation":"7851:9:28","nodeType":"VariableDeclaration","scope":7464,"src":"7843:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7439,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7843:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7448,"initialValue":{"arguments":[{"id":7443,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7417,"src":"7874:7:28","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"components":[{"id":7445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7884:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":7444,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7884:7:28","typeDescriptions":{}}}],"id":7446,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7883:9:28","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}],"expression":{"id":7441,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7863:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7867:6:28","memberName":"decode","nodeType":"MemberAccess","src":"7863:10:28","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":7447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7863:30:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7843:50:28"},{"expression":{"id":7453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7449,"name":"usedNonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7099,"src":"7907:10:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":7451,"indexExpression":{"id":7450,"name":"nonceHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"7918:9:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7907:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7931:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7907:28:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7454,"nodeType":"ExpressionStatement","src":"7907:28:28"},{"eventCall":{"arguments":[{"id":7456,"name":"nonceHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"7964:9:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7455,"name":"NonceUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7110,"src":"7954:9:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":7457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7954:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7458,"nodeType":"EmitStatement","src":"7949:25:28"},{"eventCall":{"arguments":[{"id":7460,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7419,"src":"8010:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7461,"name":"actualUserOpFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7421,"src":"8025:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7459,"name":"PaymasterPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7128,"src":"7993:16:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":7462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7993:54:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7463,"nodeType":"EmitStatement","src":"7988:59:28"}]}}]},"documentation":{"id":7412,"nodeType":"StructuredDocumentation","src":"6861:363:28","text":" Post-operation handler called by EntryPoint after operation execution\n @param mode - Success/failure status of the operation\n @param context - Context data passed from validatePaymasterUserOp\n @param actualGasCost - Actual gas cost of the operation (unused)\n @param actualUserOpFeePerGas - Actual gas price used (unused)"},"functionSelector":"7c627b21","id":7467,"implemented":true,"kind":"function","modifiers":[],"name":"postOp","nameLocation":"7238:6:28","nodeType":"FunctionDefinition","parameters":{"id":7422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7415,"mutability":"mutable","name":"mode","nameLocation":"7265:4:28","nodeType":"VariableDeclaration","scope":7467,"src":"7254:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$244","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":7414,"nodeType":"UserDefinedTypeName","pathNode":{"id":7413,"name":"PostOpMode","nameLocations":["7254:10:28"],"nodeType":"IdentifierPath","referencedDeclaration":244,"src":"7254:10:28"},"referencedDeclaration":244,"src":"7254:10:28","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$244","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":7417,"mutability":"mutable","name":"context","nameLocation":"7349:7:28","nodeType":"VariableDeclaration","scope":7467,"src":"7334:22:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7416,"name":"bytes","nodeType":"ElementaryTypeName","src":"7334:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7419,"mutability":"mutable","name":"actualGasCost","nameLocation":"7432:13:28","nodeType":"VariableDeclaration","scope":7467,"src":"7424:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7418,"name":"uint256","nodeType":"ElementaryTypeName","src":"7424:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7421,"mutability":"mutable","name":"actualUserOpFeePerGas","nameLocation":"7505:21:28","nodeType":"VariableDeclaration","scope":7467,"src":"7497:29:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7420,"name":"uint256","nodeType":"ElementaryTypeName","src":"7497:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7244:324:28"},"returnParameters":{"id":7423,"nodeType":"ParameterList","parameters":[],"src":"7578:0:28"},"scope":7600,"src":"7229:835:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7490,"nodeType":"Block","src":"8186:124:28","statements":[{"expression":{"arguments":[{"arguments":[{"id":7479,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8243:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_SignatureVerifyingPaymaster_$7600","typeString":"contract SignatureVerifyingPaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SignatureVerifyingPaymaster_$7600","typeString":"contract SignatureVerifyingPaymaster"}],"id":7478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8235:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7477,"name":"address","nodeType":"ElementaryTypeName","src":"8235:7:28","typeDescriptions":{}}},"id":7480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8235:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7471,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"8196:10:28","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$217","typeString":"contract IEntryPoint"}},"id":7473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8207:9:28","memberName":"depositTo","nodeType":"MemberAccess","referencedDeclaration":352,"src":"8196:20:28","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$","typeString":"function (address) payable external"}},"id":7476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":7474,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8224:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8228:5:28","memberName":"value","nodeType":"MemberAccess","src":"8224:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"8196:38:28","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$value","typeString":"function (address) payable external"}},"id":7481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8196:53:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7482,"nodeType":"ExpressionStatement","src":"8196:53:28"},{"eventCall":{"arguments":[{"expression":{"id":7484,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8281:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8285:6:28","memberName":"sender","nodeType":"MemberAccess","src":"8281:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7486,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8293:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8297:5:28","memberName":"value","nodeType":"MemberAccess","src":"8293:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7483,"name":"PaymasterDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7116,"src":"8264:16:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8264:39:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7489,"nodeType":"EmitStatement","src":"8259:44:28"}]},"documentation":{"id":7468,"nodeType":"StructuredDocumentation","src":"8070:75:28","text":" Allow anyone to deposit ETH to fund paymaster operations"},"functionSelector":"d0e30db0","id":7491,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"8159:7:28","nodeType":"FunctionDefinition","parameters":{"id":7469,"nodeType":"ParameterList","parameters":[],"src":"8166:2:28"},"returnParameters":{"id":7470,"nodeType":"ParameterList","parameters":[],"src":"8186:0:28"},"scope":7600,"src":"8150:160:28","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":7530,"nodeType":"Block","src":"8599:248:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7502,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7494,"src":"8617:15:28","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8644:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8636:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7503,"name":"address","nodeType":"ElementaryTypeName","src":"8636:7:28","typeDescriptions":{}}},"id":7506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8636:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8617:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5a65726f2061646472657373207769746864726177","id":7508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8648:23:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_f789c796bc88b6644f4b1d82a40a6f90d1ada33aa23e9176f89c644271009430","typeString":"literal_string \"Zero address withdraw\""},"value":"Zero address withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f789c796bc88b6644f4b1d82a40a6f90d1ada33aa23e9176f89c644271009430","typeString":"literal_string \"Zero address withdraw\""}],"id":7501,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8609:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8609:63:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7510,"nodeType":"ExpressionStatement","src":"8609:63:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7512,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7496,"src":"8690:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8699:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8690:10:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5a65726f20616d6f756e74207769746864726177","id":7515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8702:22:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_c84ea879ba77ce28ba9dedf701fc36f58c603ac0dc3701d534f1f2611de4053f","typeString":"literal_string \"Zero amount withdraw\""},"value":"Zero amount withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c84ea879ba77ce28ba9dedf701fc36f58c603ac0dc3701d534f1f2611de4053f","typeString":"literal_string \"Zero amount withdraw\""}],"id":7511,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8682:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8682:43:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7517,"nodeType":"ExpressionStatement","src":"8682:43:28"},{"expression":{"arguments":[{"id":7521,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7494,"src":"8757:15:28","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":7522,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7496,"src":"8774:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7518,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"8735:10:28","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$217","typeString":"contract IEntryPoint"}},"id":7520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8746:10:28","memberName":"withdrawTo","nodeType":"MemberAccess","referencedDeclaration":376,"src":"8735:21:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256) external"}},"id":7523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8735:46:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7524,"nodeType":"ExpressionStatement","src":"8735:46:28"},{"eventCall":{"arguments":[{"id":7526,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7494,"src":"8816:15:28","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":7527,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7496,"src":"8833:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7525,"name":"PaymasterWithdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7122,"src":"8796:19:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8796:44:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7529,"nodeType":"EmitStatement","src":"8791:49:28"}]},"documentation":{"id":7492,"nodeType":"StructuredDocumentation","src":"8316:190:28","text":" Allow owner to withdraw ETH from the paymaster's deposit\n @param withdrawAddress - Address to send the withdrawn ETH\n @param amount - Amount of ETH to withdraw"},"functionSelector":"205c2878","id":7531,"implemented":true,"kind":"function","modifiers":[{"id":7499,"kind":"modifierInvocation","modifierName":{"id":7498,"name":"onlyOwner","nameLocations":["8589:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":458,"src":"8589:9:28"},"nodeType":"ModifierInvocation","src":"8589:9:28"}],"name":"withdrawTo","nameLocation":"8520:10:28","nodeType":"FunctionDefinition","parameters":{"id":7497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7494,"mutability":"mutable","name":"withdrawAddress","nameLocation":"8547:15:28","nodeType":"VariableDeclaration","scope":7531,"src":"8531:31:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":7493,"name":"address","nodeType":"ElementaryTypeName","src":"8531:15:28","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":7496,"mutability":"mutable","name":"amount","nameLocation":"8572:6:28","nodeType":"VariableDeclaration","scope":7531,"src":"8564:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7495,"name":"uint256","nodeType":"ElementaryTypeName","src":"8564:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8530:49:28"},"returnParameters":{"id":7500,"nodeType":"ParameterList","parameters":[],"src":"8599:0:28"},"scope":7600,"src":"8511:336:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7545,"nodeType":"Block","src":"9028:59:28","statements":[{"expression":{"arguments":[{"arguments":[{"id":7541,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9074:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_SignatureVerifyingPaymaster_$7600","typeString":"contract SignatureVerifyingPaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SignatureVerifyingPaymaster_$7600","typeString":"contract SignatureVerifyingPaymaster"}],"id":7540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9066:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7539,"name":"address","nodeType":"ElementaryTypeName","src":"9066:7:28","typeDescriptions":{}}},"id":7542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9066:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7537,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7102,"src":"9045:10:28","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$217","typeString":"contract IEntryPoint"}},"id":7538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9056:9:28","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":346,"src":"9045:20:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":7543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9045:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7536,"id":7544,"nodeType":"Return","src":"9038:42:28"}]},"documentation":{"id":7532,"nodeType":"StructuredDocumentation","src":"8853:118:28","text":" View function to check current deposit balance in EntryPoint\n @return Current deposit balance"},"functionSelector":"c399ec88","id":7546,"implemented":true,"kind":"function","modifiers":[],"name":"getDeposit","nameLocation":"8985:10:28","nodeType":"FunctionDefinition","parameters":{"id":7533,"nodeType":"ParameterList","parameters":[],"src":"8995:2:28"},"returnParameters":{"id":7536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7546,"src":"9019:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7534,"name":"uint256","nodeType":"ElementaryTypeName","src":"9019:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9018:9:28"},"scope":7600,"src":"8976:111:28","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7555,"nodeType":"Block","src":"9200:25:28","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7552,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"9210:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9210:8:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7554,"nodeType":"ExpressionStatement","src":"9210:8:28"}]},"documentation":{"id":7547,"nodeType":"StructuredDocumentation","src":"9093:66:28","text":" Allow owner to pause the paymaster in emergency"},"functionSelector":"8456cb59","id":7556,"implemented":true,"kind":"function","modifiers":[{"id":7550,"kind":"modifierInvocation","modifierName":{"id":7549,"name":"onlyOwner","nameLocations":["9190:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":458,"src":"9190:9:28"},"nodeType":"ModifierInvocation","src":"9190:9:28"}],"name":"pause","nameLocation":"9173:5:28","nodeType":"FunctionDefinition","parameters":{"id":7548,"nodeType":"ParameterList","parameters":[],"src":"9178:2:28"},"returnParameters":{"id":7551,"nodeType":"ParameterList","parameters":[],"src":"9200:0:28"},"scope":7600,"src":"9164:61:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7565,"nodeType":"Block","src":"9329:27:28","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7562,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"9339:8:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9339:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7564,"nodeType":"ExpressionStatement","src":"9339:10:28"}]},"documentation":{"id":7557,"nodeType":"StructuredDocumentation","src":"9231:55:28","text":" Allow owner to unpause the paymaster"},"functionSelector":"3f4ba83a","id":7566,"implemented":true,"kind":"function","modifiers":[{"id":7560,"kind":"modifierInvocation","modifierName":{"id":7559,"name":"onlyOwner","nameLocations":["9319:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":458,"src":"9319:9:28"},"nodeType":"ModifierInvocation","src":"9319:9:28"}],"name":"unpause","nameLocation":"9300:7:28","nodeType":"FunctionDefinition","parameters":{"id":7558,"nodeType":"ParameterList","parameters":[],"src":"9307:2:28"},"returnParameters":{"id":7561,"nodeType":"ParameterList","parameters":[],"src":"9329:0:28"},"scope":7600,"src":"9291:65:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7598,"nodeType":"Block","src":"9717:493:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7579,"name":"start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7571,"src":"9735:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7580,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7573,"src":"9743:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9735:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":7582,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7569,"src":"9753:4:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9758:6:28","memberName":"length","nodeType":"MemberAccess","src":"9753:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9735:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536c696365206f7574206f6620626f756e6473","id":7585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9766:21:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_f1c269d7eab972b2fd4d87a15c317e920493e7eea923de7e48c0ebcb7f611fa9","typeString":"literal_string \"Slice out of bounds\""},"value":"Slice out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f1c269d7eab972b2fd4d87a15c317e920493e7eea923de7e48c0ebcb7f611fa9","typeString":"literal_string \"Slice out of bounds\""}],"id":7578,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9727:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9727:61:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7587,"nodeType":"ExpressionStatement","src":"9727:61:28"},{"assignments":[7589],"declarations":[{"constant":false,"id":7589,"mutability":"mutable","name":"result","nameLocation":"9811:6:28","nodeType":"VariableDeclaration","scope":7598,"src":"9798:19:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7588,"name":"bytes","nodeType":"ElementaryTypeName","src":"9798:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":7594,"initialValue":{"arguments":[{"id":7592,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7573,"src":"9830:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9820:9:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":7590,"name":"bytes","nodeType":"ElementaryTypeName","src":"9824:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":7593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9820:17:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9798:39:28"},{"AST":{"nativeSrc":"9856:325:28","nodeType":"YulBlock","src":"9856:325:28","statements":[{"nativeSrc":"9918:32:28","nodeType":"YulVariableDeclaration","src":"9918:32:28","value":{"arguments":[{"name":"result","nativeSrc":"9939:6:28","nodeType":"YulIdentifier","src":"9939:6:28"},{"kind":"number","nativeSrc":"9947:2:28","nodeType":"YulLiteral","src":"9947:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9935:3:28","nodeType":"YulIdentifier","src":"9935:3:28"},"nativeSrc":"9935:15:28","nodeType":"YulFunctionCall","src":"9935:15:28"},"variables":[{"name":"resultPtr","nativeSrc":"9922:9:28","nodeType":"YulTypedName","src":"9922:9:28","type":""}]},{"nativeSrc":"9993:40:28","nodeType":"YulVariableDeclaration","src":"9993:40:28","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"10016:4:28","nodeType":"YulIdentifier","src":"10016:4:28"},{"kind":"number","nativeSrc":"10022:2:28","nodeType":"YulLiteral","src":"10022:2:28","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10012:3:28","nodeType":"YulIdentifier","src":"10012:3:28"},"nativeSrc":"10012:13:28","nodeType":"YulFunctionCall","src":"10012:13:28"},{"name":"start","nativeSrc":"10027:5:28","nodeType":"YulIdentifier","src":"10027:5:28"}],"functionName":{"name":"add","nativeSrc":"10008:3:28","nodeType":"YulIdentifier","src":"10008:3:28"},"nativeSrc":"10008:25:28","nodeType":"YulFunctionCall","src":"10008:25:28"},"variables":[{"name":"dataPtr","nativeSrc":"9997:7:28","nodeType":"YulTypedName","src":"9997:7:28","type":""}]},{"expression":{"arguments":[{"name":"resultPtr","nativeSrc":"10145:9:28","nodeType":"YulIdentifier","src":"10145:9:28"},{"arguments":[{"name":"dataPtr","nativeSrc":"10162:7:28","nodeType":"YulIdentifier","src":"10162:7:28"}],"functionName":{"name":"mload","nativeSrc":"10156:5:28","nodeType":"YulIdentifier","src":"10156:5:28"},"nativeSrc":"10156:14:28","nodeType":"YulFunctionCall","src":"10156:14:28"}],"functionName":{"name":"mstore","nativeSrc":"10138:6:28","nodeType":"YulIdentifier","src":"10138:6:28"},"nativeSrc":"10138:33:28","nodeType":"YulFunctionCall","src":"10138:33:28"},"nativeSrc":"10138:33:28","nodeType":"YulExpressionStatement","src":"10138:33:28"}]},"evmVersion":"paris","externalReferences":[{"declaration":7569,"isOffset":false,"isSlot":false,"src":"10016:4:28","valueSize":1},{"declaration":7589,"isOffset":false,"isSlot":false,"src":"9939:6:28","valueSize":1},{"declaration":7571,"isOffset":false,"isSlot":false,"src":"10027:5:28","valueSize":1}],"id":7595,"nodeType":"InlineAssembly","src":"9847:334:28"},{"expression":{"id":7596,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7589,"src":"10197:6:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":7577,"id":7597,"nodeType":"Return","src":"10190:13:28"}]},"documentation":{"id":7567,"nodeType":"StructuredDocumentation","src":"9362:248:28","text":" Internal helper function to extract a slice from a bytes array\n @param data - Source bytes array\n @param start - Starting position\n @param length - Length of slice to extract\n @return Extracted bytes slice"},"id":7599,"implemented":true,"kind":"function","modifiers":[],"name":"slice","nameLocation":"9624:5:28","nodeType":"FunctionDefinition","parameters":{"id":7574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7569,"mutability":"mutable","name":"data","nameLocation":"9643:4:28","nodeType":"VariableDeclaration","scope":7599,"src":"9630:17:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7568,"name":"bytes","nodeType":"ElementaryTypeName","src":"9630:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7571,"mutability":"mutable","name":"start","nameLocation":"9657:5:28","nodeType":"VariableDeclaration","scope":7599,"src":"9649:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7570,"name":"uint256","nodeType":"ElementaryTypeName","src":"9649:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7573,"mutability":"mutable","name":"length","nameLocation":"9672:6:28","nodeType":"VariableDeclaration","scope":7599,"src":"9664:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7572,"name":"uint256","nodeType":"ElementaryTypeName","src":"9664:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9629:50:28"},"returnParameters":{"id":7577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7576,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7599,"src":"9703:12:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7575,"name":"bytes","nodeType":"ElementaryTypeName","src":"9703:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9702:14:28"},"scope":7600,"src":"9615:595:28","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7601,"src":"861:9351:28","usedErrors":[413,418,2604,2607,3030,3035,3040],"usedEvents":[424,2596,2601,7106,7110,7116,7122,7128]}],"src":"39:10174:28"},"id":28}},"contracts":{"@account-abstraction/contracts/interfaces/IAggregator.sol":{"IAggregator":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"userOps","type":"tuple[]"}],"name":"aggregateSignatures","outputs":[{"internalType":"bytes","name":"aggregatedSignature","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"validateSignatures","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"}],"name":"validateUserOpSignature","outputs":[{"internalType":"bytes","name":"sigForUserOp","type":"bytes"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"aggregateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[])":"ae574a43","validateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],bytes)":"2dd81133","validateUserOpSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))":"062a422b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"}],\"name\":\"aggregateSignatures\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"aggregatedSignature\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"validateSignatures\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"validateUserOpSignature\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"sigForUserOp\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[])\":{\"params\":{\"userOps\":\"- Array of UserOperations to collect the signatures from.\"},\"returns\":{\"aggregatedSignature\":\"- The aggregated signature.\"}},\"validateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],bytes)\":{\"params\":{\"signature\":\"- The aggregated signature.\",\"userOps\":\"- Array of UserOperations to validate the signature for.\"}},\"validateUserOpSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))\":{\"params\":{\"userOp\":\"- The userOperation received from the user.\"},\"returns\":{\"sigForUserOp\":\"- The value to put into the signature field of the userOp when calling handleOps.                        (usually empty, unless account and aggregator support some kind of \\\"multisig\\\".\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"aggregateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[])\":{\"notice\":\"Aggregate multiple signatures into a single value. This method is called off-chain to calculate the signature to pass with handleOps() bundler MAY use optimized custom code perform this aggregation.\"},\"validateSignatures((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],bytes)\":{\"notice\":\"Validate aggregated signature. Revert if the aggregated signature does not match the given list of operations.\"},\"validateUserOpSignature((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))\":{\"notice\":\"Validate signature of a single userOp. This method should be called by bundler after EntryPointSimulation.simulateValidation() returns the aggregator this account uses. First it validates the signature over the userOp. Then it returns data to be used when creating the handleOps.\"}},\"notice\":\"Aggregated Signatures validator.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IAggregator.sol\":\"IAggregator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155\",\"dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5\"]},\"@account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/IEntryPoint.sol":{"IEntryPoint":{"abi":[{"inputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"ret","type":"bytes"}],"name":"DelegateAndRevert","type":"error"},{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"}],"name":"FailedOp","type":"error"},{"inputs":[{"internalType":"uint256","name":"opIndex","type":"uint256"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bytes","name":"inner","type":"bytes"}],"name":"FailedOpWithRevert","type":"error"},{"inputs":[{"internalType":"bytes","name":"returnData","type":"bytes"}],"name":"PostOpReverted","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"SenderAddressResult","type":"error"},{"inputs":[{"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureValidationFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"factory","type":"address"},{"indexed":false,"internalType":"address","name":"paymaster","type":"address"}],"name":"AccountDeployed","type":"event"},{"anonymous":false,"inputs":[],"name":"BeforeExecution","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"PostOpRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"aggregator","type":"address"}],"name":"SignatureAggregatorChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"paymaster","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"},{"indexed":false,"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"actualGasUsed","type":"uint256"}],"name":"UserOperationEvent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"}],"name":"UserOperationPrefundTooLow","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"revertReason","type":"bytes"}],"name":"UserOperationRevertReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"_unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"delegateAndRevert","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint256","name":"deposit","type":"uint256"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"initCode","type":"bytes"}],"name":"getSenderAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"}],"name":"getUserOpHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"userOps","type":"tuple[]"},{"internalType":"contract IAggregator","name":"aggregator","type":"address"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct IEntryPoint.UserOpsPerAggregator[]","name":"opsPerAggregator","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleAggregatedOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation[]","name":"ops","type":"tuple[]"},{"internalType":"address payable","name":"beneficiary","type":"address"}],"name":"handleOps","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","delegateAndRevert(address,bytes)":"850aaf62","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","getNonce(address,uint192)":"35567e1a","getSenderAddress(bytes)":"9b249f69","getUserOpHash((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))":"22cdde4c","handleAggregatedOps(((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address,bytes)[],address)":"dbed18e0","handleOps((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address)":"765e827f","incrementNonce(uint192)":"0bd28e3b","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"ret\",\"type\":\"bytes\"}],\"name\":\"DelegateAndRevert\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"FailedOp\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"inner\",\"type\":\"bytes\"}],\"name\":\"FailedOpWithRevert\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"PostOpReverted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderAddressResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureValidationFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"}],\"name\":\"AccountDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"BeforeExecution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"PostOpRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureAggregatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasUsed\",\"type\":\"uint256\"}],\"name\":\"UserOperationEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"UserOperationPrefundTooLow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"UserOperationRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"delegateAndRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"getSenderAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"getUserOpHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAggregator\",\"name\":\"aggregator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.UserOpsPerAggregator[]\",\"name\":\"opsPerAggregator\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleAggregatedOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation[]\",\"name\":\"ops\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"params\":{\"opIndex\":\"- Index into the array of ops to the failed one (in simulateValidation, this is always zero).\",\"reason\":\"- Revert reason. The string starts with a unique code \\\"AAmn\\\",                  where \\\"m\\\" is \\\"1\\\" for factory, \\\"2\\\" for account and \\\"3\\\" for paymaster issues,                  so a failure can be attributed to the correct entity.\"}}],\"FailedOpWithRevert(uint256,string,bytes)\":[{\"details\":\"note that inner is truncated to 2048 bytes\",\"params\":{\"inner\":\"- data from inner cought revert reason\",\"opIndex\":\"- Index into the array of ops to the failed one (in simulateValidation, this is always zero).\",\"reason\":\"- Revert reason. see FailedOp(uint256,string), above\"}}],\"SignatureValidationFailed(address)\":[{\"params\":{\"aggregator\":\"The aggregator that failed to verify the signature\"}}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"params\":{\"factory\":\"- The factory used to deploy this account (in the initCode)\",\"paymaster\":\"- The paymaster used by this UserOp\",\"sender\":\"- The account that is deployed\",\"userOpHash\":\"- The userOp that deployed this account. UserOperationEvent will follow.\"}},\"PostOpRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"revertReason\":\"- The return bytes from the (reverted) call to \\\"callData\\\".\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}},\"SignatureAggregatorChanged(address)\":{\"params\":{\"aggregator\":\"- The aggregator used for the following UserOperationEvents.\"}},\"UserOperationPrefundTooLow(bytes32,address,uint256)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"- The nonce used in the request.\",\"revertReason\":\"- The return bytes from the (reverted) call to \\\"callData\\\".\",\"sender\":\"- The sender of this request.\",\"userOpHash\":\"- The request unique identifier.\"}}},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"- The new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"_0\":\"- The deposit (for gas payment) of the account.\"}},\"delegateAndRevert(address,bytes)\":{\"details\":\"calling this method, the EntryPoint will make a delegatecall to the given data, and report (via revert) the result.  The method always revert, so is only useful off-chain for dry run calls, in cases where state-override to replace  actual EntryPoint code is less convenient.\",\"params\":{\"data\":\"data to pass to target in a delegatecall\",\"target\":\"a target contract to make a delegatecall from entrypoint\"}},\"depositTo(address)\":{\"params\":{\"account\":\"- The account to add to.\"}},\"getDepositInfo(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"info\":\"  - Full deposit information of given account.\"}},\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}},\"getSenderAddress(bytes)\":{\"params\":{\"initCode\":\"- The constructor code to be passed into the UserOperation.\"}},\"getUserOpHash((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))\":{\"params\":{\"userOp\":\"- The user operation to generate the request ID for.\"},\"returns\":{\"_0\":\"hash the hash of this UserOperation\"}},\"handleAggregatedOps(((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address,bytes)[],address)\":{\"params\":{\"beneficiary\":\"- The address to receive the fees.\",\"opsPerAggregator\":\"- The operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts).\"}},\"handleOps((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address)\":{\"params\":{\"beneficiary\":\"- The address to receive the fees.\",\"ops\":\"- The operations to execute.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\",\"withdrawAmount\":\"- The amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"FailedOp(uint256,string)\":[{\"notice\":\"A custom revert error of handleOps, to identify the offending op. Should be caught in off-chain handleOps simulation and not happen on-chain. Useful for mitigating DoS attempts against batchers or for troubleshooting of factory/account/paymaster reverts. NOTE: If simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\"}],\"FailedOpWithRevert(uint256,string,bytes)\":[{\"notice\":\"A custom revert error of handleOps, to report a revert by account or paymaster.\"}],\"SignatureValidationFailed(address)\":[{\"notice\":\"Error case when a signature aggregator fails to verify the aggregated signature it had created.\"}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"notice\":\"Account \\\"sender\\\" was deployed.\"},\"BeforeExecution()\":{\"notice\":\"An event emitted by handleOps(), before starting the execution loop. Any event emitted before this event, is part of the validation.\"},\"PostOpRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation Paymaster's \\\"postOp\\\" call reverted with non-zero length.\"},\"SignatureAggregatorChanged(address)\":{\"notice\":\"Signature aggregator used by the following UserOperationEvents within this bundle.\"},\"UserOperationPrefundTooLow(bytes32,address,uint256)\":{\"notice\":\"UserOp consumed more than prefund. The UserOperation is reverted, and no refund is made.\"},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation \\\"callData\\\" reverted with non-zero length.\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"balanceOf(address)\":{\"notice\":\"Get account balance.\"},\"delegateAndRevert(address,bytes)\":{\"notice\":\"Helper method for dry-run testing.\"},\"depositTo(address)\":{\"notice\":\"Add to the deposit of the given account.\"},\"getDepositInfo(address)\":{\"notice\":\"Get deposit info.\"},\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"getSenderAddress(bytes)\":{\"notice\":\"Get counterfactual sender address. Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. This method always revert, and returns the address in SenderAddressResult error\"},\"getUserOpHash((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes))\":{\"notice\":\"Generate a request Id - unique identifier for this request. The request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\"},\"handleAggregatedOps(((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation with Aggregators\"},\"handleOps((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperations. No signature aggregator is used. If any account requires an aggregator (that is, it returned an aggregator when performing simulateValidation), then handleAggregatedOps() must be used instead.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"},\"unlockStake()\":{\"notice\":\"Attempt to unlock the stake. The value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw from the (unlocked) stake. Must first call unlockStake and wait for the unstakeDelay to pass.\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw from the deposit.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":\"IEntryPoint\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155\",\"dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5\"]},\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9\",\"dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe\"]},\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3\",\"dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk\"]},\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00\",\"dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj\"]},\"@account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/INonceManager.sol":{"INonceManager":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint192","name":"key","type":"uint192"}],"name":"getNonce","outputs":[{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint192","name":"key","type":"uint192"}],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getNonce(address,uint192)":"35567e1a","incrementNonce(uint192)":"0bd28e3b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint192\",\"name\":\"key\",\"type\":\"uint192\"}],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getNonce(address,uint192)\":{\"params\":{\"key\":\"the high 192 bit of the nonce\",\"sender\":\"the account address\"},\"returns\":{\"nonce\":\"a full nonce to pass for next UserOp with this sender.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getNonce(address,uint192)\":{\"notice\":\"Return the next nonce for this sender. Within a given key, the nonce values are sequenced (starting with zero, and incremented by one on each userop) But UserOp with different keys can come with arbitrary order.\"},\"incrementNonce(uint192)\":{\"notice\":\"Manually increment the nonce of the sender. This method is exposed just for completeness.. Account does NOT need to call it, neither during validation, nor elsewhere, as the EntryPoint will update the nonce regardless. Possible use-case is call it with various keys to \\\"initialize\\\" their nonces to one, so that future UserOperations will not pay extra for the first transaction with a given key.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/INonceManager.sol\":\"INonceManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3\",\"dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/IPaymaster.sol":{"IPaymaster":{"abi":[{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"internalType":"uint256","name":"actualUserOpFeePerGas","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"postOp(uint8,bytes,uint256,uint256)":"7c627b21","validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":"52b7512c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualUserOpFeePerGas\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"postOp(uint8,bytes,uint256,uint256)\":{\"params\":{\"actualGasCost\":\"- Actual gas used so far (without this postOp call).\",\"actualUserOpFeePerGas\":\"- the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas                        and maxPriorityFee (and basefee)                        It is not the same as tx.gasprice, which is what the bundler pays.\",\"context\":\"- The context value returned by validatePaymasterUserOp\",\"mode\":\"- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. The paymaster still has to pay for gas.                        postOpReverted - never passed in a call to postOp().\"}},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"- The maximum cost of this transaction (based on maximum gas and gas price from userOp).\",\"userOp\":\"- The user operation.\",\"userOpHash\":\"- Hash of the user's request data.\"},\"returns\":{\"context\":\"       - Value to send to a postOp. Zero length to signify postOp is not required.\",\"validationData\":\"- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                                    other values are invalid for paymaster.                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"postOp(uint8,bytes,uint256,uint256)\":{\"notice\":\"Post-operation handler. Must verify sender is the entryPoint.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"}},\"notice\":\"The interface exposed by a paymaster contract, who agrees to pay the gas for user's operations. A paymaster must hold a stake to cover the required entrypoint stake and also the gas for the transaction.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IPaymaster.sol\":\"IPaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x49d8dbf8a85b006bcd89bbc40e4e9e113997cc016007de85263bdae70572d07f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bc0d83804c1b795d5c216b3518cd176c48f90db28550f267cbd89746d6b476c8\",\"dweb:/ipfs/QmNdCm4c6hnt7f6Q8q21QjtCNZWWRUaMVEYnQHEv68VnKt\"]},\"@account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]}},\"version\":1}"}},"@account-abstraction/contracts/interfaces/IStakeManager.sol":{"IStakeManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDeposit","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalStaked","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"unstakeDelaySec","type":"uint256"}],"name":"StakeLocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"withdrawTime","type":"uint256"}],"name":"StakeUnlocked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"StakeWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"address","name":"withdrawAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"uint32","name":"_unstakeDelaySec","type":"uint32"}],"name":"addStake","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"depositTo","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getDepositInfo","outputs":[{"components":[{"internalType":"uint256","name":"deposit","type":"uint256"},{"internalType":"bool","name":"staked","type":"bool"},{"internalType":"uint112","name":"stake","type":"uint112"},{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"},{"internalType":"uint48","name":"withdrawTime","type":"uint48"}],"internalType":"struct IStakeManager.DepositInfo","name":"info","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unlockStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"name":"withdrawStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"withdrawAmount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"addStake(uint32)":"0396cb60","balanceOf(address)":"70a08231","depositTo(address)":"b760faf9","getDepositInfo(address)":"5287ce12","unlockStake()":"bb9fe6bf","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint48\",\"name\":\"withdrawTime\",\"type\":\"uint48\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"- The new lock duration before the deposit can be withdrawn.\"}},\"balanceOf(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"_0\":\"- The deposit (for gas payment) of the account.\"}},\"depositTo(address)\":{\"params\":{\"account\":\"- The account to add to.\"}},\"getDepositInfo(address)\":{\"params\":{\"account\":\"- The account to query.\"},\"returns\":{\"info\":\"  - Full deposit information of given account.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\",\"withdrawAmount\":\"- The amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"balanceOf(address)\":{\"notice\":\"Get account balance.\"},\"depositTo(address)\":{\"notice\":\"Add to the deposit of the given account.\"},\"getDepositInfo(address)\":{\"notice\":\"Get deposit info.\"},\"unlockStake()\":{\"notice\":\"Attempt to unlock the stake. The value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw from the (unlocked) stake. Must first call unlockStake and wait for the unstakeDelay to pass.\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw from the deposit.\"}},\"notice\":\"Manage deposits and stakes. Deposit is just a balance used to pay for UserOperations (either by a paymaster or an account). Stake is value locked for at least \\\"unstakeDelay\\\" by the staked entity.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":\"IStakeManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00\",\"dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122028ed9ae526aff3f228f384250649b4cdb480086d8e53eaae784e451696c7d4a664736f6c63430008170033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 0xED SWAP11 0xE5 0x26 0xAF RETURN CALLCODE 0x28 RETURN DUP5 0x25 MOD 0x49 0xB4 0xCD 0xB4 DUP1 ADDMOD PUSH14 0x8E53EAAE784E451696C7D4A66473 PUSH16 0x6C634300081700330000000000000000 ","sourceMap":"431:1480:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;431:1480:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122028ed9ae526aff3f228f384250649b4cdb480086d8e53eaae784e451696c7d4a664736f6c63430008170033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 0xED SWAP11 0xE5 0x26 0xAF RETURN CALLCODE 0x28 RETURN DUP5 0x25 MOD 0x49 0xB4 0xCD 0xB4 DUP1 ADDMOD PUSH14 0x8E53EAAE784E451696C7D4A66473 PUSH16 0x6C634300081700330000000000000000 ","sourceMap":"431:1480:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d40e0b48ff2ac2d41badaee2849858f960aa826aa11ecd4a0b69c36923f3a75d64736f6c63430008170033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0xE SIGNEXTEND BASEFEE SELFDESTRUCT 0x2A 0xC2 0xD4 SHL 0xAD 0xAE 0xE2 DUP5 SWAP9 PC 0xF9 PUSH1 0xAA DUP3 PUSH11 0xA11ECD4A0B69C36923F3A7 0x5D PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"657:1315:17:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:17;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d40e0b48ff2ac2d41badaee2849858f960aa826aa11ecd4a0b69c36923f3a75d64736f6c63430008170033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0xE SIGNEXTEND BASEFEE SELFDESTRUCT 0x2A 0xC2 0xD4 SHL 0xAD 0xAE 0xE2 DUP5 SWAP9 PC 0xF9 PUSH1 0xAA DUP3 PUSH11 0xA11ECD4A0B69C36923F3A7 0x5D PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"657:1315:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Pausable.sol":{"Pausable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f4b8740342327640fbb52e01e0e13fe72be4892c472f9dc93d831bd9a874daf064736f6c63430008170033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL 0xB8 PUSH21 0x342327640FBB52E01E0E13FE72BE4892C472F9DC9 RETURNDATASIZE DUP4 SHL 0xD9 0xA8 PUSH21 0xDAF064736F6C634300081700330000000000000000 ","sourceMap":"251:3680:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:3680:19;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f4b8740342327640fbb52e01e0e13fe72be4892c472f9dc93d831bd9a874daf064736f6c63430008170033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL 0xB8 PUSH21 0x342327640FBB52E01E0E13FE72BE4892C472F9DC9 RETURNDATASIZE DUP4 SHL 0xD9 0xA8 PUSH21 0xDAF064736F6C634300081700330000000000000000 ","sourceMap":"251:3680:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fe9f42c97a6e5aa0f89d601fa8043f763b6d2701c56458e773a4c1c019bc744464736f6c63430008170033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID SWAP16 TIMESTAMP 0xC9 PUSH27 0x6E5AA0F89D601FA8043F763B6D2701C56458E773A4C1C019BC7444 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"344:7470:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;344:7470:20;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fe9f42c97a6e5aa0f89d601fa8043f763b6d2701c56458e773a4c1c019bc744464736f6c63430008170033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID SWAP16 TIMESTAMP 0xC9 PUSH27 0x6E5AA0F89D601FA8043F763B6D2701C56458E773A4C1C019BC7444 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"344:7470:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fe2bc90beb7d2d9dacfae01f43271436b371aa3b267c69a6334a55188dbac6e564736f6c63430008170033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0x2B 0xC9 SIGNEXTEND 0xEB PUSH30 0x2D9DACFAE01F43271436B371AA3B267C69A6334A55188DBAC6E564736F6C PUSH4 0x43000817 STOP CALLER ","sourceMap":"281:28026:23:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:28026:23;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fe2bc90beb7d2d9dacfae01f43271436b371aa3b267c69a6334a55188dbac6e564736f6c63430008170033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0x2B 0xC9 SIGNEXTEND 0xEB PUSH30 0x2D9DACFAE01F43271436B371AA3B267C69A6334A55188DBAC6E564736F6C PUSH4 0x43000817 STOP CALLER ","sourceMap":"281:28026:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aa3a3ab1a17cef30462aedc4cf2a64d026563002d4c08fa0dee5476d63830ff764736f6c63430008170033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA GASPRICE GASPRICE 0xB1 LOG1 PUSH29 0xEF30462AEDC4CF2A64D026563002D4C08FA0DEE5476D63830FF764736F PUSH13 0x63430008170033000000000000 ","sourceMap":"769:34173:24:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:24;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aa3a3ab1a17cef30462aedc4cf2a64d026563002d4c08fa0dee5476d63830ff764736f6c63430008170033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA GASPRICE GASPRICE 0xB1 LOG1 PUSH29 0xEF30462AEDC4CF2A64D026563002D4C08FA0DEE5476D63830FF764736F PUSH13 0x63430008170033000000000000 ","sourceMap":"769:34173:24:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220030530b9cab69528c6a491e8a16d4b98ee7544c926ede0ba38d5f51ccac30d3264736f6c63430008170033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB SDIV ADDRESS 0xB9 0xCA 0xB6 SWAP6 0x28 0xC6 LOG4 SWAP2 0xE8 LOG1 PUSH14 0x4B98EE7544C926EDE0BA38D5F51C 0xCA 0xC3 0xD ORIGIN PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"258:2354:25:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:25;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220030530b9cab69528c6a491e8a16d4b98ee7544c926ede0ba38d5f51ccac30d3264736f6c63430008170033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB SDIV ADDRESS 0xB9 0xCA 0xB6 SWAP6 0x28 0xC6 LOG4 SWAP2 0xE8 LOG1 PUSH14 0x4B98EE7544C926EDE0BA38D5F51C 0xCA 0xC3 0xD ORIGIN PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"258:2354:25:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/SampleERC20.sol":{"SBC":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"mintTestTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_450":{"entryPoint":null,"id":450,"parameterSlots":1,"returnSlots":0},"@_6956":{"entryPoint":null,"id":6956,"parameterSlots":0,"returnSlots":0},"@_736":{"entryPoint":null,"id":736,"parameterSlots":2,"returnSlots":0},"@_mint_1039":{"entryPoint":324,"id":1039,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_546":{"entryPoint":242,"id":546,"parameterSlots":1,"returnSlots":0},"@_update_1006":{"entryPoint":386,"id":1006,"parameterSlots":3,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1391,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":1086,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":1341,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":1159,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":1365,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":775,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":860,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":715,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":1064,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":693,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:5275:29","nodeType":"YulBlock","src":"0:5275:29","statements":[{"nativeSrc":"6:3:29","nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nativeSrc":"46:95:29","nodeType":"YulBlock","src":"46:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"63:1:29","nodeType":"YulLiteral","src":"63:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"70:3:29","nodeType":"YulLiteral","src":"70:3:29","type":"","value":"224"},{"kind":"number","nativeSrc":"75:10:29","nodeType":"YulLiteral","src":"75:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"66:3:29","nodeType":"YulIdentifier","src":"66:3:29"},"nativeSrc":"66:20:29","nodeType":"YulFunctionCall","src":"66:20:29"}],"functionName":{"name":"mstore","nativeSrc":"56:6:29","nodeType":"YulIdentifier","src":"56:6:29"},"nativeSrc":"56:31:29","nodeType":"YulFunctionCall","src":"56:31:29"},"nativeSrc":"56:31:29","nodeType":"YulExpressionStatement","src":"56:31:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"103:1:29","nodeType":"YulLiteral","src":"103:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"106:4:29","nodeType":"YulLiteral","src":"106:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"96:6:29","nodeType":"YulIdentifier","src":"96:6:29"},"nativeSrc":"96:15:29","nodeType":"YulFunctionCall","src":"96:15:29"},"nativeSrc":"96:15:29","nodeType":"YulExpressionStatement","src":"96:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"127:1:29","nodeType":"YulLiteral","src":"127:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"130:4:29","nodeType":"YulLiteral","src":"130:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"120:6:29","nodeType":"YulIdentifier","src":"120:6:29"},"nativeSrc":"120:15:29","nodeType":"YulFunctionCall","src":"120:15:29"},"nativeSrc":"120:15:29","nodeType":"YulExpressionStatement","src":"120:15:29"}]},"name":"panic_error_0x41","nativeSrc":"14:127:29","nodeType":"YulFunctionDefinition","src":"14:127:29"},{"body":{"nativeSrc":"201:325:29","nodeType":"YulBlock","src":"201:325:29","statements":[{"nativeSrc":"211:22:29","nodeType":"YulAssignment","src":"211:22:29","value":{"arguments":[{"kind":"number","nativeSrc":"225:1:29","nodeType":"YulLiteral","src":"225:1:29","type":"","value":"1"},{"name":"data","nativeSrc":"228:4:29","nodeType":"YulIdentifier","src":"228:4:29"}],"functionName":{"name":"shr","nativeSrc":"221:3:29","nodeType":"YulIdentifier","src":"221:3:29"},"nativeSrc":"221:12:29","nodeType":"YulFunctionCall","src":"221:12:29"},"variableNames":[{"name":"length","nativeSrc":"211:6:29","nodeType":"YulIdentifier","src":"211:6:29"}]},{"nativeSrc":"242:38:29","nodeType":"YulVariableDeclaration","src":"242:38:29","value":{"arguments":[{"name":"data","nativeSrc":"272:4:29","nodeType":"YulIdentifier","src":"272:4:29"},{"kind":"number","nativeSrc":"278:1:29","nodeType":"YulLiteral","src":"278:1:29","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"268:3:29","nodeType":"YulIdentifier","src":"268:3:29"},"nativeSrc":"268:12:29","nodeType":"YulFunctionCall","src":"268:12:29"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"246:18:29","nodeType":"YulTypedName","src":"246:18:29","type":""}]},{"body":{"nativeSrc":"319:31:29","nodeType":"YulBlock","src":"319:31:29","statements":[{"nativeSrc":"321:27:29","nodeType":"YulAssignment","src":"321:27:29","value":{"arguments":[{"name":"length","nativeSrc":"335:6:29","nodeType":"YulIdentifier","src":"335:6:29"},{"kind":"number","nativeSrc":"343:4:29","nodeType":"YulLiteral","src":"343:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"331:3:29","nodeType":"YulIdentifier","src":"331:3:29"},"nativeSrc":"331:17:29","nodeType":"YulFunctionCall","src":"331:17:29"},"variableNames":[{"name":"length","nativeSrc":"321:6:29","nodeType":"YulIdentifier","src":"321:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"299:18:29","nodeType":"YulIdentifier","src":"299:18:29"}],"functionName":{"name":"iszero","nativeSrc":"292:6:29","nodeType":"YulIdentifier","src":"292:6:29"},"nativeSrc":"292:26:29","nodeType":"YulFunctionCall","src":"292:26:29"},"nativeSrc":"289:61:29","nodeType":"YulIf","src":"289:61:29"},{"body":{"nativeSrc":"409:111:29","nodeType":"YulBlock","src":"409:111:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"430:1:29","nodeType":"YulLiteral","src":"430:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"437:3:29","nodeType":"YulLiteral","src":"437:3:29","type":"","value":"224"},{"kind":"number","nativeSrc":"442:10:29","nodeType":"YulLiteral","src":"442:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"433:3:29","nodeType":"YulIdentifier","src":"433:3:29"},"nativeSrc":"433:20:29","nodeType":"YulFunctionCall","src":"433:20:29"}],"functionName":{"name":"mstore","nativeSrc":"423:6:29","nodeType":"YulIdentifier","src":"423:6:29"},"nativeSrc":"423:31:29","nodeType":"YulFunctionCall","src":"423:31:29"},"nativeSrc":"423:31:29","nodeType":"YulExpressionStatement","src":"423:31:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"474:1:29","nodeType":"YulLiteral","src":"474:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"477:4:29","nodeType":"YulLiteral","src":"477:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"467:6:29","nodeType":"YulIdentifier","src":"467:6:29"},"nativeSrc":"467:15:29","nodeType":"YulFunctionCall","src":"467:15:29"},"nativeSrc":"467:15:29","nodeType":"YulExpressionStatement","src":"467:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"502:1:29","nodeType":"YulLiteral","src":"502:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"505:4:29","nodeType":"YulLiteral","src":"505:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"495:6:29","nodeType":"YulIdentifier","src":"495:6:29"},"nativeSrc":"495:15:29","nodeType":"YulFunctionCall","src":"495:15:29"},"nativeSrc":"495:15:29","nodeType":"YulExpressionStatement","src":"495:15:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"365:18:29","nodeType":"YulIdentifier","src":"365:18:29"},{"arguments":[{"name":"length","nativeSrc":"388:6:29","nodeType":"YulIdentifier","src":"388:6:29"},{"kind":"number","nativeSrc":"396:2:29","nodeType":"YulLiteral","src":"396:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"385:2:29","nodeType":"YulIdentifier","src":"385:2:29"},"nativeSrc":"385:14:29","nodeType":"YulFunctionCall","src":"385:14:29"}],"functionName":{"name":"eq","nativeSrc":"362:2:29","nodeType":"YulIdentifier","src":"362:2:29"},"nativeSrc":"362:38:29","nodeType":"YulFunctionCall","src":"362:38:29"},"nativeSrc":"359:161:29","nodeType":"YulIf","src":"359:161:29"}]},"name":"extract_byte_array_length","nativeSrc":"146:380:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"181:4:29","nodeType":"YulTypedName","src":"181:4:29","type":""}],"returnVariables":[{"name":"length","nativeSrc":"190:6:29","nodeType":"YulTypedName","src":"190:6:29","type":""}],"src":"146:380:29"},{"body":{"nativeSrc":"587:65:29","nodeType":"YulBlock","src":"587:65:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"604:1:29","nodeType":"YulLiteral","src":"604:1:29","type":"","value":"0"},{"name":"ptr","nativeSrc":"607:3:29","nodeType":"YulIdentifier","src":"607:3:29"}],"functionName":{"name":"mstore","nativeSrc":"597:6:29","nodeType":"YulIdentifier","src":"597:6:29"},"nativeSrc":"597:14:29","nodeType":"YulFunctionCall","src":"597:14:29"},"nativeSrc":"597:14:29","nodeType":"YulExpressionStatement","src":"597:14:29"},{"nativeSrc":"620:26:29","nodeType":"YulAssignment","src":"620:26:29","value":{"arguments":[{"kind":"number","nativeSrc":"638:1:29","nodeType":"YulLiteral","src":"638:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"641:4:29","nodeType":"YulLiteral","src":"641:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"628:9:29","nodeType":"YulIdentifier","src":"628:9:29"},"nativeSrc":"628:18:29","nodeType":"YulFunctionCall","src":"628:18:29"},"variableNames":[{"name":"data","nativeSrc":"620:4:29","nodeType":"YulIdentifier","src":"620:4:29"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"531:121:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"570:3:29","nodeType":"YulTypedName","src":"570:3:29","type":""}],"returnVariables":[{"name":"data","nativeSrc":"578:4:29","nodeType":"YulTypedName","src":"578:4:29","type":""}],"src":"531:121:29"},{"body":{"nativeSrc":"738:462:29","nodeType":"YulBlock","src":"738:462:29","statements":[{"body":{"nativeSrc":"771:423:29","nodeType":"YulBlock","src":"771:423:29","statements":[{"nativeSrc":"785:11:29","nodeType":"YulVariableDeclaration","src":"785:11:29","value":{"kind":"number","nativeSrc":"795:1:29","nodeType":"YulLiteral","src":"795:1:29","type":"","value":"0"},"variables":[{"name":"_1","nativeSrc":"789:2:29","nodeType":"YulTypedName","src":"789:2:29","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"816:1:29","nodeType":"YulLiteral","src":"816:1:29","type":"","value":"0"},{"name":"array","nativeSrc":"819:5:29","nodeType":"YulIdentifier","src":"819:5:29"}],"functionName":{"name":"mstore","nativeSrc":"809:6:29","nodeType":"YulIdentifier","src":"809:6:29"},"nativeSrc":"809:16:29","nodeType":"YulFunctionCall","src":"809:16:29"},"nativeSrc":"809:16:29","nodeType":"YulExpressionStatement","src":"809:16:29"},{"nativeSrc":"838:30:29","nodeType":"YulVariableDeclaration","src":"838:30:29","value":{"arguments":[{"kind":"number","nativeSrc":"860:1:29","nodeType":"YulLiteral","src":"860:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"863:4:29","nodeType":"YulLiteral","src":"863:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"850:9:29","nodeType":"YulIdentifier","src":"850:9:29"},"nativeSrc":"850:18:29","nodeType":"YulFunctionCall","src":"850:18:29"},"variables":[{"name":"data","nativeSrc":"842:4:29","nodeType":"YulTypedName","src":"842:4:29","type":""}]},{"nativeSrc":"881:57:29","nodeType":"YulVariableDeclaration","src":"881:57:29","value":{"arguments":[{"name":"data","nativeSrc":"904:4:29","nodeType":"YulIdentifier","src":"904:4:29"},{"arguments":[{"kind":"number","nativeSrc":"914:1:29","nodeType":"YulLiteral","src":"914:1:29","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"921:10:29","nodeType":"YulIdentifier","src":"921:10:29"},{"kind":"number","nativeSrc":"933:2:29","nodeType":"YulLiteral","src":"933:2:29","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"917:3:29","nodeType":"YulIdentifier","src":"917:3:29"},"nativeSrc":"917:19:29","nodeType":"YulFunctionCall","src":"917:19:29"}],"functionName":{"name":"shr","nativeSrc":"910:3:29","nodeType":"YulIdentifier","src":"910:3:29"},"nativeSrc":"910:27:29","nodeType":"YulFunctionCall","src":"910:27:29"}],"functionName":{"name":"add","nativeSrc":"900:3:29","nodeType":"YulIdentifier","src":"900:3:29"},"nativeSrc":"900:38:29","nodeType":"YulFunctionCall","src":"900:38:29"},"variables":[{"name":"deleteStart","nativeSrc":"885:11:29","nodeType":"YulTypedName","src":"885:11:29","type":""}]},{"body":{"nativeSrc":"975:23:29","nodeType":"YulBlock","src":"975:23:29","statements":[{"nativeSrc":"977:19:29","nodeType":"YulAssignment","src":"977:19:29","value":{"name":"data","nativeSrc":"992:4:29","nodeType":"YulIdentifier","src":"992:4:29"},"variableNames":[{"name":"deleteStart","nativeSrc":"977:11:29","nodeType":"YulIdentifier","src":"977:11:29"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"957:10:29","nodeType":"YulIdentifier","src":"957:10:29"},{"kind":"number","nativeSrc":"969:4:29","nodeType":"YulLiteral","src":"969:4:29","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"954:2:29","nodeType":"YulIdentifier","src":"954:2:29"},"nativeSrc":"954:20:29","nodeType":"YulFunctionCall","src":"954:20:29"},"nativeSrc":"951:47:29","nodeType":"YulIf","src":"951:47:29"},{"nativeSrc":"1011:41:29","nodeType":"YulVariableDeclaration","src":"1011:41:29","value":{"arguments":[{"name":"data","nativeSrc":"1025:4:29","nodeType":"YulIdentifier","src":"1025:4:29"},{"arguments":[{"kind":"number","nativeSrc":"1035:1:29","nodeType":"YulLiteral","src":"1035:1:29","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"1042:3:29","nodeType":"YulIdentifier","src":"1042:3:29"},{"kind":"number","nativeSrc":"1047:2:29","nodeType":"YulLiteral","src":"1047:2:29","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1038:3:29","nodeType":"YulIdentifier","src":"1038:3:29"},"nativeSrc":"1038:12:29","nodeType":"YulFunctionCall","src":"1038:12:29"}],"functionName":{"name":"shr","nativeSrc":"1031:3:29","nodeType":"YulIdentifier","src":"1031:3:29"},"nativeSrc":"1031:20:29","nodeType":"YulFunctionCall","src":"1031:20:29"}],"functionName":{"name":"add","nativeSrc":"1021:3:29","nodeType":"YulIdentifier","src":"1021:3:29"},"nativeSrc":"1021:31:29","nodeType":"YulFunctionCall","src":"1021:31:29"},"variables":[{"name":"_2","nativeSrc":"1015:2:29","nodeType":"YulTypedName","src":"1015:2:29","type":""}]},{"nativeSrc":"1065:24:29","nodeType":"YulVariableDeclaration","src":"1065:24:29","value":{"name":"deleteStart","nativeSrc":"1078:11:29","nodeType":"YulIdentifier","src":"1078:11:29"},"variables":[{"name":"start","nativeSrc":"1069:5:29","nodeType":"YulTypedName","src":"1069:5:29","type":""}]},{"body":{"nativeSrc":"1163:21:29","nodeType":"YulBlock","src":"1163:21:29","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"1172:5:29","nodeType":"YulIdentifier","src":"1172:5:29"},{"name":"_1","nativeSrc":"1179:2:29","nodeType":"YulIdentifier","src":"1179:2:29"}],"functionName":{"name":"sstore","nativeSrc":"1165:6:29","nodeType":"YulIdentifier","src":"1165:6:29"},"nativeSrc":"1165:17:29","nodeType":"YulFunctionCall","src":"1165:17:29"},"nativeSrc":"1165:17:29","nodeType":"YulExpressionStatement","src":"1165:17:29"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"1113:5:29","nodeType":"YulIdentifier","src":"1113:5:29"},{"name":"_2","nativeSrc":"1120:2:29","nodeType":"YulIdentifier","src":"1120:2:29"}],"functionName":{"name":"lt","nativeSrc":"1110:2:29","nodeType":"YulIdentifier","src":"1110:2:29"},"nativeSrc":"1110:13:29","nodeType":"YulFunctionCall","src":"1110:13:29"},"nativeSrc":"1102:82:29","nodeType":"YulForLoop","post":{"nativeSrc":"1124:26:29","nodeType":"YulBlock","src":"1124:26:29","statements":[{"nativeSrc":"1126:22:29","nodeType":"YulAssignment","src":"1126:22:29","value":{"arguments":[{"name":"start","nativeSrc":"1139:5:29","nodeType":"YulIdentifier","src":"1139:5:29"},{"kind":"number","nativeSrc":"1146:1:29","nodeType":"YulLiteral","src":"1146:1:29","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"1135:3:29","nodeType":"YulIdentifier","src":"1135:3:29"},"nativeSrc":"1135:13:29","nodeType":"YulFunctionCall","src":"1135:13:29"},"variableNames":[{"name":"start","nativeSrc":"1126:5:29","nodeType":"YulIdentifier","src":"1126:5:29"}]}]},"pre":{"nativeSrc":"1106:3:29","nodeType":"YulBlock","src":"1106:3:29","statements":[]},"src":"1102:82:29"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"754:3:29","nodeType":"YulIdentifier","src":"754:3:29"},{"kind":"number","nativeSrc":"759:2:29","nodeType":"YulLiteral","src":"759:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"751:2:29","nodeType":"YulIdentifier","src":"751:2:29"},"nativeSrc":"751:11:29","nodeType":"YulFunctionCall","src":"751:11:29"},"nativeSrc":"748:446:29","nodeType":"YulIf","src":"748:446:29"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"657:543:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"710:5:29","nodeType":"YulTypedName","src":"710:5:29","type":""},{"name":"len","nativeSrc":"717:3:29","nodeType":"YulTypedName","src":"717:3:29","type":""},{"name":"startIndex","nativeSrc":"722:10:29","nodeType":"YulTypedName","src":"722:10:29","type":""}],"src":"657:543:29"},{"body":{"nativeSrc":"1290:81:29","nodeType":"YulBlock","src":"1290:81:29","statements":[{"nativeSrc":"1300:65:29","nodeType":"YulAssignment","src":"1300:65:29","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"1315:4:29","nodeType":"YulIdentifier","src":"1315:4:29"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1333:1:29","nodeType":"YulLiteral","src":"1333:1:29","type":"","value":"3"},{"name":"len","nativeSrc":"1336:3:29","nodeType":"YulIdentifier","src":"1336:3:29"}],"functionName":{"name":"shl","nativeSrc":"1329:3:29","nodeType":"YulIdentifier","src":"1329:3:29"},"nativeSrc":"1329:11:29","nodeType":"YulFunctionCall","src":"1329:11:29"},{"arguments":[{"kind":"number","nativeSrc":"1346:1:29","nodeType":"YulLiteral","src":"1346:1:29","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1342:3:29","nodeType":"YulIdentifier","src":"1342:3:29"},"nativeSrc":"1342:6:29","nodeType":"YulFunctionCall","src":"1342:6:29"}],"functionName":{"name":"shr","nativeSrc":"1325:3:29","nodeType":"YulIdentifier","src":"1325:3:29"},"nativeSrc":"1325:24:29","nodeType":"YulFunctionCall","src":"1325:24:29"}],"functionName":{"name":"not","nativeSrc":"1321:3:29","nodeType":"YulIdentifier","src":"1321:3:29"},"nativeSrc":"1321:29:29","nodeType":"YulFunctionCall","src":"1321:29:29"}],"functionName":{"name":"and","nativeSrc":"1311:3:29","nodeType":"YulIdentifier","src":"1311:3:29"},"nativeSrc":"1311:40:29","nodeType":"YulFunctionCall","src":"1311:40:29"},{"arguments":[{"kind":"number","nativeSrc":"1357:1:29","nodeType":"YulLiteral","src":"1357:1:29","type":"","value":"1"},{"name":"len","nativeSrc":"1360:3:29","nodeType":"YulIdentifier","src":"1360:3:29"}],"functionName":{"name":"shl","nativeSrc":"1353:3:29","nodeType":"YulIdentifier","src":"1353:3:29"},"nativeSrc":"1353:11:29","nodeType":"YulFunctionCall","src":"1353:11:29"}],"functionName":{"name":"or","nativeSrc":"1308:2:29","nodeType":"YulIdentifier","src":"1308:2:29"},"nativeSrc":"1308:57:29","nodeType":"YulFunctionCall","src":"1308:57:29"},"variableNames":[{"name":"used","nativeSrc":"1300:4:29","nodeType":"YulIdentifier","src":"1300:4:29"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"1205:166:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1267:4:29","nodeType":"YulTypedName","src":"1267:4:29","type":""},{"name":"len","nativeSrc":"1273:3:29","nodeType":"YulTypedName","src":"1273:3:29","type":""}],"returnVariables":[{"name":"used","nativeSrc":"1281:4:29","nodeType":"YulTypedName","src":"1281:4:29","type":""}],"src":"1205:166:29"},{"body":{"nativeSrc":"1472:1249:29","nodeType":"YulBlock","src":"1472:1249:29","statements":[{"nativeSrc":"1482:24:29","nodeType":"YulVariableDeclaration","src":"1482:24:29","value":{"arguments":[{"name":"src","nativeSrc":"1502:3:29","nodeType":"YulIdentifier","src":"1502:3:29"}],"functionName":{"name":"mload","nativeSrc":"1496:5:29","nodeType":"YulIdentifier","src":"1496:5:29"},"nativeSrc":"1496:10:29","nodeType":"YulFunctionCall","src":"1496:10:29"},"variables":[{"name":"newLen","nativeSrc":"1486:6:29","nodeType":"YulTypedName","src":"1486:6:29","type":""}]},{"body":{"nativeSrc":"1549:22:29","nodeType":"YulBlock","src":"1549:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1551:16:29","nodeType":"YulIdentifier","src":"1551:16:29"},"nativeSrc":"1551:18:29","nodeType":"YulFunctionCall","src":"1551:18:29"},"nativeSrc":"1551:18:29","nodeType":"YulExpressionStatement","src":"1551:18:29"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"1521:6:29","nodeType":"YulIdentifier","src":"1521:6:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1537:2:29","nodeType":"YulLiteral","src":"1537:2:29","type":"","value":"64"},{"kind":"number","nativeSrc":"1541:1:29","nodeType":"YulLiteral","src":"1541:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1533:3:29","nodeType":"YulIdentifier","src":"1533:3:29"},"nativeSrc":"1533:10:29","nodeType":"YulFunctionCall","src":"1533:10:29"},{"kind":"number","nativeSrc":"1545:1:29","nodeType":"YulLiteral","src":"1545:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1529:3:29","nodeType":"YulIdentifier","src":"1529:3:29"},"nativeSrc":"1529:18:29","nodeType":"YulFunctionCall","src":"1529:18:29"}],"functionName":{"name":"gt","nativeSrc":"1518:2:29","nodeType":"YulIdentifier","src":"1518:2:29"},"nativeSrc":"1518:30:29","nodeType":"YulFunctionCall","src":"1518:30:29"},"nativeSrc":"1515:56:29","nodeType":"YulIf","src":"1515:56:29"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"1624:4:29","nodeType":"YulIdentifier","src":"1624:4:29"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"1662:4:29","nodeType":"YulIdentifier","src":"1662:4:29"}],"functionName":{"name":"sload","nativeSrc":"1656:5:29","nodeType":"YulIdentifier","src":"1656:5:29"},"nativeSrc":"1656:11:29","nodeType":"YulFunctionCall","src":"1656:11:29"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"1630:25:29","nodeType":"YulIdentifier","src":"1630:25:29"},"nativeSrc":"1630:38:29","nodeType":"YulFunctionCall","src":"1630:38:29"},{"name":"newLen","nativeSrc":"1670:6:29","nodeType":"YulIdentifier","src":"1670:6:29"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"1580:43:29","nodeType":"YulIdentifier","src":"1580:43:29"},"nativeSrc":"1580:97:29","nodeType":"YulFunctionCall","src":"1580:97:29"},"nativeSrc":"1580:97:29","nodeType":"YulExpressionStatement","src":"1580:97:29"},{"nativeSrc":"1686:18:29","nodeType":"YulVariableDeclaration","src":"1686:18:29","value":{"kind":"number","nativeSrc":"1703:1:29","nodeType":"YulLiteral","src":"1703:1:29","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"1690:9:29","nodeType":"YulTypedName","src":"1690:9:29","type":""}]},{"nativeSrc":"1713:23:29","nodeType":"YulVariableDeclaration","src":"1713:23:29","value":{"kind":"number","nativeSrc":"1732:4:29","nodeType":"YulLiteral","src":"1732:4:29","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nativeSrc":"1717:11:29","nodeType":"YulTypedName","src":"1717:11:29","type":""}]},{"nativeSrc":"1745:17:29","nodeType":"YulAssignment","src":"1745:17:29","value":{"kind":"number","nativeSrc":"1758:4:29","nodeType":"YulLiteral","src":"1758:4:29","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"1745:9:29","nodeType":"YulIdentifier","src":"1745:9:29"}]},{"cases":[{"body":{"nativeSrc":"1808:656:29","nodeType":"YulBlock","src":"1808:656:29","statements":[{"nativeSrc":"1822:35:29","nodeType":"YulVariableDeclaration","src":"1822:35:29","value":{"arguments":[{"name":"newLen","nativeSrc":"1841:6:29","nodeType":"YulIdentifier","src":"1841:6:29"},{"arguments":[{"kind":"number","nativeSrc":"1853:2:29","nodeType":"YulLiteral","src":"1853:2:29","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1849:3:29","nodeType":"YulIdentifier","src":"1849:3:29"},"nativeSrc":"1849:7:29","nodeType":"YulFunctionCall","src":"1849:7:29"}],"functionName":{"name":"and","nativeSrc":"1837:3:29","nodeType":"YulIdentifier","src":"1837:3:29"},"nativeSrc":"1837:20:29","nodeType":"YulFunctionCall","src":"1837:20:29"},"variables":[{"name":"loopEnd","nativeSrc":"1826:7:29","nodeType":"YulTypedName","src":"1826:7:29","type":""}]},{"nativeSrc":"1870:49:29","nodeType":"YulVariableDeclaration","src":"1870:49:29","value":{"arguments":[{"name":"slot","nativeSrc":"1914:4:29","nodeType":"YulIdentifier","src":"1914:4:29"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"1884:29:29","nodeType":"YulIdentifier","src":"1884:29:29"},"nativeSrc":"1884:35:29","nodeType":"YulFunctionCall","src":"1884:35:29"},"variables":[{"name":"dstPtr","nativeSrc":"1874:6:29","nodeType":"YulTypedName","src":"1874:6:29","type":""}]},{"nativeSrc":"1932:10:29","nodeType":"YulVariableDeclaration","src":"1932:10:29","value":{"kind":"number","nativeSrc":"1941:1:29","nodeType":"YulLiteral","src":"1941:1:29","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1936:1:29","nodeType":"YulTypedName","src":"1936:1:29","type":""}]},{"body":{"nativeSrc":"2019:172:29","nodeType":"YulBlock","src":"2019:172:29","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"2044:6:29","nodeType":"YulIdentifier","src":"2044:6:29"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2062:3:29","nodeType":"YulIdentifier","src":"2062:3:29"},{"name":"srcOffset","nativeSrc":"2067:9:29","nodeType":"YulIdentifier","src":"2067:9:29"}],"functionName":{"name":"add","nativeSrc":"2058:3:29","nodeType":"YulIdentifier","src":"2058:3:29"},"nativeSrc":"2058:19:29","nodeType":"YulFunctionCall","src":"2058:19:29"}],"functionName":{"name":"mload","nativeSrc":"2052:5:29","nodeType":"YulIdentifier","src":"2052:5:29"},"nativeSrc":"2052:26:29","nodeType":"YulFunctionCall","src":"2052:26:29"}],"functionName":{"name":"sstore","nativeSrc":"2037:6:29","nodeType":"YulIdentifier","src":"2037:6:29"},"nativeSrc":"2037:42:29","nodeType":"YulFunctionCall","src":"2037:42:29"},"nativeSrc":"2037:42:29","nodeType":"YulExpressionStatement","src":"2037:42:29"},{"nativeSrc":"2096:24:29","nodeType":"YulAssignment","src":"2096:24:29","value":{"arguments":[{"name":"dstPtr","nativeSrc":"2110:6:29","nodeType":"YulIdentifier","src":"2110:6:29"},{"kind":"number","nativeSrc":"2118:1:29","nodeType":"YulLiteral","src":"2118:1:29","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2106:3:29","nodeType":"YulIdentifier","src":"2106:3:29"},"nativeSrc":"2106:14:29","nodeType":"YulFunctionCall","src":"2106:14:29"},"variableNames":[{"name":"dstPtr","nativeSrc":"2096:6:29","nodeType":"YulIdentifier","src":"2096:6:29"}]},{"nativeSrc":"2137:40:29","nodeType":"YulAssignment","src":"2137:40:29","value":{"arguments":[{"name":"srcOffset","nativeSrc":"2154:9:29","nodeType":"YulIdentifier","src":"2154:9:29"},{"name":"srcOffset_1","nativeSrc":"2165:11:29","nodeType":"YulIdentifier","src":"2165:11:29"}],"functionName":{"name":"add","nativeSrc":"2150:3:29","nodeType":"YulIdentifier","src":"2150:3:29"},"nativeSrc":"2150:27:29","nodeType":"YulFunctionCall","src":"2150:27:29"},"variableNames":[{"name":"srcOffset","nativeSrc":"2137:9:29","nodeType":"YulIdentifier","src":"2137:9:29"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1966:1:29","nodeType":"YulIdentifier","src":"1966:1:29"},{"name":"loopEnd","nativeSrc":"1969:7:29","nodeType":"YulIdentifier","src":"1969:7:29"}],"functionName":{"name":"lt","nativeSrc":"1963:2:29","nodeType":"YulIdentifier","src":"1963:2:29"},"nativeSrc":"1963:14:29","nodeType":"YulFunctionCall","src":"1963:14:29"},"nativeSrc":"1955:236:29","nodeType":"YulForLoop","post":{"nativeSrc":"1978:28:29","nodeType":"YulBlock","src":"1978:28:29","statements":[{"nativeSrc":"1980:24:29","nodeType":"YulAssignment","src":"1980:24:29","value":{"arguments":[{"name":"i","nativeSrc":"1989:1:29","nodeType":"YulIdentifier","src":"1989:1:29"},{"name":"srcOffset_1","nativeSrc":"1992:11:29","nodeType":"YulIdentifier","src":"1992:11:29"}],"functionName":{"name":"add","nativeSrc":"1985:3:29","nodeType":"YulIdentifier","src":"1985:3:29"},"nativeSrc":"1985:19:29","nodeType":"YulFunctionCall","src":"1985:19:29"},"variableNames":[{"name":"i","nativeSrc":"1980:1:29","nodeType":"YulIdentifier","src":"1980:1:29"}]}]},"pre":{"nativeSrc":"1959:3:29","nodeType":"YulBlock","src":"1959:3:29","statements":[]},"src":"1955:236:29"},{"body":{"nativeSrc":"2239:166:29","nodeType":"YulBlock","src":"2239:166:29","statements":[{"nativeSrc":"2257:43:29","nodeType":"YulVariableDeclaration","src":"2257:43:29","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2284:3:29","nodeType":"YulIdentifier","src":"2284:3:29"},{"name":"srcOffset","nativeSrc":"2289:9:29","nodeType":"YulIdentifier","src":"2289:9:29"}],"functionName":{"name":"add","nativeSrc":"2280:3:29","nodeType":"YulIdentifier","src":"2280:3:29"},"nativeSrc":"2280:19:29","nodeType":"YulFunctionCall","src":"2280:19:29"}],"functionName":{"name":"mload","nativeSrc":"2274:5:29","nodeType":"YulIdentifier","src":"2274:5:29"},"nativeSrc":"2274:26:29","nodeType":"YulFunctionCall","src":"2274:26:29"},"variables":[{"name":"lastValue","nativeSrc":"2261:9:29","nodeType":"YulTypedName","src":"2261:9:29","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"2324:6:29","nodeType":"YulIdentifier","src":"2324:6:29"},{"arguments":[{"name":"lastValue","nativeSrc":"2336:9:29","nodeType":"YulIdentifier","src":"2336:9:29"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2363:1:29","nodeType":"YulLiteral","src":"2363:1:29","type":"","value":"3"},{"name":"newLen","nativeSrc":"2366:6:29","nodeType":"YulIdentifier","src":"2366:6:29"}],"functionName":{"name":"shl","nativeSrc":"2359:3:29","nodeType":"YulIdentifier","src":"2359:3:29"},"nativeSrc":"2359:14:29","nodeType":"YulFunctionCall","src":"2359:14:29"},{"kind":"number","nativeSrc":"2375:3:29","nodeType":"YulLiteral","src":"2375:3:29","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"2355:3:29","nodeType":"YulIdentifier","src":"2355:3:29"},"nativeSrc":"2355:24:29","nodeType":"YulFunctionCall","src":"2355:24:29"},{"arguments":[{"kind":"number","nativeSrc":"2385:1:29","nodeType":"YulLiteral","src":"2385:1:29","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2381:3:29","nodeType":"YulIdentifier","src":"2381:3:29"},"nativeSrc":"2381:6:29","nodeType":"YulFunctionCall","src":"2381:6:29"}],"functionName":{"name":"shr","nativeSrc":"2351:3:29","nodeType":"YulIdentifier","src":"2351:3:29"},"nativeSrc":"2351:37:29","nodeType":"YulFunctionCall","src":"2351:37:29"}],"functionName":{"name":"not","nativeSrc":"2347:3:29","nodeType":"YulIdentifier","src":"2347:3:29"},"nativeSrc":"2347:42:29","nodeType":"YulFunctionCall","src":"2347:42:29"}],"functionName":{"name":"and","nativeSrc":"2332:3:29","nodeType":"YulIdentifier","src":"2332:3:29"},"nativeSrc":"2332:58:29","nodeType":"YulFunctionCall","src":"2332:58:29"}],"functionName":{"name":"sstore","nativeSrc":"2317:6:29","nodeType":"YulIdentifier","src":"2317:6:29"},"nativeSrc":"2317:74:29","nodeType":"YulFunctionCall","src":"2317:74:29"},"nativeSrc":"2317:74:29","nodeType":"YulExpressionStatement","src":"2317:74:29"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"2210:7:29","nodeType":"YulIdentifier","src":"2210:7:29"},{"name":"newLen","nativeSrc":"2219:6:29","nodeType":"YulIdentifier","src":"2219:6:29"}],"functionName":{"name":"lt","nativeSrc":"2207:2:29","nodeType":"YulIdentifier","src":"2207:2:29"},"nativeSrc":"2207:19:29","nodeType":"YulFunctionCall","src":"2207:19:29"},"nativeSrc":"2204:201:29","nodeType":"YulIf","src":"2204:201:29"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2425:4:29","nodeType":"YulIdentifier","src":"2425:4:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2439:1:29","nodeType":"YulLiteral","src":"2439:1:29","type":"","value":"1"},{"name":"newLen","nativeSrc":"2442:6:29","nodeType":"YulIdentifier","src":"2442:6:29"}],"functionName":{"name":"shl","nativeSrc":"2435:3:29","nodeType":"YulIdentifier","src":"2435:3:29"},"nativeSrc":"2435:14:29","nodeType":"YulFunctionCall","src":"2435:14:29"},{"kind":"number","nativeSrc":"2451:1:29","nodeType":"YulLiteral","src":"2451:1:29","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2431:3:29","nodeType":"YulIdentifier","src":"2431:3:29"},"nativeSrc":"2431:22:29","nodeType":"YulFunctionCall","src":"2431:22:29"}],"functionName":{"name":"sstore","nativeSrc":"2418:6:29","nodeType":"YulIdentifier","src":"2418:6:29"},"nativeSrc":"2418:36:29","nodeType":"YulFunctionCall","src":"2418:36:29"},"nativeSrc":"2418:36:29","nodeType":"YulExpressionStatement","src":"2418:36:29"}]},"nativeSrc":"1801:663:29","nodeType":"YulCase","src":"1801:663:29","value":{"kind":"number","nativeSrc":"1806:1:29","nodeType":"YulLiteral","src":"1806:1:29","type":"","value":"1"}},{"body":{"nativeSrc":"2481:234:29","nodeType":"YulBlock","src":"2481:234:29","statements":[{"nativeSrc":"2495:14:29","nodeType":"YulVariableDeclaration","src":"2495:14:29","value":{"kind":"number","nativeSrc":"2508:1:29","nodeType":"YulLiteral","src":"2508:1:29","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"2499:5:29","nodeType":"YulTypedName","src":"2499:5:29","type":""}]},{"body":{"nativeSrc":"2544:67:29","nodeType":"YulBlock","src":"2544:67:29","statements":[{"nativeSrc":"2562:35:29","nodeType":"YulAssignment","src":"2562:35:29","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"2581:3:29","nodeType":"YulIdentifier","src":"2581:3:29"},{"name":"srcOffset","nativeSrc":"2586:9:29","nodeType":"YulIdentifier","src":"2586:9:29"}],"functionName":{"name":"add","nativeSrc":"2577:3:29","nodeType":"YulIdentifier","src":"2577:3:29"},"nativeSrc":"2577:19:29","nodeType":"YulFunctionCall","src":"2577:19:29"}],"functionName":{"name":"mload","nativeSrc":"2571:5:29","nodeType":"YulIdentifier","src":"2571:5:29"},"nativeSrc":"2571:26:29","nodeType":"YulFunctionCall","src":"2571:26:29"},"variableNames":[{"name":"value","nativeSrc":"2562:5:29","nodeType":"YulIdentifier","src":"2562:5:29"}]}]},"condition":{"name":"newLen","nativeSrc":"2525:6:29","nodeType":"YulIdentifier","src":"2525:6:29"},"nativeSrc":"2522:89:29","nodeType":"YulIf","src":"2522:89:29"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2631:4:29","nodeType":"YulIdentifier","src":"2631:4:29"},{"arguments":[{"name":"value","nativeSrc":"2690:5:29","nodeType":"YulIdentifier","src":"2690:5:29"},{"name":"newLen","nativeSrc":"2697:6:29","nodeType":"YulIdentifier","src":"2697:6:29"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"2637:52:29","nodeType":"YulIdentifier","src":"2637:52:29"},"nativeSrc":"2637:67:29","nodeType":"YulFunctionCall","src":"2637:67:29"}],"functionName":{"name":"sstore","nativeSrc":"2624:6:29","nodeType":"YulIdentifier","src":"2624:6:29"},"nativeSrc":"2624:81:29","nodeType":"YulFunctionCall","src":"2624:81:29"},"nativeSrc":"2624:81:29","nodeType":"YulExpressionStatement","src":"2624:81:29"}]},"nativeSrc":"2473:242:29","nodeType":"YulCase","src":"2473:242:29","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"1781:6:29","nodeType":"YulIdentifier","src":"1781:6:29"},{"kind":"number","nativeSrc":"1789:2:29","nodeType":"YulLiteral","src":"1789:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"1778:2:29","nodeType":"YulIdentifier","src":"1778:2:29"},"nativeSrc":"1778:14:29","nodeType":"YulFunctionCall","src":"1778:14:29"},"nativeSrc":"1771:944:29","nodeType":"YulSwitch","src":"1771:944:29"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"1376:1345:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"1457:4:29","nodeType":"YulTypedName","src":"1457:4:29","type":""},{"name":"src","nativeSrc":"1463:3:29","nodeType":"YulTypedName","src":"1463:3:29","type":""}],"src":"1376:1345:29"},{"body":{"nativeSrc":"2827:102:29","nodeType":"YulBlock","src":"2827:102:29","statements":[{"nativeSrc":"2837:26:29","nodeType":"YulAssignment","src":"2837:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"2849:9:29","nodeType":"YulIdentifier","src":"2849:9:29"},{"kind":"number","nativeSrc":"2860:2:29","nodeType":"YulLiteral","src":"2860:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2845:3:29","nodeType":"YulIdentifier","src":"2845:3:29"},"nativeSrc":"2845:18:29","nodeType":"YulFunctionCall","src":"2845:18:29"},"variableNames":[{"name":"tail","nativeSrc":"2837:4:29","nodeType":"YulIdentifier","src":"2837:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2879:9:29","nodeType":"YulIdentifier","src":"2879:9:29"},{"arguments":[{"name":"value0","nativeSrc":"2894:6:29","nodeType":"YulIdentifier","src":"2894:6:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2910:3:29","nodeType":"YulLiteral","src":"2910:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"2915:1:29","nodeType":"YulLiteral","src":"2915:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2906:3:29","nodeType":"YulIdentifier","src":"2906:3:29"},"nativeSrc":"2906:11:29","nodeType":"YulFunctionCall","src":"2906:11:29"},{"kind":"number","nativeSrc":"2919:1:29","nodeType":"YulLiteral","src":"2919:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2902:3:29","nodeType":"YulIdentifier","src":"2902:3:29"},"nativeSrc":"2902:19:29","nodeType":"YulFunctionCall","src":"2902:19:29"}],"functionName":{"name":"and","nativeSrc":"2890:3:29","nodeType":"YulIdentifier","src":"2890:3:29"},"nativeSrc":"2890:32:29","nodeType":"YulFunctionCall","src":"2890:32:29"}],"functionName":{"name":"mstore","nativeSrc":"2872:6:29","nodeType":"YulIdentifier","src":"2872:6:29"},"nativeSrc":"2872:51:29","nodeType":"YulFunctionCall","src":"2872:51:29"},"nativeSrc":"2872:51:29","nodeType":"YulExpressionStatement","src":"2872:51:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"2726:203:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2796:9:29","nodeType":"YulTypedName","src":"2796:9:29","type":""},{"name":"value0","nativeSrc":"2807:6:29","nodeType":"YulTypedName","src":"2807:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2818:4:29","nodeType":"YulTypedName","src":"2818:4:29","type":""}],"src":"2726:203:29"},{"body":{"nativeSrc":"2966:95:29","nodeType":"YulBlock","src":"2966:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2983:1:29","nodeType":"YulLiteral","src":"2983:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"2990:3:29","nodeType":"YulLiteral","src":"2990:3:29","type":"","value":"224"},{"kind":"number","nativeSrc":"2995:10:29","nodeType":"YulLiteral","src":"2995:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"2986:3:29","nodeType":"YulIdentifier","src":"2986:3:29"},"nativeSrc":"2986:20:29","nodeType":"YulFunctionCall","src":"2986:20:29"}],"functionName":{"name":"mstore","nativeSrc":"2976:6:29","nodeType":"YulIdentifier","src":"2976:6:29"},"nativeSrc":"2976:31:29","nodeType":"YulFunctionCall","src":"2976:31:29"},"nativeSrc":"2976:31:29","nodeType":"YulExpressionStatement","src":"2976:31:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3023:1:29","nodeType":"YulLiteral","src":"3023:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"3026:4:29","nodeType":"YulLiteral","src":"3026:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"3016:6:29","nodeType":"YulIdentifier","src":"3016:6:29"},"nativeSrc":"3016:15:29","nodeType":"YulFunctionCall","src":"3016:15:29"},"nativeSrc":"3016:15:29","nodeType":"YulExpressionStatement","src":"3016:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3047:1:29","nodeType":"YulLiteral","src":"3047:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"3050:4:29","nodeType":"YulLiteral","src":"3050:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3040:6:29","nodeType":"YulIdentifier","src":"3040:6:29"},"nativeSrc":"3040:15:29","nodeType":"YulFunctionCall","src":"3040:15:29"},"nativeSrc":"3040:15:29","nodeType":"YulExpressionStatement","src":"3040:15:29"}]},"name":"panic_error_0x11","nativeSrc":"2934:127:29","nodeType":"YulFunctionDefinition","src":"2934:127:29"},{"body":{"nativeSrc":"3130:352:29","nodeType":"YulBlock","src":"3130:352:29","statements":[{"nativeSrc":"3140:16:29","nodeType":"YulVariableDeclaration","src":"3140:16:29","value":{"kind":"number","nativeSrc":"3155:1:29","nodeType":"YulLiteral","src":"3155:1:29","type":"","value":"1"},"variables":[{"name":"power_1","nativeSrc":"3144:7:29","nodeType":"YulTypedName","src":"3144:7:29","type":""}]},{"nativeSrc":"3165:10:29","nodeType":"YulAssignment","src":"3165:10:29","value":{"kind":"number","nativeSrc":"3174:1:29","nodeType":"YulLiteral","src":"3174:1:29","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"3165:5:29","nodeType":"YulIdentifier","src":"3165:5:29"}]},{"nativeSrc":"3184:13:29","nodeType":"YulAssignment","src":"3184:13:29","value":{"name":"_base","nativeSrc":"3192:5:29","nodeType":"YulIdentifier","src":"3192:5:29"},"variableNames":[{"name":"base","nativeSrc":"3184:4:29","nodeType":"YulIdentifier","src":"3184:4:29"}]},{"body":{"nativeSrc":"3248:228:29","nodeType":"YulBlock","src":"3248:228:29","statements":[{"body":{"nativeSrc":"3293:22:29","nodeType":"YulBlock","src":"3293:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"3295:16:29","nodeType":"YulIdentifier","src":"3295:16:29"},"nativeSrc":"3295:18:29","nodeType":"YulFunctionCall","src":"3295:18:29"},"nativeSrc":"3295:18:29","nodeType":"YulExpressionStatement","src":"3295:18:29"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"3268:4:29","nodeType":"YulIdentifier","src":"3268:4:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3282:1:29","nodeType":"YulLiteral","src":"3282:1:29","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"3278:3:29","nodeType":"YulIdentifier","src":"3278:3:29"},"nativeSrc":"3278:6:29","nodeType":"YulFunctionCall","src":"3278:6:29"},{"name":"base","nativeSrc":"3286:4:29","nodeType":"YulIdentifier","src":"3286:4:29"}],"functionName":{"name":"div","nativeSrc":"3274:3:29","nodeType":"YulIdentifier","src":"3274:3:29"},"nativeSrc":"3274:17:29","nodeType":"YulFunctionCall","src":"3274:17:29"}],"functionName":{"name":"gt","nativeSrc":"3265:2:29","nodeType":"YulIdentifier","src":"3265:2:29"},"nativeSrc":"3265:27:29","nodeType":"YulFunctionCall","src":"3265:27:29"},"nativeSrc":"3262:53:29","nodeType":"YulIf","src":"3262:53:29"},{"body":{"nativeSrc":"3354:29:29","nodeType":"YulBlock","src":"3354:29:29","statements":[{"nativeSrc":"3356:25:29","nodeType":"YulAssignment","src":"3356:25:29","value":{"arguments":[{"name":"power","nativeSrc":"3369:5:29","nodeType":"YulIdentifier","src":"3369:5:29"},{"name":"base","nativeSrc":"3376:4:29","nodeType":"YulIdentifier","src":"3376:4:29"}],"functionName":{"name":"mul","nativeSrc":"3365:3:29","nodeType":"YulIdentifier","src":"3365:3:29"},"nativeSrc":"3365:16:29","nodeType":"YulFunctionCall","src":"3365:16:29"},"variableNames":[{"name":"power","nativeSrc":"3356:5:29","nodeType":"YulIdentifier","src":"3356:5:29"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"3335:8:29","nodeType":"YulIdentifier","src":"3335:8:29"},{"name":"power_1","nativeSrc":"3345:7:29","nodeType":"YulIdentifier","src":"3345:7:29"}],"functionName":{"name":"and","nativeSrc":"3331:3:29","nodeType":"YulIdentifier","src":"3331:3:29"},"nativeSrc":"3331:22:29","nodeType":"YulFunctionCall","src":"3331:22:29"},"nativeSrc":"3328:55:29","nodeType":"YulIf","src":"3328:55:29"},{"nativeSrc":"3396:23:29","nodeType":"YulAssignment","src":"3396:23:29","value":{"arguments":[{"name":"base","nativeSrc":"3408:4:29","nodeType":"YulIdentifier","src":"3408:4:29"},{"name":"base","nativeSrc":"3414:4:29","nodeType":"YulIdentifier","src":"3414:4:29"}],"functionName":{"name":"mul","nativeSrc":"3404:3:29","nodeType":"YulIdentifier","src":"3404:3:29"},"nativeSrc":"3404:15:29","nodeType":"YulFunctionCall","src":"3404:15:29"},"variableNames":[{"name":"base","nativeSrc":"3396:4:29","nodeType":"YulIdentifier","src":"3396:4:29"}]},{"nativeSrc":"3432:34:29","nodeType":"YulAssignment","src":"3432:34:29","value":{"arguments":[{"name":"power_1","nativeSrc":"3448:7:29","nodeType":"YulIdentifier","src":"3448:7:29"},{"name":"exponent","nativeSrc":"3457:8:29","nodeType":"YulIdentifier","src":"3457:8:29"}],"functionName":{"name":"shr","nativeSrc":"3444:3:29","nodeType":"YulIdentifier","src":"3444:3:29"},"nativeSrc":"3444:22:29","nodeType":"YulFunctionCall","src":"3444:22:29"},"variableNames":[{"name":"exponent","nativeSrc":"3432:8:29","nodeType":"YulIdentifier","src":"3432:8:29"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"3217:8:29","nodeType":"YulIdentifier","src":"3217:8:29"},{"name":"power_1","nativeSrc":"3227:7:29","nodeType":"YulIdentifier","src":"3227:7:29"}],"functionName":{"name":"gt","nativeSrc":"3214:2:29","nodeType":"YulIdentifier","src":"3214:2:29"},"nativeSrc":"3214:21:29","nodeType":"YulFunctionCall","src":"3214:21:29"},"nativeSrc":"3206:270:29","nodeType":"YulForLoop","post":{"nativeSrc":"3236:3:29","nodeType":"YulBlock","src":"3236:3:29","statements":[]},"pre":{"nativeSrc":"3210:3:29","nodeType":"YulBlock","src":"3210:3:29","statements":[]},"src":"3206:270:29"}]},"name":"checked_exp_helper","nativeSrc":"3066:416:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nativeSrc":"3094:5:29","nodeType":"YulTypedName","src":"3094:5:29","type":""},{"name":"exponent","nativeSrc":"3101:8:29","nodeType":"YulTypedName","src":"3101:8:29","type":""}],"returnVariables":[{"name":"power","nativeSrc":"3114:5:29","nodeType":"YulTypedName","src":"3114:5:29","type":""},{"name":"base","nativeSrc":"3121:4:29","nodeType":"YulTypedName","src":"3121:4:29","type":""}],"src":"3066:416:29"},{"body":{"nativeSrc":"3546:747:29","nodeType":"YulBlock","src":"3546:747:29","statements":[{"body":{"nativeSrc":"3584:52:29","nodeType":"YulBlock","src":"3584:52:29","statements":[{"nativeSrc":"3598:10:29","nodeType":"YulAssignment","src":"3598:10:29","value":{"kind":"number","nativeSrc":"3607:1:29","nodeType":"YulLiteral","src":"3607:1:29","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"3598:5:29","nodeType":"YulIdentifier","src":"3598:5:29"}]},{"nativeSrc":"3621:5:29","nodeType":"YulLeave","src":"3621:5:29"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"3566:8:29","nodeType":"YulIdentifier","src":"3566:8:29"}],"functionName":{"name":"iszero","nativeSrc":"3559:6:29","nodeType":"YulIdentifier","src":"3559:6:29"},"nativeSrc":"3559:16:29","nodeType":"YulFunctionCall","src":"3559:16:29"},"nativeSrc":"3556:80:29","nodeType":"YulIf","src":"3556:80:29"},{"body":{"nativeSrc":"3669:52:29","nodeType":"YulBlock","src":"3669:52:29","statements":[{"nativeSrc":"3683:10:29","nodeType":"YulAssignment","src":"3683:10:29","value":{"kind":"number","nativeSrc":"3692:1:29","nodeType":"YulLiteral","src":"3692:1:29","type":"","value":"0"},"variableNames":[{"name":"power","nativeSrc":"3683:5:29","nodeType":"YulIdentifier","src":"3683:5:29"}]},{"nativeSrc":"3706:5:29","nodeType":"YulLeave","src":"3706:5:29"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"3655:4:29","nodeType":"YulIdentifier","src":"3655:4:29"}],"functionName":{"name":"iszero","nativeSrc":"3648:6:29","nodeType":"YulIdentifier","src":"3648:6:29"},"nativeSrc":"3648:12:29","nodeType":"YulFunctionCall","src":"3648:12:29"},"nativeSrc":"3645:76:29","nodeType":"YulIf","src":"3645:76:29"},{"cases":[{"body":{"nativeSrc":"3757:52:29","nodeType":"YulBlock","src":"3757:52:29","statements":[{"nativeSrc":"3771:10:29","nodeType":"YulAssignment","src":"3771:10:29","value":{"kind":"number","nativeSrc":"3780:1:29","nodeType":"YulLiteral","src":"3780:1:29","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"3771:5:29","nodeType":"YulIdentifier","src":"3771:5:29"}]},{"nativeSrc":"3794:5:29","nodeType":"YulLeave","src":"3794:5:29"}]},"nativeSrc":"3750:59:29","nodeType":"YulCase","src":"3750:59:29","value":{"kind":"number","nativeSrc":"3755:1:29","nodeType":"YulLiteral","src":"3755:1:29","type":"","value":"1"}},{"body":{"nativeSrc":"3825:123:29","nodeType":"YulBlock","src":"3825:123:29","statements":[{"body":{"nativeSrc":"3860:22:29","nodeType":"YulBlock","src":"3860:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"3862:16:29","nodeType":"YulIdentifier","src":"3862:16:29"},"nativeSrc":"3862:18:29","nodeType":"YulFunctionCall","src":"3862:18:29"},"nativeSrc":"3862:18:29","nodeType":"YulExpressionStatement","src":"3862:18:29"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"3845:8:29","nodeType":"YulIdentifier","src":"3845:8:29"},{"kind":"number","nativeSrc":"3855:3:29","nodeType":"YulLiteral","src":"3855:3:29","type":"","value":"255"}],"functionName":{"name":"gt","nativeSrc":"3842:2:29","nodeType":"YulIdentifier","src":"3842:2:29"},"nativeSrc":"3842:17:29","nodeType":"YulFunctionCall","src":"3842:17:29"},"nativeSrc":"3839:43:29","nodeType":"YulIf","src":"3839:43:29"},{"nativeSrc":"3895:25:29","nodeType":"YulAssignment","src":"3895:25:29","value":{"arguments":[{"name":"exponent","nativeSrc":"3908:8:29","nodeType":"YulIdentifier","src":"3908:8:29"},{"kind":"number","nativeSrc":"3918:1:29","nodeType":"YulLiteral","src":"3918:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3904:3:29","nodeType":"YulIdentifier","src":"3904:3:29"},"nativeSrc":"3904:16:29","nodeType":"YulFunctionCall","src":"3904:16:29"},"variableNames":[{"name":"power","nativeSrc":"3895:5:29","nodeType":"YulIdentifier","src":"3895:5:29"}]},{"nativeSrc":"3933:5:29","nodeType":"YulLeave","src":"3933:5:29"}]},"nativeSrc":"3818:130:29","nodeType":"YulCase","src":"3818:130:29","value":{"kind":"number","nativeSrc":"3823:1:29","nodeType":"YulLiteral","src":"3823:1:29","type":"","value":"2"}}],"expression":{"name":"base","nativeSrc":"3737:4:29","nodeType":"YulIdentifier","src":"3737:4:29"},"nativeSrc":"3730:218:29","nodeType":"YulSwitch","src":"3730:218:29"},{"body":{"nativeSrc":"4046:70:29","nodeType":"YulBlock","src":"4046:70:29","statements":[{"nativeSrc":"4060:28:29","nodeType":"YulAssignment","src":"4060:28:29","value":{"arguments":[{"name":"base","nativeSrc":"4073:4:29","nodeType":"YulIdentifier","src":"4073:4:29"},{"name":"exponent","nativeSrc":"4079:8:29","nodeType":"YulIdentifier","src":"4079:8:29"}],"functionName":{"name":"exp","nativeSrc":"4069:3:29","nodeType":"YulIdentifier","src":"4069:3:29"},"nativeSrc":"4069:19:29","nodeType":"YulFunctionCall","src":"4069:19:29"},"variableNames":[{"name":"power","nativeSrc":"4060:5:29","nodeType":"YulIdentifier","src":"4060:5:29"}]},{"nativeSrc":"4101:5:29","nodeType":"YulLeave","src":"4101:5:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nativeSrc":"3970:4:29","nodeType":"YulIdentifier","src":"3970:4:29"},{"kind":"number","nativeSrc":"3976:2:29","nodeType":"YulLiteral","src":"3976:2:29","type":"","value":"11"}],"functionName":{"name":"lt","nativeSrc":"3967:2:29","nodeType":"YulIdentifier","src":"3967:2:29"},"nativeSrc":"3967:12:29","nodeType":"YulFunctionCall","src":"3967:12:29"},{"arguments":[{"name":"exponent","nativeSrc":"3984:8:29","nodeType":"YulIdentifier","src":"3984:8:29"},{"kind":"number","nativeSrc":"3994:2:29","nodeType":"YulLiteral","src":"3994:2:29","type":"","value":"78"}],"functionName":{"name":"lt","nativeSrc":"3981:2:29","nodeType":"YulIdentifier","src":"3981:2:29"},"nativeSrc":"3981:16:29","nodeType":"YulFunctionCall","src":"3981:16:29"}],"functionName":{"name":"and","nativeSrc":"3963:3:29","nodeType":"YulIdentifier","src":"3963:3:29"},"nativeSrc":"3963:35:29","nodeType":"YulFunctionCall","src":"3963:35:29"},{"arguments":[{"arguments":[{"name":"base","nativeSrc":"4007:4:29","nodeType":"YulIdentifier","src":"4007:4:29"},{"kind":"number","nativeSrc":"4013:3:29","nodeType":"YulLiteral","src":"4013:3:29","type":"","value":"307"}],"functionName":{"name":"lt","nativeSrc":"4004:2:29","nodeType":"YulIdentifier","src":"4004:2:29"},"nativeSrc":"4004:13:29","nodeType":"YulFunctionCall","src":"4004:13:29"},{"arguments":[{"name":"exponent","nativeSrc":"4022:8:29","nodeType":"YulIdentifier","src":"4022:8:29"},{"kind":"number","nativeSrc":"4032:2:29","nodeType":"YulLiteral","src":"4032:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4019:2:29","nodeType":"YulIdentifier","src":"4019:2:29"},"nativeSrc":"4019:16:29","nodeType":"YulFunctionCall","src":"4019:16:29"}],"functionName":{"name":"and","nativeSrc":"4000:3:29","nodeType":"YulIdentifier","src":"4000:3:29"},"nativeSrc":"4000:36:29","nodeType":"YulFunctionCall","src":"4000:36:29"}],"functionName":{"name":"or","nativeSrc":"3960:2:29","nodeType":"YulIdentifier","src":"3960:2:29"},"nativeSrc":"3960:77:29","nodeType":"YulFunctionCall","src":"3960:77:29"},"nativeSrc":"3957:159:29","nodeType":"YulIf","src":"3957:159:29"},{"nativeSrc":"4125:57:29","nodeType":"YulVariableDeclaration","src":"4125:57:29","value":{"arguments":[{"name":"base","nativeSrc":"4167:4:29","nodeType":"YulIdentifier","src":"4167:4:29"},{"name":"exponent","nativeSrc":"4173:8:29","nodeType":"YulIdentifier","src":"4173:8:29"}],"functionName":{"name":"checked_exp_helper","nativeSrc":"4148:18:29","nodeType":"YulIdentifier","src":"4148:18:29"},"nativeSrc":"4148:34:29","nodeType":"YulFunctionCall","src":"4148:34:29"},"variables":[{"name":"power_1","nativeSrc":"4129:7:29","nodeType":"YulTypedName","src":"4129:7:29","type":""},{"name":"base_1","nativeSrc":"4138:6:29","nodeType":"YulTypedName","src":"4138:6:29","type":""}]},{"body":{"nativeSrc":"4227:22:29","nodeType":"YulBlock","src":"4227:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"4229:16:29","nodeType":"YulIdentifier","src":"4229:16:29"},"nativeSrc":"4229:18:29","nodeType":"YulFunctionCall","src":"4229:18:29"},"nativeSrc":"4229:18:29","nodeType":"YulExpressionStatement","src":"4229:18:29"}]},"condition":{"arguments":[{"name":"power_1","nativeSrc":"4197:7:29","nodeType":"YulIdentifier","src":"4197:7:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4214:1:29","nodeType":"YulLiteral","src":"4214:1:29","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4210:3:29","nodeType":"YulIdentifier","src":"4210:3:29"},"nativeSrc":"4210:6:29","nodeType":"YulFunctionCall","src":"4210:6:29"},{"name":"base_1","nativeSrc":"4218:6:29","nodeType":"YulIdentifier","src":"4218:6:29"}],"functionName":{"name":"div","nativeSrc":"4206:3:29","nodeType":"YulIdentifier","src":"4206:3:29"},"nativeSrc":"4206:19:29","nodeType":"YulFunctionCall","src":"4206:19:29"}],"functionName":{"name":"gt","nativeSrc":"4194:2:29","nodeType":"YulIdentifier","src":"4194:2:29"},"nativeSrc":"4194:32:29","nodeType":"YulFunctionCall","src":"4194:32:29"},"nativeSrc":"4191:58:29","nodeType":"YulIf","src":"4191:58:29"},{"nativeSrc":"4258:29:29","nodeType":"YulAssignment","src":"4258:29:29","value":{"arguments":[{"name":"power_1","nativeSrc":"4271:7:29","nodeType":"YulIdentifier","src":"4271:7:29"},{"name":"base_1","nativeSrc":"4280:6:29","nodeType":"YulIdentifier","src":"4280:6:29"}],"functionName":{"name":"mul","nativeSrc":"4267:3:29","nodeType":"YulIdentifier","src":"4267:3:29"},"nativeSrc":"4267:20:29","nodeType":"YulFunctionCall","src":"4267:20:29"},"variableNames":[{"name":"power","nativeSrc":"4258:5:29","nodeType":"YulIdentifier","src":"4258:5:29"}]}]},"name":"checked_exp_unsigned","nativeSrc":"3487:806:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"3517:4:29","nodeType":"YulTypedName","src":"3517:4:29","type":""},{"name":"exponent","nativeSrc":"3523:8:29","nodeType":"YulTypedName","src":"3523:8:29","type":""}],"returnVariables":[{"name":"power","nativeSrc":"3536:5:29","nodeType":"YulTypedName","src":"3536:5:29","type":""}],"src":"3487:806:29"},{"body":{"nativeSrc":"4366:72:29","nodeType":"YulBlock","src":"4366:72:29","statements":[{"nativeSrc":"4376:56:29","nodeType":"YulAssignment","src":"4376:56:29","value":{"arguments":[{"name":"base","nativeSrc":"4406:4:29","nodeType":"YulIdentifier","src":"4406:4:29"},{"arguments":[{"name":"exponent","nativeSrc":"4416:8:29","nodeType":"YulIdentifier","src":"4416:8:29"},{"kind":"number","nativeSrc":"4426:4:29","nodeType":"YulLiteral","src":"4426:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"4412:3:29","nodeType":"YulIdentifier","src":"4412:3:29"},"nativeSrc":"4412:19:29","nodeType":"YulFunctionCall","src":"4412:19:29"}],"functionName":{"name":"checked_exp_unsigned","nativeSrc":"4385:20:29","nodeType":"YulIdentifier","src":"4385:20:29"},"nativeSrc":"4385:47:29","nodeType":"YulFunctionCall","src":"4385:47:29"},"variableNames":[{"name":"power","nativeSrc":"4376:5:29","nodeType":"YulIdentifier","src":"4376:5:29"}]}]},"name":"checked_exp_t_uint256_t_uint8","nativeSrc":"4298:140:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"4337:4:29","nodeType":"YulTypedName","src":"4337:4:29","type":""},{"name":"exponent","nativeSrc":"4343:8:29","nodeType":"YulTypedName","src":"4343:8:29","type":""}],"returnVariables":[{"name":"power","nativeSrc":"4356:5:29","nodeType":"YulTypedName","src":"4356:5:29","type":""}],"src":"4298:140:29"},{"body":{"nativeSrc":"4495:116:29","nodeType":"YulBlock","src":"4495:116:29","statements":[{"nativeSrc":"4505:20:29","nodeType":"YulAssignment","src":"4505:20:29","value":{"arguments":[{"name":"x","nativeSrc":"4520:1:29","nodeType":"YulIdentifier","src":"4520:1:29"},{"name":"y","nativeSrc":"4523:1:29","nodeType":"YulIdentifier","src":"4523:1:29"}],"functionName":{"name":"mul","nativeSrc":"4516:3:29","nodeType":"YulIdentifier","src":"4516:3:29"},"nativeSrc":"4516:9:29","nodeType":"YulFunctionCall","src":"4516:9:29"},"variableNames":[{"name":"product","nativeSrc":"4505:7:29","nodeType":"YulIdentifier","src":"4505:7:29"}]},{"body":{"nativeSrc":"4583:22:29","nodeType":"YulBlock","src":"4583:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"4585:16:29","nodeType":"YulIdentifier","src":"4585:16:29"},"nativeSrc":"4585:18:29","nodeType":"YulFunctionCall","src":"4585:18:29"},"nativeSrc":"4585:18:29","nodeType":"YulExpressionStatement","src":"4585:18:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"4554:1:29","nodeType":"YulIdentifier","src":"4554:1:29"}],"functionName":{"name":"iszero","nativeSrc":"4547:6:29","nodeType":"YulIdentifier","src":"4547:6:29"},"nativeSrc":"4547:9:29","nodeType":"YulFunctionCall","src":"4547:9:29"},{"arguments":[{"name":"y","nativeSrc":"4561:1:29","nodeType":"YulIdentifier","src":"4561:1:29"},{"arguments":[{"name":"product","nativeSrc":"4568:7:29","nodeType":"YulIdentifier","src":"4568:7:29"},{"name":"x","nativeSrc":"4577:1:29","nodeType":"YulIdentifier","src":"4577:1:29"}],"functionName":{"name":"div","nativeSrc":"4564:3:29","nodeType":"YulIdentifier","src":"4564:3:29"},"nativeSrc":"4564:15:29","nodeType":"YulFunctionCall","src":"4564:15:29"}],"functionName":{"name":"eq","nativeSrc":"4558:2:29","nodeType":"YulIdentifier","src":"4558:2:29"},"nativeSrc":"4558:22:29","nodeType":"YulFunctionCall","src":"4558:22:29"}],"functionName":{"name":"or","nativeSrc":"4544:2:29","nodeType":"YulIdentifier","src":"4544:2:29"},"nativeSrc":"4544:37:29","nodeType":"YulFunctionCall","src":"4544:37:29"}],"functionName":{"name":"iszero","nativeSrc":"4537:6:29","nodeType":"YulIdentifier","src":"4537:6:29"},"nativeSrc":"4537:45:29","nodeType":"YulFunctionCall","src":"4537:45:29"},"nativeSrc":"4534:71:29","nodeType":"YulIf","src":"4534:71:29"}]},"name":"checked_mul_t_uint256","nativeSrc":"4443:168:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"4474:1:29","nodeType":"YulTypedName","src":"4474:1:29","type":""},{"name":"y","nativeSrc":"4477:1:29","nodeType":"YulTypedName","src":"4477:1:29","type":""}],"returnVariables":[{"name":"product","nativeSrc":"4483:7:29","nodeType":"YulTypedName","src":"4483:7:29","type":""}],"src":"4443:168:29"},{"body":{"nativeSrc":"4664:77:29","nodeType":"YulBlock","src":"4664:77:29","statements":[{"nativeSrc":"4674:16:29","nodeType":"YulAssignment","src":"4674:16:29","value":{"arguments":[{"name":"x","nativeSrc":"4685:1:29","nodeType":"YulIdentifier","src":"4685:1:29"},{"name":"y","nativeSrc":"4688:1:29","nodeType":"YulIdentifier","src":"4688:1:29"}],"functionName":{"name":"add","nativeSrc":"4681:3:29","nodeType":"YulIdentifier","src":"4681:3:29"},"nativeSrc":"4681:9:29","nodeType":"YulFunctionCall","src":"4681:9:29"},"variableNames":[{"name":"sum","nativeSrc":"4674:3:29","nodeType":"YulIdentifier","src":"4674:3:29"}]},{"body":{"nativeSrc":"4713:22:29","nodeType":"YulBlock","src":"4713:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"4715:16:29","nodeType":"YulIdentifier","src":"4715:16:29"},"nativeSrc":"4715:18:29","nodeType":"YulFunctionCall","src":"4715:18:29"},"nativeSrc":"4715:18:29","nodeType":"YulExpressionStatement","src":"4715:18:29"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"4705:1:29","nodeType":"YulIdentifier","src":"4705:1:29"},{"name":"sum","nativeSrc":"4708:3:29","nodeType":"YulIdentifier","src":"4708:3:29"}],"functionName":{"name":"gt","nativeSrc":"4702:2:29","nodeType":"YulIdentifier","src":"4702:2:29"},"nativeSrc":"4702:10:29","nodeType":"YulFunctionCall","src":"4702:10:29"},"nativeSrc":"4699:36:29","nodeType":"YulIf","src":"4699:36:29"}]},"name":"checked_add_t_uint256","nativeSrc":"4616:125:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"4647:1:29","nodeType":"YulTypedName","src":"4647:1:29","type":""},{"name":"y","nativeSrc":"4650:1:29","nodeType":"YulTypedName","src":"4650:1:29","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"4656:3:29","nodeType":"YulTypedName","src":"4656:3:29","type":""}],"src":"4616:125:29"},{"body":{"nativeSrc":"4903:188:29","nodeType":"YulBlock","src":"4903:188:29","statements":[{"nativeSrc":"4913:26:29","nodeType":"YulAssignment","src":"4913:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"4925:9:29","nodeType":"YulIdentifier","src":"4925:9:29"},{"kind":"number","nativeSrc":"4936:2:29","nodeType":"YulLiteral","src":"4936:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4921:3:29","nodeType":"YulIdentifier","src":"4921:3:29"},"nativeSrc":"4921:18:29","nodeType":"YulFunctionCall","src":"4921:18:29"},"variableNames":[{"name":"tail","nativeSrc":"4913:4:29","nodeType":"YulIdentifier","src":"4913:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4955:9:29","nodeType":"YulIdentifier","src":"4955:9:29"},{"arguments":[{"name":"value0","nativeSrc":"4970:6:29","nodeType":"YulIdentifier","src":"4970:6:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4986:3:29","nodeType":"YulLiteral","src":"4986:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"4991:1:29","nodeType":"YulLiteral","src":"4991:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4982:3:29","nodeType":"YulIdentifier","src":"4982:3:29"},"nativeSrc":"4982:11:29","nodeType":"YulFunctionCall","src":"4982:11:29"},{"kind":"number","nativeSrc":"4995:1:29","nodeType":"YulLiteral","src":"4995:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4978:3:29","nodeType":"YulIdentifier","src":"4978:3:29"},"nativeSrc":"4978:19:29","nodeType":"YulFunctionCall","src":"4978:19:29"}],"functionName":{"name":"and","nativeSrc":"4966:3:29","nodeType":"YulIdentifier","src":"4966:3:29"},"nativeSrc":"4966:32:29","nodeType":"YulFunctionCall","src":"4966:32:29"}],"functionName":{"name":"mstore","nativeSrc":"4948:6:29","nodeType":"YulIdentifier","src":"4948:6:29"},"nativeSrc":"4948:51:29","nodeType":"YulFunctionCall","src":"4948:51:29"},"nativeSrc":"4948:51:29","nodeType":"YulExpressionStatement","src":"4948:51:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5019:9:29","nodeType":"YulIdentifier","src":"5019:9:29"},{"kind":"number","nativeSrc":"5030:2:29","nodeType":"YulLiteral","src":"5030:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5015:3:29","nodeType":"YulIdentifier","src":"5015:3:29"},"nativeSrc":"5015:18:29","nodeType":"YulFunctionCall","src":"5015:18:29"},{"name":"value1","nativeSrc":"5035:6:29","nodeType":"YulIdentifier","src":"5035:6:29"}],"functionName":{"name":"mstore","nativeSrc":"5008:6:29","nodeType":"YulIdentifier","src":"5008:6:29"},"nativeSrc":"5008:34:29","nodeType":"YulFunctionCall","src":"5008:34:29"},"nativeSrc":"5008:34:29","nodeType":"YulExpressionStatement","src":"5008:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5062:9:29","nodeType":"YulIdentifier","src":"5062:9:29"},{"kind":"number","nativeSrc":"5073:2:29","nodeType":"YulLiteral","src":"5073:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5058:3:29","nodeType":"YulIdentifier","src":"5058:3:29"},"nativeSrc":"5058:18:29","nodeType":"YulFunctionCall","src":"5058:18:29"},{"name":"value2","nativeSrc":"5078:6:29","nodeType":"YulIdentifier","src":"5078:6:29"}],"functionName":{"name":"mstore","nativeSrc":"5051:6:29","nodeType":"YulIdentifier","src":"5051:6:29"},"nativeSrc":"5051:34:29","nodeType":"YulFunctionCall","src":"5051:34:29"},"nativeSrc":"5051:34:29","nodeType":"YulExpressionStatement","src":"5051:34:29"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"4746:345:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4856:9:29","nodeType":"YulTypedName","src":"4856:9:29","type":""},{"name":"value2","nativeSrc":"4867:6:29","nodeType":"YulTypedName","src":"4867:6:29","type":""},{"name":"value1","nativeSrc":"4875:6:29","nodeType":"YulTypedName","src":"4875:6:29","type":""},{"name":"value0","nativeSrc":"4883:6:29","nodeType":"YulTypedName","src":"4883:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4894:4:29","nodeType":"YulTypedName","src":"4894:4:29","type":""}],"src":"4746:345:29"},{"body":{"nativeSrc":"5197:76:29","nodeType":"YulBlock","src":"5197:76:29","statements":[{"nativeSrc":"5207:26:29","nodeType":"YulAssignment","src":"5207:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"5219:9:29","nodeType":"YulIdentifier","src":"5219:9:29"},{"kind":"number","nativeSrc":"5230:2:29","nodeType":"YulLiteral","src":"5230:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5215:3:29","nodeType":"YulIdentifier","src":"5215:3:29"},"nativeSrc":"5215:18:29","nodeType":"YulFunctionCall","src":"5215:18:29"},"variableNames":[{"name":"tail","nativeSrc":"5207:4:29","nodeType":"YulIdentifier","src":"5207:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5249:9:29","nodeType":"YulIdentifier","src":"5249:9:29"},{"name":"value0","nativeSrc":"5260:6:29","nodeType":"YulIdentifier","src":"5260:6:29"}],"functionName":{"name":"mstore","nativeSrc":"5242:6:29","nodeType":"YulIdentifier","src":"5242:6:29"},"nativeSrc":"5242:25:29","nodeType":"YulFunctionCall","src":"5242:25:29"},"nativeSrc":"5242:25:29","nodeType":"YulExpressionStatement","src":"5242:25:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"5096:177:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5166:9:29","nodeType":"YulTypedName","src":"5166:9:29","type":""},{"name":"value0","nativeSrc":"5177:6:29","nodeType":"YulTypedName","src":"5177:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5188:4:29","nodeType":"YulTypedName","src":"5188:4:29","type":""}],"src":"5096:177:29"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x537461626C6520436F696E205465737420546F6B656E00000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x534243 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x76 SWAP2 SWAP1 PUSH3 0x35C JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x85 DUP3 DUP3 PUSH3 0x35C JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xB8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xC3 DUP2 PUSH3 0xF2 JUMP JUMPDEST POP PUSH3 0xEC CALLER PUSH3 0xD7 PUSH1 0x12 PUSH1 0xA PUSH3 0x53D JUMP JUMPDEST PUSH3 0xE6 SWAP1 PUSH3 0xF4240 PUSH3 0x555 JUMP JUMPDEST PUSH3 0x144 JUMP JUMPDEST PUSH3 0x585 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x170 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH3 0xAF JUMP JUMPDEST PUSH3 0x17E PUSH1 0x0 DUP4 DUP4 PUSH3 0x182 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x1B1 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x1A5 SWAP2 SWAP1 PUSH3 0x56F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH3 0x225 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH3 0x206 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH3 0xAF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x243 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH3 0x262 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x2A8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x2E0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x301 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x357 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x332 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x353 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x33E JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x378 JUMPI PUSH3 0x378 PUSH3 0x2B5 JUMP JUMPDEST PUSH3 0x390 DUP2 PUSH3 0x389 DUP5 SLOAD PUSH3 0x2CB JUMP JUMPDEST DUP5 PUSH3 0x307 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x3C8 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x3AF JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x353 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x3F9 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x3D8 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x418 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x47F JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x463 JUMPI PUSH3 0x463 PUSH3 0x428 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x471 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x443 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x498 JUMPI POP PUSH1 0x1 PUSH3 0x537 JUMP JUMPDEST DUP2 PUSH3 0x4A7 JUMPI POP PUSH1 0x0 PUSH3 0x537 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x4C0 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x4CB JUMPI PUSH3 0x4EB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x537 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x4DF JUMPI PUSH3 0x4DF PUSH3 0x428 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x537 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x510 JUMPI POP DUP2 DUP2 EXP PUSH3 0x537 JUMP JUMPDEST PUSH3 0x51C DUP4 DUP4 PUSH3 0x43E JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x533 JUMPI PUSH3 0x533 PUSH3 0x428 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x54E PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x487 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x537 JUMPI PUSH3 0x537 PUSH3 0x428 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x537 JUMPI PUSH3 0x537 PUSH3 0x428 JUMP JUMPDEST PUSH2 0xA1A DUP1 PUSH3 0x595 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x121874A1 EQ PUSH2 0x130 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x234 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x2C6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0x138 PUSH2 0x2E0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0x7E6 JUMP JUMPDEST PUSH2 0x302 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0x138 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x326 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x18F CALLDATASIZE PUSH1 0x4 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x138 PUSH2 0x33C JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x34E JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x35D JUMP JUMPDEST PUSH2 0x13E PUSH2 0x1F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x844 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x138 PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0x822 JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x243 SWAP1 PUSH2 0x877 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x26F SWAP1 PUSH2 0x877 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2BC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x291 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2BC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x29F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2D4 DUP2 DUP6 DUP6 PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x300 CALLER PUSH2 0x2F0 PUSH1 0x12 PUSH1 0xA PUSH2 0x9AB JUMP JUMPDEST PUSH2 0x2FB SWAP1 PUSH1 0x64 PUSH2 0x9BA JUMP JUMPDEST PUSH2 0x3C0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x310 DUP6 DUP3 DUP6 PUSH2 0x3F6 JUMP JUMPDEST PUSH2 0x31B DUP6 DUP6 DUP6 PUSH2 0x474 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x32E PUSH2 0x4D3 JUMP JUMPDEST PUSH2 0x338 DUP3 DUP3 PUSH2 0x3C0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x344 PUSH2 0x4D3 JUMP JUMPDEST PUSH2 0x300 PUSH1 0x0 PUSH2 0x500 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x243 SWAP1 PUSH2 0x877 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2D4 DUP2 DUP6 DUP6 PUSH2 0x474 JUMP JUMPDEST PUSH2 0x373 PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3A2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3AB DUP2 PUSH2 0x500 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3BB DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x552 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x399 JUMP JUMPDEST PUSH2 0x338 PUSH1 0x0 DUP4 DUP4 PUSH2 0x627 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x46E JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x45F JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x399 JUMP JUMPDEST PUSH2 0x46E DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x552 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x49E JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x399 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4C8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x399 JUMP JUMPDEST PUSH2 0x3BB DUP4 DUP4 DUP4 PUSH2 0x627 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x300 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x399 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x57C JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x399 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5A6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x399 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x46E JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x619 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x652 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x647 SWAP2 SWAP1 PUSH2 0x9D1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x6C4 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x6A5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x399 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6E0 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x6FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x744 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x77F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x763 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D8 DUP4 PUSH2 0x7A0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x804 DUP5 PUSH2 0x7A0 JUMP JUMPDEST SWAP3 POP PUSH2 0x812 PUSH1 0x20 DUP6 ADD PUSH2 0x7A0 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x834 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x83D DUP3 PUSH2 0x7A0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x857 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x860 DUP4 PUSH2 0x7A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x86E PUSH1 0x20 DUP5 ADD PUSH2 0x7A0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x88B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x8AB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x902 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x8E8 JUMPI PUSH2 0x8E8 PUSH2 0x8B1 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x8F5 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x8CC JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x919 JUMPI POP PUSH1 0x1 PUSH2 0x2DA JUMP JUMPDEST DUP2 PUSH2 0x926 JUMPI POP PUSH1 0x0 PUSH2 0x2DA JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x93C JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x946 JUMPI PUSH2 0x962 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2DA JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x957 JUMPI PUSH2 0x957 PUSH2 0x8B1 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x2DA JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x985 JUMPI POP DUP2 DUP2 EXP PUSH2 0x2DA JUMP JUMPDEST PUSH2 0x98F DUP4 DUP4 PUSH2 0x8C7 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x9A3 JUMPI PUSH2 0x9A3 PUSH2 0x8B1 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83D PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x90A JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x2DA JUMPI PUSH2 0x2DA PUSH2 0x8B1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2DA JUMPI PUSH2 0x2DA PUSH2 0x8B1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0xE166E2B7457440E9B4B7BD2900D7A3472FB2FBB80E2F2B 0x2E PREVRANDAO DUP1 PUSH25 0xFFABEC364736F6C6343000817003300000000000000000000 ","sourceMap":"274:1103:26:-:0;;;566:138;;;;;;;;;;627:10;1601:113:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1601:113:8;;;1675:5;1667;:13;;;;;;:::i;:::-;-1:-1:-1;1690:7:8;:17;1700:7;1690;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:6;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:6;;1350:1;1322:31;;;2872:51:29;2845:18;;1322:31:6;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;649:48:26::2;655:10;684:12;385:2;684;:12;:::i;:::-;667:29;::::0;477:9:::2;667:29;:::i;:::-;649:5;:48::i;:::-;274:1103:::0;;2912:187:6;3004:6;;;-1:-1:-1;;;;;3020:17:6;;;-1:-1:-1;;;;;;3020:17:6;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;7458:208:8:-;-1:-1:-1;;;;;7528:21:8;;7524:91;;7572:32;;-1:-1:-1;;;7572:32:8;;7601:1;7572:32;;;2872:51:29;2845:18;;7572:32:8;2726:203:29;7524:91:8;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;6008:1107::-;-1:-1:-1;;;;;6097:18:8;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:8;;-1:-1:-1;6093:540:8;;-1:-1:-1;;;;;6307:15:8;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:8;;-1:-1:-1;;;;;4966:32:29;;6386:50:8;;;4948:51:29;5015:18;;;5008:34;;;5058:18;;;5051:34;;;4921:18;;6386:50:8;4746:345:29;6336:115:8;-1:-1:-1;;;;;6571:15:8;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:8;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:8;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:8;7092:4;-1:-1:-1;;;;;7083:25:8;;7102:5;7083:25;;;;5242::29;;5230:2;5215:18;;5096:177;7083:25:8;;;;;;;;6008:1107;;;:::o;14:127:29:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:543::-;759:2;754:3;751:11;748:446;;;795:1;819:5;816:1;809:16;863:4;860:1;850:18;933:2;921:10;917:19;914:1;910:27;904:4;900:38;969:4;957:10;954:20;951:47;;;-1:-1:-1;992:4:29;951:47;1047:2;1042:3;1038:12;1035:1;1031:20;1025:4;1021:31;1011:41;;1102:82;1120:2;1113:5;1110:13;1102:82;;;1165:17;;;1146:1;1135:13;1102:82;;;1106:3;;;748:446;657:543;;;:::o;1376:1345::-;1496:10;;-1:-1:-1;;;;;1518:30:29;;1515:56;;;1551:18;;:::i;:::-;1580:97;1670:6;1630:38;1662:4;1656:11;1630:38;:::i;:::-;1624:4;1580:97;:::i;:::-;1732:4;;1789:2;1778:14;;1806:1;1801:663;;;;2508:1;2525:6;2522:89;;;-1:-1:-1;2577:19:29;;;2571:26;2522:89;-1:-1:-1;;1333:1:29;1329:11;;;1325:24;1321:29;1311:40;1357:1;1353:11;;;1308:57;2624:81;;1771:944;;1801:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1837:20:29;;;1955:236;1969:7;1966:1;1963:14;1955:236;;;2058:19;;;2052:26;2037:42;;2150:27;;;;2118:1;2106:14;;;;1985:19;;1955:236;;;1959:3;2219:6;2210:7;2207:19;2204:201;;;2280:19;;;2274:26;-1:-1:-1;;2363:1:29;2359:14;;;2375:3;2355:24;2351:37;2347:42;2332:58;2317:74;;2204:201;-1:-1:-1;;;;;2451:1:29;2435:14;;;2431:22;2418:36;;-1:-1:-1;1376:1345:29:o;2934:127::-;2995:10;2990:3;2986:20;2983:1;2976:31;3026:4;3023:1;3016:15;3050:4;3047:1;3040:15;3066:416;3155:1;3192:5;3155:1;3206:270;3227:7;3217:8;3214:21;3206:270;;;3286:4;3282:1;3278:6;3274:17;3268:4;3265:27;3262:53;;;3295:18;;:::i;:::-;3345:7;3335:8;3331:22;3328:55;;;3365:16;;;;3328:55;3444:22;;;;3404:15;;;;3206:270;;;3210:3;3066:416;;;;;:::o;3487:806::-;3536:5;3566:8;3556:80;;-1:-1:-1;3607:1:29;3621:5;;3556:80;3655:4;3645:76;;-1:-1:-1;3692:1:29;3706:5;;3645:76;3737:4;3755:1;3750:59;;;;3823:1;3818:130;;;;3730:218;;3750:59;3780:1;3771:10;;3794:5;;;3818:130;3855:3;3845:8;3842:17;3839:43;;;3862:18;;:::i;:::-;-1:-1:-1;;3918:1:29;3904:16;;3933:5;;3730:218;;4032:2;4022:8;4019:16;4013:3;4007:4;4004:13;4000:36;3994:2;3984:8;3981:16;3976:2;3970:4;3967:12;3963:35;3960:77;3957:159;;;-1:-1:-1;4069:19:29;;;4101:5;;3957:159;4148:34;4173:8;4167:4;4148:34;:::i;:::-;4218:6;4214:1;4210:6;4206:19;4197:7;4194:32;4191:58;;;4229:18;;:::i;:::-;4267:20;;-1:-1:-1;3487:806:29;;;;;:::o;4298:140::-;4356:5;4385:47;4426:4;4416:8;4412:19;4406:4;4385:47;:::i;:::-;4376:56;4298:140;-1:-1:-1;;;4298:140:29:o;4443:168::-;4516:9;;;4547;;4564:15;;;4558:22;;4544:37;4534:71;;4585:18;;:::i;4616:125::-;4681:9;;;4702:10;;;4699:36;;;4715:18;;:::i;5096:177::-;274:1103:26;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_1090":{"entryPoint":942,"id":1090,"parameterSlots":3,"returnSlots":0},"@_approve_1150":{"entryPoint":1362,"id":1150,"parameterSlots":4,"returnSlots":0},"@_checkOwner_484":{"entryPoint":1235,"id":484,"parameterSlots":0,"returnSlots":0},"@_mint_1039":{"entryPoint":960,"id":1039,"parameterSlots":2,"returnSlots":0},"@_msgSender_2512":{"entryPoint":null,"id":2512,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_1198":{"entryPoint":1014,"id":1198,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_546":{"entryPoint":1280,"id":546,"parameterSlots":1,"returnSlots":0},"@_transfer_929":{"entryPoint":1140,"id":929,"parameterSlots":3,"returnSlots":0},"@_update_1006":{"entryPoint":1575,"id":1006,"parameterSlots":3,"returnSlots":0},"@allowance_826":{"entryPoint":null,"id":826,"parameterSlots":2,"returnSlots":1},"@approve_850":{"entryPoint":710,"id":850,"parameterSlots":2,"returnSlots":1},"@balanceOf_785":{"entryPoint":null,"id":785,"parameterSlots":1,"returnSlots":1},"@decimals_6997":{"entryPoint":null,"id":6997,"parameterSlots":0,"returnSlots":1},"@mintTestTokens_6987":{"entryPoint":736,"id":6987,"parameterSlots":0,"returnSlots":0},"@mint_6972":{"entryPoint":806,"id":6972,"parameterSlots":2,"returnSlots":0},"@name_745":{"entryPoint":564,"id":745,"parameterSlots":0,"returnSlots":1},"@owner_467":{"entryPoint":null,"id":467,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_498":{"entryPoint":828,"id":498,"parameterSlots":0,"returnSlots":0},"@symbol_754":{"entryPoint":846,"id":754,"parameterSlots":0,"returnSlots":1},"@totalSupply_772":{"entryPoint":null,"id":772,"parameterSlots":0,"returnSlots":1},"@transferFrom_882":{"entryPoint":770,"id":882,"parameterSlots":3,"returnSlots":1},"@transferOwnership_526":{"entryPoint":875,"id":526,"parameterSlots":1,"returnSlots":0},"@transfer_809":{"entryPoint":861,"id":809,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":1952,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2082,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":2116,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":2022,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1980,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1873,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2513,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":2247,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":2475,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":2314,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":2490,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2167,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":2225,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:5108:29","nodeType":"YulBlock","src":"0:5108:29","statements":[{"nativeSrc":"6:3:29","nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nativeSrc":"135:427:29","nodeType":"YulBlock","src":"135:427:29","statements":[{"nativeSrc":"145:12:29","nodeType":"YulVariableDeclaration","src":"145:12:29","value":{"kind":"number","nativeSrc":"155:2:29","nodeType":"YulLiteral","src":"155:2:29","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"149:2:29","nodeType":"YulTypedName","src":"149:2:29","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"173:9:29","nodeType":"YulIdentifier","src":"173:9:29"},{"kind":"number","nativeSrc":"184:2:29","nodeType":"YulLiteral","src":"184:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"166:6:29","nodeType":"YulIdentifier","src":"166:6:29"},"nativeSrc":"166:21:29","nodeType":"YulFunctionCall","src":"166:21:29"},"nativeSrc":"166:21:29","nodeType":"YulExpressionStatement","src":"166:21:29"},{"nativeSrc":"196:27:29","nodeType":"YulVariableDeclaration","src":"196:27:29","value":{"arguments":[{"name":"value0","nativeSrc":"216:6:29","nodeType":"YulIdentifier","src":"216:6:29"}],"functionName":{"name":"mload","nativeSrc":"210:5:29","nodeType":"YulIdentifier","src":"210:5:29"},"nativeSrc":"210:13:29","nodeType":"YulFunctionCall","src":"210:13:29"},"variables":[{"name":"length","nativeSrc":"200:6:29","nodeType":"YulTypedName","src":"200:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"243:9:29","nodeType":"YulIdentifier","src":"243:9:29"},{"kind":"number","nativeSrc":"254:2:29","nodeType":"YulLiteral","src":"254:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"239:3:29","nodeType":"YulIdentifier","src":"239:3:29"},"nativeSrc":"239:18:29","nodeType":"YulFunctionCall","src":"239:18:29"},{"name":"length","nativeSrc":"259:6:29","nodeType":"YulIdentifier","src":"259:6:29"}],"functionName":{"name":"mstore","nativeSrc":"232:6:29","nodeType":"YulIdentifier","src":"232:6:29"},"nativeSrc":"232:34:29","nodeType":"YulFunctionCall","src":"232:34:29"},"nativeSrc":"232:34:29","nodeType":"YulExpressionStatement","src":"232:34:29"},{"nativeSrc":"275:10:29","nodeType":"YulVariableDeclaration","src":"275:10:29","value":{"kind":"number","nativeSrc":"284:1:29","nodeType":"YulLiteral","src":"284:1:29","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"279:1:29","nodeType":"YulTypedName","src":"279:1:29","type":""}]},{"body":{"nativeSrc":"344:90:29","nodeType":"YulBlock","src":"344:90:29","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"373:9:29","nodeType":"YulIdentifier","src":"373:9:29"},{"name":"i","nativeSrc":"384:1:29","nodeType":"YulIdentifier","src":"384:1:29"}],"functionName":{"name":"add","nativeSrc":"369:3:29","nodeType":"YulIdentifier","src":"369:3:29"},"nativeSrc":"369:17:29","nodeType":"YulFunctionCall","src":"369:17:29"},{"kind":"number","nativeSrc":"388:2:29","nodeType":"YulLiteral","src":"388:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"365:3:29","nodeType":"YulIdentifier","src":"365:3:29"},"nativeSrc":"365:26:29","nodeType":"YulFunctionCall","src":"365:26:29"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"407:6:29","nodeType":"YulIdentifier","src":"407:6:29"},{"name":"i","nativeSrc":"415:1:29","nodeType":"YulIdentifier","src":"415:1:29"}],"functionName":{"name":"add","nativeSrc":"403:3:29","nodeType":"YulIdentifier","src":"403:3:29"},"nativeSrc":"403:14:29","nodeType":"YulFunctionCall","src":"403:14:29"},{"name":"_1","nativeSrc":"419:2:29","nodeType":"YulIdentifier","src":"419:2:29"}],"functionName":{"name":"add","nativeSrc":"399:3:29","nodeType":"YulIdentifier","src":"399:3:29"},"nativeSrc":"399:23:29","nodeType":"YulFunctionCall","src":"399:23:29"}],"functionName":{"name":"mload","nativeSrc":"393:5:29","nodeType":"YulIdentifier","src":"393:5:29"},"nativeSrc":"393:30:29","nodeType":"YulFunctionCall","src":"393:30:29"}],"functionName":{"name":"mstore","nativeSrc":"358:6:29","nodeType":"YulIdentifier","src":"358:6:29"},"nativeSrc":"358:66:29","nodeType":"YulFunctionCall","src":"358:66:29"},"nativeSrc":"358:66:29","nodeType":"YulExpressionStatement","src":"358:66:29"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"305:1:29","nodeType":"YulIdentifier","src":"305:1:29"},{"name":"length","nativeSrc":"308:6:29","nodeType":"YulIdentifier","src":"308:6:29"}],"functionName":{"name":"lt","nativeSrc":"302:2:29","nodeType":"YulIdentifier","src":"302:2:29"},"nativeSrc":"302:13:29","nodeType":"YulFunctionCall","src":"302:13:29"},"nativeSrc":"294:140:29","nodeType":"YulForLoop","post":{"nativeSrc":"316:19:29","nodeType":"YulBlock","src":"316:19:29","statements":[{"nativeSrc":"318:15:29","nodeType":"YulAssignment","src":"318:15:29","value":{"arguments":[{"name":"i","nativeSrc":"327:1:29","nodeType":"YulIdentifier","src":"327:1:29"},{"name":"_1","nativeSrc":"330:2:29","nodeType":"YulIdentifier","src":"330:2:29"}],"functionName":{"name":"add","nativeSrc":"323:3:29","nodeType":"YulIdentifier","src":"323:3:29"},"nativeSrc":"323:10:29","nodeType":"YulFunctionCall","src":"323:10:29"},"variableNames":[{"name":"i","nativeSrc":"318:1:29","nodeType":"YulIdentifier","src":"318:1:29"}]}]},"pre":{"nativeSrc":"298:3:29","nodeType":"YulBlock","src":"298:3:29","statements":[]},"src":"294:140:29"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"458:9:29","nodeType":"YulIdentifier","src":"458:9:29"},{"name":"length","nativeSrc":"469:6:29","nodeType":"YulIdentifier","src":"469:6:29"}],"functionName":{"name":"add","nativeSrc":"454:3:29","nodeType":"YulIdentifier","src":"454:3:29"},"nativeSrc":"454:22:29","nodeType":"YulFunctionCall","src":"454:22:29"},{"kind":"number","nativeSrc":"478:2:29","nodeType":"YulLiteral","src":"478:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"450:3:29","nodeType":"YulIdentifier","src":"450:3:29"},"nativeSrc":"450:31:29","nodeType":"YulFunctionCall","src":"450:31:29"},{"kind":"number","nativeSrc":"483:1:29","nodeType":"YulLiteral","src":"483:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"443:6:29","nodeType":"YulIdentifier","src":"443:6:29"},"nativeSrc":"443:42:29","nodeType":"YulFunctionCall","src":"443:42:29"},"nativeSrc":"443:42:29","nodeType":"YulExpressionStatement","src":"443:42:29"},{"nativeSrc":"494:62:29","nodeType":"YulAssignment","src":"494:62:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"510:9:29","nodeType":"YulIdentifier","src":"510:9:29"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"529:6:29","nodeType":"YulIdentifier","src":"529:6:29"},{"kind":"number","nativeSrc":"537:2:29","nodeType":"YulLiteral","src":"537:2:29","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"525:3:29","nodeType":"YulIdentifier","src":"525:3:29"},"nativeSrc":"525:15:29","nodeType":"YulFunctionCall","src":"525:15:29"},{"arguments":[{"kind":"number","nativeSrc":"546:2:29","nodeType":"YulLiteral","src":"546:2:29","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"542:3:29","nodeType":"YulIdentifier","src":"542:3:29"},"nativeSrc":"542:7:29","nodeType":"YulFunctionCall","src":"542:7:29"}],"functionName":{"name":"and","nativeSrc":"521:3:29","nodeType":"YulIdentifier","src":"521:3:29"},"nativeSrc":"521:29:29","nodeType":"YulFunctionCall","src":"521:29:29"}],"functionName":{"name":"add","nativeSrc":"506:3:29","nodeType":"YulIdentifier","src":"506:3:29"},"nativeSrc":"506:45:29","nodeType":"YulFunctionCall","src":"506:45:29"},{"kind":"number","nativeSrc":"553:2:29","nodeType":"YulLiteral","src":"553:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"502:3:29","nodeType":"YulIdentifier","src":"502:3:29"},"nativeSrc":"502:54:29","nodeType":"YulFunctionCall","src":"502:54:29"},"variableNames":[{"name":"tail","nativeSrc":"494:4:29","nodeType":"YulIdentifier","src":"494:4:29"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14:548:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"104:9:29","nodeType":"YulTypedName","src":"104:9:29","type":""},{"name":"value0","nativeSrc":"115:6:29","nodeType":"YulTypedName","src":"115:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"126:4:29","nodeType":"YulTypedName","src":"126:4:29","type":""}],"src":"14:548:29"},{"body":{"nativeSrc":"616:124:29","nodeType":"YulBlock","src":"616:124:29","statements":[{"nativeSrc":"626:29:29","nodeType":"YulAssignment","src":"626:29:29","value":{"arguments":[{"name":"offset","nativeSrc":"648:6:29","nodeType":"YulIdentifier","src":"648:6:29"}],"functionName":{"name":"calldataload","nativeSrc":"635:12:29","nodeType":"YulIdentifier","src":"635:12:29"},"nativeSrc":"635:20:29","nodeType":"YulFunctionCall","src":"635:20:29"},"variableNames":[{"name":"value","nativeSrc":"626:5:29","nodeType":"YulIdentifier","src":"626:5:29"}]},{"body":{"nativeSrc":"718:16:29","nodeType":"YulBlock","src":"718:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"727:1:29","nodeType":"YulLiteral","src":"727:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"730:1:29","nodeType":"YulLiteral","src":"730:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"720:6:29","nodeType":"YulIdentifier","src":"720:6:29"},"nativeSrc":"720:12:29","nodeType":"YulFunctionCall","src":"720:12:29"},"nativeSrc":"720:12:29","nodeType":"YulExpressionStatement","src":"720:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"677:5:29","nodeType":"YulIdentifier","src":"677:5:29"},{"arguments":[{"name":"value","nativeSrc":"688:5:29","nodeType":"YulIdentifier","src":"688:5:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"703:3:29","nodeType":"YulLiteral","src":"703:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"708:1:29","nodeType":"YulLiteral","src":"708:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"699:3:29","nodeType":"YulIdentifier","src":"699:3:29"},"nativeSrc":"699:11:29","nodeType":"YulFunctionCall","src":"699:11:29"},{"kind":"number","nativeSrc":"712:1:29","nodeType":"YulLiteral","src":"712:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"695:3:29","nodeType":"YulIdentifier","src":"695:3:29"},"nativeSrc":"695:19:29","nodeType":"YulFunctionCall","src":"695:19:29"}],"functionName":{"name":"and","nativeSrc":"684:3:29","nodeType":"YulIdentifier","src":"684:3:29"},"nativeSrc":"684:31:29","nodeType":"YulFunctionCall","src":"684:31:29"}],"functionName":{"name":"eq","nativeSrc":"674:2:29","nodeType":"YulIdentifier","src":"674:2:29"},"nativeSrc":"674:42:29","nodeType":"YulFunctionCall","src":"674:42:29"}],"functionName":{"name":"iszero","nativeSrc":"667:6:29","nodeType":"YulIdentifier","src":"667:6:29"},"nativeSrc":"667:50:29","nodeType":"YulFunctionCall","src":"667:50:29"},"nativeSrc":"664:70:29","nodeType":"YulIf","src":"664:70:29"}]},"name":"abi_decode_address","nativeSrc":"567:173:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"595:6:29","nodeType":"YulTypedName","src":"595:6:29","type":""}],"returnVariables":[{"name":"value","nativeSrc":"606:5:29","nodeType":"YulTypedName","src":"606:5:29","type":""}],"src":"567:173:29"},{"body":{"nativeSrc":"832:167:29","nodeType":"YulBlock","src":"832:167:29","statements":[{"body":{"nativeSrc":"878:16:29","nodeType":"YulBlock","src":"878:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"887:1:29","nodeType":"YulLiteral","src":"887:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"890:1:29","nodeType":"YulLiteral","src":"890:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"880:6:29","nodeType":"YulIdentifier","src":"880:6:29"},"nativeSrc":"880:12:29","nodeType":"YulFunctionCall","src":"880:12:29"},"nativeSrc":"880:12:29","nodeType":"YulExpressionStatement","src":"880:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"853:7:29","nodeType":"YulIdentifier","src":"853:7:29"},{"name":"headStart","nativeSrc":"862:9:29","nodeType":"YulIdentifier","src":"862:9:29"}],"functionName":{"name":"sub","nativeSrc":"849:3:29","nodeType":"YulIdentifier","src":"849:3:29"},"nativeSrc":"849:23:29","nodeType":"YulFunctionCall","src":"849:23:29"},{"kind":"number","nativeSrc":"874:2:29","nodeType":"YulLiteral","src":"874:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"845:3:29","nodeType":"YulIdentifier","src":"845:3:29"},"nativeSrc":"845:32:29","nodeType":"YulFunctionCall","src":"845:32:29"},"nativeSrc":"842:52:29","nodeType":"YulIf","src":"842:52:29"},{"nativeSrc":"903:39:29","nodeType":"YulAssignment","src":"903:39:29","value":{"arguments":[{"name":"headStart","nativeSrc":"932:9:29","nodeType":"YulIdentifier","src":"932:9:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"913:18:29","nodeType":"YulIdentifier","src":"913:18:29"},"nativeSrc":"913:29:29","nodeType":"YulFunctionCall","src":"913:29:29"},"variableNames":[{"name":"value0","nativeSrc":"903:6:29","nodeType":"YulIdentifier","src":"903:6:29"}]},{"nativeSrc":"951:42:29","nodeType":"YulAssignment","src":"951:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"978:9:29","nodeType":"YulIdentifier","src":"978:9:29"},{"kind":"number","nativeSrc":"989:2:29","nodeType":"YulLiteral","src":"989:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"974:3:29","nodeType":"YulIdentifier","src":"974:3:29"},"nativeSrc":"974:18:29","nodeType":"YulFunctionCall","src":"974:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"961:12:29","nodeType":"YulIdentifier","src":"961:12:29"},"nativeSrc":"961:32:29","nodeType":"YulFunctionCall","src":"961:32:29"},"variableNames":[{"name":"value1","nativeSrc":"951:6:29","nodeType":"YulIdentifier","src":"951:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"745:254:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"790:9:29","nodeType":"YulTypedName","src":"790:9:29","type":""},{"name":"dataEnd","nativeSrc":"801:7:29","nodeType":"YulTypedName","src":"801:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"813:6:29","nodeType":"YulTypedName","src":"813:6:29","type":""},{"name":"value1","nativeSrc":"821:6:29","nodeType":"YulTypedName","src":"821:6:29","type":""}],"src":"745:254:29"},{"body":{"nativeSrc":"1099:92:29","nodeType":"YulBlock","src":"1099:92:29","statements":[{"nativeSrc":"1109:26:29","nodeType":"YulAssignment","src":"1109:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"1121:9:29","nodeType":"YulIdentifier","src":"1121:9:29"},{"kind":"number","nativeSrc":"1132:2:29","nodeType":"YulLiteral","src":"1132:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1117:3:29","nodeType":"YulIdentifier","src":"1117:3:29"},"nativeSrc":"1117:18:29","nodeType":"YulFunctionCall","src":"1117:18:29"},"variableNames":[{"name":"tail","nativeSrc":"1109:4:29","nodeType":"YulIdentifier","src":"1109:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1151:9:29","nodeType":"YulIdentifier","src":"1151:9:29"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"1176:6:29","nodeType":"YulIdentifier","src":"1176:6:29"}],"functionName":{"name":"iszero","nativeSrc":"1169:6:29","nodeType":"YulIdentifier","src":"1169:6:29"},"nativeSrc":"1169:14:29","nodeType":"YulFunctionCall","src":"1169:14:29"}],"functionName":{"name":"iszero","nativeSrc":"1162:6:29","nodeType":"YulIdentifier","src":"1162:6:29"},"nativeSrc":"1162:22:29","nodeType":"YulFunctionCall","src":"1162:22:29"}],"functionName":{"name":"mstore","nativeSrc":"1144:6:29","nodeType":"YulIdentifier","src":"1144:6:29"},"nativeSrc":"1144:41:29","nodeType":"YulFunctionCall","src":"1144:41:29"},"nativeSrc":"1144:41:29","nodeType":"YulExpressionStatement","src":"1144:41:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1004:187:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1068:9:29","nodeType":"YulTypedName","src":"1068:9:29","type":""},{"name":"value0","nativeSrc":"1079:6:29","nodeType":"YulTypedName","src":"1079:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1090:4:29","nodeType":"YulTypedName","src":"1090:4:29","type":""}],"src":"1004:187:29"},{"body":{"nativeSrc":"1297:76:29","nodeType":"YulBlock","src":"1297:76:29","statements":[{"nativeSrc":"1307:26:29","nodeType":"YulAssignment","src":"1307:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"1319:9:29","nodeType":"YulIdentifier","src":"1319:9:29"},{"kind":"number","nativeSrc":"1330:2:29","nodeType":"YulLiteral","src":"1330:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1315:3:29","nodeType":"YulIdentifier","src":"1315:3:29"},"nativeSrc":"1315:18:29","nodeType":"YulFunctionCall","src":"1315:18:29"},"variableNames":[{"name":"tail","nativeSrc":"1307:4:29","nodeType":"YulIdentifier","src":"1307:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1349:9:29","nodeType":"YulIdentifier","src":"1349:9:29"},{"name":"value0","nativeSrc":"1360:6:29","nodeType":"YulIdentifier","src":"1360:6:29"}],"functionName":{"name":"mstore","nativeSrc":"1342:6:29","nodeType":"YulIdentifier","src":"1342:6:29"},"nativeSrc":"1342:25:29","nodeType":"YulFunctionCall","src":"1342:25:29"},"nativeSrc":"1342:25:29","nodeType":"YulExpressionStatement","src":"1342:25:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1196:177:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1266:9:29","nodeType":"YulTypedName","src":"1266:9:29","type":""},{"name":"value0","nativeSrc":"1277:6:29","nodeType":"YulTypedName","src":"1277:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1288:4:29","nodeType":"YulTypedName","src":"1288:4:29","type":""}],"src":"1196:177:29"},{"body":{"nativeSrc":"1482:224:29","nodeType":"YulBlock","src":"1482:224:29","statements":[{"body":{"nativeSrc":"1528:16:29","nodeType":"YulBlock","src":"1528:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1537:1:29","nodeType":"YulLiteral","src":"1537:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"1540:1:29","nodeType":"YulLiteral","src":"1540:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1530:6:29","nodeType":"YulIdentifier","src":"1530:6:29"},"nativeSrc":"1530:12:29","nodeType":"YulFunctionCall","src":"1530:12:29"},"nativeSrc":"1530:12:29","nodeType":"YulExpressionStatement","src":"1530:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1503:7:29","nodeType":"YulIdentifier","src":"1503:7:29"},{"name":"headStart","nativeSrc":"1512:9:29","nodeType":"YulIdentifier","src":"1512:9:29"}],"functionName":{"name":"sub","nativeSrc":"1499:3:29","nodeType":"YulIdentifier","src":"1499:3:29"},"nativeSrc":"1499:23:29","nodeType":"YulFunctionCall","src":"1499:23:29"},{"kind":"number","nativeSrc":"1524:2:29","nodeType":"YulLiteral","src":"1524:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"1495:3:29","nodeType":"YulIdentifier","src":"1495:3:29"},"nativeSrc":"1495:32:29","nodeType":"YulFunctionCall","src":"1495:32:29"},"nativeSrc":"1492:52:29","nodeType":"YulIf","src":"1492:52:29"},{"nativeSrc":"1553:39:29","nodeType":"YulAssignment","src":"1553:39:29","value":{"arguments":[{"name":"headStart","nativeSrc":"1582:9:29","nodeType":"YulIdentifier","src":"1582:9:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1563:18:29","nodeType":"YulIdentifier","src":"1563:18:29"},"nativeSrc":"1563:29:29","nodeType":"YulFunctionCall","src":"1563:29:29"},"variableNames":[{"name":"value0","nativeSrc":"1553:6:29","nodeType":"YulIdentifier","src":"1553:6:29"}]},{"nativeSrc":"1601:48:29","nodeType":"YulAssignment","src":"1601:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1634:9:29","nodeType":"YulIdentifier","src":"1634:9:29"},{"kind":"number","nativeSrc":"1645:2:29","nodeType":"YulLiteral","src":"1645:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1630:3:29","nodeType":"YulIdentifier","src":"1630:3:29"},"nativeSrc":"1630:18:29","nodeType":"YulFunctionCall","src":"1630:18:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"1611:18:29","nodeType":"YulIdentifier","src":"1611:18:29"},"nativeSrc":"1611:38:29","nodeType":"YulFunctionCall","src":"1611:38:29"},"variableNames":[{"name":"value1","nativeSrc":"1601:6:29","nodeType":"YulIdentifier","src":"1601:6:29"}]},{"nativeSrc":"1658:42:29","nodeType":"YulAssignment","src":"1658:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1685:9:29","nodeType":"YulIdentifier","src":"1685:9:29"},{"kind":"number","nativeSrc":"1696:2:29","nodeType":"YulLiteral","src":"1696:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1681:3:29","nodeType":"YulIdentifier","src":"1681:3:29"},"nativeSrc":"1681:18:29","nodeType":"YulFunctionCall","src":"1681:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"1668:12:29","nodeType":"YulIdentifier","src":"1668:12:29"},"nativeSrc":"1668:32:29","nodeType":"YulFunctionCall","src":"1668:32:29"},"variableNames":[{"name":"value2","nativeSrc":"1658:6:29","nodeType":"YulIdentifier","src":"1658:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"1378:328:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1432:9:29","nodeType":"YulTypedName","src":"1432:9:29","type":""},{"name":"dataEnd","nativeSrc":"1443:7:29","nodeType":"YulTypedName","src":"1443:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1455:6:29","nodeType":"YulTypedName","src":"1455:6:29","type":""},{"name":"value1","nativeSrc":"1463:6:29","nodeType":"YulTypedName","src":"1463:6:29","type":""},{"name":"value2","nativeSrc":"1471:6:29","nodeType":"YulTypedName","src":"1471:6:29","type":""}],"src":"1378:328:29"},{"body":{"nativeSrc":"1808:87:29","nodeType":"YulBlock","src":"1808:87:29","statements":[{"nativeSrc":"1818:26:29","nodeType":"YulAssignment","src":"1818:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"1830:9:29","nodeType":"YulIdentifier","src":"1830:9:29"},{"kind":"number","nativeSrc":"1841:2:29","nodeType":"YulLiteral","src":"1841:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1826:3:29","nodeType":"YulIdentifier","src":"1826:3:29"},"nativeSrc":"1826:18:29","nodeType":"YulFunctionCall","src":"1826:18:29"},"variableNames":[{"name":"tail","nativeSrc":"1818:4:29","nodeType":"YulIdentifier","src":"1818:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1860:9:29","nodeType":"YulIdentifier","src":"1860:9:29"},{"arguments":[{"name":"value0","nativeSrc":"1875:6:29","nodeType":"YulIdentifier","src":"1875:6:29"},{"kind":"number","nativeSrc":"1883:4:29","nodeType":"YulLiteral","src":"1883:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"1871:3:29","nodeType":"YulIdentifier","src":"1871:3:29"},"nativeSrc":"1871:17:29","nodeType":"YulFunctionCall","src":"1871:17:29"}],"functionName":{"name":"mstore","nativeSrc":"1853:6:29","nodeType":"YulIdentifier","src":"1853:6:29"},"nativeSrc":"1853:36:29","nodeType":"YulFunctionCall","src":"1853:36:29"},"nativeSrc":"1853:36:29","nodeType":"YulExpressionStatement","src":"1853:36:29"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"1711:184:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1777:9:29","nodeType":"YulTypedName","src":"1777:9:29","type":""},{"name":"value0","nativeSrc":"1788:6:29","nodeType":"YulTypedName","src":"1788:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1799:4:29","nodeType":"YulTypedName","src":"1799:4:29","type":""}],"src":"1711:184:29"},{"body":{"nativeSrc":"1970:116:29","nodeType":"YulBlock","src":"1970:116:29","statements":[{"body":{"nativeSrc":"2016:16:29","nodeType":"YulBlock","src":"2016:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2025:1:29","nodeType":"YulLiteral","src":"2025:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"2028:1:29","nodeType":"YulLiteral","src":"2028:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2018:6:29","nodeType":"YulIdentifier","src":"2018:6:29"},"nativeSrc":"2018:12:29","nodeType":"YulFunctionCall","src":"2018:12:29"},"nativeSrc":"2018:12:29","nodeType":"YulExpressionStatement","src":"2018:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1991:7:29","nodeType":"YulIdentifier","src":"1991:7:29"},{"name":"headStart","nativeSrc":"2000:9:29","nodeType":"YulIdentifier","src":"2000:9:29"}],"functionName":{"name":"sub","nativeSrc":"1987:3:29","nodeType":"YulIdentifier","src":"1987:3:29"},"nativeSrc":"1987:23:29","nodeType":"YulFunctionCall","src":"1987:23:29"},{"kind":"number","nativeSrc":"2012:2:29","nodeType":"YulLiteral","src":"2012:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1983:3:29","nodeType":"YulIdentifier","src":"1983:3:29"},"nativeSrc":"1983:32:29","nodeType":"YulFunctionCall","src":"1983:32:29"},"nativeSrc":"1980:52:29","nodeType":"YulIf","src":"1980:52:29"},{"nativeSrc":"2041:39:29","nodeType":"YulAssignment","src":"2041:39:29","value":{"arguments":[{"name":"headStart","nativeSrc":"2070:9:29","nodeType":"YulIdentifier","src":"2070:9:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2051:18:29","nodeType":"YulIdentifier","src":"2051:18:29"},"nativeSrc":"2051:29:29","nodeType":"YulFunctionCall","src":"2051:29:29"},"variableNames":[{"name":"value0","nativeSrc":"2041:6:29","nodeType":"YulIdentifier","src":"2041:6:29"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"1900:186:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1936:9:29","nodeType":"YulTypedName","src":"1936:9:29","type":""},{"name":"dataEnd","nativeSrc":"1947:7:29","nodeType":"YulTypedName","src":"1947:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1959:6:29","nodeType":"YulTypedName","src":"1959:6:29","type":""}],"src":"1900:186:29"},{"body":{"nativeSrc":"2192:102:29","nodeType":"YulBlock","src":"2192:102:29","statements":[{"nativeSrc":"2202:26:29","nodeType":"YulAssignment","src":"2202:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"2214:9:29","nodeType":"YulIdentifier","src":"2214:9:29"},{"kind":"number","nativeSrc":"2225:2:29","nodeType":"YulLiteral","src":"2225:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2210:3:29","nodeType":"YulIdentifier","src":"2210:3:29"},"nativeSrc":"2210:18:29","nodeType":"YulFunctionCall","src":"2210:18:29"},"variableNames":[{"name":"tail","nativeSrc":"2202:4:29","nodeType":"YulIdentifier","src":"2202:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2244:9:29","nodeType":"YulIdentifier","src":"2244:9:29"},{"arguments":[{"name":"value0","nativeSrc":"2259:6:29","nodeType":"YulIdentifier","src":"2259:6:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2275:3:29","nodeType":"YulLiteral","src":"2275:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"2280:1:29","nodeType":"YulLiteral","src":"2280:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2271:3:29","nodeType":"YulIdentifier","src":"2271:3:29"},"nativeSrc":"2271:11:29","nodeType":"YulFunctionCall","src":"2271:11:29"},{"kind":"number","nativeSrc":"2284:1:29","nodeType":"YulLiteral","src":"2284:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2267:3:29","nodeType":"YulIdentifier","src":"2267:3:29"},"nativeSrc":"2267:19:29","nodeType":"YulFunctionCall","src":"2267:19:29"}],"functionName":{"name":"and","nativeSrc":"2255:3:29","nodeType":"YulIdentifier","src":"2255:3:29"},"nativeSrc":"2255:32:29","nodeType":"YulFunctionCall","src":"2255:32:29"}],"functionName":{"name":"mstore","nativeSrc":"2237:6:29","nodeType":"YulIdentifier","src":"2237:6:29"},"nativeSrc":"2237:51:29","nodeType":"YulFunctionCall","src":"2237:51:29"},"nativeSrc":"2237:51:29","nodeType":"YulExpressionStatement","src":"2237:51:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"2091:203:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2161:9:29","nodeType":"YulTypedName","src":"2161:9:29","type":""},{"name":"value0","nativeSrc":"2172:6:29","nodeType":"YulTypedName","src":"2172:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2183:4:29","nodeType":"YulTypedName","src":"2183:4:29","type":""}],"src":"2091:203:29"},{"body":{"nativeSrc":"2386:173:29","nodeType":"YulBlock","src":"2386:173:29","statements":[{"body":{"nativeSrc":"2432:16:29","nodeType":"YulBlock","src":"2432:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2441:1:29","nodeType":"YulLiteral","src":"2441:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"2444:1:29","nodeType":"YulLiteral","src":"2444:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2434:6:29","nodeType":"YulIdentifier","src":"2434:6:29"},"nativeSrc":"2434:12:29","nodeType":"YulFunctionCall","src":"2434:12:29"},"nativeSrc":"2434:12:29","nodeType":"YulExpressionStatement","src":"2434:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2407:7:29","nodeType":"YulIdentifier","src":"2407:7:29"},{"name":"headStart","nativeSrc":"2416:9:29","nodeType":"YulIdentifier","src":"2416:9:29"}],"functionName":{"name":"sub","nativeSrc":"2403:3:29","nodeType":"YulIdentifier","src":"2403:3:29"},"nativeSrc":"2403:23:29","nodeType":"YulFunctionCall","src":"2403:23:29"},{"kind":"number","nativeSrc":"2428:2:29","nodeType":"YulLiteral","src":"2428:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2399:3:29","nodeType":"YulIdentifier","src":"2399:3:29"},"nativeSrc":"2399:32:29","nodeType":"YulFunctionCall","src":"2399:32:29"},"nativeSrc":"2396:52:29","nodeType":"YulIf","src":"2396:52:29"},{"nativeSrc":"2457:39:29","nodeType":"YulAssignment","src":"2457:39:29","value":{"arguments":[{"name":"headStart","nativeSrc":"2486:9:29","nodeType":"YulIdentifier","src":"2486:9:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2467:18:29","nodeType":"YulIdentifier","src":"2467:18:29"},"nativeSrc":"2467:29:29","nodeType":"YulFunctionCall","src":"2467:29:29"},"variableNames":[{"name":"value0","nativeSrc":"2457:6:29","nodeType":"YulIdentifier","src":"2457:6:29"}]},{"nativeSrc":"2505:48:29","nodeType":"YulAssignment","src":"2505:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2538:9:29","nodeType":"YulIdentifier","src":"2538:9:29"},{"kind":"number","nativeSrc":"2549:2:29","nodeType":"YulLiteral","src":"2549:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2534:3:29","nodeType":"YulIdentifier","src":"2534:3:29"},"nativeSrc":"2534:18:29","nodeType":"YulFunctionCall","src":"2534:18:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2515:18:29","nodeType":"YulIdentifier","src":"2515:18:29"},"nativeSrc":"2515:38:29","nodeType":"YulFunctionCall","src":"2515:38:29"},"variableNames":[{"name":"value1","nativeSrc":"2505:6:29","nodeType":"YulIdentifier","src":"2505:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"2299:260:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2344:9:29","nodeType":"YulTypedName","src":"2344:9:29","type":""},{"name":"dataEnd","nativeSrc":"2355:7:29","nodeType":"YulTypedName","src":"2355:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2367:6:29","nodeType":"YulTypedName","src":"2367:6:29","type":""},{"name":"value1","nativeSrc":"2375:6:29","nodeType":"YulTypedName","src":"2375:6:29","type":""}],"src":"2299:260:29"},{"body":{"nativeSrc":"2619:325:29","nodeType":"YulBlock","src":"2619:325:29","statements":[{"nativeSrc":"2629:22:29","nodeType":"YulAssignment","src":"2629:22:29","value":{"arguments":[{"kind":"number","nativeSrc":"2643:1:29","nodeType":"YulLiteral","src":"2643:1:29","type":"","value":"1"},{"name":"data","nativeSrc":"2646:4:29","nodeType":"YulIdentifier","src":"2646:4:29"}],"functionName":{"name":"shr","nativeSrc":"2639:3:29","nodeType":"YulIdentifier","src":"2639:3:29"},"nativeSrc":"2639:12:29","nodeType":"YulFunctionCall","src":"2639:12:29"},"variableNames":[{"name":"length","nativeSrc":"2629:6:29","nodeType":"YulIdentifier","src":"2629:6:29"}]},{"nativeSrc":"2660:38:29","nodeType":"YulVariableDeclaration","src":"2660:38:29","value":{"arguments":[{"name":"data","nativeSrc":"2690:4:29","nodeType":"YulIdentifier","src":"2690:4:29"},{"kind":"number","nativeSrc":"2696:1:29","nodeType":"YulLiteral","src":"2696:1:29","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"2686:3:29","nodeType":"YulIdentifier","src":"2686:3:29"},"nativeSrc":"2686:12:29","nodeType":"YulFunctionCall","src":"2686:12:29"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"2664:18:29","nodeType":"YulTypedName","src":"2664:18:29","type":""}]},{"body":{"nativeSrc":"2737:31:29","nodeType":"YulBlock","src":"2737:31:29","statements":[{"nativeSrc":"2739:27:29","nodeType":"YulAssignment","src":"2739:27:29","value":{"arguments":[{"name":"length","nativeSrc":"2753:6:29","nodeType":"YulIdentifier","src":"2753:6:29"},{"kind":"number","nativeSrc":"2761:4:29","nodeType":"YulLiteral","src":"2761:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"2749:3:29","nodeType":"YulIdentifier","src":"2749:3:29"},"nativeSrc":"2749:17:29","nodeType":"YulFunctionCall","src":"2749:17:29"},"variableNames":[{"name":"length","nativeSrc":"2739:6:29","nodeType":"YulIdentifier","src":"2739:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"2717:18:29","nodeType":"YulIdentifier","src":"2717:18:29"}],"functionName":{"name":"iszero","nativeSrc":"2710:6:29","nodeType":"YulIdentifier","src":"2710:6:29"},"nativeSrc":"2710:26:29","nodeType":"YulFunctionCall","src":"2710:26:29"},"nativeSrc":"2707:61:29","nodeType":"YulIf","src":"2707:61:29"},{"body":{"nativeSrc":"2827:111:29","nodeType":"YulBlock","src":"2827:111:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2848:1:29","nodeType":"YulLiteral","src":"2848:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"2855:3:29","nodeType":"YulLiteral","src":"2855:3:29","type":"","value":"224"},{"kind":"number","nativeSrc":"2860:10:29","nodeType":"YulLiteral","src":"2860:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"2851:3:29","nodeType":"YulIdentifier","src":"2851:3:29"},"nativeSrc":"2851:20:29","nodeType":"YulFunctionCall","src":"2851:20:29"}],"functionName":{"name":"mstore","nativeSrc":"2841:6:29","nodeType":"YulIdentifier","src":"2841:6:29"},"nativeSrc":"2841:31:29","nodeType":"YulFunctionCall","src":"2841:31:29"},"nativeSrc":"2841:31:29","nodeType":"YulExpressionStatement","src":"2841:31:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2892:1:29","nodeType":"YulLiteral","src":"2892:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"2895:4:29","nodeType":"YulLiteral","src":"2895:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"2885:6:29","nodeType":"YulIdentifier","src":"2885:6:29"},"nativeSrc":"2885:15:29","nodeType":"YulFunctionCall","src":"2885:15:29"},"nativeSrc":"2885:15:29","nodeType":"YulExpressionStatement","src":"2885:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2920:1:29","nodeType":"YulLiteral","src":"2920:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"2923:4:29","nodeType":"YulLiteral","src":"2923:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2913:6:29","nodeType":"YulIdentifier","src":"2913:6:29"},"nativeSrc":"2913:15:29","nodeType":"YulFunctionCall","src":"2913:15:29"},"nativeSrc":"2913:15:29","nodeType":"YulExpressionStatement","src":"2913:15:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"2783:18:29","nodeType":"YulIdentifier","src":"2783:18:29"},{"arguments":[{"name":"length","nativeSrc":"2806:6:29","nodeType":"YulIdentifier","src":"2806:6:29"},{"kind":"number","nativeSrc":"2814:2:29","nodeType":"YulLiteral","src":"2814:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"2803:2:29","nodeType":"YulIdentifier","src":"2803:2:29"},"nativeSrc":"2803:14:29","nodeType":"YulFunctionCall","src":"2803:14:29"}],"functionName":{"name":"eq","nativeSrc":"2780:2:29","nodeType":"YulIdentifier","src":"2780:2:29"},"nativeSrc":"2780:38:29","nodeType":"YulFunctionCall","src":"2780:38:29"},"nativeSrc":"2777:161:29","nodeType":"YulIf","src":"2777:161:29"}]},"name":"extract_byte_array_length","nativeSrc":"2564:380:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"2599:4:29","nodeType":"YulTypedName","src":"2599:4:29","type":""}],"returnVariables":[{"name":"length","nativeSrc":"2608:6:29","nodeType":"YulTypedName","src":"2608:6:29","type":""}],"src":"2564:380:29"},{"body":{"nativeSrc":"2981:95:29","nodeType":"YulBlock","src":"2981:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2998:1:29","nodeType":"YulLiteral","src":"2998:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"3005:3:29","nodeType":"YulLiteral","src":"3005:3:29","type":"","value":"224"},{"kind":"number","nativeSrc":"3010:10:29","nodeType":"YulLiteral","src":"3010:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"3001:3:29","nodeType":"YulIdentifier","src":"3001:3:29"},"nativeSrc":"3001:20:29","nodeType":"YulFunctionCall","src":"3001:20:29"}],"functionName":{"name":"mstore","nativeSrc":"2991:6:29","nodeType":"YulIdentifier","src":"2991:6:29"},"nativeSrc":"2991:31:29","nodeType":"YulFunctionCall","src":"2991:31:29"},"nativeSrc":"2991:31:29","nodeType":"YulExpressionStatement","src":"2991:31:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3038:1:29","nodeType":"YulLiteral","src":"3038:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"3041:4:29","nodeType":"YulLiteral","src":"3041:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"3031:6:29","nodeType":"YulIdentifier","src":"3031:6:29"},"nativeSrc":"3031:15:29","nodeType":"YulFunctionCall","src":"3031:15:29"},"nativeSrc":"3031:15:29","nodeType":"YulExpressionStatement","src":"3031:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3062:1:29","nodeType":"YulLiteral","src":"3062:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"3065:4:29","nodeType":"YulLiteral","src":"3065:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3055:6:29","nodeType":"YulIdentifier","src":"3055:6:29"},"nativeSrc":"3055:15:29","nodeType":"YulFunctionCall","src":"3055:15:29"},"nativeSrc":"3055:15:29","nodeType":"YulExpressionStatement","src":"3055:15:29"}]},"name":"panic_error_0x11","nativeSrc":"2949:127:29","nodeType":"YulFunctionDefinition","src":"2949:127:29"},{"body":{"nativeSrc":"3145:352:29","nodeType":"YulBlock","src":"3145:352:29","statements":[{"nativeSrc":"3155:16:29","nodeType":"YulVariableDeclaration","src":"3155:16:29","value":{"kind":"number","nativeSrc":"3170:1:29","nodeType":"YulLiteral","src":"3170:1:29","type":"","value":"1"},"variables":[{"name":"power_1","nativeSrc":"3159:7:29","nodeType":"YulTypedName","src":"3159:7:29","type":""}]},{"nativeSrc":"3180:10:29","nodeType":"YulAssignment","src":"3180:10:29","value":{"kind":"number","nativeSrc":"3189:1:29","nodeType":"YulLiteral","src":"3189:1:29","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"3180:5:29","nodeType":"YulIdentifier","src":"3180:5:29"}]},{"nativeSrc":"3199:13:29","nodeType":"YulAssignment","src":"3199:13:29","value":{"name":"_base","nativeSrc":"3207:5:29","nodeType":"YulIdentifier","src":"3207:5:29"},"variableNames":[{"name":"base","nativeSrc":"3199:4:29","nodeType":"YulIdentifier","src":"3199:4:29"}]},{"body":{"nativeSrc":"3263:228:29","nodeType":"YulBlock","src":"3263:228:29","statements":[{"body":{"nativeSrc":"3308:22:29","nodeType":"YulBlock","src":"3308:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"3310:16:29","nodeType":"YulIdentifier","src":"3310:16:29"},"nativeSrc":"3310:18:29","nodeType":"YulFunctionCall","src":"3310:18:29"},"nativeSrc":"3310:18:29","nodeType":"YulExpressionStatement","src":"3310:18:29"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"3283:4:29","nodeType":"YulIdentifier","src":"3283:4:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3297:1:29","nodeType":"YulLiteral","src":"3297:1:29","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"3293:3:29","nodeType":"YulIdentifier","src":"3293:3:29"},"nativeSrc":"3293:6:29","nodeType":"YulFunctionCall","src":"3293:6:29"},{"name":"base","nativeSrc":"3301:4:29","nodeType":"YulIdentifier","src":"3301:4:29"}],"functionName":{"name":"div","nativeSrc":"3289:3:29","nodeType":"YulIdentifier","src":"3289:3:29"},"nativeSrc":"3289:17:29","nodeType":"YulFunctionCall","src":"3289:17:29"}],"functionName":{"name":"gt","nativeSrc":"3280:2:29","nodeType":"YulIdentifier","src":"3280:2:29"},"nativeSrc":"3280:27:29","nodeType":"YulFunctionCall","src":"3280:27:29"},"nativeSrc":"3277:53:29","nodeType":"YulIf","src":"3277:53:29"},{"body":{"nativeSrc":"3369:29:29","nodeType":"YulBlock","src":"3369:29:29","statements":[{"nativeSrc":"3371:25:29","nodeType":"YulAssignment","src":"3371:25:29","value":{"arguments":[{"name":"power","nativeSrc":"3384:5:29","nodeType":"YulIdentifier","src":"3384:5:29"},{"name":"base","nativeSrc":"3391:4:29","nodeType":"YulIdentifier","src":"3391:4:29"}],"functionName":{"name":"mul","nativeSrc":"3380:3:29","nodeType":"YulIdentifier","src":"3380:3:29"},"nativeSrc":"3380:16:29","nodeType":"YulFunctionCall","src":"3380:16:29"},"variableNames":[{"name":"power","nativeSrc":"3371:5:29","nodeType":"YulIdentifier","src":"3371:5:29"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"3350:8:29","nodeType":"YulIdentifier","src":"3350:8:29"},{"name":"power_1","nativeSrc":"3360:7:29","nodeType":"YulIdentifier","src":"3360:7:29"}],"functionName":{"name":"and","nativeSrc":"3346:3:29","nodeType":"YulIdentifier","src":"3346:3:29"},"nativeSrc":"3346:22:29","nodeType":"YulFunctionCall","src":"3346:22:29"},"nativeSrc":"3343:55:29","nodeType":"YulIf","src":"3343:55:29"},{"nativeSrc":"3411:23:29","nodeType":"YulAssignment","src":"3411:23:29","value":{"arguments":[{"name":"base","nativeSrc":"3423:4:29","nodeType":"YulIdentifier","src":"3423:4:29"},{"name":"base","nativeSrc":"3429:4:29","nodeType":"YulIdentifier","src":"3429:4:29"}],"functionName":{"name":"mul","nativeSrc":"3419:3:29","nodeType":"YulIdentifier","src":"3419:3:29"},"nativeSrc":"3419:15:29","nodeType":"YulFunctionCall","src":"3419:15:29"},"variableNames":[{"name":"base","nativeSrc":"3411:4:29","nodeType":"YulIdentifier","src":"3411:4:29"}]},{"nativeSrc":"3447:34:29","nodeType":"YulAssignment","src":"3447:34:29","value":{"arguments":[{"name":"power_1","nativeSrc":"3463:7:29","nodeType":"YulIdentifier","src":"3463:7:29"},{"name":"exponent","nativeSrc":"3472:8:29","nodeType":"YulIdentifier","src":"3472:8:29"}],"functionName":{"name":"shr","nativeSrc":"3459:3:29","nodeType":"YulIdentifier","src":"3459:3:29"},"nativeSrc":"3459:22:29","nodeType":"YulFunctionCall","src":"3459:22:29"},"variableNames":[{"name":"exponent","nativeSrc":"3447:8:29","nodeType":"YulIdentifier","src":"3447:8:29"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"3232:8:29","nodeType":"YulIdentifier","src":"3232:8:29"},{"name":"power_1","nativeSrc":"3242:7:29","nodeType":"YulIdentifier","src":"3242:7:29"}],"functionName":{"name":"gt","nativeSrc":"3229:2:29","nodeType":"YulIdentifier","src":"3229:2:29"},"nativeSrc":"3229:21:29","nodeType":"YulFunctionCall","src":"3229:21:29"},"nativeSrc":"3221:270:29","nodeType":"YulForLoop","post":{"nativeSrc":"3251:3:29","nodeType":"YulBlock","src":"3251:3:29","statements":[]},"pre":{"nativeSrc":"3225:3:29","nodeType":"YulBlock","src":"3225:3:29","statements":[]},"src":"3221:270:29"}]},"name":"checked_exp_helper","nativeSrc":"3081:416:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nativeSrc":"3109:5:29","nodeType":"YulTypedName","src":"3109:5:29","type":""},{"name":"exponent","nativeSrc":"3116:8:29","nodeType":"YulTypedName","src":"3116:8:29","type":""}],"returnVariables":[{"name":"power","nativeSrc":"3129:5:29","nodeType":"YulTypedName","src":"3129:5:29","type":""},{"name":"base","nativeSrc":"3136:4:29","nodeType":"YulTypedName","src":"3136:4:29","type":""}],"src":"3081:416:29"},{"body":{"nativeSrc":"3561:747:29","nodeType":"YulBlock","src":"3561:747:29","statements":[{"body":{"nativeSrc":"3599:52:29","nodeType":"YulBlock","src":"3599:52:29","statements":[{"nativeSrc":"3613:10:29","nodeType":"YulAssignment","src":"3613:10:29","value":{"kind":"number","nativeSrc":"3622:1:29","nodeType":"YulLiteral","src":"3622:1:29","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"3613:5:29","nodeType":"YulIdentifier","src":"3613:5:29"}]},{"nativeSrc":"3636:5:29","nodeType":"YulLeave","src":"3636:5:29"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"3581:8:29","nodeType":"YulIdentifier","src":"3581:8:29"}],"functionName":{"name":"iszero","nativeSrc":"3574:6:29","nodeType":"YulIdentifier","src":"3574:6:29"},"nativeSrc":"3574:16:29","nodeType":"YulFunctionCall","src":"3574:16:29"},"nativeSrc":"3571:80:29","nodeType":"YulIf","src":"3571:80:29"},{"body":{"nativeSrc":"3684:52:29","nodeType":"YulBlock","src":"3684:52:29","statements":[{"nativeSrc":"3698:10:29","nodeType":"YulAssignment","src":"3698:10:29","value":{"kind":"number","nativeSrc":"3707:1:29","nodeType":"YulLiteral","src":"3707:1:29","type":"","value":"0"},"variableNames":[{"name":"power","nativeSrc":"3698:5:29","nodeType":"YulIdentifier","src":"3698:5:29"}]},{"nativeSrc":"3721:5:29","nodeType":"YulLeave","src":"3721:5:29"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"3670:4:29","nodeType":"YulIdentifier","src":"3670:4:29"}],"functionName":{"name":"iszero","nativeSrc":"3663:6:29","nodeType":"YulIdentifier","src":"3663:6:29"},"nativeSrc":"3663:12:29","nodeType":"YulFunctionCall","src":"3663:12:29"},"nativeSrc":"3660:76:29","nodeType":"YulIf","src":"3660:76:29"},{"cases":[{"body":{"nativeSrc":"3772:52:29","nodeType":"YulBlock","src":"3772:52:29","statements":[{"nativeSrc":"3786:10:29","nodeType":"YulAssignment","src":"3786:10:29","value":{"kind":"number","nativeSrc":"3795:1:29","nodeType":"YulLiteral","src":"3795:1:29","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"3786:5:29","nodeType":"YulIdentifier","src":"3786:5:29"}]},{"nativeSrc":"3809:5:29","nodeType":"YulLeave","src":"3809:5:29"}]},"nativeSrc":"3765:59:29","nodeType":"YulCase","src":"3765:59:29","value":{"kind":"number","nativeSrc":"3770:1:29","nodeType":"YulLiteral","src":"3770:1:29","type":"","value":"1"}},{"body":{"nativeSrc":"3840:123:29","nodeType":"YulBlock","src":"3840:123:29","statements":[{"body":{"nativeSrc":"3875:22:29","nodeType":"YulBlock","src":"3875:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"3877:16:29","nodeType":"YulIdentifier","src":"3877:16:29"},"nativeSrc":"3877:18:29","nodeType":"YulFunctionCall","src":"3877:18:29"},"nativeSrc":"3877:18:29","nodeType":"YulExpressionStatement","src":"3877:18:29"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"3860:8:29","nodeType":"YulIdentifier","src":"3860:8:29"},{"kind":"number","nativeSrc":"3870:3:29","nodeType":"YulLiteral","src":"3870:3:29","type":"","value":"255"}],"functionName":{"name":"gt","nativeSrc":"3857:2:29","nodeType":"YulIdentifier","src":"3857:2:29"},"nativeSrc":"3857:17:29","nodeType":"YulFunctionCall","src":"3857:17:29"},"nativeSrc":"3854:43:29","nodeType":"YulIf","src":"3854:43:29"},{"nativeSrc":"3910:25:29","nodeType":"YulAssignment","src":"3910:25:29","value":{"arguments":[{"name":"exponent","nativeSrc":"3923:8:29","nodeType":"YulIdentifier","src":"3923:8:29"},{"kind":"number","nativeSrc":"3933:1:29","nodeType":"YulLiteral","src":"3933:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3919:3:29","nodeType":"YulIdentifier","src":"3919:3:29"},"nativeSrc":"3919:16:29","nodeType":"YulFunctionCall","src":"3919:16:29"},"variableNames":[{"name":"power","nativeSrc":"3910:5:29","nodeType":"YulIdentifier","src":"3910:5:29"}]},{"nativeSrc":"3948:5:29","nodeType":"YulLeave","src":"3948:5:29"}]},"nativeSrc":"3833:130:29","nodeType":"YulCase","src":"3833:130:29","value":{"kind":"number","nativeSrc":"3838:1:29","nodeType":"YulLiteral","src":"3838:1:29","type":"","value":"2"}}],"expression":{"name":"base","nativeSrc":"3752:4:29","nodeType":"YulIdentifier","src":"3752:4:29"},"nativeSrc":"3745:218:29","nodeType":"YulSwitch","src":"3745:218:29"},{"body":{"nativeSrc":"4061:70:29","nodeType":"YulBlock","src":"4061:70:29","statements":[{"nativeSrc":"4075:28:29","nodeType":"YulAssignment","src":"4075:28:29","value":{"arguments":[{"name":"base","nativeSrc":"4088:4:29","nodeType":"YulIdentifier","src":"4088:4:29"},{"name":"exponent","nativeSrc":"4094:8:29","nodeType":"YulIdentifier","src":"4094:8:29"}],"functionName":{"name":"exp","nativeSrc":"4084:3:29","nodeType":"YulIdentifier","src":"4084:3:29"},"nativeSrc":"4084:19:29","nodeType":"YulFunctionCall","src":"4084:19:29"},"variableNames":[{"name":"power","nativeSrc":"4075:5:29","nodeType":"YulIdentifier","src":"4075:5:29"}]},{"nativeSrc":"4116:5:29","nodeType":"YulLeave","src":"4116:5:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nativeSrc":"3985:4:29","nodeType":"YulIdentifier","src":"3985:4:29"},{"kind":"number","nativeSrc":"3991:2:29","nodeType":"YulLiteral","src":"3991:2:29","type":"","value":"11"}],"functionName":{"name":"lt","nativeSrc":"3982:2:29","nodeType":"YulIdentifier","src":"3982:2:29"},"nativeSrc":"3982:12:29","nodeType":"YulFunctionCall","src":"3982:12:29"},{"arguments":[{"name":"exponent","nativeSrc":"3999:8:29","nodeType":"YulIdentifier","src":"3999:8:29"},{"kind":"number","nativeSrc":"4009:2:29","nodeType":"YulLiteral","src":"4009:2:29","type":"","value":"78"}],"functionName":{"name":"lt","nativeSrc":"3996:2:29","nodeType":"YulIdentifier","src":"3996:2:29"},"nativeSrc":"3996:16:29","nodeType":"YulFunctionCall","src":"3996:16:29"}],"functionName":{"name":"and","nativeSrc":"3978:3:29","nodeType":"YulIdentifier","src":"3978:3:29"},"nativeSrc":"3978:35:29","nodeType":"YulFunctionCall","src":"3978:35:29"},{"arguments":[{"arguments":[{"name":"base","nativeSrc":"4022:4:29","nodeType":"YulIdentifier","src":"4022:4:29"},{"kind":"number","nativeSrc":"4028:3:29","nodeType":"YulLiteral","src":"4028:3:29","type":"","value":"307"}],"functionName":{"name":"lt","nativeSrc":"4019:2:29","nodeType":"YulIdentifier","src":"4019:2:29"},"nativeSrc":"4019:13:29","nodeType":"YulFunctionCall","src":"4019:13:29"},{"arguments":[{"name":"exponent","nativeSrc":"4037:8:29","nodeType":"YulIdentifier","src":"4037:8:29"},{"kind":"number","nativeSrc":"4047:2:29","nodeType":"YulLiteral","src":"4047:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"4034:2:29","nodeType":"YulIdentifier","src":"4034:2:29"},"nativeSrc":"4034:16:29","nodeType":"YulFunctionCall","src":"4034:16:29"}],"functionName":{"name":"and","nativeSrc":"4015:3:29","nodeType":"YulIdentifier","src":"4015:3:29"},"nativeSrc":"4015:36:29","nodeType":"YulFunctionCall","src":"4015:36:29"}],"functionName":{"name":"or","nativeSrc":"3975:2:29","nodeType":"YulIdentifier","src":"3975:2:29"},"nativeSrc":"3975:77:29","nodeType":"YulFunctionCall","src":"3975:77:29"},"nativeSrc":"3972:159:29","nodeType":"YulIf","src":"3972:159:29"},{"nativeSrc":"4140:57:29","nodeType":"YulVariableDeclaration","src":"4140:57:29","value":{"arguments":[{"name":"base","nativeSrc":"4182:4:29","nodeType":"YulIdentifier","src":"4182:4:29"},{"name":"exponent","nativeSrc":"4188:8:29","nodeType":"YulIdentifier","src":"4188:8:29"}],"functionName":{"name":"checked_exp_helper","nativeSrc":"4163:18:29","nodeType":"YulIdentifier","src":"4163:18:29"},"nativeSrc":"4163:34:29","nodeType":"YulFunctionCall","src":"4163:34:29"},"variables":[{"name":"power_1","nativeSrc":"4144:7:29","nodeType":"YulTypedName","src":"4144:7:29","type":""},{"name":"base_1","nativeSrc":"4153:6:29","nodeType":"YulTypedName","src":"4153:6:29","type":""}]},{"body":{"nativeSrc":"4242:22:29","nodeType":"YulBlock","src":"4242:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"4244:16:29","nodeType":"YulIdentifier","src":"4244:16:29"},"nativeSrc":"4244:18:29","nodeType":"YulFunctionCall","src":"4244:18:29"},"nativeSrc":"4244:18:29","nodeType":"YulExpressionStatement","src":"4244:18:29"}]},"condition":{"arguments":[{"name":"power_1","nativeSrc":"4212:7:29","nodeType":"YulIdentifier","src":"4212:7:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4229:1:29","nodeType":"YulLiteral","src":"4229:1:29","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4225:3:29","nodeType":"YulIdentifier","src":"4225:3:29"},"nativeSrc":"4225:6:29","nodeType":"YulFunctionCall","src":"4225:6:29"},{"name":"base_1","nativeSrc":"4233:6:29","nodeType":"YulIdentifier","src":"4233:6:29"}],"functionName":{"name":"div","nativeSrc":"4221:3:29","nodeType":"YulIdentifier","src":"4221:3:29"},"nativeSrc":"4221:19:29","nodeType":"YulFunctionCall","src":"4221:19:29"}],"functionName":{"name":"gt","nativeSrc":"4209:2:29","nodeType":"YulIdentifier","src":"4209:2:29"},"nativeSrc":"4209:32:29","nodeType":"YulFunctionCall","src":"4209:32:29"},"nativeSrc":"4206:58:29","nodeType":"YulIf","src":"4206:58:29"},{"nativeSrc":"4273:29:29","nodeType":"YulAssignment","src":"4273:29:29","value":{"arguments":[{"name":"power_1","nativeSrc":"4286:7:29","nodeType":"YulIdentifier","src":"4286:7:29"},{"name":"base_1","nativeSrc":"4295:6:29","nodeType":"YulIdentifier","src":"4295:6:29"}],"functionName":{"name":"mul","nativeSrc":"4282:3:29","nodeType":"YulIdentifier","src":"4282:3:29"},"nativeSrc":"4282:20:29","nodeType":"YulFunctionCall","src":"4282:20:29"},"variableNames":[{"name":"power","nativeSrc":"4273:5:29","nodeType":"YulIdentifier","src":"4273:5:29"}]}]},"name":"checked_exp_unsigned","nativeSrc":"3502:806:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"3532:4:29","nodeType":"YulTypedName","src":"3532:4:29","type":""},{"name":"exponent","nativeSrc":"3538:8:29","nodeType":"YulTypedName","src":"3538:8:29","type":""}],"returnVariables":[{"name":"power","nativeSrc":"3551:5:29","nodeType":"YulTypedName","src":"3551:5:29","type":""}],"src":"3502:806:29"},{"body":{"nativeSrc":"4381:72:29","nodeType":"YulBlock","src":"4381:72:29","statements":[{"nativeSrc":"4391:56:29","nodeType":"YulAssignment","src":"4391:56:29","value":{"arguments":[{"name":"base","nativeSrc":"4421:4:29","nodeType":"YulIdentifier","src":"4421:4:29"},{"arguments":[{"name":"exponent","nativeSrc":"4431:8:29","nodeType":"YulIdentifier","src":"4431:8:29"},{"kind":"number","nativeSrc":"4441:4:29","nodeType":"YulLiteral","src":"4441:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"4427:3:29","nodeType":"YulIdentifier","src":"4427:3:29"},"nativeSrc":"4427:19:29","nodeType":"YulFunctionCall","src":"4427:19:29"}],"functionName":{"name":"checked_exp_unsigned","nativeSrc":"4400:20:29","nodeType":"YulIdentifier","src":"4400:20:29"},"nativeSrc":"4400:47:29","nodeType":"YulFunctionCall","src":"4400:47:29"},"variableNames":[{"name":"power","nativeSrc":"4391:5:29","nodeType":"YulIdentifier","src":"4391:5:29"}]}]},"name":"checked_exp_t_uint256_t_uint8","nativeSrc":"4313:140:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"4352:4:29","nodeType":"YulTypedName","src":"4352:4:29","type":""},{"name":"exponent","nativeSrc":"4358:8:29","nodeType":"YulTypedName","src":"4358:8:29","type":""}],"returnVariables":[{"name":"power","nativeSrc":"4371:5:29","nodeType":"YulTypedName","src":"4371:5:29","type":""}],"src":"4313:140:29"},{"body":{"nativeSrc":"4510:116:29","nodeType":"YulBlock","src":"4510:116:29","statements":[{"nativeSrc":"4520:20:29","nodeType":"YulAssignment","src":"4520:20:29","value":{"arguments":[{"name":"x","nativeSrc":"4535:1:29","nodeType":"YulIdentifier","src":"4535:1:29"},{"name":"y","nativeSrc":"4538:1:29","nodeType":"YulIdentifier","src":"4538:1:29"}],"functionName":{"name":"mul","nativeSrc":"4531:3:29","nodeType":"YulIdentifier","src":"4531:3:29"},"nativeSrc":"4531:9:29","nodeType":"YulFunctionCall","src":"4531:9:29"},"variableNames":[{"name":"product","nativeSrc":"4520:7:29","nodeType":"YulIdentifier","src":"4520:7:29"}]},{"body":{"nativeSrc":"4598:22:29","nodeType":"YulBlock","src":"4598:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"4600:16:29","nodeType":"YulIdentifier","src":"4600:16:29"},"nativeSrc":"4600:18:29","nodeType":"YulFunctionCall","src":"4600:18:29"},"nativeSrc":"4600:18:29","nodeType":"YulExpressionStatement","src":"4600:18:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"4569:1:29","nodeType":"YulIdentifier","src":"4569:1:29"}],"functionName":{"name":"iszero","nativeSrc":"4562:6:29","nodeType":"YulIdentifier","src":"4562:6:29"},"nativeSrc":"4562:9:29","nodeType":"YulFunctionCall","src":"4562:9:29"},{"arguments":[{"name":"y","nativeSrc":"4576:1:29","nodeType":"YulIdentifier","src":"4576:1:29"},{"arguments":[{"name":"product","nativeSrc":"4583:7:29","nodeType":"YulIdentifier","src":"4583:7:29"},{"name":"x","nativeSrc":"4592:1:29","nodeType":"YulIdentifier","src":"4592:1:29"}],"functionName":{"name":"div","nativeSrc":"4579:3:29","nodeType":"YulIdentifier","src":"4579:3:29"},"nativeSrc":"4579:15:29","nodeType":"YulFunctionCall","src":"4579:15:29"}],"functionName":{"name":"eq","nativeSrc":"4573:2:29","nodeType":"YulIdentifier","src":"4573:2:29"},"nativeSrc":"4573:22:29","nodeType":"YulFunctionCall","src":"4573:22:29"}],"functionName":{"name":"or","nativeSrc":"4559:2:29","nodeType":"YulIdentifier","src":"4559:2:29"},"nativeSrc":"4559:37:29","nodeType":"YulFunctionCall","src":"4559:37:29"}],"functionName":{"name":"iszero","nativeSrc":"4552:6:29","nodeType":"YulIdentifier","src":"4552:6:29"},"nativeSrc":"4552:45:29","nodeType":"YulFunctionCall","src":"4552:45:29"},"nativeSrc":"4549:71:29","nodeType":"YulIf","src":"4549:71:29"}]},"name":"checked_mul_t_uint256","nativeSrc":"4458:168:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"4489:1:29","nodeType":"YulTypedName","src":"4489:1:29","type":""},{"name":"y","nativeSrc":"4492:1:29","nodeType":"YulTypedName","src":"4492:1:29","type":""}],"returnVariables":[{"name":"product","nativeSrc":"4498:7:29","nodeType":"YulTypedName","src":"4498:7:29","type":""}],"src":"4458:168:29"},{"body":{"nativeSrc":"4788:188:29","nodeType":"YulBlock","src":"4788:188:29","statements":[{"nativeSrc":"4798:26:29","nodeType":"YulAssignment","src":"4798:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"4810:9:29","nodeType":"YulIdentifier","src":"4810:9:29"},{"kind":"number","nativeSrc":"4821:2:29","nodeType":"YulLiteral","src":"4821:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4806:3:29","nodeType":"YulIdentifier","src":"4806:3:29"},"nativeSrc":"4806:18:29","nodeType":"YulFunctionCall","src":"4806:18:29"},"variableNames":[{"name":"tail","nativeSrc":"4798:4:29","nodeType":"YulIdentifier","src":"4798:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4840:9:29","nodeType":"YulIdentifier","src":"4840:9:29"},{"arguments":[{"name":"value0","nativeSrc":"4855:6:29","nodeType":"YulIdentifier","src":"4855:6:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4871:3:29","nodeType":"YulLiteral","src":"4871:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"4876:1:29","nodeType":"YulLiteral","src":"4876:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4867:3:29","nodeType":"YulIdentifier","src":"4867:3:29"},"nativeSrc":"4867:11:29","nodeType":"YulFunctionCall","src":"4867:11:29"},{"kind":"number","nativeSrc":"4880:1:29","nodeType":"YulLiteral","src":"4880:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4863:3:29","nodeType":"YulIdentifier","src":"4863:3:29"},"nativeSrc":"4863:19:29","nodeType":"YulFunctionCall","src":"4863:19:29"}],"functionName":{"name":"and","nativeSrc":"4851:3:29","nodeType":"YulIdentifier","src":"4851:3:29"},"nativeSrc":"4851:32:29","nodeType":"YulFunctionCall","src":"4851:32:29"}],"functionName":{"name":"mstore","nativeSrc":"4833:6:29","nodeType":"YulIdentifier","src":"4833:6:29"},"nativeSrc":"4833:51:29","nodeType":"YulFunctionCall","src":"4833:51:29"},"nativeSrc":"4833:51:29","nodeType":"YulExpressionStatement","src":"4833:51:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4904:9:29","nodeType":"YulIdentifier","src":"4904:9:29"},{"kind":"number","nativeSrc":"4915:2:29","nodeType":"YulLiteral","src":"4915:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4900:3:29","nodeType":"YulIdentifier","src":"4900:3:29"},"nativeSrc":"4900:18:29","nodeType":"YulFunctionCall","src":"4900:18:29"},{"name":"value1","nativeSrc":"4920:6:29","nodeType":"YulIdentifier","src":"4920:6:29"}],"functionName":{"name":"mstore","nativeSrc":"4893:6:29","nodeType":"YulIdentifier","src":"4893:6:29"},"nativeSrc":"4893:34:29","nodeType":"YulFunctionCall","src":"4893:34:29"},"nativeSrc":"4893:34:29","nodeType":"YulExpressionStatement","src":"4893:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4947:9:29","nodeType":"YulIdentifier","src":"4947:9:29"},{"kind":"number","nativeSrc":"4958:2:29","nodeType":"YulLiteral","src":"4958:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4943:3:29","nodeType":"YulIdentifier","src":"4943:3:29"},"nativeSrc":"4943:18:29","nodeType":"YulFunctionCall","src":"4943:18:29"},{"name":"value2","nativeSrc":"4963:6:29","nodeType":"YulIdentifier","src":"4963:6:29"}],"functionName":{"name":"mstore","nativeSrc":"4936:6:29","nodeType":"YulIdentifier","src":"4936:6:29"},"nativeSrc":"4936:34:29","nodeType":"YulFunctionCall","src":"4936:34:29"},"nativeSrc":"4936:34:29","nodeType":"YulExpressionStatement","src":"4936:34:29"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"4631:345:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4741:9:29","nodeType":"YulTypedName","src":"4741:9:29","type":""},{"name":"value2","nativeSrc":"4752:6:29","nodeType":"YulTypedName","src":"4752:6:29","type":""},{"name":"value1","nativeSrc":"4760:6:29","nodeType":"YulTypedName","src":"4760:6:29","type":""},{"name":"value0","nativeSrc":"4768:6:29","nodeType":"YulTypedName","src":"4768:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4779:4:29","nodeType":"YulTypedName","src":"4779:4:29","type":""}],"src":"4631:345:29"},{"body":{"nativeSrc":"5029:77:29","nodeType":"YulBlock","src":"5029:77:29","statements":[{"nativeSrc":"5039:16:29","nodeType":"YulAssignment","src":"5039:16:29","value":{"arguments":[{"name":"x","nativeSrc":"5050:1:29","nodeType":"YulIdentifier","src":"5050:1:29"},{"name":"y","nativeSrc":"5053:1:29","nodeType":"YulIdentifier","src":"5053:1:29"}],"functionName":{"name":"add","nativeSrc":"5046:3:29","nodeType":"YulIdentifier","src":"5046:3:29"},"nativeSrc":"5046:9:29","nodeType":"YulFunctionCall","src":"5046:9:29"},"variableNames":[{"name":"sum","nativeSrc":"5039:3:29","nodeType":"YulIdentifier","src":"5039:3:29"}]},{"body":{"nativeSrc":"5078:22:29","nodeType":"YulBlock","src":"5078:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"5080:16:29","nodeType":"YulIdentifier","src":"5080:16:29"},"nativeSrc":"5080:18:29","nodeType":"YulFunctionCall","src":"5080:18:29"},"nativeSrc":"5080:18:29","nodeType":"YulExpressionStatement","src":"5080:18:29"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"5070:1:29","nodeType":"YulIdentifier","src":"5070:1:29"},{"name":"sum","nativeSrc":"5073:3:29","nodeType":"YulIdentifier","src":"5073:3:29"}],"functionName":{"name":"gt","nativeSrc":"5067:2:29","nodeType":"YulIdentifier","src":"5067:2:29"},"nativeSrc":"5067:10:29","nodeType":"YulFunctionCall","src":"5067:10:29"},"nativeSrc":"5064:36:29","nodeType":"YulIf","src":"5064:36:29"}]},"name":"checked_add_t_uint256","nativeSrc":"4981:125:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"5012:1:29","nodeType":"YulTypedName","src":"5012:1:29","type":""},{"name":"y","nativeSrc":"5015:1:29","nodeType":"YulTypedName","src":"5015:1:29","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"5021:3:29","nodeType":"YulTypedName","src":"5021:3:29","type":""}],"src":"4981:125:29"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146101cd578063a9059cbb146101d5578063dd62ed3e146101e8578063f2fde38b1461022157600080fd5b806370a0823114610181578063715018a6146101aa5780638da5cb5b146101b257600080fd5b806318160ddd116100c857806318160ddd1461013a57806323b872dd1461014c578063313ce5671461015f57806340c10f191461016e57600080fd5b806306fdde03146100ef578063095ea7b31461010d578063121874a114610130575b600080fd5b6100f7610234565b6040516101049190610751565b60405180910390f35b61012061011b3660046107bc565b6102c6565b6040519015158152602001610104565b6101386102e0565b005b6002545b604051908152602001610104565b61012061015a3660046107e6565b610302565b60405160128152602001610104565b61013861017c3660046107bc565b610326565b61013e61018f366004610822565b6001600160a01b031660009081526020819052604090205490565b61013861033c565b6005546040516001600160a01b039091168152602001610104565b6100f761034e565b6101206101e33660046107bc565b61035d565b61013e6101f6366004610844565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61013861022f366004610822565b61036b565b60606003805461024390610877565b80601f016020809104026020016040519081016040528092919081815260200182805461026f90610877565b80156102bc5780601f10610291576101008083540402835291602001916102bc565b820191906000526020600020905b81548152906001019060200180831161029f57829003601f168201915b5050505050905090565b6000336102d48185856103ae565b60019150505b92915050565b610300336102f06012600a6109ab565b6102fb9060646109ba565b6103c0565b565b6000336103108582856103f6565b61031b858585610474565b506001949350505050565b61032e6104d3565b61033882826103c0565b5050565b6103446104d3565b6103006000610500565b60606004805461024390610877565b6000336102d4818585610474565b6103736104d3565b6001600160a01b0381166103a257604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6103ab81610500565b50565b6103bb8383836001610552565b505050565b6001600160a01b0382166103ea5760405163ec442f0560e01b815260006004820152602401610399565b61033860008383610627565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461046e578181101561045f57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610399565b61046e84848484036000610552565b50505050565b6001600160a01b03831661049e57604051634b637e8f60e11b815260006004820152602401610399565b6001600160a01b0382166104c85760405163ec442f0560e01b815260006004820152602401610399565b6103bb838383610627565b6005546001600160a01b031633146103005760405163118cdaa760e01b8152336004820152602401610399565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03841661057c5760405163e602df0560e01b815260006004820152602401610399565b6001600160a01b0383166105a657604051634a1406b160e11b815260006004820152602401610399565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561046e57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161061991815260200190565b60405180910390a350505050565b6001600160a01b03831661065257806002600082825461064791906109d1565b909155506106c49050565b6001600160a01b038316600090815260208190526040902054818110156106a55760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610399565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166106e0576002805482900390556106ff565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161074491815260200190565b60405180910390a3505050565b60006020808352835180602085015260005b8181101561077f57858101830151858201604001528201610763565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107b757600080fd5b919050565b600080604083850312156107cf57600080fd5b6107d8836107a0565b946020939093013593505050565b6000806000606084860312156107fb57600080fd5b610804846107a0565b9250610812602085016107a0565b9150604084013590509250925092565b60006020828403121561083457600080fd5b61083d826107a0565b9392505050565b6000806040838503121561085757600080fd5b610860836107a0565b915061086e602084016107a0565b90509250929050565b600181811c9082168061088b57607f821691505b6020821081036108ab57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156109025781600019048211156108e8576108e86108b1565b808516156108f557918102915b93841c93908002906108cc565b509250929050565b600082610919575060016102da565b81610926575060006102da565b816001811461093c576002811461094657610962565b60019150506102da565b60ff841115610957576109576108b1565b50506001821b6102da565b5060208310610133831016604e8410600b8410161715610985575081810a6102da565b61098f83836108c7565b80600019048211156109a3576109a36108b1565b029392505050565b600061083d60ff84168361090a565b80820281158282048414176102da576102da6108b1565b808201808211156102da576102da6108b156fea264697066735822122076e166e2b7457440e9b4b7bd2900d7a3472fb2fbb80e2f2b2e4480780ffabec364736f6c63430008170033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x181 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x121874A1 EQ PUSH2 0x130 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF7 PUSH2 0x234 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x120 PUSH2 0x11B CALLDATASIZE PUSH1 0x4 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x2C6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0x138 PUSH2 0x2E0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0x120 PUSH2 0x15A CALLDATASIZE PUSH1 0x4 PUSH2 0x7E6 JUMP JUMPDEST PUSH2 0x302 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0x138 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x326 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x18F CALLDATASIZE PUSH1 0x4 PUSH2 0x822 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x138 PUSH2 0x33C JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x104 JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x34E JUMP JUMPDEST PUSH2 0x120 PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x7BC JUMP JUMPDEST PUSH2 0x35D JUMP JUMPDEST PUSH2 0x13E PUSH2 0x1F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x844 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x138 PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0x822 JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x243 SWAP1 PUSH2 0x877 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x26F SWAP1 PUSH2 0x877 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2BC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x291 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2BC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x29F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2D4 DUP2 DUP6 DUP6 PUSH2 0x3AE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x300 CALLER PUSH2 0x2F0 PUSH1 0x12 PUSH1 0xA PUSH2 0x9AB JUMP JUMPDEST PUSH2 0x2FB SWAP1 PUSH1 0x64 PUSH2 0x9BA JUMP JUMPDEST PUSH2 0x3C0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x310 DUP6 DUP3 DUP6 PUSH2 0x3F6 JUMP JUMPDEST PUSH2 0x31B DUP6 DUP6 DUP6 PUSH2 0x474 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x32E PUSH2 0x4D3 JUMP JUMPDEST PUSH2 0x338 DUP3 DUP3 PUSH2 0x3C0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x344 PUSH2 0x4D3 JUMP JUMPDEST PUSH2 0x300 PUSH1 0x0 PUSH2 0x500 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x243 SWAP1 PUSH2 0x877 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2D4 DUP2 DUP6 DUP6 PUSH2 0x474 JUMP JUMPDEST PUSH2 0x373 PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x3A2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3AB DUP2 PUSH2 0x500 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3BB DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x552 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3EA JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x399 JUMP JUMPDEST PUSH2 0x338 PUSH1 0x0 DUP4 DUP4 PUSH2 0x627 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x46E JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x45F JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x399 JUMP JUMPDEST PUSH2 0x46E DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x552 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x49E JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x399 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4C8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x399 JUMP JUMPDEST PUSH2 0x3BB DUP4 DUP4 DUP4 PUSH2 0x627 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x300 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x399 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x57C JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x399 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5A6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x399 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x46E JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x619 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x652 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x647 SWAP2 SWAP1 PUSH2 0x9D1 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x6C4 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x6A5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x399 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6E0 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x6FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x744 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x77F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x763 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D8 DUP4 PUSH2 0x7A0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x804 DUP5 PUSH2 0x7A0 JUMP JUMPDEST SWAP3 POP PUSH2 0x812 PUSH1 0x20 DUP6 ADD PUSH2 0x7A0 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x834 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x83D DUP3 PUSH2 0x7A0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x857 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x860 DUP4 PUSH2 0x7A0 JUMP JUMPDEST SWAP2 POP PUSH2 0x86E PUSH1 0x20 DUP5 ADD PUSH2 0x7A0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x88B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x8AB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x902 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x8E8 JUMPI PUSH2 0x8E8 PUSH2 0x8B1 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x8F5 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x8CC JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x919 JUMPI POP PUSH1 0x1 PUSH2 0x2DA JUMP JUMPDEST DUP2 PUSH2 0x926 JUMPI POP PUSH1 0x0 PUSH2 0x2DA JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x93C JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x946 JUMPI PUSH2 0x962 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2DA JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x957 JUMPI PUSH2 0x957 PUSH2 0x8B1 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x2DA JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x985 JUMPI POP DUP2 DUP2 EXP PUSH2 0x2DA JUMP JUMPDEST PUSH2 0x98F DUP4 DUP4 PUSH2 0x8C7 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x9A3 JUMPI PUSH2 0x9A3 PUSH2 0x8B1 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83D PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x90A JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x2DA JUMPI PUSH2 0x2DA PUSH2 0x8B1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2DA JUMPI PUSH2 0x2DA PUSH2 0x8B1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0xE166E2B7457440E9B4B7BD2900D7A3472FB2FBB80E2F2B 0x2E PREVRANDAO DUP1 PUSH25 0xFFABEC364736F6C6343000817003300000000000000000000 ","sourceMap":"274:1103:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:29;;1162:22;1144:41;;1132:2;1117:18;3998:186:8;1004:187:29;1107:109:26;;;:::i;:::-;;2849:97:8;2927:12;;2849:97;;;1342:25:29;;;1330:2;1315:18;2849:97:8;1196:177:29;4776:244:8;;;;;;:::i;:::-;;:::i;1286:89:26:-;;;385:2;1853:36:29;;1841:2;1826:18;1286:89:26;1711:184:29;856:95:26;;;;;;:::i;:::-;;:::i;3004:116:8:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3095:18:8;3069:7;3095:18;;;;;;;;;;;;3004:116;2293:101:6;;;:::i;1638:85::-;1710:6;;1638:85;;-1:-1:-1;;;;;1710:6:6;;;2237:51:29;;2225:2;2210:18;1638:85:6;2091:203:29;1981:93:8;;;:::i;3315:178::-;;;;;;:::i;:::-;;:::i;3551:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3657:18:8;;;3631:7;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3551:140;2543:215:6;;;;;;:::i;:::-;;:::i;1779:89:8:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;735:10:16;4125:31:8;735:10:16;4141:7:8;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;;:::o;1107:109:26:-;1152:37;1158:10;1176:12;385:2;1176;:12;:::i;:::-;1170:18;;:3;:18;:::i;:::-;1152:5;:37::i;:::-;1107:109::o;4776:244:8:-;4863:4;735:10:16;4919:37:8;4935:4;735:10:16;4950:5:8;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;-1:-1:-1;5009:4:8;;4776:244;-1:-1:-1;;;;4776:244:8:o;856:95:26:-;1531:13:6;:11;:13::i;:::-;927:17:26::1;933:2;937:6;927:5;:17::i;:::-;856:95:::0;;:::o;2293:101:6:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;1981:93:8:-:0;2028:13;2060:7;2053:14;;;;;:::i;3315:178::-;3384:4;735:10:16;3438:27:8;735:10:16;3455:2:8;3459:5;3438:9;:27::i;2543:215:6:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:6;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:6;;2700:1:::1;2672:31;::::0;::::1;2237:51:29::0;2210:18;;2672:31:6::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;8726:128:8:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;7458:208::-;-1:-1:-1;;;;;7528:21:8;;7524:91;;7572:32;;-1:-1:-1;;;7572:32:8;;7601:1;7572:32;;;2237:51:29;2210:18;;7572:32:8;2091:203:29;7524:91:8;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;10415:477::-;-1:-1:-1;;;;;3657:18:8;;;10514:24;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10580:37:8;;10576:310;;10656:5;10637:16;:24;10633:130;;;10688:60;;-1:-1:-1;;;10688:60:8;;-1:-1:-1;;;;;4851:32:29;;10688:60:8;;;4833:51:29;4900:18;;;4893:34;;;4943:18;;;4936:34;;;4806:18;;10688:60:8;4631:345:29;10633:130:8;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10504:388;10415:477;;;:::o;5393:300::-;-1:-1:-1;;;;;5476:18:8;;5472:86;;5517:30;;-1:-1:-1;;;5517:30:8;;5544:1;5517:30;;;2237:51:29;2210:18;;5517:30:8;2091:203:29;5472:86:8;-1:-1:-1;;;;;5571:16:8;;5567:86;;5610:32;;-1:-1:-1;;;5610:32:8;;5639:1;5610:32;;;2237:51:29;2210:18;;5610:32:8;2091:203:29;5567:86:8;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;1796:162:6:-;1710:6;;-1:-1:-1;;;;;1710:6:6;735:10:16;1855:23:6;1851:101;;1901:40;;-1:-1:-1;;;1901:40:6;;735:10:16;1901:40:6;;;2237:51:29;2210:18;;1901:40:6;2091:203:29;2912:187:6;3004:6;;;-1:-1:-1;;;;;3020:17:6;;;-1:-1:-1;;;;;;3020:17:6;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;9701:432:8:-;-1:-1:-1;;;;;9813:19:8;;9809:89;;9855:32;;-1:-1:-1;;;9855:32:8;;9884:1;9855:32;;;2237:51:29;2210:18;;9855:32:8;2091:203:29;9809:89:8;-1:-1:-1;;;;;9911:21:8;;9907:90;;9955:31;;-1:-1:-1;;;9955:31:8;;9983:1;9955:31;;;2237:51:29;2210:18;;9955:31:8;2091:203:29;9907:90:8;-1:-1:-1;;;;;10006:18:8;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10051:76;;;;10101:7;-1:-1:-1;;;;;10085:31:8;10094:5;-1:-1:-1;;;;;10085:31:8;;10110:5;10085:31;;;;1342:25:29;;1330:2;1315:18;;1196:177;10085:31:8;;;;;;;;9701:432;;;;:::o;6008:1107::-;-1:-1:-1;;;;;6097:18:8;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:8;;-1:-1:-1;6093:540:8;;-1:-1:-1;;;;;6307:15:8;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:8;;-1:-1:-1;;;;;4851:32:29;;6386:50:8;;;4833:51:29;4900:18;;;4893:34;;;4943:18;;;4936:34;;;4806:18;;6386:50:8;4631:345:29;6336:115:8;-1:-1:-1;;;;;6571:15:8;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:8;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:8;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:8;7092:4;-1:-1:-1;;;;;7083:25:8;;7102:5;7083:25;;;;1342::29;;1330:2;1315:18;;1196:177;7083:25:8;;;;;;;;6008:1107;;;:::o;14:548:29:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:29;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:29:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:29:o;2299:260::-;2367:6;2375;2428:2;2416:9;2407:7;2403:23;2399:32;2396:52;;;2444:1;2441;2434:12;2396:52;2467:29;2486:9;2467:29;:::i;:::-;2457:39;;2515:38;2549:2;2538:9;2534:18;2515:38;:::i;:::-;2505:48;;2299:260;;;;;:::o;2564:380::-;2643:1;2639:12;;;;2686;;;2707:61;;2761:4;2753:6;2749:17;2739:27;;2707:61;2814:2;2806:6;2803:14;2783:18;2780:38;2777:161;;2860:10;2855:3;2851:20;2848:1;2841:31;2895:4;2892:1;2885:15;2923:4;2920:1;2913:15;2777:161;;2564:380;;;:::o;2949:127::-;3010:10;3005:3;3001:20;2998:1;2991:31;3041:4;3038:1;3031:15;3065:4;3062:1;3055:15;3081:416;3170:1;3207:5;3170:1;3221:270;3242:7;3232:8;3229:21;3221:270;;;3301:4;3297:1;3293:6;3289:17;3283:4;3280:27;3277:53;;;3310:18;;:::i;:::-;3360:7;3350:8;3346:22;3343:55;;;3380:16;;;;3343:55;3459:22;;;;3419:15;;;;3221:270;;;3225:3;3081:416;;;;;:::o;3502:806::-;3551:5;3581:8;3571:80;;-1:-1:-1;3622:1:29;3636:5;;3571:80;3670:4;3660:76;;-1:-1:-1;3707:1:29;3721:5;;3660:76;3752:4;3770:1;3765:59;;;;3838:1;3833:130;;;;3745:218;;3765:59;3795:1;3786:10;;3809:5;;;3833:130;3870:3;3860:8;3857:17;3854:43;;;3877:18;;:::i;:::-;-1:-1:-1;;3933:1:29;3919:16;;3948:5;;3745:218;;4047:2;4037:8;4034:16;4028:3;4022:4;4019:13;4015:36;4009:2;3999:8;3996:16;3991:2;3985:4;3982:12;3978:35;3975:77;3972:159;;;-1:-1:-1;4084:19:29;;;4116:5;;3972:159;4163:34;4188:8;4182:4;4163:34;:::i;:::-;4233:6;4229:1;4225:6;4221:19;4212:7;4209:32;4206:58;;;4244:18;;:::i;:::-;4282:20;;3502:806;-1:-1:-1;;;3502:806:29:o;4313:140::-;4371:5;4400:47;4441:4;4431:8;4427:19;4421:4;4400:47;:::i;4458:168::-;4531:9;;;4562;;4579:15;;;4573:22;;4559:37;4549:71;;4600:18;;:::i;4981:125::-;5046:9;;;5067:10;;;5064:36;;;5080:18;;:::i"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","mint(address,uint256)":"40c10f19","mintTestTokens()":"121874a1","name()":"06fdde03","owner()":"8da5cb5b","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintTestTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Simple ERC20 Token for testing the SignatureVerifyingPaymaster\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Constructor mints initial supply to deployer\"},\"decimals()\":{\"details\":\"Override decimals to match constant\"},\"mint(address,uint256)\":{\"details\":\"Mint new tokens (only owner)\",\"params\":{\"amount\":\"Amount of tokens to mint\",\"to\":\"Address to mint tokens to\"}},\"mintTestTokens()\":{\"details\":\"Public function to mint small amount of tokens for testing\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"SBC Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"mintTestTokens()\":{\"notice\":\"Limited to 100 tokens per mint to prevent abuse\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SampleERC20.sol\":\"SBC\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/SampleERC20.sol\":{\"keccak256\":\"0x730af6f72f44a40367e3cbaedeb9665e3f9abc6bf464408c2da2ab8947aa6aea\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://905afce178b9e88401b2aedd3b2e97d6d304ecceac194bd8a94dad69e21a9fff\",\"dweb:/ipfs/QmeBze8XCJuiTiimZc8j8a4EtyMrb4h31ftr1XFWgLUMvM\"]}},\"version\":1}"}},"contracts/SampleNFT.sol":{"SampleNFT":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"}],"name":"mintNFT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"baseURI","type":"string"}],"name":"setBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1373":{"entryPoint":null,"id":1373,"parameterSlots":2,"returnSlots":0},"@_450":{"entryPoint":null,"id":450,"parameterSlots":1,"returnSlots":0},"@_7026":{"entryPoint":null,"id":7026,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_546":{"entryPoint":154,"id":546,"parameterSlots":1,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":258,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":436,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":602,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":687,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":542,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":236,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:4347:29","nodeType":"YulBlock","src":"0:4347:29","statements":[{"nativeSrc":"6:3:29","nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nativeSrc":"46:95:29","nodeType":"YulBlock","src":"46:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"63:1:29","nodeType":"YulLiteral","src":"63:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"70:3:29","nodeType":"YulLiteral","src":"70:3:29","type":"","value":"224"},{"kind":"number","nativeSrc":"75:10:29","nodeType":"YulLiteral","src":"75:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"66:3:29","nodeType":"YulIdentifier","src":"66:3:29"},"nativeSrc":"66:20:29","nodeType":"YulFunctionCall","src":"66:20:29"}],"functionName":{"name":"mstore","nativeSrc":"56:6:29","nodeType":"YulIdentifier","src":"56:6:29"},"nativeSrc":"56:31:29","nodeType":"YulFunctionCall","src":"56:31:29"},"nativeSrc":"56:31:29","nodeType":"YulExpressionStatement","src":"56:31:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"103:1:29","nodeType":"YulLiteral","src":"103:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"106:4:29","nodeType":"YulLiteral","src":"106:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"96:6:29","nodeType":"YulIdentifier","src":"96:6:29"},"nativeSrc":"96:15:29","nodeType":"YulFunctionCall","src":"96:15:29"},"nativeSrc":"96:15:29","nodeType":"YulExpressionStatement","src":"96:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"127:1:29","nodeType":"YulLiteral","src":"127:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"130:4:29","nodeType":"YulLiteral","src":"130:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"120:6:29","nodeType":"YulIdentifier","src":"120:6:29"},"nativeSrc":"120:15:29","nodeType":"YulFunctionCall","src":"120:15:29"},"nativeSrc":"120:15:29","nodeType":"YulExpressionStatement","src":"120:15:29"}]},"name":"panic_error_0x41","nativeSrc":"14:127:29","nodeType":"YulFunctionDefinition","src":"14:127:29"},{"body":{"nativeSrc":"210:780:29","nodeType":"YulBlock","src":"210:780:29","statements":[{"body":{"nativeSrc":"259:16:29","nodeType":"YulBlock","src":"259:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"268:1:29","nodeType":"YulLiteral","src":"268:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"271:1:29","nodeType":"YulLiteral","src":"271:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"261:6:29","nodeType":"YulIdentifier","src":"261:6:29"},"nativeSrc":"261:12:29","nodeType":"YulFunctionCall","src":"261:12:29"},"nativeSrc":"261:12:29","nodeType":"YulExpressionStatement","src":"261:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"238:6:29","nodeType":"YulIdentifier","src":"238:6:29"},{"kind":"number","nativeSrc":"246:4:29","nodeType":"YulLiteral","src":"246:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"234:3:29","nodeType":"YulIdentifier","src":"234:3:29"},"nativeSrc":"234:17:29","nodeType":"YulFunctionCall","src":"234:17:29"},{"name":"end","nativeSrc":"253:3:29","nodeType":"YulIdentifier","src":"253:3:29"}],"functionName":{"name":"slt","nativeSrc":"230:3:29","nodeType":"YulIdentifier","src":"230:3:29"},"nativeSrc":"230:27:29","nodeType":"YulFunctionCall","src":"230:27:29"}],"functionName":{"name":"iszero","nativeSrc":"223:6:29","nodeType":"YulIdentifier","src":"223:6:29"},"nativeSrc":"223:35:29","nodeType":"YulFunctionCall","src":"223:35:29"},"nativeSrc":"220:55:29","nodeType":"YulIf","src":"220:55:29"},{"nativeSrc":"284:23:29","nodeType":"YulVariableDeclaration","src":"284:23:29","value":{"arguments":[{"name":"offset","nativeSrc":"300:6:29","nodeType":"YulIdentifier","src":"300:6:29"}],"functionName":{"name":"mload","nativeSrc":"294:5:29","nodeType":"YulIdentifier","src":"294:5:29"},"nativeSrc":"294:13:29","nodeType":"YulFunctionCall","src":"294:13:29"},"variables":[{"name":"_1","nativeSrc":"288:2:29","nodeType":"YulTypedName","src":"288:2:29","type":""}]},{"nativeSrc":"316:28:29","nodeType":"YulVariableDeclaration","src":"316:28:29","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"334:2:29","nodeType":"YulLiteral","src":"334:2:29","type":"","value":"64"},{"kind":"number","nativeSrc":"338:1:29","nodeType":"YulLiteral","src":"338:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"330:3:29","nodeType":"YulIdentifier","src":"330:3:29"},"nativeSrc":"330:10:29","nodeType":"YulFunctionCall","src":"330:10:29"},{"kind":"number","nativeSrc":"342:1:29","nodeType":"YulLiteral","src":"342:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"326:3:29","nodeType":"YulIdentifier","src":"326:3:29"},"nativeSrc":"326:18:29","nodeType":"YulFunctionCall","src":"326:18:29"},"variables":[{"name":"_2","nativeSrc":"320:2:29","nodeType":"YulTypedName","src":"320:2:29","type":""}]},{"body":{"nativeSrc":"367:22:29","nodeType":"YulBlock","src":"367:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"369:16:29","nodeType":"YulIdentifier","src":"369:16:29"},"nativeSrc":"369:18:29","nodeType":"YulFunctionCall","src":"369:18:29"},"nativeSrc":"369:18:29","nodeType":"YulExpressionStatement","src":"369:18:29"}]},"condition":{"arguments":[{"name":"_1","nativeSrc":"359:2:29","nodeType":"YulIdentifier","src":"359:2:29"},{"name":"_2","nativeSrc":"363:2:29","nodeType":"YulIdentifier","src":"363:2:29"}],"functionName":{"name":"gt","nativeSrc":"356:2:29","nodeType":"YulIdentifier","src":"356:2:29"},"nativeSrc":"356:10:29","nodeType":"YulFunctionCall","src":"356:10:29"},"nativeSrc":"353:36:29","nodeType":"YulIf","src":"353:36:29"},{"nativeSrc":"398:17:29","nodeType":"YulVariableDeclaration","src":"398:17:29","value":{"arguments":[{"kind":"number","nativeSrc":"412:2:29","nodeType":"YulLiteral","src":"412:2:29","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"408:3:29","nodeType":"YulIdentifier","src":"408:3:29"},"nativeSrc":"408:7:29","nodeType":"YulFunctionCall","src":"408:7:29"},"variables":[{"name":"_3","nativeSrc":"402:2:29","nodeType":"YulTypedName","src":"402:2:29","type":""}]},{"nativeSrc":"424:23:29","nodeType":"YulVariableDeclaration","src":"424:23:29","value":{"arguments":[{"kind":"number","nativeSrc":"444:2:29","nodeType":"YulLiteral","src":"444:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"438:5:29","nodeType":"YulIdentifier","src":"438:5:29"},"nativeSrc":"438:9:29","nodeType":"YulFunctionCall","src":"438:9:29"},"variables":[{"name":"memPtr","nativeSrc":"428:6:29","nodeType":"YulTypedName","src":"428:6:29","type":""}]},{"nativeSrc":"456:71:29","nodeType":"YulVariableDeclaration","src":"456:71:29","value":{"arguments":[{"name":"memPtr","nativeSrc":"478:6:29","nodeType":"YulIdentifier","src":"478:6:29"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"502:2:29","nodeType":"YulIdentifier","src":"502:2:29"},{"kind":"number","nativeSrc":"506:4:29","nodeType":"YulLiteral","src":"506:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"498:3:29","nodeType":"YulIdentifier","src":"498:3:29"},"nativeSrc":"498:13:29","nodeType":"YulFunctionCall","src":"498:13:29"},{"name":"_3","nativeSrc":"513:2:29","nodeType":"YulIdentifier","src":"513:2:29"}],"functionName":{"name":"and","nativeSrc":"494:3:29","nodeType":"YulIdentifier","src":"494:3:29"},"nativeSrc":"494:22:29","nodeType":"YulFunctionCall","src":"494:22:29"},{"kind":"number","nativeSrc":"518:2:29","nodeType":"YulLiteral","src":"518:2:29","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"490:3:29","nodeType":"YulIdentifier","src":"490:3:29"},"nativeSrc":"490:31:29","nodeType":"YulFunctionCall","src":"490:31:29"},{"name":"_3","nativeSrc":"523:2:29","nodeType":"YulIdentifier","src":"523:2:29"}],"functionName":{"name":"and","nativeSrc":"486:3:29","nodeType":"YulIdentifier","src":"486:3:29"},"nativeSrc":"486:40:29","nodeType":"YulFunctionCall","src":"486:40:29"}],"functionName":{"name":"add","nativeSrc":"474:3:29","nodeType":"YulIdentifier","src":"474:3:29"},"nativeSrc":"474:53:29","nodeType":"YulFunctionCall","src":"474:53:29"},"variables":[{"name":"newFreePtr","nativeSrc":"460:10:29","nodeType":"YulTypedName","src":"460:10:29","type":""}]},{"body":{"nativeSrc":"586:22:29","nodeType":"YulBlock","src":"586:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"588:16:29","nodeType":"YulIdentifier","src":"588:16:29"},"nativeSrc":"588:18:29","nodeType":"YulFunctionCall","src":"588:18:29"},"nativeSrc":"588:18:29","nodeType":"YulExpressionStatement","src":"588:18:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"545:10:29","nodeType":"YulIdentifier","src":"545:10:29"},{"name":"_2","nativeSrc":"557:2:29","nodeType":"YulIdentifier","src":"557:2:29"}],"functionName":{"name":"gt","nativeSrc":"542:2:29","nodeType":"YulIdentifier","src":"542:2:29"},"nativeSrc":"542:18:29","nodeType":"YulFunctionCall","src":"542:18:29"},{"arguments":[{"name":"newFreePtr","nativeSrc":"565:10:29","nodeType":"YulIdentifier","src":"565:10:29"},{"name":"memPtr","nativeSrc":"577:6:29","nodeType":"YulIdentifier","src":"577:6:29"}],"functionName":{"name":"lt","nativeSrc":"562:2:29","nodeType":"YulIdentifier","src":"562:2:29"},"nativeSrc":"562:22:29","nodeType":"YulFunctionCall","src":"562:22:29"}],"functionName":{"name":"or","nativeSrc":"539:2:29","nodeType":"YulIdentifier","src":"539:2:29"},"nativeSrc":"539:46:29","nodeType":"YulFunctionCall","src":"539:46:29"},"nativeSrc":"536:72:29","nodeType":"YulIf","src":"536:72:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"624:2:29","nodeType":"YulLiteral","src":"624:2:29","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"628:10:29","nodeType":"YulIdentifier","src":"628:10:29"}],"functionName":{"name":"mstore","nativeSrc":"617:6:29","nodeType":"YulIdentifier","src":"617:6:29"},"nativeSrc":"617:22:29","nodeType":"YulFunctionCall","src":"617:22:29"},"nativeSrc":"617:22:29","nodeType":"YulExpressionStatement","src":"617:22:29"},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"655:6:29","nodeType":"YulIdentifier","src":"655:6:29"},{"name":"_1","nativeSrc":"663:2:29","nodeType":"YulIdentifier","src":"663:2:29"}],"functionName":{"name":"mstore","nativeSrc":"648:6:29","nodeType":"YulIdentifier","src":"648:6:29"},"nativeSrc":"648:18:29","nodeType":"YulFunctionCall","src":"648:18:29"},"nativeSrc":"648:18:29","nodeType":"YulExpressionStatement","src":"648:18:29"},{"nativeSrc":"675:14:29","nodeType":"YulVariableDeclaration","src":"675:14:29","value":{"kind":"number","nativeSrc":"685:4:29","nodeType":"YulLiteral","src":"685:4:29","type":"","value":"0x20"},"variables":[{"name":"_4","nativeSrc":"679:2:29","nodeType":"YulTypedName","src":"679:2:29","type":""}]},{"body":{"nativeSrc":"737:16:29","nodeType":"YulBlock","src":"737:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"746:1:29","nodeType":"YulLiteral","src":"746:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"749:1:29","nodeType":"YulLiteral","src":"749:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"739:6:29","nodeType":"YulIdentifier","src":"739:6:29"},"nativeSrc":"739:12:29","nodeType":"YulFunctionCall","src":"739:12:29"},"nativeSrc":"739:12:29","nodeType":"YulExpressionStatement","src":"739:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"712:6:29","nodeType":"YulIdentifier","src":"712:6:29"},{"name":"_1","nativeSrc":"720:2:29","nodeType":"YulIdentifier","src":"720:2:29"}],"functionName":{"name":"add","nativeSrc":"708:3:29","nodeType":"YulIdentifier","src":"708:3:29"},"nativeSrc":"708:15:29","nodeType":"YulFunctionCall","src":"708:15:29"},{"kind":"number","nativeSrc":"725:4:29","nodeType":"YulLiteral","src":"725:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"704:3:29","nodeType":"YulIdentifier","src":"704:3:29"},"nativeSrc":"704:26:29","nodeType":"YulFunctionCall","src":"704:26:29"},{"name":"end","nativeSrc":"732:3:29","nodeType":"YulIdentifier","src":"732:3:29"}],"functionName":{"name":"gt","nativeSrc":"701:2:29","nodeType":"YulIdentifier","src":"701:2:29"},"nativeSrc":"701:35:29","nodeType":"YulFunctionCall","src":"701:35:29"},"nativeSrc":"698:55:29","nodeType":"YulIf","src":"698:55:29"},{"nativeSrc":"762:10:29","nodeType":"YulVariableDeclaration","src":"762:10:29","value":{"kind":"number","nativeSrc":"771:1:29","nodeType":"YulLiteral","src":"771:1:29","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"766:1:29","nodeType":"YulTypedName","src":"766:1:29","type":""}]},{"body":{"nativeSrc":"827:87:29","nodeType":"YulBlock","src":"827:87:29","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"856:6:29","nodeType":"YulIdentifier","src":"856:6:29"},{"name":"i","nativeSrc":"864:1:29","nodeType":"YulIdentifier","src":"864:1:29"}],"functionName":{"name":"add","nativeSrc":"852:3:29","nodeType":"YulIdentifier","src":"852:3:29"},"nativeSrc":"852:14:29","nodeType":"YulFunctionCall","src":"852:14:29"},{"name":"_4","nativeSrc":"868:2:29","nodeType":"YulIdentifier","src":"868:2:29"}],"functionName":{"name":"add","nativeSrc":"848:3:29","nodeType":"YulIdentifier","src":"848:3:29"},"nativeSrc":"848:23:29","nodeType":"YulFunctionCall","src":"848:23:29"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"887:6:29","nodeType":"YulIdentifier","src":"887:6:29"},{"name":"i","nativeSrc":"895:1:29","nodeType":"YulIdentifier","src":"895:1:29"}],"functionName":{"name":"add","nativeSrc":"883:3:29","nodeType":"YulIdentifier","src":"883:3:29"},"nativeSrc":"883:14:29","nodeType":"YulFunctionCall","src":"883:14:29"},{"name":"_4","nativeSrc":"899:2:29","nodeType":"YulIdentifier","src":"899:2:29"}],"functionName":{"name":"add","nativeSrc":"879:3:29","nodeType":"YulIdentifier","src":"879:3:29"},"nativeSrc":"879:23:29","nodeType":"YulFunctionCall","src":"879:23:29"}],"functionName":{"name":"mload","nativeSrc":"873:5:29","nodeType":"YulIdentifier","src":"873:5:29"},"nativeSrc":"873:30:29","nodeType":"YulFunctionCall","src":"873:30:29"}],"functionName":{"name":"mstore","nativeSrc":"841:6:29","nodeType":"YulIdentifier","src":"841:6:29"},"nativeSrc":"841:63:29","nodeType":"YulFunctionCall","src":"841:63:29"},"nativeSrc":"841:63:29","nodeType":"YulExpressionStatement","src":"841:63:29"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"792:1:29","nodeType":"YulIdentifier","src":"792:1:29"},{"name":"_1","nativeSrc":"795:2:29","nodeType":"YulIdentifier","src":"795:2:29"}],"functionName":{"name":"lt","nativeSrc":"789:2:29","nodeType":"YulIdentifier","src":"789:2:29"},"nativeSrc":"789:9:29","nodeType":"YulFunctionCall","src":"789:9:29"},"nativeSrc":"781:133:29","nodeType":"YulForLoop","post":{"nativeSrc":"799:19:29","nodeType":"YulBlock","src":"799:19:29","statements":[{"nativeSrc":"801:15:29","nodeType":"YulAssignment","src":"801:15:29","value":{"arguments":[{"name":"i","nativeSrc":"810:1:29","nodeType":"YulIdentifier","src":"810:1:29"},{"name":"_4","nativeSrc":"813:2:29","nodeType":"YulIdentifier","src":"813:2:29"}],"functionName":{"name":"add","nativeSrc":"806:3:29","nodeType":"YulIdentifier","src":"806:3:29"},"nativeSrc":"806:10:29","nodeType":"YulFunctionCall","src":"806:10:29"},"variableNames":[{"name":"i","nativeSrc":"801:1:29","nodeType":"YulIdentifier","src":"801:1:29"}]}]},"pre":{"nativeSrc":"785:3:29","nodeType":"YulBlock","src":"785:3:29","statements":[]},"src":"781:133:29"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"938:6:29","nodeType":"YulIdentifier","src":"938:6:29"},{"name":"_1","nativeSrc":"946:2:29","nodeType":"YulIdentifier","src":"946:2:29"}],"functionName":{"name":"add","nativeSrc":"934:3:29","nodeType":"YulIdentifier","src":"934:3:29"},"nativeSrc":"934:15:29","nodeType":"YulFunctionCall","src":"934:15:29"},{"kind":"number","nativeSrc":"951:4:29","nodeType":"YulLiteral","src":"951:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"930:3:29","nodeType":"YulIdentifier","src":"930:3:29"},"nativeSrc":"930:26:29","nodeType":"YulFunctionCall","src":"930:26:29"},{"kind":"number","nativeSrc":"958:1:29","nodeType":"YulLiteral","src":"958:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"923:6:29","nodeType":"YulIdentifier","src":"923:6:29"},"nativeSrc":"923:37:29","nodeType":"YulFunctionCall","src":"923:37:29"},"nativeSrc":"923:37:29","nodeType":"YulExpressionStatement","src":"923:37:29"},{"nativeSrc":"969:15:29","nodeType":"YulAssignment","src":"969:15:29","value":{"name":"memPtr","nativeSrc":"978:6:29","nodeType":"YulIdentifier","src":"978:6:29"},"variableNames":[{"name":"array","nativeSrc":"969:5:29","nodeType":"YulIdentifier","src":"969:5:29"}]}]},"name":"abi_decode_string_fromMemory","nativeSrc":"146:844:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"184:6:29","nodeType":"YulTypedName","src":"184:6:29","type":""},{"name":"end","nativeSrc":"192:3:29","nodeType":"YulTypedName","src":"192:3:29","type":""}],"returnVariables":[{"name":"array","nativeSrc":"200:5:29","nodeType":"YulTypedName","src":"200:5:29","type":""}],"src":"146:844:29"},{"body":{"nativeSrc":"1113:444:29","nodeType":"YulBlock","src":"1113:444:29","statements":[{"body":{"nativeSrc":"1159:16:29","nodeType":"YulBlock","src":"1159:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1168:1:29","nodeType":"YulLiteral","src":"1168:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"1171:1:29","nodeType":"YulLiteral","src":"1171:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1161:6:29","nodeType":"YulIdentifier","src":"1161:6:29"},"nativeSrc":"1161:12:29","nodeType":"YulFunctionCall","src":"1161:12:29"},"nativeSrc":"1161:12:29","nodeType":"YulExpressionStatement","src":"1161:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1134:7:29","nodeType":"YulIdentifier","src":"1134:7:29"},{"name":"headStart","nativeSrc":"1143:9:29","nodeType":"YulIdentifier","src":"1143:9:29"}],"functionName":{"name":"sub","nativeSrc":"1130:3:29","nodeType":"YulIdentifier","src":"1130:3:29"},"nativeSrc":"1130:23:29","nodeType":"YulFunctionCall","src":"1130:23:29"},{"kind":"number","nativeSrc":"1155:2:29","nodeType":"YulLiteral","src":"1155:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1126:3:29","nodeType":"YulIdentifier","src":"1126:3:29"},"nativeSrc":"1126:32:29","nodeType":"YulFunctionCall","src":"1126:32:29"},"nativeSrc":"1123:52:29","nodeType":"YulIf","src":"1123:52:29"},{"nativeSrc":"1184:30:29","nodeType":"YulVariableDeclaration","src":"1184:30:29","value":{"arguments":[{"name":"headStart","nativeSrc":"1204:9:29","nodeType":"YulIdentifier","src":"1204:9:29"}],"functionName":{"name":"mload","nativeSrc":"1198:5:29","nodeType":"YulIdentifier","src":"1198:5:29"},"nativeSrc":"1198:16:29","nodeType":"YulFunctionCall","src":"1198:16:29"},"variables":[{"name":"offset","nativeSrc":"1188:6:29","nodeType":"YulTypedName","src":"1188:6:29","type":""}]},{"nativeSrc":"1223:28:29","nodeType":"YulVariableDeclaration","src":"1223:28:29","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1241:2:29","nodeType":"YulLiteral","src":"1241:2:29","type":"","value":"64"},{"kind":"number","nativeSrc":"1245:1:29","nodeType":"YulLiteral","src":"1245:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1237:3:29","nodeType":"YulIdentifier","src":"1237:3:29"},"nativeSrc":"1237:10:29","nodeType":"YulFunctionCall","src":"1237:10:29"},{"kind":"number","nativeSrc":"1249:1:29","nodeType":"YulLiteral","src":"1249:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1233:3:29","nodeType":"YulIdentifier","src":"1233:3:29"},"nativeSrc":"1233:18:29","nodeType":"YulFunctionCall","src":"1233:18:29"},"variables":[{"name":"_1","nativeSrc":"1227:2:29","nodeType":"YulTypedName","src":"1227:2:29","type":""}]},{"body":{"nativeSrc":"1278:16:29","nodeType":"YulBlock","src":"1278:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1287:1:29","nodeType":"YulLiteral","src":"1287:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"1290:1:29","nodeType":"YulLiteral","src":"1290:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1280:6:29","nodeType":"YulIdentifier","src":"1280:6:29"},"nativeSrc":"1280:12:29","nodeType":"YulFunctionCall","src":"1280:12:29"},"nativeSrc":"1280:12:29","nodeType":"YulExpressionStatement","src":"1280:12:29"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"1266:6:29","nodeType":"YulIdentifier","src":"1266:6:29"},{"name":"_1","nativeSrc":"1274:2:29","nodeType":"YulIdentifier","src":"1274:2:29"}],"functionName":{"name":"gt","nativeSrc":"1263:2:29","nodeType":"YulIdentifier","src":"1263:2:29"},"nativeSrc":"1263:14:29","nodeType":"YulFunctionCall","src":"1263:14:29"},"nativeSrc":"1260:34:29","nodeType":"YulIf","src":"1260:34:29"},{"nativeSrc":"1303:71:29","nodeType":"YulAssignment","src":"1303:71:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1346:9:29","nodeType":"YulIdentifier","src":"1346:9:29"},{"name":"offset","nativeSrc":"1357:6:29","nodeType":"YulIdentifier","src":"1357:6:29"}],"functionName":{"name":"add","nativeSrc":"1342:3:29","nodeType":"YulIdentifier","src":"1342:3:29"},"nativeSrc":"1342:22:29","nodeType":"YulFunctionCall","src":"1342:22:29"},{"name":"dataEnd","nativeSrc":"1366:7:29","nodeType":"YulIdentifier","src":"1366:7:29"}],"functionName":{"name":"abi_decode_string_fromMemory","nativeSrc":"1313:28:29","nodeType":"YulIdentifier","src":"1313:28:29"},"nativeSrc":"1313:61:29","nodeType":"YulFunctionCall","src":"1313:61:29"},"variableNames":[{"name":"value0","nativeSrc":"1303:6:29","nodeType":"YulIdentifier","src":"1303:6:29"}]},{"nativeSrc":"1383:41:29","nodeType":"YulVariableDeclaration","src":"1383:41:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1409:9:29","nodeType":"YulIdentifier","src":"1409:9:29"},{"kind":"number","nativeSrc":"1420:2:29","nodeType":"YulLiteral","src":"1420:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1405:3:29","nodeType":"YulIdentifier","src":"1405:3:29"},"nativeSrc":"1405:18:29","nodeType":"YulFunctionCall","src":"1405:18:29"}],"functionName":{"name":"mload","nativeSrc":"1399:5:29","nodeType":"YulIdentifier","src":"1399:5:29"},"nativeSrc":"1399:25:29","nodeType":"YulFunctionCall","src":"1399:25:29"},"variables":[{"name":"offset_1","nativeSrc":"1387:8:29","nodeType":"YulTypedName","src":"1387:8:29","type":""}]},{"body":{"nativeSrc":"1453:16:29","nodeType":"YulBlock","src":"1453:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1462:1:29","nodeType":"YulLiteral","src":"1462:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"1465:1:29","nodeType":"YulLiteral","src":"1465:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1455:6:29","nodeType":"YulIdentifier","src":"1455:6:29"},"nativeSrc":"1455:12:29","nodeType":"YulFunctionCall","src":"1455:12:29"},"nativeSrc":"1455:12:29","nodeType":"YulExpressionStatement","src":"1455:12:29"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"1439:8:29","nodeType":"YulIdentifier","src":"1439:8:29"},{"name":"_1","nativeSrc":"1449:2:29","nodeType":"YulIdentifier","src":"1449:2:29"}],"functionName":{"name":"gt","nativeSrc":"1436:2:29","nodeType":"YulIdentifier","src":"1436:2:29"},"nativeSrc":"1436:16:29","nodeType":"YulFunctionCall","src":"1436:16:29"},"nativeSrc":"1433:36:29","nodeType":"YulIf","src":"1433:36:29"},{"nativeSrc":"1478:73:29","nodeType":"YulAssignment","src":"1478:73:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1521:9:29","nodeType":"YulIdentifier","src":"1521:9:29"},{"name":"offset_1","nativeSrc":"1532:8:29","nodeType":"YulIdentifier","src":"1532:8:29"}],"functionName":{"name":"add","nativeSrc":"1517:3:29","nodeType":"YulIdentifier","src":"1517:3:29"},"nativeSrc":"1517:24:29","nodeType":"YulFunctionCall","src":"1517:24:29"},{"name":"dataEnd","nativeSrc":"1543:7:29","nodeType":"YulIdentifier","src":"1543:7:29"}],"functionName":{"name":"abi_decode_string_fromMemory","nativeSrc":"1488:28:29","nodeType":"YulIdentifier","src":"1488:28:29"},"nativeSrc":"1488:63:29","nodeType":"YulFunctionCall","src":"1488:63:29"},"variableNames":[{"name":"value1","nativeSrc":"1478:6:29","nodeType":"YulIdentifier","src":"1478:6:29"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nativeSrc":"995:562:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1071:9:29","nodeType":"YulTypedName","src":"1071:9:29","type":""},{"name":"dataEnd","nativeSrc":"1082:7:29","nodeType":"YulTypedName","src":"1082:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1094:6:29","nodeType":"YulTypedName","src":"1094:6:29","type":""},{"name":"value1","nativeSrc":"1102:6:29","nodeType":"YulTypedName","src":"1102:6:29","type":""}],"src":"995:562:29"},{"body":{"nativeSrc":"1617:325:29","nodeType":"YulBlock","src":"1617:325:29","statements":[{"nativeSrc":"1627:22:29","nodeType":"YulAssignment","src":"1627:22:29","value":{"arguments":[{"kind":"number","nativeSrc":"1641:1:29","nodeType":"YulLiteral","src":"1641:1:29","type":"","value":"1"},{"name":"data","nativeSrc":"1644:4:29","nodeType":"YulIdentifier","src":"1644:4:29"}],"functionName":{"name":"shr","nativeSrc":"1637:3:29","nodeType":"YulIdentifier","src":"1637:3:29"},"nativeSrc":"1637:12:29","nodeType":"YulFunctionCall","src":"1637:12:29"},"variableNames":[{"name":"length","nativeSrc":"1627:6:29","nodeType":"YulIdentifier","src":"1627:6:29"}]},{"nativeSrc":"1658:38:29","nodeType":"YulVariableDeclaration","src":"1658:38:29","value":{"arguments":[{"name":"data","nativeSrc":"1688:4:29","nodeType":"YulIdentifier","src":"1688:4:29"},{"kind":"number","nativeSrc":"1694:1:29","nodeType":"YulLiteral","src":"1694:1:29","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"1684:3:29","nodeType":"YulIdentifier","src":"1684:3:29"},"nativeSrc":"1684:12:29","nodeType":"YulFunctionCall","src":"1684:12:29"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"1662:18:29","nodeType":"YulTypedName","src":"1662:18:29","type":""}]},{"body":{"nativeSrc":"1735:31:29","nodeType":"YulBlock","src":"1735:31:29","statements":[{"nativeSrc":"1737:27:29","nodeType":"YulAssignment","src":"1737:27:29","value":{"arguments":[{"name":"length","nativeSrc":"1751:6:29","nodeType":"YulIdentifier","src":"1751:6:29"},{"kind":"number","nativeSrc":"1759:4:29","nodeType":"YulLiteral","src":"1759:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"1747:3:29","nodeType":"YulIdentifier","src":"1747:3:29"},"nativeSrc":"1747:17:29","nodeType":"YulFunctionCall","src":"1747:17:29"},"variableNames":[{"name":"length","nativeSrc":"1737:6:29","nodeType":"YulIdentifier","src":"1737:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1715:18:29","nodeType":"YulIdentifier","src":"1715:18:29"}],"functionName":{"name":"iszero","nativeSrc":"1708:6:29","nodeType":"YulIdentifier","src":"1708:6:29"},"nativeSrc":"1708:26:29","nodeType":"YulFunctionCall","src":"1708:26:29"},"nativeSrc":"1705:61:29","nodeType":"YulIf","src":"1705:61:29"},{"body":{"nativeSrc":"1825:111:29","nodeType":"YulBlock","src":"1825:111:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1846:1:29","nodeType":"YulLiteral","src":"1846:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"1853:3:29","nodeType":"YulLiteral","src":"1853:3:29","type":"","value":"224"},{"kind":"number","nativeSrc":"1858:10:29","nodeType":"YulLiteral","src":"1858:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"1849:3:29","nodeType":"YulIdentifier","src":"1849:3:29"},"nativeSrc":"1849:20:29","nodeType":"YulFunctionCall","src":"1849:20:29"}],"functionName":{"name":"mstore","nativeSrc":"1839:6:29","nodeType":"YulIdentifier","src":"1839:6:29"},"nativeSrc":"1839:31:29","nodeType":"YulFunctionCall","src":"1839:31:29"},"nativeSrc":"1839:31:29","nodeType":"YulExpressionStatement","src":"1839:31:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1890:1:29","nodeType":"YulLiteral","src":"1890:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"1893:4:29","nodeType":"YulLiteral","src":"1893:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"1883:6:29","nodeType":"YulIdentifier","src":"1883:6:29"},"nativeSrc":"1883:15:29","nodeType":"YulFunctionCall","src":"1883:15:29"},"nativeSrc":"1883:15:29","nodeType":"YulExpressionStatement","src":"1883:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1918:1:29","nodeType":"YulLiteral","src":"1918:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"1921:4:29","nodeType":"YulLiteral","src":"1921:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1911:6:29","nodeType":"YulIdentifier","src":"1911:6:29"},"nativeSrc":"1911:15:29","nodeType":"YulFunctionCall","src":"1911:15:29"},"nativeSrc":"1911:15:29","nodeType":"YulExpressionStatement","src":"1911:15:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"1781:18:29","nodeType":"YulIdentifier","src":"1781:18:29"},{"arguments":[{"name":"length","nativeSrc":"1804:6:29","nodeType":"YulIdentifier","src":"1804:6:29"},{"kind":"number","nativeSrc":"1812:2:29","nodeType":"YulLiteral","src":"1812:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"1801:2:29","nodeType":"YulIdentifier","src":"1801:2:29"},"nativeSrc":"1801:14:29","nodeType":"YulFunctionCall","src":"1801:14:29"}],"functionName":{"name":"eq","nativeSrc":"1778:2:29","nodeType":"YulIdentifier","src":"1778:2:29"},"nativeSrc":"1778:38:29","nodeType":"YulFunctionCall","src":"1778:38:29"},"nativeSrc":"1775:161:29","nodeType":"YulIf","src":"1775:161:29"}]},"name":"extract_byte_array_length","nativeSrc":"1562:380:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"1597:4:29","nodeType":"YulTypedName","src":"1597:4:29","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1606:6:29","nodeType":"YulTypedName","src":"1606:6:29","type":""}],"src":"1562:380:29"},{"body":{"nativeSrc":"2003:65:29","nodeType":"YulBlock","src":"2003:65:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2020:1:29","nodeType":"YulLiteral","src":"2020:1:29","type":"","value":"0"},{"name":"ptr","nativeSrc":"2023:3:29","nodeType":"YulIdentifier","src":"2023:3:29"}],"functionName":{"name":"mstore","nativeSrc":"2013:6:29","nodeType":"YulIdentifier","src":"2013:6:29"},"nativeSrc":"2013:14:29","nodeType":"YulFunctionCall","src":"2013:14:29"},"nativeSrc":"2013:14:29","nodeType":"YulExpressionStatement","src":"2013:14:29"},{"nativeSrc":"2036:26:29","nodeType":"YulAssignment","src":"2036:26:29","value":{"arguments":[{"kind":"number","nativeSrc":"2054:1:29","nodeType":"YulLiteral","src":"2054:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"2057:4:29","nodeType":"YulLiteral","src":"2057:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2044:9:29","nodeType":"YulIdentifier","src":"2044:9:29"},"nativeSrc":"2044:18:29","nodeType":"YulFunctionCall","src":"2044:18:29"},"variableNames":[{"name":"data","nativeSrc":"2036:4:29","nodeType":"YulIdentifier","src":"2036:4:29"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"1947:121:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"1986:3:29","nodeType":"YulTypedName","src":"1986:3:29","type":""}],"returnVariables":[{"name":"data","nativeSrc":"1994:4:29","nodeType":"YulTypedName","src":"1994:4:29","type":""}],"src":"1947:121:29"},{"body":{"nativeSrc":"2154:462:29","nodeType":"YulBlock","src":"2154:462:29","statements":[{"body":{"nativeSrc":"2187:423:29","nodeType":"YulBlock","src":"2187:423:29","statements":[{"nativeSrc":"2201:11:29","nodeType":"YulVariableDeclaration","src":"2201:11:29","value":{"kind":"number","nativeSrc":"2211:1:29","nodeType":"YulLiteral","src":"2211:1:29","type":"","value":"0"},"variables":[{"name":"_1","nativeSrc":"2205:2:29","nodeType":"YulTypedName","src":"2205:2:29","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2232:1:29","nodeType":"YulLiteral","src":"2232:1:29","type":"","value":"0"},{"name":"array","nativeSrc":"2235:5:29","nodeType":"YulIdentifier","src":"2235:5:29"}],"functionName":{"name":"mstore","nativeSrc":"2225:6:29","nodeType":"YulIdentifier","src":"2225:6:29"},"nativeSrc":"2225:16:29","nodeType":"YulFunctionCall","src":"2225:16:29"},"nativeSrc":"2225:16:29","nodeType":"YulExpressionStatement","src":"2225:16:29"},{"nativeSrc":"2254:30:29","nodeType":"YulVariableDeclaration","src":"2254:30:29","value":{"arguments":[{"kind":"number","nativeSrc":"2276:1:29","nodeType":"YulLiteral","src":"2276:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"2279:4:29","nodeType":"YulLiteral","src":"2279:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2266:9:29","nodeType":"YulIdentifier","src":"2266:9:29"},"nativeSrc":"2266:18:29","nodeType":"YulFunctionCall","src":"2266:18:29"},"variables":[{"name":"data","nativeSrc":"2258:4:29","nodeType":"YulTypedName","src":"2258:4:29","type":""}]},{"nativeSrc":"2297:57:29","nodeType":"YulVariableDeclaration","src":"2297:57:29","value":{"arguments":[{"name":"data","nativeSrc":"2320:4:29","nodeType":"YulIdentifier","src":"2320:4:29"},{"arguments":[{"kind":"number","nativeSrc":"2330:1:29","nodeType":"YulLiteral","src":"2330:1:29","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"2337:10:29","nodeType":"YulIdentifier","src":"2337:10:29"},{"kind":"number","nativeSrc":"2349:2:29","nodeType":"YulLiteral","src":"2349:2:29","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2333:3:29","nodeType":"YulIdentifier","src":"2333:3:29"},"nativeSrc":"2333:19:29","nodeType":"YulFunctionCall","src":"2333:19:29"}],"functionName":{"name":"shr","nativeSrc":"2326:3:29","nodeType":"YulIdentifier","src":"2326:3:29"},"nativeSrc":"2326:27:29","nodeType":"YulFunctionCall","src":"2326:27:29"}],"functionName":{"name":"add","nativeSrc":"2316:3:29","nodeType":"YulIdentifier","src":"2316:3:29"},"nativeSrc":"2316:38:29","nodeType":"YulFunctionCall","src":"2316:38:29"},"variables":[{"name":"deleteStart","nativeSrc":"2301:11:29","nodeType":"YulTypedName","src":"2301:11:29","type":""}]},{"body":{"nativeSrc":"2391:23:29","nodeType":"YulBlock","src":"2391:23:29","statements":[{"nativeSrc":"2393:19:29","nodeType":"YulAssignment","src":"2393:19:29","value":{"name":"data","nativeSrc":"2408:4:29","nodeType":"YulIdentifier","src":"2408:4:29"},"variableNames":[{"name":"deleteStart","nativeSrc":"2393:11:29","nodeType":"YulIdentifier","src":"2393:11:29"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"2373:10:29","nodeType":"YulIdentifier","src":"2373:10:29"},{"kind":"number","nativeSrc":"2385:4:29","nodeType":"YulLiteral","src":"2385:4:29","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"2370:2:29","nodeType":"YulIdentifier","src":"2370:2:29"},"nativeSrc":"2370:20:29","nodeType":"YulFunctionCall","src":"2370:20:29"},"nativeSrc":"2367:47:29","nodeType":"YulIf","src":"2367:47:29"},{"nativeSrc":"2427:41:29","nodeType":"YulVariableDeclaration","src":"2427:41:29","value":{"arguments":[{"name":"data","nativeSrc":"2441:4:29","nodeType":"YulIdentifier","src":"2441:4:29"},{"arguments":[{"kind":"number","nativeSrc":"2451:1:29","nodeType":"YulLiteral","src":"2451:1:29","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"2458:3:29","nodeType":"YulIdentifier","src":"2458:3:29"},{"kind":"number","nativeSrc":"2463:2:29","nodeType":"YulLiteral","src":"2463:2:29","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2454:3:29","nodeType":"YulIdentifier","src":"2454:3:29"},"nativeSrc":"2454:12:29","nodeType":"YulFunctionCall","src":"2454:12:29"}],"functionName":{"name":"shr","nativeSrc":"2447:3:29","nodeType":"YulIdentifier","src":"2447:3:29"},"nativeSrc":"2447:20:29","nodeType":"YulFunctionCall","src":"2447:20:29"}],"functionName":{"name":"add","nativeSrc":"2437:3:29","nodeType":"YulIdentifier","src":"2437:3:29"},"nativeSrc":"2437:31:29","nodeType":"YulFunctionCall","src":"2437:31:29"},"variables":[{"name":"_2","nativeSrc":"2431:2:29","nodeType":"YulTypedName","src":"2431:2:29","type":""}]},{"nativeSrc":"2481:24:29","nodeType":"YulVariableDeclaration","src":"2481:24:29","value":{"name":"deleteStart","nativeSrc":"2494:11:29","nodeType":"YulIdentifier","src":"2494:11:29"},"variables":[{"name":"start","nativeSrc":"2485:5:29","nodeType":"YulTypedName","src":"2485:5:29","type":""}]},{"body":{"nativeSrc":"2579:21:29","nodeType":"YulBlock","src":"2579:21:29","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"2588:5:29","nodeType":"YulIdentifier","src":"2588:5:29"},{"name":"_1","nativeSrc":"2595:2:29","nodeType":"YulIdentifier","src":"2595:2:29"}],"functionName":{"name":"sstore","nativeSrc":"2581:6:29","nodeType":"YulIdentifier","src":"2581:6:29"},"nativeSrc":"2581:17:29","nodeType":"YulFunctionCall","src":"2581:17:29"},"nativeSrc":"2581:17:29","nodeType":"YulExpressionStatement","src":"2581:17:29"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"2529:5:29","nodeType":"YulIdentifier","src":"2529:5:29"},{"name":"_2","nativeSrc":"2536:2:29","nodeType":"YulIdentifier","src":"2536:2:29"}],"functionName":{"name":"lt","nativeSrc":"2526:2:29","nodeType":"YulIdentifier","src":"2526:2:29"},"nativeSrc":"2526:13:29","nodeType":"YulFunctionCall","src":"2526:13:29"},"nativeSrc":"2518:82:29","nodeType":"YulForLoop","post":{"nativeSrc":"2540:26:29","nodeType":"YulBlock","src":"2540:26:29","statements":[{"nativeSrc":"2542:22:29","nodeType":"YulAssignment","src":"2542:22:29","value":{"arguments":[{"name":"start","nativeSrc":"2555:5:29","nodeType":"YulIdentifier","src":"2555:5:29"},{"kind":"number","nativeSrc":"2562:1:29","nodeType":"YulLiteral","src":"2562:1:29","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2551:3:29","nodeType":"YulIdentifier","src":"2551:3:29"},"nativeSrc":"2551:13:29","nodeType":"YulFunctionCall","src":"2551:13:29"},"variableNames":[{"name":"start","nativeSrc":"2542:5:29","nodeType":"YulIdentifier","src":"2542:5:29"}]}]},"pre":{"nativeSrc":"2522:3:29","nodeType":"YulBlock","src":"2522:3:29","statements":[]},"src":"2518:82:29"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"2170:3:29","nodeType":"YulIdentifier","src":"2170:3:29"},{"kind":"number","nativeSrc":"2175:2:29","nodeType":"YulLiteral","src":"2175:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"2167:2:29","nodeType":"YulIdentifier","src":"2167:2:29"},"nativeSrc":"2167:11:29","nodeType":"YulFunctionCall","src":"2167:11:29"},"nativeSrc":"2164:446:29","nodeType":"YulIf","src":"2164:446:29"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"2073:543:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"2126:5:29","nodeType":"YulTypedName","src":"2126:5:29","type":""},{"name":"len","nativeSrc":"2133:3:29","nodeType":"YulTypedName","src":"2133:3:29","type":""},{"name":"startIndex","nativeSrc":"2138:10:29","nodeType":"YulTypedName","src":"2138:10:29","type":""}],"src":"2073:543:29"},{"body":{"nativeSrc":"2706:81:29","nodeType":"YulBlock","src":"2706:81:29","statements":[{"nativeSrc":"2716:65:29","nodeType":"YulAssignment","src":"2716:65:29","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"2731:4:29","nodeType":"YulIdentifier","src":"2731:4:29"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2749:1:29","nodeType":"YulLiteral","src":"2749:1:29","type":"","value":"3"},{"name":"len","nativeSrc":"2752:3:29","nodeType":"YulIdentifier","src":"2752:3:29"}],"functionName":{"name":"shl","nativeSrc":"2745:3:29","nodeType":"YulIdentifier","src":"2745:3:29"},"nativeSrc":"2745:11:29","nodeType":"YulFunctionCall","src":"2745:11:29"},{"arguments":[{"kind":"number","nativeSrc":"2762:1:29","nodeType":"YulLiteral","src":"2762:1:29","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2758:3:29","nodeType":"YulIdentifier","src":"2758:3:29"},"nativeSrc":"2758:6:29","nodeType":"YulFunctionCall","src":"2758:6:29"}],"functionName":{"name":"shr","nativeSrc":"2741:3:29","nodeType":"YulIdentifier","src":"2741:3:29"},"nativeSrc":"2741:24:29","nodeType":"YulFunctionCall","src":"2741:24:29"}],"functionName":{"name":"not","nativeSrc":"2737:3:29","nodeType":"YulIdentifier","src":"2737:3:29"},"nativeSrc":"2737:29:29","nodeType":"YulFunctionCall","src":"2737:29:29"}],"functionName":{"name":"and","nativeSrc":"2727:3:29","nodeType":"YulIdentifier","src":"2727:3:29"},"nativeSrc":"2727:40:29","nodeType":"YulFunctionCall","src":"2727:40:29"},{"arguments":[{"kind":"number","nativeSrc":"2773:1:29","nodeType":"YulLiteral","src":"2773:1:29","type":"","value":"1"},{"name":"len","nativeSrc":"2776:3:29","nodeType":"YulIdentifier","src":"2776:3:29"}],"functionName":{"name":"shl","nativeSrc":"2769:3:29","nodeType":"YulIdentifier","src":"2769:3:29"},"nativeSrc":"2769:11:29","nodeType":"YulFunctionCall","src":"2769:11:29"}],"functionName":{"name":"or","nativeSrc":"2724:2:29","nodeType":"YulIdentifier","src":"2724:2:29"},"nativeSrc":"2724:57:29","nodeType":"YulFunctionCall","src":"2724:57:29"},"variableNames":[{"name":"used","nativeSrc":"2716:4:29","nodeType":"YulIdentifier","src":"2716:4:29"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"2621:166:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"2683:4:29","nodeType":"YulTypedName","src":"2683:4:29","type":""},{"name":"len","nativeSrc":"2689:3:29","nodeType":"YulTypedName","src":"2689:3:29","type":""}],"returnVariables":[{"name":"used","nativeSrc":"2697:4:29","nodeType":"YulTypedName","src":"2697:4:29","type":""}],"src":"2621:166:29"},{"body":{"nativeSrc":"2888:1249:29","nodeType":"YulBlock","src":"2888:1249:29","statements":[{"nativeSrc":"2898:24:29","nodeType":"YulVariableDeclaration","src":"2898:24:29","value":{"arguments":[{"name":"src","nativeSrc":"2918:3:29","nodeType":"YulIdentifier","src":"2918:3:29"}],"functionName":{"name":"mload","nativeSrc":"2912:5:29","nodeType":"YulIdentifier","src":"2912:5:29"},"nativeSrc":"2912:10:29","nodeType":"YulFunctionCall","src":"2912:10:29"},"variables":[{"name":"newLen","nativeSrc":"2902:6:29","nodeType":"YulTypedName","src":"2902:6:29","type":""}]},{"body":{"nativeSrc":"2965:22:29","nodeType":"YulBlock","src":"2965:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2967:16:29","nodeType":"YulIdentifier","src":"2967:16:29"},"nativeSrc":"2967:18:29","nodeType":"YulFunctionCall","src":"2967:18:29"},"nativeSrc":"2967:18:29","nodeType":"YulExpressionStatement","src":"2967:18:29"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"2937:6:29","nodeType":"YulIdentifier","src":"2937:6:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"2953:2:29","nodeType":"YulLiteral","src":"2953:2:29","type":"","value":"64"},{"kind":"number","nativeSrc":"2957:1:29","nodeType":"YulLiteral","src":"2957:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"2949:3:29","nodeType":"YulIdentifier","src":"2949:3:29"},"nativeSrc":"2949:10:29","nodeType":"YulFunctionCall","src":"2949:10:29"},{"kind":"number","nativeSrc":"2961:1:29","nodeType":"YulLiteral","src":"2961:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"2945:3:29","nodeType":"YulIdentifier","src":"2945:3:29"},"nativeSrc":"2945:18:29","nodeType":"YulFunctionCall","src":"2945:18:29"}],"functionName":{"name":"gt","nativeSrc":"2934:2:29","nodeType":"YulIdentifier","src":"2934:2:29"},"nativeSrc":"2934:30:29","nodeType":"YulFunctionCall","src":"2934:30:29"},"nativeSrc":"2931:56:29","nodeType":"YulIf","src":"2931:56:29"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3040:4:29","nodeType":"YulIdentifier","src":"3040:4:29"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"3078:4:29","nodeType":"YulIdentifier","src":"3078:4:29"}],"functionName":{"name":"sload","nativeSrc":"3072:5:29","nodeType":"YulIdentifier","src":"3072:5:29"},"nativeSrc":"3072:11:29","nodeType":"YulFunctionCall","src":"3072:11:29"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"3046:25:29","nodeType":"YulIdentifier","src":"3046:25:29"},"nativeSrc":"3046:38:29","nodeType":"YulFunctionCall","src":"3046:38:29"},{"name":"newLen","nativeSrc":"3086:6:29","nodeType":"YulIdentifier","src":"3086:6:29"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"2996:43:29","nodeType":"YulIdentifier","src":"2996:43:29"},"nativeSrc":"2996:97:29","nodeType":"YulFunctionCall","src":"2996:97:29"},"nativeSrc":"2996:97:29","nodeType":"YulExpressionStatement","src":"2996:97:29"},{"nativeSrc":"3102:18:29","nodeType":"YulVariableDeclaration","src":"3102:18:29","value":{"kind":"number","nativeSrc":"3119:1:29","nodeType":"YulLiteral","src":"3119:1:29","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"3106:9:29","nodeType":"YulTypedName","src":"3106:9:29","type":""}]},{"nativeSrc":"3129:23:29","nodeType":"YulVariableDeclaration","src":"3129:23:29","value":{"kind":"number","nativeSrc":"3148:4:29","nodeType":"YulLiteral","src":"3148:4:29","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nativeSrc":"3133:11:29","nodeType":"YulTypedName","src":"3133:11:29","type":""}]},{"nativeSrc":"3161:17:29","nodeType":"YulAssignment","src":"3161:17:29","value":{"kind":"number","nativeSrc":"3174:4:29","nodeType":"YulLiteral","src":"3174:4:29","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"3161:9:29","nodeType":"YulIdentifier","src":"3161:9:29"}]},{"cases":[{"body":{"nativeSrc":"3224:656:29","nodeType":"YulBlock","src":"3224:656:29","statements":[{"nativeSrc":"3238:35:29","nodeType":"YulVariableDeclaration","src":"3238:35:29","value":{"arguments":[{"name":"newLen","nativeSrc":"3257:6:29","nodeType":"YulIdentifier","src":"3257:6:29"},{"arguments":[{"kind":"number","nativeSrc":"3269:2:29","nodeType":"YulLiteral","src":"3269:2:29","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3265:3:29","nodeType":"YulIdentifier","src":"3265:3:29"},"nativeSrc":"3265:7:29","nodeType":"YulFunctionCall","src":"3265:7:29"}],"functionName":{"name":"and","nativeSrc":"3253:3:29","nodeType":"YulIdentifier","src":"3253:3:29"},"nativeSrc":"3253:20:29","nodeType":"YulFunctionCall","src":"3253:20:29"},"variables":[{"name":"loopEnd","nativeSrc":"3242:7:29","nodeType":"YulTypedName","src":"3242:7:29","type":""}]},{"nativeSrc":"3286:49:29","nodeType":"YulVariableDeclaration","src":"3286:49:29","value":{"arguments":[{"name":"slot","nativeSrc":"3330:4:29","nodeType":"YulIdentifier","src":"3330:4:29"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"3300:29:29","nodeType":"YulIdentifier","src":"3300:29:29"},"nativeSrc":"3300:35:29","nodeType":"YulFunctionCall","src":"3300:35:29"},"variables":[{"name":"dstPtr","nativeSrc":"3290:6:29","nodeType":"YulTypedName","src":"3290:6:29","type":""}]},{"nativeSrc":"3348:10:29","nodeType":"YulVariableDeclaration","src":"3348:10:29","value":{"kind":"number","nativeSrc":"3357:1:29","nodeType":"YulLiteral","src":"3357:1:29","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"3352:1:29","nodeType":"YulTypedName","src":"3352:1:29","type":""}]},{"body":{"nativeSrc":"3435:172:29","nodeType":"YulBlock","src":"3435:172:29","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"3460:6:29","nodeType":"YulIdentifier","src":"3460:6:29"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3478:3:29","nodeType":"YulIdentifier","src":"3478:3:29"},{"name":"srcOffset","nativeSrc":"3483:9:29","nodeType":"YulIdentifier","src":"3483:9:29"}],"functionName":{"name":"add","nativeSrc":"3474:3:29","nodeType":"YulIdentifier","src":"3474:3:29"},"nativeSrc":"3474:19:29","nodeType":"YulFunctionCall","src":"3474:19:29"}],"functionName":{"name":"mload","nativeSrc":"3468:5:29","nodeType":"YulIdentifier","src":"3468:5:29"},"nativeSrc":"3468:26:29","nodeType":"YulFunctionCall","src":"3468:26:29"}],"functionName":{"name":"sstore","nativeSrc":"3453:6:29","nodeType":"YulIdentifier","src":"3453:6:29"},"nativeSrc":"3453:42:29","nodeType":"YulFunctionCall","src":"3453:42:29"},"nativeSrc":"3453:42:29","nodeType":"YulExpressionStatement","src":"3453:42:29"},{"nativeSrc":"3512:24:29","nodeType":"YulAssignment","src":"3512:24:29","value":{"arguments":[{"name":"dstPtr","nativeSrc":"3526:6:29","nodeType":"YulIdentifier","src":"3526:6:29"},{"kind":"number","nativeSrc":"3534:1:29","nodeType":"YulLiteral","src":"3534:1:29","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3522:3:29","nodeType":"YulIdentifier","src":"3522:3:29"},"nativeSrc":"3522:14:29","nodeType":"YulFunctionCall","src":"3522:14:29"},"variableNames":[{"name":"dstPtr","nativeSrc":"3512:6:29","nodeType":"YulIdentifier","src":"3512:6:29"}]},{"nativeSrc":"3553:40:29","nodeType":"YulAssignment","src":"3553:40:29","value":{"arguments":[{"name":"srcOffset","nativeSrc":"3570:9:29","nodeType":"YulIdentifier","src":"3570:9:29"},{"name":"srcOffset_1","nativeSrc":"3581:11:29","nodeType":"YulIdentifier","src":"3581:11:29"}],"functionName":{"name":"add","nativeSrc":"3566:3:29","nodeType":"YulIdentifier","src":"3566:3:29"},"nativeSrc":"3566:27:29","nodeType":"YulFunctionCall","src":"3566:27:29"},"variableNames":[{"name":"srcOffset","nativeSrc":"3553:9:29","nodeType":"YulIdentifier","src":"3553:9:29"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"3382:1:29","nodeType":"YulIdentifier","src":"3382:1:29"},{"name":"loopEnd","nativeSrc":"3385:7:29","nodeType":"YulIdentifier","src":"3385:7:29"}],"functionName":{"name":"lt","nativeSrc":"3379:2:29","nodeType":"YulIdentifier","src":"3379:2:29"},"nativeSrc":"3379:14:29","nodeType":"YulFunctionCall","src":"3379:14:29"},"nativeSrc":"3371:236:29","nodeType":"YulForLoop","post":{"nativeSrc":"3394:28:29","nodeType":"YulBlock","src":"3394:28:29","statements":[{"nativeSrc":"3396:24:29","nodeType":"YulAssignment","src":"3396:24:29","value":{"arguments":[{"name":"i","nativeSrc":"3405:1:29","nodeType":"YulIdentifier","src":"3405:1:29"},{"name":"srcOffset_1","nativeSrc":"3408:11:29","nodeType":"YulIdentifier","src":"3408:11:29"}],"functionName":{"name":"add","nativeSrc":"3401:3:29","nodeType":"YulIdentifier","src":"3401:3:29"},"nativeSrc":"3401:19:29","nodeType":"YulFunctionCall","src":"3401:19:29"},"variableNames":[{"name":"i","nativeSrc":"3396:1:29","nodeType":"YulIdentifier","src":"3396:1:29"}]}]},"pre":{"nativeSrc":"3375:3:29","nodeType":"YulBlock","src":"3375:3:29","statements":[]},"src":"3371:236:29"},{"body":{"nativeSrc":"3655:166:29","nodeType":"YulBlock","src":"3655:166:29","statements":[{"nativeSrc":"3673:43:29","nodeType":"YulVariableDeclaration","src":"3673:43:29","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3700:3:29","nodeType":"YulIdentifier","src":"3700:3:29"},{"name":"srcOffset","nativeSrc":"3705:9:29","nodeType":"YulIdentifier","src":"3705:9:29"}],"functionName":{"name":"add","nativeSrc":"3696:3:29","nodeType":"YulIdentifier","src":"3696:3:29"},"nativeSrc":"3696:19:29","nodeType":"YulFunctionCall","src":"3696:19:29"}],"functionName":{"name":"mload","nativeSrc":"3690:5:29","nodeType":"YulIdentifier","src":"3690:5:29"},"nativeSrc":"3690:26:29","nodeType":"YulFunctionCall","src":"3690:26:29"},"variables":[{"name":"lastValue","nativeSrc":"3677:9:29","nodeType":"YulTypedName","src":"3677:9:29","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"3740:6:29","nodeType":"YulIdentifier","src":"3740:6:29"},{"arguments":[{"name":"lastValue","nativeSrc":"3752:9:29","nodeType":"YulIdentifier","src":"3752:9:29"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3779:1:29","nodeType":"YulLiteral","src":"3779:1:29","type":"","value":"3"},{"name":"newLen","nativeSrc":"3782:6:29","nodeType":"YulIdentifier","src":"3782:6:29"}],"functionName":{"name":"shl","nativeSrc":"3775:3:29","nodeType":"YulIdentifier","src":"3775:3:29"},"nativeSrc":"3775:14:29","nodeType":"YulFunctionCall","src":"3775:14:29"},{"kind":"number","nativeSrc":"3791:3:29","nodeType":"YulLiteral","src":"3791:3:29","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"3771:3:29","nodeType":"YulIdentifier","src":"3771:3:29"},"nativeSrc":"3771:24:29","nodeType":"YulFunctionCall","src":"3771:24:29"},{"arguments":[{"kind":"number","nativeSrc":"3801:1:29","nodeType":"YulLiteral","src":"3801:1:29","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"3797:3:29","nodeType":"YulIdentifier","src":"3797:3:29"},"nativeSrc":"3797:6:29","nodeType":"YulFunctionCall","src":"3797:6:29"}],"functionName":{"name":"shr","nativeSrc":"3767:3:29","nodeType":"YulIdentifier","src":"3767:3:29"},"nativeSrc":"3767:37:29","nodeType":"YulFunctionCall","src":"3767:37:29"}],"functionName":{"name":"not","nativeSrc":"3763:3:29","nodeType":"YulIdentifier","src":"3763:3:29"},"nativeSrc":"3763:42:29","nodeType":"YulFunctionCall","src":"3763:42:29"}],"functionName":{"name":"and","nativeSrc":"3748:3:29","nodeType":"YulIdentifier","src":"3748:3:29"},"nativeSrc":"3748:58:29","nodeType":"YulFunctionCall","src":"3748:58:29"}],"functionName":{"name":"sstore","nativeSrc":"3733:6:29","nodeType":"YulIdentifier","src":"3733:6:29"},"nativeSrc":"3733:74:29","nodeType":"YulFunctionCall","src":"3733:74:29"},"nativeSrc":"3733:74:29","nodeType":"YulExpressionStatement","src":"3733:74:29"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"3626:7:29","nodeType":"YulIdentifier","src":"3626:7:29"},{"name":"newLen","nativeSrc":"3635:6:29","nodeType":"YulIdentifier","src":"3635:6:29"}],"functionName":{"name":"lt","nativeSrc":"3623:2:29","nodeType":"YulIdentifier","src":"3623:2:29"},"nativeSrc":"3623:19:29","nodeType":"YulFunctionCall","src":"3623:19:29"},"nativeSrc":"3620:201:29","nodeType":"YulIf","src":"3620:201:29"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"3841:4:29","nodeType":"YulIdentifier","src":"3841:4:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3855:1:29","nodeType":"YulLiteral","src":"3855:1:29","type":"","value":"1"},{"name":"newLen","nativeSrc":"3858:6:29","nodeType":"YulIdentifier","src":"3858:6:29"}],"functionName":{"name":"shl","nativeSrc":"3851:3:29","nodeType":"YulIdentifier","src":"3851:3:29"},"nativeSrc":"3851:14:29","nodeType":"YulFunctionCall","src":"3851:14:29"},{"kind":"number","nativeSrc":"3867:1:29","nodeType":"YulLiteral","src":"3867:1:29","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3847:3:29","nodeType":"YulIdentifier","src":"3847:3:29"},"nativeSrc":"3847:22:29","nodeType":"YulFunctionCall","src":"3847:22:29"}],"functionName":{"name":"sstore","nativeSrc":"3834:6:29","nodeType":"YulIdentifier","src":"3834:6:29"},"nativeSrc":"3834:36:29","nodeType":"YulFunctionCall","src":"3834:36:29"},"nativeSrc":"3834:36:29","nodeType":"YulExpressionStatement","src":"3834:36:29"}]},"nativeSrc":"3217:663:29","nodeType":"YulCase","src":"3217:663:29","value":{"kind":"number","nativeSrc":"3222:1:29","nodeType":"YulLiteral","src":"3222:1:29","type":"","value":"1"}},{"body":{"nativeSrc":"3897:234:29","nodeType":"YulBlock","src":"3897:234:29","statements":[{"nativeSrc":"3911:14:29","nodeType":"YulVariableDeclaration","src":"3911:14:29","value":{"kind":"number","nativeSrc":"3924:1:29","nodeType":"YulLiteral","src":"3924:1:29","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"3915:5:29","nodeType":"YulTypedName","src":"3915:5:29","type":""}]},{"body":{"nativeSrc":"3960:67:29","nodeType":"YulBlock","src":"3960:67:29","statements":[{"nativeSrc":"3978:35:29","nodeType":"YulAssignment","src":"3978:35:29","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3997:3:29","nodeType":"YulIdentifier","src":"3997:3:29"},{"name":"srcOffset","nativeSrc":"4002:9:29","nodeType":"YulIdentifier","src":"4002:9:29"}],"functionName":{"name":"add","nativeSrc":"3993:3:29","nodeType":"YulIdentifier","src":"3993:3:29"},"nativeSrc":"3993:19:29","nodeType":"YulFunctionCall","src":"3993:19:29"}],"functionName":{"name":"mload","nativeSrc":"3987:5:29","nodeType":"YulIdentifier","src":"3987:5:29"},"nativeSrc":"3987:26:29","nodeType":"YulFunctionCall","src":"3987:26:29"},"variableNames":[{"name":"value","nativeSrc":"3978:5:29","nodeType":"YulIdentifier","src":"3978:5:29"}]}]},"condition":{"name":"newLen","nativeSrc":"3941:6:29","nodeType":"YulIdentifier","src":"3941:6:29"},"nativeSrc":"3938:89:29","nodeType":"YulIf","src":"3938:89:29"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"4047:4:29","nodeType":"YulIdentifier","src":"4047:4:29"},{"arguments":[{"name":"value","nativeSrc":"4106:5:29","nodeType":"YulIdentifier","src":"4106:5:29"},{"name":"newLen","nativeSrc":"4113:6:29","nodeType":"YulIdentifier","src":"4113:6:29"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"4053:52:29","nodeType":"YulIdentifier","src":"4053:52:29"},"nativeSrc":"4053:67:29","nodeType":"YulFunctionCall","src":"4053:67:29"}],"functionName":{"name":"sstore","nativeSrc":"4040:6:29","nodeType":"YulIdentifier","src":"4040:6:29"},"nativeSrc":"4040:81:29","nodeType":"YulFunctionCall","src":"4040:81:29"},"nativeSrc":"4040:81:29","nodeType":"YulExpressionStatement","src":"4040:81:29"}]},"nativeSrc":"3889:242:29","nodeType":"YulCase","src":"3889:242:29","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"3197:6:29","nodeType":"YulIdentifier","src":"3197:6:29"},{"kind":"number","nativeSrc":"3205:2:29","nodeType":"YulLiteral","src":"3205:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"3194:2:29","nodeType":"YulIdentifier","src":"3194:2:29"},"nativeSrc":"3194:14:29","nodeType":"YulFunctionCall","src":"3194:14:29"},"nativeSrc":"3187:944:29","nodeType":"YulSwitch","src":"3187:944:29"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"2792:1345:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"2873:4:29","nodeType":"YulTypedName","src":"2873:4:29","type":""},{"name":"src","nativeSrc":"2879:3:29","nodeType":"YulTypedName","src":"2879:3:29","type":""}],"src":"2792:1345:29"},{"body":{"nativeSrc":"4243:102:29","nodeType":"YulBlock","src":"4243:102:29","statements":[{"nativeSrc":"4253:26:29","nodeType":"YulAssignment","src":"4253:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"4265:9:29","nodeType":"YulIdentifier","src":"4265:9:29"},{"kind":"number","nativeSrc":"4276:2:29","nodeType":"YulLiteral","src":"4276:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4261:3:29","nodeType":"YulIdentifier","src":"4261:3:29"},"nativeSrc":"4261:18:29","nodeType":"YulFunctionCall","src":"4261:18:29"},"variableNames":[{"name":"tail","nativeSrc":"4253:4:29","nodeType":"YulIdentifier","src":"4253:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4295:9:29","nodeType":"YulIdentifier","src":"4295:9:29"},{"arguments":[{"name":"value0","nativeSrc":"4310:6:29","nodeType":"YulIdentifier","src":"4310:6:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4326:3:29","nodeType":"YulLiteral","src":"4326:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"4331:1:29","nodeType":"YulLiteral","src":"4331:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4322:3:29","nodeType":"YulIdentifier","src":"4322:3:29"},"nativeSrc":"4322:11:29","nodeType":"YulFunctionCall","src":"4322:11:29"},{"kind":"number","nativeSrc":"4335:1:29","nodeType":"YulLiteral","src":"4335:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4318:3:29","nodeType":"YulIdentifier","src":"4318:3:29"},"nativeSrc":"4318:19:29","nodeType":"YulFunctionCall","src":"4318:19:29"}],"functionName":{"name":"and","nativeSrc":"4306:3:29","nodeType":"YulIdentifier","src":"4306:3:29"},"nativeSrc":"4306:32:29","nodeType":"YulFunctionCall","src":"4306:32:29"}],"functionName":{"name":"mstore","nativeSrc":"4288:6:29","nodeType":"YulIdentifier","src":"4288:6:29"},"nativeSrc":"4288:51:29","nodeType":"YulFunctionCall","src":"4288:51:29"},"nativeSrc":"4288:51:29","nodeType":"YulExpressionStatement","src":"4288:51:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"4142:203:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4212:9:29","nodeType":"YulTypedName","src":"4212:9:29","type":""},{"name":"value0","nativeSrc":"4223:6:29","nodeType":"YulTypedName","src":"4223:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4234:4:29","nodeType":"YulTypedName","src":"4234:4:29","type":""}],"src":"4142:203:29"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162001625380380620016258339810160408190526200003491620001b4565b3382826000620000458382620002af565b506001620000548282620002af565b5050506001600160a01b0381166200008657604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b62000091816200009a565b5050506200037b565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200011457600080fd5b81516001600160401b0380821115620001315762000131620000ec565b604051601f8301601f19908116603f011681019082821181831017156200015c576200015c620000ec565b81604052838152602092508660208588010111156200017a57600080fd5b600091505b838210156200019e57858201830151818301840152908201906200017f565b6000602085830101528094505050505092915050565b60008060408385031215620001c857600080fd5b82516001600160401b0380821115620001e057600080fd5b620001ee8683870162000102565b935060208501519150808211156200020557600080fd5b50620002148582860162000102565b9150509250929050565b600181811c908216806200023357607f821691505b6020821081036200025457634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002aa576000816000526020600020601f850160051c81016020861015620002855750805b601f850160051c820191505b81811015620002a65782815560010162000291565b5050505b505050565b81516001600160401b03811115620002cb57620002cb620000ec565b620002e381620002dc84546200021e565b846200025a565b602080601f8311600181146200031b5760008415620003025750858301515b600019600386901b1c1916600185901b178555620002a6565b600085815260208120601f198616915b828110156200034c578886015182559484019460019091019084016200032b565b50858210156200036b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61129a806200038b6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063a22cb46511610071578063a22cb46514610239578063b88d4fde1461024c578063c87b56dd1461025f578063e985e9c514610272578063f2fde38b1461028557600080fd5b806370a0823114610205578063715018a6146102185780638da5cb5b1461022057806395d89b411461023157600080fd5b806323b872dd116100e957806323b872dd1461019857806342842e0e146101ab57806354ba0f27146101be57806355f804b3146101df5780636352211e146101f257600080fd5b806301ffc9a71461011b57806306fdde0314610143578063081812fc14610158578063095ea7b314610183575b600080fd5b61012e610129366004610d82565b610298565b60405190151581526020015b60405180910390f35b61014b6102ea565b60405161013a9190610def565b61016b610166366004610e02565b61037c565b6040516001600160a01b03909116815260200161013a565b610196610191366004610e37565b6103a5565b005b6101966101a6366004610e61565b6103b4565b6101966101b9366004610e61565b610444565b6101d16101cc366004610e9d565b610464565b60405190815260200161013a565b6101966101ed366004610f44565b610482565b61016b610200366004610e02565b610496565b6101d1610213366004610e9d565b6104a1565b6101966104e9565b6006546001600160a01b031661016b565b61014b6104fd565b610196610247366004610f8d565b61050c565b61019661025a366004610fc9565b610517565b61014b61026d366004610e02565b61052f565b61012e610280366004611045565b610597565b610196610293366004610e9d565b6105c5565b60006001600160e01b031982166380ac58cd60e01b14806102c957506001600160e01b03198216635b5e139f60e01b145b806102e457506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102f990611078565b80601f016020809104026020016040519081016040528092919081815260200182805461032590611078565b80156103725780601f1061034757610100808354040283529160200191610372565b820191906000526020600020905b81548152906001019060200180831161035557829003601f168201915b5050505050905090565b600061038782610603565b506000828152600460205260409020546001600160a01b03166102e4565b6103b082823361063c565b5050565b6001600160a01b0382166103e357604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006103f0838333610649565b9050836001600160a01b0316816001600160a01b03161461043e576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016103da565b50505050565b61045f83838360405180602001604052806000815250610517565b505050565b600080600754600161047691906110b2565b90506102e48382610742565b61048a61075c565b60086103b0828261111b565b60006102e482610603565b60006001600160a01b0382166104cd576040516322718ad960e21b8152600060048201526024016103da565b506001600160a01b031660009081526003602052604090205490565b6104f161075c565b6104fb6000610789565b565b6060600180546102f990611078565b6103b03383836107db565b6105228484846103b4565b61043e338585858561087a565b606061053a82610603565b5060006105456109a5565b905060008151116105655760405180602001604052806000815250610590565b8061056f846109b4565b6040516020016105809291906111db565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6105cd61075c565b6001600160a01b0381166105f757604051631e4fbdf760e01b8152600060048201526024016103da565b61060081610789565b50565b6000818152600260205260408120546001600160a01b0316806102e457604051637e27328960e01b8152600481018490526024016103da565b61045f8383836001610a47565b6000828152600260205260408120546001600160a01b039081169083161561067657610676818486610b4d565b6001600160a01b038116156106b457610693600085600080610a47565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b038516156106e3576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6103b0828260405180602001604052806000815250610bb1565b6006546001600160a01b031633146104fb5760405163118cdaa760e01b81523360048201526024016103da565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661080d57604051630b61174360e31b81526001600160a01b03831660048201526024016103da565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561099e57604051630a85bd0160e11b81526001600160a01b0384169063150b7a02906108bc90889088908790879060040161120a565b6020604051808303816000875af19250505080156108f7575060408051601f3d908101601f191682019092526108f491810190611247565b60015b610960573d808015610925576040519150601f19603f3d011682016040523d82523d6000602084013e61092a565b606091505b50805160000361095857604051633250574960e11b81526001600160a01b03851660048201526024016103da565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b1461099c57604051633250574960e11b81526001600160a01b03851660048201526024016103da565b505b5050505050565b6060600880546102f990611078565b606060006109c183610bc9565b600101905060008167ffffffffffffffff8111156109e1576109e1610eb8565b6040519080825280601f01601f191660200182016040528015610a0b576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610a1557509392505050565b8080610a5b57506001600160a01b03821615155b15610b1d576000610a6b84610603565b90506001600160a01b03831615801590610a975750826001600160a01b0316816001600160a01b031614155b8015610aaa5750610aa88184610597565b155b15610ad35760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016103da565b8115610b1b5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610b58838383610ca1565b61045f576001600160a01b038316610b8657604051637e27328960e01b8152600481018290526024016103da565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016103da565b610bbb8383610d07565b61045f33600085858561087a565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610c085772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610c34576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610c5257662386f26fc10000830492506010015b6305f5e1008310610c6a576305f5e100830492506008015b6127108310610c7e57612710830492506004015b60648310610c90576064830492506002015b600a83106102e45760010192915050565b60006001600160a01b03831615801590610cff5750826001600160a01b0316846001600160a01b03161480610cdb5750610cdb8484610597565b80610cff57506000828152600460205260409020546001600160a01b038481169116145b949350505050565b6001600160a01b038216610d3157604051633250574960e11b8152600060048201526024016103da565b6000610d3f83836000610649565b90506001600160a01b0381161561045f576040516339e3563760e11b8152600060048201526024016103da565b6001600160e01b03198116811461060057600080fd5b600060208284031215610d9457600080fd5b813561059081610d6c565b60005b83811015610dba578181015183820152602001610da2565b50506000910152565b60008151808452610ddb816020860160208601610d9f565b601f01601f19169290920160200192915050565b6020815260006105906020830184610dc3565b600060208284031215610e1457600080fd5b5035919050565b80356001600160a01b0381168114610e3257600080fd5b919050565b60008060408385031215610e4a57600080fd5b610e5383610e1b565b946020939093013593505050565b600080600060608486031215610e7657600080fd5b610e7f84610e1b565b9250610e8d60208501610e1b565b9150604084013590509250925092565b600060208284031215610eaf57600080fd5b61059082610e1b565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115610ee957610ee9610eb8565b604051601f8501601f19908116603f01168101908282118183101715610f1157610f11610eb8565b81604052809350858152868686011115610f2a57600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215610f5657600080fd5b813567ffffffffffffffff811115610f6d57600080fd5b8201601f81018413610f7e57600080fd5b610cff84823560208401610ece565b60008060408385031215610fa057600080fd5b610fa983610e1b565b915060208301358015158114610fbe57600080fd5b809150509250929050565b60008060008060808587031215610fdf57600080fd5b610fe885610e1b565b9350610ff660208601610e1b565b925060408501359150606085013567ffffffffffffffff81111561101957600080fd5b8501601f8101871361102a57600080fd5b61103987823560208401610ece565b91505092959194509250565b6000806040838503121561105857600080fd5b61106183610e1b565b915061106f60208401610e1b565b90509250929050565b600181811c9082168061108c57607f821691505b6020821081036110ac57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102e457634e487b7160e01b600052601160045260246000fd5b601f82111561045f576000816000526020600020601f850160051c810160208610156110fc5750805b601f850160051c820191505b8181101561099c57828155600101611108565b815167ffffffffffffffff81111561113557611135610eb8565b611149816111438454611078565b846110d3565b602080601f83116001811461117e57600084156111665750858301515b600019600386901b1c1916600185901b17855561099c565b600085815260208120601f198616915b828110156111ad5788860151825594840194600190910190840161118e565b50858210156111cb5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600083516111ed818460208801610d9f565b835190830190611201818360208801610d9f565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061123d90830184610dc3565b9695505050505050565b60006020828403121561125957600080fd5b815161059081610d6c56fea2646970667358221220ec1663fe6bf310f7d793178cfc003fd10929524c457983122905e42e608e998064736f6c63430008170033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1625 CODESIZE SUB DUP1 PUSH3 0x1625 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1B4 JUMP JUMPDEST CALLER DUP3 DUP3 PUSH1 0x0 PUSH3 0x45 DUP4 DUP3 PUSH3 0x2AF JUMP JUMPDEST POP PUSH1 0x1 PUSH3 0x54 DUP3 DUP3 PUSH3 0x2AF JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x86 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x91 DUP2 PUSH3 0x9A JUMP JUMPDEST POP POP POP PUSH3 0x37B JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x131 JUMPI PUSH3 0x131 PUSH3 0xEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x15C JUMPI PUSH3 0x15C PUSH3 0xEC JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x19E JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x17F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1EE DUP7 DUP4 DUP8 ADD PUSH3 0x102 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x214 DUP6 DUP3 DUP7 ADD PUSH3 0x102 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x233 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x254 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x2AA JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x285 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x2A6 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x291 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x2CB JUMPI PUSH3 0x2CB PUSH3 0xEC JUMP JUMPDEST PUSH3 0x2E3 DUP2 PUSH3 0x2DC DUP5 SLOAD PUSH3 0x21E JUMP JUMPDEST DUP5 PUSH3 0x25A JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x31B JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x302 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x2A6 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x34C JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x32B JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x36B JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x129A DUP1 PUSH3 0x38B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x54BA0F27 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0xD82 JUMP JUMPDEST PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH2 0x2EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0xDEF JUMP JUMPDEST PUSH2 0x16B PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0xE02 JUMP JUMPDEST PUSH2 0x37C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13A JUMP JUMPDEST PUSH2 0x196 PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0xE37 JUMP JUMPDEST PUSH2 0x3A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x196 PUSH2 0x1A6 CALLDATASIZE PUSH1 0x4 PUSH2 0xE61 JUMP JUMPDEST PUSH2 0x3B4 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0xE61 JUMP JUMPDEST PUSH2 0x444 JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x1CC CALLDATASIZE PUSH1 0x4 PUSH2 0xE9D JUMP JUMPDEST PUSH2 0x464 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13A JUMP JUMPDEST PUSH2 0x196 PUSH2 0x1ED CALLDATASIZE PUSH1 0x4 PUSH2 0xF44 JUMP JUMPDEST PUSH2 0x482 JUMP JUMPDEST PUSH2 0x16B PUSH2 0x200 CALLDATASIZE PUSH1 0x4 PUSH2 0xE02 JUMP JUMPDEST PUSH2 0x496 JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0xE9D JUMP JUMPDEST PUSH2 0x4A1 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x4E9 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x16B JUMP JUMPDEST PUSH2 0x14B PUSH2 0x4FD JUMP JUMPDEST PUSH2 0x196 PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0xF8D JUMP JUMPDEST PUSH2 0x50C JUMP JUMPDEST PUSH2 0x196 PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0xFC9 JUMP JUMPDEST PUSH2 0x517 JUMP JUMPDEST PUSH2 0x14B PUSH2 0x26D CALLDATASIZE PUSH1 0x4 PUSH2 0xE02 JUMP JUMPDEST PUSH2 0x52F JUMP JUMPDEST PUSH2 0x12E PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0x1045 JUMP JUMPDEST PUSH2 0x597 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x293 CALLDATASIZE PUSH1 0x4 PUSH2 0xE9D JUMP JUMPDEST PUSH2 0x5C5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x2C9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x2E4 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x2F9 SWAP1 PUSH2 0x1078 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x325 SWAP1 PUSH2 0x1078 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x372 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x347 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x372 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x355 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x387 DUP3 PUSH2 0x603 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2E4 JUMP JUMPDEST PUSH2 0x3B0 DUP3 DUP3 CALLER PUSH2 0x63C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3E3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3F0 DUP4 DUP4 CALLER PUSH2 0x649 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x45F DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x517 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 SLOAD PUSH1 0x1 PUSH2 0x476 SWAP2 SWAP1 PUSH2 0x10B2 JUMP JUMPDEST SWAP1 POP PUSH2 0x2E4 DUP4 DUP3 PUSH2 0x742 JUMP JUMPDEST PUSH2 0x48A PUSH2 0x75C JUMP JUMPDEST PUSH1 0x8 PUSH2 0x3B0 DUP3 DUP3 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E4 DUP3 PUSH2 0x603 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4CD JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3DA JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4F1 PUSH2 0x75C JUMP JUMPDEST PUSH2 0x4FB PUSH1 0x0 PUSH2 0x789 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x2F9 SWAP1 PUSH2 0x1078 JUMP JUMPDEST PUSH2 0x3B0 CALLER DUP4 DUP4 PUSH2 0x7DB JUMP JUMPDEST PUSH2 0x522 DUP5 DUP5 DUP5 PUSH2 0x3B4 JUMP JUMPDEST PUSH2 0x43E CALLER DUP6 DUP6 DUP6 DUP6 PUSH2 0x87A JUMP JUMPDEST PUSH1 0x60 PUSH2 0x53A DUP3 PUSH2 0x603 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x545 PUSH2 0x9A5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x565 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x590 JUMP JUMPDEST DUP1 PUSH2 0x56F DUP5 PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x580 SWAP3 SWAP2 SWAP1 PUSH2 0x11DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x5CD PUSH2 0x75C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3DA JUMP JUMPDEST PUSH2 0x600 DUP2 PUSH2 0x789 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x2E4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3DA JUMP JUMPDEST PUSH2 0x45F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA47 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x676 JUMPI PUSH2 0x676 DUP2 DUP5 DUP7 PUSH2 0xB4D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x6B4 JUMPI PUSH2 0x693 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0xA47 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x6E3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x3B0 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xBB1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4FB JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x80D JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x99E JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x8BC SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x120A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x8F7 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x8F4 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1247 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x960 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x925 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x92A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x958 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3DA JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0x99C JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3DA JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD PUSH2 0x2F9 SWAP1 PUSH2 0x1078 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x9C1 DUP4 PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9E1 JUMPI PUSH2 0x9E1 PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA0B JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xA15 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0xA5B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xB1D JUMPI PUSH1 0x0 PUSH2 0xA6B DUP5 PUSH2 0x603 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xA97 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xAAA JUMPI POP PUSH2 0xAA8 DUP2 DUP5 PUSH2 0x597 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xAD3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3DA JUMP JUMPDEST DUP2 ISZERO PUSH2 0xB1B JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xB58 DUP4 DUP4 DUP4 PUSH2 0xCA1 JUMP JUMPDEST PUSH2 0x45F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB86 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x3DA JUMP JUMPDEST PUSH2 0xBBB DUP4 DUP4 PUSH2 0xD07 JUMP JUMPDEST PUSH2 0x45F CALLER PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x87A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xC08 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xC34 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xC52 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xC6A JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xC7E JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xC90 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2E4 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xCFF JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xCDB JUMPI POP PUSH2 0xCDB DUP5 DUP5 PUSH2 0x597 JUMP JUMPDEST DUP1 PUSH2 0xCFF JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD31 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD3F DUP4 DUP4 PUSH1 0x0 PUSH2 0x649 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x45F JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x600 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x590 DUP2 PUSH2 0xD6C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDBA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xDA2 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xDDB DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD9F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x590 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE53 DUP4 PUSH2 0xE1B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7F DUP5 PUSH2 0xE1B JUMP JUMPDEST SWAP3 POP PUSH2 0xE8D PUSH1 0x20 DUP6 ADD PUSH2 0xE1B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x590 DUP3 PUSH2 0xE1B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0xEE9 JUMPI PUSH2 0xEE9 PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF11 JUMPI PUSH2 0xF11 PUSH2 0xEB8 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0xF2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0xF7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCFF DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0xECE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFA9 DUP4 PUSH2 0xE1B JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xFBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xFDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFE8 DUP6 PUSH2 0xE1B JUMP JUMPDEST SWAP4 POP PUSH2 0xFF6 PUSH1 0x20 DUP7 ADD PUSH2 0xE1B JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1019 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x102A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1039 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0xECE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1058 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1061 DUP4 PUSH2 0xE1B JUMP JUMPDEST SWAP2 POP PUSH2 0x106F PUSH1 0x20 DUP5 ADD PUSH2 0xE1B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x108C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10AC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2E4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x45F JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x10FC JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x99C JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1108 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1135 JUMPI PUSH2 0x1135 PUSH2 0xEB8 JUMP JUMPDEST PUSH2 0x1149 DUP2 PUSH2 0x1143 DUP5 SLOAD PUSH2 0x1078 JUMP JUMPDEST DUP5 PUSH2 0x10D3 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x117E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1166 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x99C JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x11AD JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x118E JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x11CB JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x11ED DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xD9F JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1201 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD9F JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x123D SWAP1 DUP4 ADD DUP5 PUSH2 0xDC3 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x590 DUP2 PUSH2 0xD6C JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC AND PUSH4 0xFE6BF310 0xF7 0xD7 SWAP4 OR DUP13 0xFC STOP EXTCODEHASH 0xD1 MULMOD 0x29 MSTORE 0x4C GASLIMIT PUSH26 0x83122905E42E608E998064736F6C634300081700330000000000 ","sourceMap":"170:797:27:-:0;;;310:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;415:10;393:4;399:6;1446:5:11;:13;393:4:27;1446:5:11;:13;:::i;:::-;-1:-1:-1;1469:7:11;:17;1479:7;1469;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:6;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:6;;1350:1;1322:31;;;4288:51:29;4261:18;;1322:31:6;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;310:119:27;;170:797;;2912:187:6;3004:6;;;-1:-1:-1;;;;;3020:17:6;;;-1:-1:-1;;;;;;3020:17:6;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:127:29:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:844;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:29;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:29;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;732:3;725:4;720:2;712:6;708:15;704:26;701:35;698:55;;;749:1;746;739:12;698:55;771:1;762:10;;781:133;795:2;792:1;789:9;781:133;;;883:14;;;879:23;;873:30;852:14;;;848:23;;841:63;806:10;;;;781:133;;;958:1;951:4;946:2;938:6;934:15;930:26;923:37;978:6;969:15;;;;;;146:844;;;;:::o;995:562::-;1094:6;1102;1155:2;1143:9;1134:7;1130:23;1126:32;1123:52;;;1171:1;1168;1161:12;1123:52;1198:16;;-1:-1:-1;;;;;1263:14:29;;;1260:34;;;1290:1;1287;1280:12;1260:34;1313:61;1366:7;1357:6;1346:9;1342:22;1313:61;:::i;:::-;1303:71;;1420:2;1409:9;1405:18;1399:25;1383:41;;1449:2;1439:8;1436:16;1433:36;;;1465:1;1462;1455:12;1433:36;;1488:63;1543:7;1532:8;1521:9;1517:24;1488:63;:::i;:::-;1478:73;;;995:562;;;;;:::o;1562:380::-;1641:1;1637:12;;;;1684;;;1705:61;;1759:4;1751:6;1747:17;1737:27;;1705:61;1812:2;1804:6;1801:14;1781:18;1778:38;1775:161;;1858:10;1853:3;1849:20;1846:1;1839:31;1893:4;1890:1;1883:15;1921:4;1918:1;1911:15;1775:161;;1562:380;;;:::o;2073:543::-;2175:2;2170:3;2167:11;2164:446;;;2211:1;2235:5;2232:1;2225:16;2279:4;2276:1;2266:18;2349:2;2337:10;2333:19;2330:1;2326:27;2320:4;2316:38;2385:4;2373:10;2370:20;2367:47;;;-1:-1:-1;2408:4:29;2367:47;2463:2;2458:3;2454:12;2451:1;2447:20;2441:4;2437:31;2427:41;;2518:82;2536:2;2529:5;2526:13;2518:82;;;2581:17;;;2562:1;2551:13;2518:82;;;2522:3;;;2164:446;2073:543;;;:::o;2792:1345::-;2912:10;;-1:-1:-1;;;;;2934:30:29;;2931:56;;;2967:18;;:::i;:::-;2996:97;3086:6;3046:38;3078:4;3072:11;3046:38;:::i;:::-;3040:4;2996:97;:::i;:::-;3148:4;;3205:2;3194:14;;3222:1;3217:663;;;;3924:1;3941:6;3938:89;;;-1:-1:-1;3993:19:29;;;3987:26;3938:89;-1:-1:-1;;2749:1:29;2745:11;;;2741:24;2737:29;2727:40;2773:1;2769:11;;;2724:57;4040:81;;3187:944;;3217:663;2020:1;2013:14;;;2057:4;2044:18;;-1:-1:-1;;3253:20:29;;;3371:236;3385:7;3382:1;3379:14;3371:236;;;3474:19;;;3468:26;3453:42;;3566:27;;;;3534:1;3522:14;;;;3401:19;;3371:236;;;3375:3;3635:6;3626:7;3623:19;3620:201;;;3696:19;;;3690:26;-1:-1:-1;;3779:1:29;3775:14;;;3791:3;3771:24;3767:37;3763:42;3748:58;3733:74;;3620:201;-1:-1:-1;;;;;3867:1:29;3851:14;;;3847:22;3834:36;;-1:-1:-1;2792:1345:29:o;4142:203::-;170:797:27;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_2127":{"entryPoint":1596,"id":2127,"parameterSlots":3,"returnSlots":0},"@_approve_2193":{"entryPoint":2631,"id":2193,"parameterSlots":4,"returnSlots":0},"@_baseURI_7047":{"entryPoint":2469,"id":7047,"parameterSlots":0,"returnSlots":1},"@_checkAuthorized_1767":{"entryPoint":2893,"id":1767,"parameterSlots":3,"returnSlots":0},"@_checkOwner_484":{"entryPoint":1884,"id":484,"parameterSlots":0,"returnSlots":0},"@_getApproved_1694":{"entryPoint":null,"id":1694,"parameterSlots":1,"returnSlots":1},"@_isAuthorized_1730":{"entryPoint":3233,"id":1730,"parameterSlots":3,"returnSlots":1},"@_mint_1923":{"entryPoint":3335,"id":1923,"parameterSlots":2,"returnSlots":0},"@_msgSender_2512":{"entryPoint":null,"id":2512,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1681":{"entryPoint":null,"id":1681,"parameterSlots":1,"returnSlots":1},"@_requireOwned_2259":{"entryPoint":1539,"id":2259,"parameterSlots":1,"returnSlots":1},"@_safeMint_1938":{"entryPoint":1858,"id":1938,"parameterSlots":2,"returnSlots":0},"@_safeMint_1968":{"entryPoint":2993,"id":1968,"parameterSlots":3,"returnSlots":0},"@_setApprovalForAll_2230":{"entryPoint":2011,"id":2230,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_546":{"entryPoint":1929,"id":546,"parameterSlots":1,"returnSlots":0},"@_update_1873":{"entryPoint":1609,"id":1873,"parameterSlots":3,"returnSlots":1},"@approve_1524":{"entryPoint":933,"id":1524,"parameterSlots":2,"returnSlots":0},"@balanceOf_1432":{"entryPoint":1185,"id":1432,"parameterSlots":1,"returnSlots":1},"@checkOnERC721Received_2499":{"entryPoint":2170,"id":2499,"parameterSlots":5,"returnSlots":0},"@getApproved_1541":{"entryPoint":892,"id":1541,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_1574":{"entryPoint":1431,"id":1574,"parameterSlots":2,"returnSlots":1},"@log10_4781":{"entryPoint":3017,"id":4781,"parameterSlots":1,"returnSlots":1},"@mintNFT_7068":{"entryPoint":1124,"id":7068,"parameterSlots":1,"returnSlots":1},"@name_1454":{"entryPoint":746,"id":1454,"parameterSlots":0,"returnSlots":1},"@ownerOf_1445":{"entryPoint":1174,"id":1445,"parameterSlots":1,"returnSlots":1},"@owner_467":{"entryPoint":null,"id":467,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_498":{"entryPoint":1257,"id":498,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_1638":{"entryPoint":1092,"id":1638,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1668":{"entryPoint":1303,"id":1668,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1557":{"entryPoint":1292,"id":1557,"parameterSlots":2,"returnSlots":0},"@setBaseURI_7038":{"entryPoint":1154,"id":7038,"parameterSlots":1,"returnSlots":0},"@supportsInterface_1404":{"entryPoint":664,"id":1404,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3390":{"entryPoint":null,"id":3390,"parameterSlots":1,"returnSlots":1},"@symbol_1463":{"entryPoint":1277,"id":1463,"parameterSlots":0,"returnSlots":1},"@toString_2767":{"entryPoint":2484,"id":2767,"parameterSlots":1,"returnSlots":1},"@tokenURI_1499":{"entryPoint":1327,"id":1499,"parameterSlots":1,"returnSlots":1},"@transferFrom_1620":{"entryPoint":948,"id":1620,"parameterSlots":3,"returnSlots":0},"@transferOwnership_526":{"entryPoint":1477,"id":526,"parameterSlots":1,"returnSlots":0},"abi_decode_address":{"entryPoint":3611,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_string":{"entryPoint":3790,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3741,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":4165,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3681,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":4041,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":3981,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3639,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":3458,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":4679,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":3908,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":3586,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":3523,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":4571,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4618,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3567,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4274,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":4307,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":4379,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":3487,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4216,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x12":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3768,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":3436,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:10242:29","nodeType":"YulBlock","src":"0:10242:29","statements":[{"nativeSrc":"6:3:29","nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nativeSrc":"58:87:29","nodeType":"YulBlock","src":"58:87:29","statements":[{"body":{"nativeSrc":"123:16:29","nodeType":"YulBlock","src":"123:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"132:1:29","nodeType":"YulLiteral","src":"132:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"135:1:29","nodeType":"YulLiteral","src":"135:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"125:6:29","nodeType":"YulIdentifier","src":"125:6:29"},"nativeSrc":"125:12:29","nodeType":"YulFunctionCall","src":"125:12:29"},"nativeSrc":"125:12:29","nodeType":"YulExpressionStatement","src":"125:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"81:5:29","nodeType":"YulIdentifier","src":"81:5:29"},{"arguments":[{"name":"value","nativeSrc":"92:5:29","nodeType":"YulIdentifier","src":"92:5:29"},{"arguments":[{"kind":"number","nativeSrc":"103:3:29","nodeType":"YulLiteral","src":"103:3:29","type":"","value":"224"},{"kind":"number","nativeSrc":"108:10:29","nodeType":"YulLiteral","src":"108:10:29","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nativeSrc":"99:3:29","nodeType":"YulIdentifier","src":"99:3:29"},"nativeSrc":"99:20:29","nodeType":"YulFunctionCall","src":"99:20:29"}],"functionName":{"name":"and","nativeSrc":"88:3:29","nodeType":"YulIdentifier","src":"88:3:29"},"nativeSrc":"88:32:29","nodeType":"YulFunctionCall","src":"88:32:29"}],"functionName":{"name":"eq","nativeSrc":"78:2:29","nodeType":"YulIdentifier","src":"78:2:29"},"nativeSrc":"78:43:29","nodeType":"YulFunctionCall","src":"78:43:29"}],"functionName":{"name":"iszero","nativeSrc":"71:6:29","nodeType":"YulIdentifier","src":"71:6:29"},"nativeSrc":"71:51:29","nodeType":"YulFunctionCall","src":"71:51:29"},"nativeSrc":"68:71:29","nodeType":"YulIf","src":"68:71:29"}]},"name":"validator_revert_bytes4","nativeSrc":"14:131:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"47:5:29","nodeType":"YulTypedName","src":"47:5:29","type":""}],"src":"14:131:29"},{"body":{"nativeSrc":"219:176:29","nodeType":"YulBlock","src":"219:176:29","statements":[{"body":{"nativeSrc":"265:16:29","nodeType":"YulBlock","src":"265:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"274:1:29","nodeType":"YulLiteral","src":"274:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"277:1:29","nodeType":"YulLiteral","src":"277:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"267:6:29","nodeType":"YulIdentifier","src":"267:6:29"},"nativeSrc":"267:12:29","nodeType":"YulFunctionCall","src":"267:12:29"},"nativeSrc":"267:12:29","nodeType":"YulExpressionStatement","src":"267:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"240:7:29","nodeType":"YulIdentifier","src":"240:7:29"},{"name":"headStart","nativeSrc":"249:9:29","nodeType":"YulIdentifier","src":"249:9:29"}],"functionName":{"name":"sub","nativeSrc":"236:3:29","nodeType":"YulIdentifier","src":"236:3:29"},"nativeSrc":"236:23:29","nodeType":"YulFunctionCall","src":"236:23:29"},{"kind":"number","nativeSrc":"261:2:29","nodeType":"YulLiteral","src":"261:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"232:3:29","nodeType":"YulIdentifier","src":"232:3:29"},"nativeSrc":"232:32:29","nodeType":"YulFunctionCall","src":"232:32:29"},"nativeSrc":"229:52:29","nodeType":"YulIf","src":"229:52:29"},{"nativeSrc":"290:36:29","nodeType":"YulVariableDeclaration","src":"290:36:29","value":{"arguments":[{"name":"headStart","nativeSrc":"316:9:29","nodeType":"YulIdentifier","src":"316:9:29"}],"functionName":{"name":"calldataload","nativeSrc":"303:12:29","nodeType":"YulIdentifier","src":"303:12:29"},"nativeSrc":"303:23:29","nodeType":"YulFunctionCall","src":"303:23:29"},"variables":[{"name":"value","nativeSrc":"294:5:29","nodeType":"YulTypedName","src":"294:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"359:5:29","nodeType":"YulIdentifier","src":"359:5:29"}],"functionName":{"name":"validator_revert_bytes4","nativeSrc":"335:23:29","nodeType":"YulIdentifier","src":"335:23:29"},"nativeSrc":"335:30:29","nodeType":"YulFunctionCall","src":"335:30:29"},"nativeSrc":"335:30:29","nodeType":"YulExpressionStatement","src":"335:30:29"},{"nativeSrc":"374:15:29","nodeType":"YulAssignment","src":"374:15:29","value":{"name":"value","nativeSrc":"384:5:29","nodeType":"YulIdentifier","src":"384:5:29"},"variableNames":[{"name":"value0","nativeSrc":"374:6:29","nodeType":"YulIdentifier","src":"374:6:29"}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"150:245:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"185:9:29","nodeType":"YulTypedName","src":"185:9:29","type":""},{"name":"dataEnd","nativeSrc":"196:7:29","nodeType":"YulTypedName","src":"196:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"208:6:29","nodeType":"YulTypedName","src":"208:6:29","type":""}],"src":"150:245:29"},{"body":{"nativeSrc":"495:92:29","nodeType":"YulBlock","src":"495:92:29","statements":[{"nativeSrc":"505:26:29","nodeType":"YulAssignment","src":"505:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"517:9:29","nodeType":"YulIdentifier","src":"517:9:29"},{"kind":"number","nativeSrc":"528:2:29","nodeType":"YulLiteral","src":"528:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"513:3:29","nodeType":"YulIdentifier","src":"513:3:29"},"nativeSrc":"513:18:29","nodeType":"YulFunctionCall","src":"513:18:29"},"variableNames":[{"name":"tail","nativeSrc":"505:4:29","nodeType":"YulIdentifier","src":"505:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"547:9:29","nodeType":"YulIdentifier","src":"547:9:29"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"572:6:29","nodeType":"YulIdentifier","src":"572:6:29"}],"functionName":{"name":"iszero","nativeSrc":"565:6:29","nodeType":"YulIdentifier","src":"565:6:29"},"nativeSrc":"565:14:29","nodeType":"YulFunctionCall","src":"565:14:29"}],"functionName":{"name":"iszero","nativeSrc":"558:6:29","nodeType":"YulIdentifier","src":"558:6:29"},"nativeSrc":"558:22:29","nodeType":"YulFunctionCall","src":"558:22:29"}],"functionName":{"name":"mstore","nativeSrc":"540:6:29","nodeType":"YulIdentifier","src":"540:6:29"},"nativeSrc":"540:41:29","nodeType":"YulFunctionCall","src":"540:41:29"},"nativeSrc":"540:41:29","nodeType":"YulExpressionStatement","src":"540:41:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"400:187:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"464:9:29","nodeType":"YulTypedName","src":"464:9:29","type":""},{"name":"value0","nativeSrc":"475:6:29","nodeType":"YulTypedName","src":"475:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"486:4:29","nodeType":"YulTypedName","src":"486:4:29","type":""}],"src":"400:187:29"},{"body":{"nativeSrc":"658:184:29","nodeType":"YulBlock","src":"658:184:29","statements":[{"nativeSrc":"668:10:29","nodeType":"YulVariableDeclaration","src":"668:10:29","value":{"kind":"number","nativeSrc":"677:1:29","nodeType":"YulLiteral","src":"677:1:29","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"672:1:29","nodeType":"YulTypedName","src":"672:1:29","type":""}]},{"body":{"nativeSrc":"737:63:29","nodeType":"YulBlock","src":"737:63:29","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"762:3:29","nodeType":"YulIdentifier","src":"762:3:29"},{"name":"i","nativeSrc":"767:1:29","nodeType":"YulIdentifier","src":"767:1:29"}],"functionName":{"name":"add","nativeSrc":"758:3:29","nodeType":"YulIdentifier","src":"758:3:29"},"nativeSrc":"758:11:29","nodeType":"YulFunctionCall","src":"758:11:29"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"781:3:29","nodeType":"YulIdentifier","src":"781:3:29"},{"name":"i","nativeSrc":"786:1:29","nodeType":"YulIdentifier","src":"786:1:29"}],"functionName":{"name":"add","nativeSrc":"777:3:29","nodeType":"YulIdentifier","src":"777:3:29"},"nativeSrc":"777:11:29","nodeType":"YulFunctionCall","src":"777:11:29"}],"functionName":{"name":"mload","nativeSrc":"771:5:29","nodeType":"YulIdentifier","src":"771:5:29"},"nativeSrc":"771:18:29","nodeType":"YulFunctionCall","src":"771:18:29"}],"functionName":{"name":"mstore","nativeSrc":"751:6:29","nodeType":"YulIdentifier","src":"751:6:29"},"nativeSrc":"751:39:29","nodeType":"YulFunctionCall","src":"751:39:29"},"nativeSrc":"751:39:29","nodeType":"YulExpressionStatement","src":"751:39:29"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"698:1:29","nodeType":"YulIdentifier","src":"698:1:29"},{"name":"length","nativeSrc":"701:6:29","nodeType":"YulIdentifier","src":"701:6:29"}],"functionName":{"name":"lt","nativeSrc":"695:2:29","nodeType":"YulIdentifier","src":"695:2:29"},"nativeSrc":"695:13:29","nodeType":"YulFunctionCall","src":"695:13:29"},"nativeSrc":"687:113:29","nodeType":"YulForLoop","post":{"nativeSrc":"709:19:29","nodeType":"YulBlock","src":"709:19:29","statements":[{"nativeSrc":"711:15:29","nodeType":"YulAssignment","src":"711:15:29","value":{"arguments":[{"name":"i","nativeSrc":"720:1:29","nodeType":"YulIdentifier","src":"720:1:29"},{"kind":"number","nativeSrc":"723:2:29","nodeType":"YulLiteral","src":"723:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"716:3:29","nodeType":"YulIdentifier","src":"716:3:29"},"nativeSrc":"716:10:29","nodeType":"YulFunctionCall","src":"716:10:29"},"variableNames":[{"name":"i","nativeSrc":"711:1:29","nodeType":"YulIdentifier","src":"711:1:29"}]}]},"pre":{"nativeSrc":"691:3:29","nodeType":"YulBlock","src":"691:3:29","statements":[]},"src":"687:113:29"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"820:3:29","nodeType":"YulIdentifier","src":"820:3:29"},{"name":"length","nativeSrc":"825:6:29","nodeType":"YulIdentifier","src":"825:6:29"}],"functionName":{"name":"add","nativeSrc":"816:3:29","nodeType":"YulIdentifier","src":"816:3:29"},"nativeSrc":"816:16:29","nodeType":"YulFunctionCall","src":"816:16:29"},{"kind":"number","nativeSrc":"834:1:29","nodeType":"YulLiteral","src":"834:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"809:6:29","nodeType":"YulIdentifier","src":"809:6:29"},"nativeSrc":"809:27:29","nodeType":"YulFunctionCall","src":"809:27:29"},"nativeSrc":"809:27:29","nodeType":"YulExpressionStatement","src":"809:27:29"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"592:250:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"636:3:29","nodeType":"YulTypedName","src":"636:3:29","type":""},{"name":"dst","nativeSrc":"641:3:29","nodeType":"YulTypedName","src":"641:3:29","type":""},{"name":"length","nativeSrc":"646:6:29","nodeType":"YulTypedName","src":"646:6:29","type":""}],"src":"592:250:29"},{"body":{"nativeSrc":"897:221:29","nodeType":"YulBlock","src":"897:221:29","statements":[{"nativeSrc":"907:26:29","nodeType":"YulVariableDeclaration","src":"907:26:29","value":{"arguments":[{"name":"value","nativeSrc":"927:5:29","nodeType":"YulIdentifier","src":"927:5:29"}],"functionName":{"name":"mload","nativeSrc":"921:5:29","nodeType":"YulIdentifier","src":"921:5:29"},"nativeSrc":"921:12:29","nodeType":"YulFunctionCall","src":"921:12:29"},"variables":[{"name":"length","nativeSrc":"911:6:29","nodeType":"YulTypedName","src":"911:6:29","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"949:3:29","nodeType":"YulIdentifier","src":"949:3:29"},{"name":"length","nativeSrc":"954:6:29","nodeType":"YulIdentifier","src":"954:6:29"}],"functionName":{"name":"mstore","nativeSrc":"942:6:29","nodeType":"YulIdentifier","src":"942:6:29"},"nativeSrc":"942:19:29","nodeType":"YulFunctionCall","src":"942:19:29"},"nativeSrc":"942:19:29","nodeType":"YulExpressionStatement","src":"942:19:29"},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1009:5:29","nodeType":"YulIdentifier","src":"1009:5:29"},{"kind":"number","nativeSrc":"1016:4:29","nodeType":"YulLiteral","src":"1016:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1005:3:29","nodeType":"YulIdentifier","src":"1005:3:29"},"nativeSrc":"1005:16:29","nodeType":"YulFunctionCall","src":"1005:16:29"},{"arguments":[{"name":"pos","nativeSrc":"1027:3:29","nodeType":"YulIdentifier","src":"1027:3:29"},{"kind":"number","nativeSrc":"1032:4:29","nodeType":"YulLiteral","src":"1032:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1023:3:29","nodeType":"YulIdentifier","src":"1023:3:29"},"nativeSrc":"1023:14:29","nodeType":"YulFunctionCall","src":"1023:14:29"},{"name":"length","nativeSrc":"1039:6:29","nodeType":"YulIdentifier","src":"1039:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"970:34:29","nodeType":"YulIdentifier","src":"970:34:29"},"nativeSrc":"970:76:29","nodeType":"YulFunctionCall","src":"970:76:29"},"nativeSrc":"970:76:29","nodeType":"YulExpressionStatement","src":"970:76:29"},{"nativeSrc":"1055:57:29","nodeType":"YulAssignment","src":"1055:57:29","value":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"1070:3:29","nodeType":"YulIdentifier","src":"1070:3:29"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"1083:6:29","nodeType":"YulIdentifier","src":"1083:6:29"},{"kind":"number","nativeSrc":"1091:2:29","nodeType":"YulLiteral","src":"1091:2:29","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1079:3:29","nodeType":"YulIdentifier","src":"1079:3:29"},"nativeSrc":"1079:15:29","nodeType":"YulFunctionCall","src":"1079:15:29"},{"arguments":[{"kind":"number","nativeSrc":"1100:2:29","nodeType":"YulLiteral","src":"1100:2:29","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1096:3:29","nodeType":"YulIdentifier","src":"1096:3:29"},"nativeSrc":"1096:7:29","nodeType":"YulFunctionCall","src":"1096:7:29"}],"functionName":{"name":"and","nativeSrc":"1075:3:29","nodeType":"YulIdentifier","src":"1075:3:29"},"nativeSrc":"1075:29:29","nodeType":"YulFunctionCall","src":"1075:29:29"}],"functionName":{"name":"add","nativeSrc":"1066:3:29","nodeType":"YulIdentifier","src":"1066:3:29"},"nativeSrc":"1066:39:29","nodeType":"YulFunctionCall","src":"1066:39:29"},{"kind":"number","nativeSrc":"1107:4:29","nodeType":"YulLiteral","src":"1107:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1062:3:29","nodeType":"YulIdentifier","src":"1062:3:29"},"nativeSrc":"1062:50:29","nodeType":"YulFunctionCall","src":"1062:50:29"},"variableNames":[{"name":"end","nativeSrc":"1055:3:29","nodeType":"YulIdentifier","src":"1055:3:29"}]}]},"name":"abi_encode_string","nativeSrc":"847:271:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"874:5:29","nodeType":"YulTypedName","src":"874:5:29","type":""},{"name":"pos","nativeSrc":"881:3:29","nodeType":"YulTypedName","src":"881:3:29","type":""}],"returnVariables":[{"name":"end","nativeSrc":"889:3:29","nodeType":"YulTypedName","src":"889:3:29","type":""}],"src":"847:271:29"},{"body":{"nativeSrc":"1244:99:29","nodeType":"YulBlock","src":"1244:99:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1261:9:29","nodeType":"YulIdentifier","src":"1261:9:29"},{"kind":"number","nativeSrc":"1272:2:29","nodeType":"YulLiteral","src":"1272:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"1254:6:29","nodeType":"YulIdentifier","src":"1254:6:29"},"nativeSrc":"1254:21:29","nodeType":"YulFunctionCall","src":"1254:21:29"},"nativeSrc":"1254:21:29","nodeType":"YulExpressionStatement","src":"1254:21:29"},{"nativeSrc":"1284:53:29","nodeType":"YulAssignment","src":"1284:53:29","value":{"arguments":[{"name":"value0","nativeSrc":"1310:6:29","nodeType":"YulIdentifier","src":"1310:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"1322:9:29","nodeType":"YulIdentifier","src":"1322:9:29"},{"kind":"number","nativeSrc":"1333:2:29","nodeType":"YulLiteral","src":"1333:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1318:3:29","nodeType":"YulIdentifier","src":"1318:3:29"},"nativeSrc":"1318:18:29","nodeType":"YulFunctionCall","src":"1318:18:29"}],"functionName":{"name":"abi_encode_string","nativeSrc":"1292:17:29","nodeType":"YulIdentifier","src":"1292:17:29"},"nativeSrc":"1292:45:29","nodeType":"YulFunctionCall","src":"1292:45:29"},"variableNames":[{"name":"tail","nativeSrc":"1284:4:29","nodeType":"YulIdentifier","src":"1284:4:29"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1123:220:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1213:9:29","nodeType":"YulTypedName","src":"1213:9:29","type":""},{"name":"value0","nativeSrc":"1224:6:29","nodeType":"YulTypedName","src":"1224:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1235:4:29","nodeType":"YulTypedName","src":"1235:4:29","type":""}],"src":"1123:220:29"},{"body":{"nativeSrc":"1418:110:29","nodeType":"YulBlock","src":"1418:110:29","statements":[{"body":{"nativeSrc":"1464:16:29","nodeType":"YulBlock","src":"1464:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1473:1:29","nodeType":"YulLiteral","src":"1473:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"1476:1:29","nodeType":"YulLiteral","src":"1476:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1466:6:29","nodeType":"YulIdentifier","src":"1466:6:29"},"nativeSrc":"1466:12:29","nodeType":"YulFunctionCall","src":"1466:12:29"},"nativeSrc":"1466:12:29","nodeType":"YulExpressionStatement","src":"1466:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1439:7:29","nodeType":"YulIdentifier","src":"1439:7:29"},{"name":"headStart","nativeSrc":"1448:9:29","nodeType":"YulIdentifier","src":"1448:9:29"}],"functionName":{"name":"sub","nativeSrc":"1435:3:29","nodeType":"YulIdentifier","src":"1435:3:29"},"nativeSrc":"1435:23:29","nodeType":"YulFunctionCall","src":"1435:23:29"},{"kind":"number","nativeSrc":"1460:2:29","nodeType":"YulLiteral","src":"1460:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1431:3:29","nodeType":"YulIdentifier","src":"1431:3:29"},"nativeSrc":"1431:32:29","nodeType":"YulFunctionCall","src":"1431:32:29"},"nativeSrc":"1428:52:29","nodeType":"YulIf","src":"1428:52:29"},{"nativeSrc":"1489:33:29","nodeType":"YulAssignment","src":"1489:33:29","value":{"arguments":[{"name":"headStart","nativeSrc":"1512:9:29","nodeType":"YulIdentifier","src":"1512:9:29"}],"functionName":{"name":"calldataload","nativeSrc":"1499:12:29","nodeType":"YulIdentifier","src":"1499:12:29"},"nativeSrc":"1499:23:29","nodeType":"YulFunctionCall","src":"1499:23:29"},"variableNames":[{"name":"value0","nativeSrc":"1489:6:29","nodeType":"YulIdentifier","src":"1489:6:29"}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"1348:180:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1384:9:29","nodeType":"YulTypedName","src":"1384:9:29","type":""},{"name":"dataEnd","nativeSrc":"1395:7:29","nodeType":"YulTypedName","src":"1395:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1407:6:29","nodeType":"YulTypedName","src":"1407:6:29","type":""}],"src":"1348:180:29"},{"body":{"nativeSrc":"1634:102:29","nodeType":"YulBlock","src":"1634:102:29","statements":[{"nativeSrc":"1644:26:29","nodeType":"YulAssignment","src":"1644:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"1656:9:29","nodeType":"YulIdentifier","src":"1656:9:29"},{"kind":"number","nativeSrc":"1667:2:29","nodeType":"YulLiteral","src":"1667:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1652:3:29","nodeType":"YulIdentifier","src":"1652:3:29"},"nativeSrc":"1652:18:29","nodeType":"YulFunctionCall","src":"1652:18:29"},"variableNames":[{"name":"tail","nativeSrc":"1644:4:29","nodeType":"YulIdentifier","src":"1644:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1686:9:29","nodeType":"YulIdentifier","src":"1686:9:29"},{"arguments":[{"name":"value0","nativeSrc":"1701:6:29","nodeType":"YulIdentifier","src":"1701:6:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1717:3:29","nodeType":"YulLiteral","src":"1717:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"1722:1:29","nodeType":"YulLiteral","src":"1722:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1713:3:29","nodeType":"YulIdentifier","src":"1713:3:29"},"nativeSrc":"1713:11:29","nodeType":"YulFunctionCall","src":"1713:11:29"},{"kind":"number","nativeSrc":"1726:1:29","nodeType":"YulLiteral","src":"1726:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1709:3:29","nodeType":"YulIdentifier","src":"1709:3:29"},"nativeSrc":"1709:19:29","nodeType":"YulFunctionCall","src":"1709:19:29"}],"functionName":{"name":"and","nativeSrc":"1697:3:29","nodeType":"YulIdentifier","src":"1697:3:29"},"nativeSrc":"1697:32:29","nodeType":"YulFunctionCall","src":"1697:32:29"}],"functionName":{"name":"mstore","nativeSrc":"1679:6:29","nodeType":"YulIdentifier","src":"1679:6:29"},"nativeSrc":"1679:51:29","nodeType":"YulFunctionCall","src":"1679:51:29"},"nativeSrc":"1679:51:29","nodeType":"YulExpressionStatement","src":"1679:51:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"1533:203:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1603:9:29","nodeType":"YulTypedName","src":"1603:9:29","type":""},{"name":"value0","nativeSrc":"1614:6:29","nodeType":"YulTypedName","src":"1614:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1625:4:29","nodeType":"YulTypedName","src":"1625:4:29","type":""}],"src":"1533:203:29"},{"body":{"nativeSrc":"1790:124:29","nodeType":"YulBlock","src":"1790:124:29","statements":[{"nativeSrc":"1800:29:29","nodeType":"YulAssignment","src":"1800:29:29","value":{"arguments":[{"name":"offset","nativeSrc":"1822:6:29","nodeType":"YulIdentifier","src":"1822:6:29"}],"functionName":{"name":"calldataload","nativeSrc":"1809:12:29","nodeType":"YulIdentifier","src":"1809:12:29"},"nativeSrc":"1809:20:29","nodeType":"YulFunctionCall","src":"1809:20:29"},"variableNames":[{"name":"value","nativeSrc":"1800:5:29","nodeType":"YulIdentifier","src":"1800:5:29"}]},{"body":{"nativeSrc":"1892:16:29","nodeType":"YulBlock","src":"1892:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1901:1:29","nodeType":"YulLiteral","src":"1901:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"1904:1:29","nodeType":"YulLiteral","src":"1904:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1894:6:29","nodeType":"YulIdentifier","src":"1894:6:29"},"nativeSrc":"1894:12:29","nodeType":"YulFunctionCall","src":"1894:12:29"},"nativeSrc":"1894:12:29","nodeType":"YulExpressionStatement","src":"1894:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1851:5:29","nodeType":"YulIdentifier","src":"1851:5:29"},{"arguments":[{"name":"value","nativeSrc":"1862:5:29","nodeType":"YulIdentifier","src":"1862:5:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1877:3:29","nodeType":"YulLiteral","src":"1877:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"1882:1:29","nodeType":"YulLiteral","src":"1882:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"1873:3:29","nodeType":"YulIdentifier","src":"1873:3:29"},"nativeSrc":"1873:11:29","nodeType":"YulFunctionCall","src":"1873:11:29"},{"kind":"number","nativeSrc":"1886:1:29","nodeType":"YulLiteral","src":"1886:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1869:3:29","nodeType":"YulIdentifier","src":"1869:3:29"},"nativeSrc":"1869:19:29","nodeType":"YulFunctionCall","src":"1869:19:29"}],"functionName":{"name":"and","nativeSrc":"1858:3:29","nodeType":"YulIdentifier","src":"1858:3:29"},"nativeSrc":"1858:31:29","nodeType":"YulFunctionCall","src":"1858:31:29"}],"functionName":{"name":"eq","nativeSrc":"1848:2:29","nodeType":"YulIdentifier","src":"1848:2:29"},"nativeSrc":"1848:42:29","nodeType":"YulFunctionCall","src":"1848:42:29"}],"functionName":{"name":"iszero","nativeSrc":"1841:6:29","nodeType":"YulIdentifier","src":"1841:6:29"},"nativeSrc":"1841:50:29","nodeType":"YulFunctionCall","src":"1841:50:29"},"nativeSrc":"1838:70:29","nodeType":"YulIf","src":"1838:70:29"}]},"name":"abi_decode_address","nativeSrc":"1741:173:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1769:6:29","nodeType":"YulTypedName","src":"1769:6:29","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1780:5:29","nodeType":"YulTypedName","src":"1780:5:29","type":""}],"src":"1741:173:29"},{"body":{"nativeSrc":"2006:167:29","nodeType":"YulBlock","src":"2006:167:29","statements":[{"body":{"nativeSrc":"2052:16:29","nodeType":"YulBlock","src":"2052:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2061:1:29","nodeType":"YulLiteral","src":"2061:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"2064:1:29","nodeType":"YulLiteral","src":"2064:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2054:6:29","nodeType":"YulIdentifier","src":"2054:6:29"},"nativeSrc":"2054:12:29","nodeType":"YulFunctionCall","src":"2054:12:29"},"nativeSrc":"2054:12:29","nodeType":"YulExpressionStatement","src":"2054:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2027:7:29","nodeType":"YulIdentifier","src":"2027:7:29"},{"name":"headStart","nativeSrc":"2036:9:29","nodeType":"YulIdentifier","src":"2036:9:29"}],"functionName":{"name":"sub","nativeSrc":"2023:3:29","nodeType":"YulIdentifier","src":"2023:3:29"},"nativeSrc":"2023:23:29","nodeType":"YulFunctionCall","src":"2023:23:29"},{"kind":"number","nativeSrc":"2048:2:29","nodeType":"YulLiteral","src":"2048:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2019:3:29","nodeType":"YulIdentifier","src":"2019:3:29"},"nativeSrc":"2019:32:29","nodeType":"YulFunctionCall","src":"2019:32:29"},"nativeSrc":"2016:52:29","nodeType":"YulIf","src":"2016:52:29"},{"nativeSrc":"2077:39:29","nodeType":"YulAssignment","src":"2077:39:29","value":{"arguments":[{"name":"headStart","nativeSrc":"2106:9:29","nodeType":"YulIdentifier","src":"2106:9:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2087:18:29","nodeType":"YulIdentifier","src":"2087:18:29"},"nativeSrc":"2087:29:29","nodeType":"YulFunctionCall","src":"2087:29:29"},"variableNames":[{"name":"value0","nativeSrc":"2077:6:29","nodeType":"YulIdentifier","src":"2077:6:29"}]},{"nativeSrc":"2125:42:29","nodeType":"YulAssignment","src":"2125:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2152:9:29","nodeType":"YulIdentifier","src":"2152:9:29"},{"kind":"number","nativeSrc":"2163:2:29","nodeType":"YulLiteral","src":"2163:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2148:3:29","nodeType":"YulIdentifier","src":"2148:3:29"},"nativeSrc":"2148:18:29","nodeType":"YulFunctionCall","src":"2148:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"2135:12:29","nodeType":"YulIdentifier","src":"2135:12:29"},"nativeSrc":"2135:32:29","nodeType":"YulFunctionCall","src":"2135:32:29"},"variableNames":[{"name":"value1","nativeSrc":"2125:6:29","nodeType":"YulIdentifier","src":"2125:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"1919:254:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1964:9:29","nodeType":"YulTypedName","src":"1964:9:29","type":""},{"name":"dataEnd","nativeSrc":"1975:7:29","nodeType":"YulTypedName","src":"1975:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1987:6:29","nodeType":"YulTypedName","src":"1987:6:29","type":""},{"name":"value1","nativeSrc":"1995:6:29","nodeType":"YulTypedName","src":"1995:6:29","type":""}],"src":"1919:254:29"},{"body":{"nativeSrc":"2282:224:29","nodeType":"YulBlock","src":"2282:224:29","statements":[{"body":{"nativeSrc":"2328:16:29","nodeType":"YulBlock","src":"2328:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2337:1:29","nodeType":"YulLiteral","src":"2337:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"2340:1:29","nodeType":"YulLiteral","src":"2340:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2330:6:29","nodeType":"YulIdentifier","src":"2330:6:29"},"nativeSrc":"2330:12:29","nodeType":"YulFunctionCall","src":"2330:12:29"},"nativeSrc":"2330:12:29","nodeType":"YulExpressionStatement","src":"2330:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2303:7:29","nodeType":"YulIdentifier","src":"2303:7:29"},{"name":"headStart","nativeSrc":"2312:9:29","nodeType":"YulIdentifier","src":"2312:9:29"}],"functionName":{"name":"sub","nativeSrc":"2299:3:29","nodeType":"YulIdentifier","src":"2299:3:29"},"nativeSrc":"2299:23:29","nodeType":"YulFunctionCall","src":"2299:23:29"},{"kind":"number","nativeSrc":"2324:2:29","nodeType":"YulLiteral","src":"2324:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"2295:3:29","nodeType":"YulIdentifier","src":"2295:3:29"},"nativeSrc":"2295:32:29","nodeType":"YulFunctionCall","src":"2295:32:29"},"nativeSrc":"2292:52:29","nodeType":"YulIf","src":"2292:52:29"},{"nativeSrc":"2353:39:29","nodeType":"YulAssignment","src":"2353:39:29","value":{"arguments":[{"name":"headStart","nativeSrc":"2382:9:29","nodeType":"YulIdentifier","src":"2382:9:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2363:18:29","nodeType":"YulIdentifier","src":"2363:18:29"},"nativeSrc":"2363:29:29","nodeType":"YulFunctionCall","src":"2363:29:29"},"variableNames":[{"name":"value0","nativeSrc":"2353:6:29","nodeType":"YulIdentifier","src":"2353:6:29"}]},{"nativeSrc":"2401:48:29","nodeType":"YulAssignment","src":"2401:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2434:9:29","nodeType":"YulIdentifier","src":"2434:9:29"},{"kind":"number","nativeSrc":"2445:2:29","nodeType":"YulLiteral","src":"2445:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2430:3:29","nodeType":"YulIdentifier","src":"2430:3:29"},"nativeSrc":"2430:18:29","nodeType":"YulFunctionCall","src":"2430:18:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2411:18:29","nodeType":"YulIdentifier","src":"2411:18:29"},"nativeSrc":"2411:38:29","nodeType":"YulFunctionCall","src":"2411:38:29"},"variableNames":[{"name":"value1","nativeSrc":"2401:6:29","nodeType":"YulIdentifier","src":"2401:6:29"}]},{"nativeSrc":"2458:42:29","nodeType":"YulAssignment","src":"2458:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2485:9:29","nodeType":"YulIdentifier","src":"2485:9:29"},{"kind":"number","nativeSrc":"2496:2:29","nodeType":"YulLiteral","src":"2496:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2481:3:29","nodeType":"YulIdentifier","src":"2481:3:29"},"nativeSrc":"2481:18:29","nodeType":"YulFunctionCall","src":"2481:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"2468:12:29","nodeType":"YulIdentifier","src":"2468:12:29"},"nativeSrc":"2468:32:29","nodeType":"YulFunctionCall","src":"2468:32:29"},"variableNames":[{"name":"value2","nativeSrc":"2458:6:29","nodeType":"YulIdentifier","src":"2458:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"2178:328:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2232:9:29","nodeType":"YulTypedName","src":"2232:9:29","type":""},{"name":"dataEnd","nativeSrc":"2243:7:29","nodeType":"YulTypedName","src":"2243:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2255:6:29","nodeType":"YulTypedName","src":"2255:6:29","type":""},{"name":"value1","nativeSrc":"2263:6:29","nodeType":"YulTypedName","src":"2263:6:29","type":""},{"name":"value2","nativeSrc":"2271:6:29","nodeType":"YulTypedName","src":"2271:6:29","type":""}],"src":"2178:328:29"},{"body":{"nativeSrc":"2581:116:29","nodeType":"YulBlock","src":"2581:116:29","statements":[{"body":{"nativeSrc":"2627:16:29","nodeType":"YulBlock","src":"2627:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2636:1:29","nodeType":"YulLiteral","src":"2636:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"2639:1:29","nodeType":"YulLiteral","src":"2639:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2629:6:29","nodeType":"YulIdentifier","src":"2629:6:29"},"nativeSrc":"2629:12:29","nodeType":"YulFunctionCall","src":"2629:12:29"},"nativeSrc":"2629:12:29","nodeType":"YulExpressionStatement","src":"2629:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2602:7:29","nodeType":"YulIdentifier","src":"2602:7:29"},{"name":"headStart","nativeSrc":"2611:9:29","nodeType":"YulIdentifier","src":"2611:9:29"}],"functionName":{"name":"sub","nativeSrc":"2598:3:29","nodeType":"YulIdentifier","src":"2598:3:29"},"nativeSrc":"2598:23:29","nodeType":"YulFunctionCall","src":"2598:23:29"},{"kind":"number","nativeSrc":"2623:2:29","nodeType":"YulLiteral","src":"2623:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2594:3:29","nodeType":"YulIdentifier","src":"2594:3:29"},"nativeSrc":"2594:32:29","nodeType":"YulFunctionCall","src":"2594:32:29"},"nativeSrc":"2591:52:29","nodeType":"YulIf","src":"2591:52:29"},{"nativeSrc":"2652:39:29","nodeType":"YulAssignment","src":"2652:39:29","value":{"arguments":[{"name":"headStart","nativeSrc":"2681:9:29","nodeType":"YulIdentifier","src":"2681:9:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"2662:18:29","nodeType":"YulIdentifier","src":"2662:18:29"},"nativeSrc":"2662:29:29","nodeType":"YulFunctionCall","src":"2662:29:29"},"variableNames":[{"name":"value0","nativeSrc":"2652:6:29","nodeType":"YulIdentifier","src":"2652:6:29"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"2511:186:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2547:9:29","nodeType":"YulTypedName","src":"2547:9:29","type":""},{"name":"dataEnd","nativeSrc":"2558:7:29","nodeType":"YulTypedName","src":"2558:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2570:6:29","nodeType":"YulTypedName","src":"2570:6:29","type":""}],"src":"2511:186:29"},{"body":{"nativeSrc":"2803:76:29","nodeType":"YulBlock","src":"2803:76:29","statements":[{"nativeSrc":"2813:26:29","nodeType":"YulAssignment","src":"2813:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"2825:9:29","nodeType":"YulIdentifier","src":"2825:9:29"},{"kind":"number","nativeSrc":"2836:2:29","nodeType":"YulLiteral","src":"2836:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2821:3:29","nodeType":"YulIdentifier","src":"2821:3:29"},"nativeSrc":"2821:18:29","nodeType":"YulFunctionCall","src":"2821:18:29"},"variableNames":[{"name":"tail","nativeSrc":"2813:4:29","nodeType":"YulIdentifier","src":"2813:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2855:9:29","nodeType":"YulIdentifier","src":"2855:9:29"},{"name":"value0","nativeSrc":"2866:6:29","nodeType":"YulIdentifier","src":"2866:6:29"}],"functionName":{"name":"mstore","nativeSrc":"2848:6:29","nodeType":"YulIdentifier","src":"2848:6:29"},"nativeSrc":"2848:25:29","nodeType":"YulFunctionCall","src":"2848:25:29"},"nativeSrc":"2848:25:29","nodeType":"YulExpressionStatement","src":"2848:25:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"2702:177:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2772:9:29","nodeType":"YulTypedName","src":"2772:9:29","type":""},{"name":"value0","nativeSrc":"2783:6:29","nodeType":"YulTypedName","src":"2783:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2794:4:29","nodeType":"YulTypedName","src":"2794:4:29","type":""}],"src":"2702:177:29"},{"body":{"nativeSrc":"2916:95:29","nodeType":"YulBlock","src":"2916:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2933:1:29","nodeType":"YulLiteral","src":"2933:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"2940:3:29","nodeType":"YulLiteral","src":"2940:3:29","type":"","value":"224"},{"kind":"number","nativeSrc":"2945:10:29","nodeType":"YulLiteral","src":"2945:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"2936:3:29","nodeType":"YulIdentifier","src":"2936:3:29"},"nativeSrc":"2936:20:29","nodeType":"YulFunctionCall","src":"2936:20:29"}],"functionName":{"name":"mstore","nativeSrc":"2926:6:29","nodeType":"YulIdentifier","src":"2926:6:29"},"nativeSrc":"2926:31:29","nodeType":"YulFunctionCall","src":"2926:31:29"},"nativeSrc":"2926:31:29","nodeType":"YulExpressionStatement","src":"2926:31:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2973:1:29","nodeType":"YulLiteral","src":"2973:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"2976:4:29","nodeType":"YulLiteral","src":"2976:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"2966:6:29","nodeType":"YulIdentifier","src":"2966:6:29"},"nativeSrc":"2966:15:29","nodeType":"YulFunctionCall","src":"2966:15:29"},"nativeSrc":"2966:15:29","nodeType":"YulExpressionStatement","src":"2966:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2997:1:29","nodeType":"YulLiteral","src":"2997:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"3000:4:29","nodeType":"YulLiteral","src":"3000:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2990:6:29","nodeType":"YulIdentifier","src":"2990:6:29"},"nativeSrc":"2990:15:29","nodeType":"YulFunctionCall","src":"2990:15:29"},"nativeSrc":"2990:15:29","nodeType":"YulExpressionStatement","src":"2990:15:29"}]},"name":"panic_error_0x41","nativeSrc":"2884:127:29","nodeType":"YulFunctionDefinition","src":"2884:127:29"},{"body":{"nativeSrc":"3091:557:29","nodeType":"YulBlock","src":"3091:557:29","statements":[{"nativeSrc":"3101:28:29","nodeType":"YulVariableDeclaration","src":"3101:28:29","value":{"kind":"number","nativeSrc":"3111:18:29","nodeType":"YulLiteral","src":"3111:18:29","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"3105:2:29","nodeType":"YulTypedName","src":"3105:2:29","type":""}]},{"body":{"nativeSrc":"3156:22:29","nodeType":"YulBlock","src":"3156:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3158:16:29","nodeType":"YulIdentifier","src":"3158:16:29"},"nativeSrc":"3158:18:29","nodeType":"YulFunctionCall","src":"3158:18:29"},"nativeSrc":"3158:18:29","nodeType":"YulExpressionStatement","src":"3158:18:29"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"3144:6:29","nodeType":"YulIdentifier","src":"3144:6:29"},{"name":"_1","nativeSrc":"3152:2:29","nodeType":"YulIdentifier","src":"3152:2:29"}],"functionName":{"name":"gt","nativeSrc":"3141:2:29","nodeType":"YulIdentifier","src":"3141:2:29"},"nativeSrc":"3141:14:29","nodeType":"YulFunctionCall","src":"3141:14:29"},"nativeSrc":"3138:40:29","nodeType":"YulIf","src":"3138:40:29"},{"nativeSrc":"3187:17:29","nodeType":"YulVariableDeclaration","src":"3187:17:29","value":{"arguments":[{"kind":"number","nativeSrc":"3201:2:29","nodeType":"YulLiteral","src":"3201:2:29","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3197:3:29","nodeType":"YulIdentifier","src":"3197:3:29"},"nativeSrc":"3197:7:29","nodeType":"YulFunctionCall","src":"3197:7:29"},"variables":[{"name":"_2","nativeSrc":"3191:2:29","nodeType":"YulTypedName","src":"3191:2:29","type":""}]},{"nativeSrc":"3213:23:29","nodeType":"YulVariableDeclaration","src":"3213:23:29","value":{"arguments":[{"kind":"number","nativeSrc":"3233:2:29","nodeType":"YulLiteral","src":"3233:2:29","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"3227:5:29","nodeType":"YulIdentifier","src":"3227:5:29"},"nativeSrc":"3227:9:29","nodeType":"YulFunctionCall","src":"3227:9:29"},"variables":[{"name":"memPtr","nativeSrc":"3217:6:29","nodeType":"YulTypedName","src":"3217:6:29","type":""}]},{"nativeSrc":"3245:73:29","nodeType":"YulVariableDeclaration","src":"3245:73:29","value":{"arguments":[{"name":"memPtr","nativeSrc":"3267:6:29","nodeType":"YulIdentifier","src":"3267:6:29"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"length","nativeSrc":"3291:6:29","nodeType":"YulIdentifier","src":"3291:6:29"},{"kind":"number","nativeSrc":"3299:2:29","nodeType":"YulLiteral","src":"3299:2:29","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"3287:3:29","nodeType":"YulIdentifier","src":"3287:3:29"},"nativeSrc":"3287:15:29","nodeType":"YulFunctionCall","src":"3287:15:29"},{"name":"_2","nativeSrc":"3304:2:29","nodeType":"YulIdentifier","src":"3304:2:29"}],"functionName":{"name":"and","nativeSrc":"3283:3:29","nodeType":"YulIdentifier","src":"3283:3:29"},"nativeSrc":"3283:24:29","nodeType":"YulFunctionCall","src":"3283:24:29"},{"kind":"number","nativeSrc":"3309:2:29","nodeType":"YulLiteral","src":"3309:2:29","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"3279:3:29","nodeType":"YulIdentifier","src":"3279:3:29"},"nativeSrc":"3279:33:29","nodeType":"YulFunctionCall","src":"3279:33:29"},{"name":"_2","nativeSrc":"3314:2:29","nodeType":"YulIdentifier","src":"3314:2:29"}],"functionName":{"name":"and","nativeSrc":"3275:3:29","nodeType":"YulIdentifier","src":"3275:3:29"},"nativeSrc":"3275:42:29","nodeType":"YulFunctionCall","src":"3275:42:29"}],"functionName":{"name":"add","nativeSrc":"3263:3:29","nodeType":"YulIdentifier","src":"3263:3:29"},"nativeSrc":"3263:55:29","nodeType":"YulFunctionCall","src":"3263:55:29"},"variables":[{"name":"newFreePtr","nativeSrc":"3249:10:29","nodeType":"YulTypedName","src":"3249:10:29","type":""}]},{"body":{"nativeSrc":"3377:22:29","nodeType":"YulBlock","src":"3377:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3379:16:29","nodeType":"YulIdentifier","src":"3379:16:29"},"nativeSrc":"3379:18:29","nodeType":"YulFunctionCall","src":"3379:18:29"},"nativeSrc":"3379:18:29","nodeType":"YulExpressionStatement","src":"3379:18:29"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"3336:10:29","nodeType":"YulIdentifier","src":"3336:10:29"},{"name":"_1","nativeSrc":"3348:2:29","nodeType":"YulIdentifier","src":"3348:2:29"}],"functionName":{"name":"gt","nativeSrc":"3333:2:29","nodeType":"YulIdentifier","src":"3333:2:29"},"nativeSrc":"3333:18:29","nodeType":"YulFunctionCall","src":"3333:18:29"},{"arguments":[{"name":"newFreePtr","nativeSrc":"3356:10:29","nodeType":"YulIdentifier","src":"3356:10:29"},{"name":"memPtr","nativeSrc":"3368:6:29","nodeType":"YulIdentifier","src":"3368:6:29"}],"functionName":{"name":"lt","nativeSrc":"3353:2:29","nodeType":"YulIdentifier","src":"3353:2:29"},"nativeSrc":"3353:22:29","nodeType":"YulFunctionCall","src":"3353:22:29"}],"functionName":{"name":"or","nativeSrc":"3330:2:29","nodeType":"YulIdentifier","src":"3330:2:29"},"nativeSrc":"3330:46:29","nodeType":"YulFunctionCall","src":"3330:46:29"},"nativeSrc":"3327:72:29","nodeType":"YulIf","src":"3327:72:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3415:2:29","nodeType":"YulLiteral","src":"3415:2:29","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"3419:10:29","nodeType":"YulIdentifier","src":"3419:10:29"}],"functionName":{"name":"mstore","nativeSrc":"3408:6:29","nodeType":"YulIdentifier","src":"3408:6:29"},"nativeSrc":"3408:22:29","nodeType":"YulFunctionCall","src":"3408:22:29"},"nativeSrc":"3408:22:29","nodeType":"YulExpressionStatement","src":"3408:22:29"},{"nativeSrc":"3439:15:29","nodeType":"YulAssignment","src":"3439:15:29","value":{"name":"memPtr","nativeSrc":"3448:6:29","nodeType":"YulIdentifier","src":"3448:6:29"},"variableNames":[{"name":"array","nativeSrc":"3439:5:29","nodeType":"YulIdentifier","src":"3439:5:29"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"3470:6:29","nodeType":"YulIdentifier","src":"3470:6:29"},{"name":"length","nativeSrc":"3478:6:29","nodeType":"YulIdentifier","src":"3478:6:29"}],"functionName":{"name":"mstore","nativeSrc":"3463:6:29","nodeType":"YulIdentifier","src":"3463:6:29"},"nativeSrc":"3463:22:29","nodeType":"YulFunctionCall","src":"3463:22:29"},"nativeSrc":"3463:22:29","nodeType":"YulExpressionStatement","src":"3463:22:29"},{"body":{"nativeSrc":"3523:16:29","nodeType":"YulBlock","src":"3523:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3532:1:29","nodeType":"YulLiteral","src":"3532:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"3535:1:29","nodeType":"YulLiteral","src":"3535:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3525:6:29","nodeType":"YulIdentifier","src":"3525:6:29"},"nativeSrc":"3525:12:29","nodeType":"YulFunctionCall","src":"3525:12:29"},"nativeSrc":"3525:12:29","nodeType":"YulExpressionStatement","src":"3525:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3504:3:29","nodeType":"YulIdentifier","src":"3504:3:29"},{"name":"length","nativeSrc":"3509:6:29","nodeType":"YulIdentifier","src":"3509:6:29"}],"functionName":{"name":"add","nativeSrc":"3500:3:29","nodeType":"YulIdentifier","src":"3500:3:29"},"nativeSrc":"3500:16:29","nodeType":"YulFunctionCall","src":"3500:16:29"},{"name":"end","nativeSrc":"3518:3:29","nodeType":"YulIdentifier","src":"3518:3:29"}],"functionName":{"name":"gt","nativeSrc":"3497:2:29","nodeType":"YulIdentifier","src":"3497:2:29"},"nativeSrc":"3497:25:29","nodeType":"YulFunctionCall","src":"3497:25:29"},"nativeSrc":"3494:45:29","nodeType":"YulIf","src":"3494:45:29"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"3565:6:29","nodeType":"YulIdentifier","src":"3565:6:29"},{"kind":"number","nativeSrc":"3573:4:29","nodeType":"YulLiteral","src":"3573:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3561:3:29","nodeType":"YulIdentifier","src":"3561:3:29"},"nativeSrc":"3561:17:29","nodeType":"YulFunctionCall","src":"3561:17:29"},{"name":"src","nativeSrc":"3580:3:29","nodeType":"YulIdentifier","src":"3580:3:29"},{"name":"length","nativeSrc":"3585:6:29","nodeType":"YulIdentifier","src":"3585:6:29"}],"functionName":{"name":"calldatacopy","nativeSrc":"3548:12:29","nodeType":"YulIdentifier","src":"3548:12:29"},"nativeSrc":"3548:44:29","nodeType":"YulFunctionCall","src":"3548:44:29"},"nativeSrc":"3548:44:29","nodeType":"YulExpressionStatement","src":"3548:44:29"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"3616:6:29","nodeType":"YulIdentifier","src":"3616:6:29"},{"name":"length","nativeSrc":"3624:6:29","nodeType":"YulIdentifier","src":"3624:6:29"}],"functionName":{"name":"add","nativeSrc":"3612:3:29","nodeType":"YulIdentifier","src":"3612:3:29"},"nativeSrc":"3612:19:29","nodeType":"YulFunctionCall","src":"3612:19:29"},{"kind":"number","nativeSrc":"3633:4:29","nodeType":"YulLiteral","src":"3633:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3608:3:29","nodeType":"YulIdentifier","src":"3608:3:29"},"nativeSrc":"3608:30:29","nodeType":"YulFunctionCall","src":"3608:30:29"},{"kind":"number","nativeSrc":"3640:1:29","nodeType":"YulLiteral","src":"3640:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"3601:6:29","nodeType":"YulIdentifier","src":"3601:6:29"},"nativeSrc":"3601:41:29","nodeType":"YulFunctionCall","src":"3601:41:29"},"nativeSrc":"3601:41:29","nodeType":"YulExpressionStatement","src":"3601:41:29"}]},"name":"abi_decode_available_length_string","nativeSrc":"3016:632:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"3060:3:29","nodeType":"YulTypedName","src":"3060:3:29","type":""},{"name":"length","nativeSrc":"3065:6:29","nodeType":"YulTypedName","src":"3065:6:29","type":""},{"name":"end","nativeSrc":"3073:3:29","nodeType":"YulTypedName","src":"3073:3:29","type":""}],"returnVariables":[{"name":"array","nativeSrc":"3081:5:29","nodeType":"YulTypedName","src":"3081:5:29","type":""}],"src":"3016:632:29"},{"body":{"nativeSrc":"3733:371:29","nodeType":"YulBlock","src":"3733:371:29","statements":[{"body":{"nativeSrc":"3779:16:29","nodeType":"YulBlock","src":"3779:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3788:1:29","nodeType":"YulLiteral","src":"3788:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"3791:1:29","nodeType":"YulLiteral","src":"3791:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3781:6:29","nodeType":"YulIdentifier","src":"3781:6:29"},"nativeSrc":"3781:12:29","nodeType":"YulFunctionCall","src":"3781:12:29"},"nativeSrc":"3781:12:29","nodeType":"YulExpressionStatement","src":"3781:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3754:7:29","nodeType":"YulIdentifier","src":"3754:7:29"},{"name":"headStart","nativeSrc":"3763:9:29","nodeType":"YulIdentifier","src":"3763:9:29"}],"functionName":{"name":"sub","nativeSrc":"3750:3:29","nodeType":"YulIdentifier","src":"3750:3:29"},"nativeSrc":"3750:23:29","nodeType":"YulFunctionCall","src":"3750:23:29"},{"kind":"number","nativeSrc":"3775:2:29","nodeType":"YulLiteral","src":"3775:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3746:3:29","nodeType":"YulIdentifier","src":"3746:3:29"},"nativeSrc":"3746:32:29","nodeType":"YulFunctionCall","src":"3746:32:29"},"nativeSrc":"3743:52:29","nodeType":"YulIf","src":"3743:52:29"},{"nativeSrc":"3804:37:29","nodeType":"YulVariableDeclaration","src":"3804:37:29","value":{"arguments":[{"name":"headStart","nativeSrc":"3831:9:29","nodeType":"YulIdentifier","src":"3831:9:29"}],"functionName":{"name":"calldataload","nativeSrc":"3818:12:29","nodeType":"YulIdentifier","src":"3818:12:29"},"nativeSrc":"3818:23:29","nodeType":"YulFunctionCall","src":"3818:23:29"},"variables":[{"name":"offset","nativeSrc":"3808:6:29","nodeType":"YulTypedName","src":"3808:6:29","type":""}]},{"body":{"nativeSrc":"3884:16:29","nodeType":"YulBlock","src":"3884:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3893:1:29","nodeType":"YulLiteral","src":"3893:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"3896:1:29","nodeType":"YulLiteral","src":"3896:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3886:6:29","nodeType":"YulIdentifier","src":"3886:6:29"},"nativeSrc":"3886:12:29","nodeType":"YulFunctionCall","src":"3886:12:29"},"nativeSrc":"3886:12:29","nodeType":"YulExpressionStatement","src":"3886:12:29"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3856:6:29","nodeType":"YulIdentifier","src":"3856:6:29"},{"kind":"number","nativeSrc":"3864:18:29","nodeType":"YulLiteral","src":"3864:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3853:2:29","nodeType":"YulIdentifier","src":"3853:2:29"},"nativeSrc":"3853:30:29","nodeType":"YulFunctionCall","src":"3853:30:29"},"nativeSrc":"3850:50:29","nodeType":"YulIf","src":"3850:50:29"},{"nativeSrc":"3909:32:29","nodeType":"YulVariableDeclaration","src":"3909:32:29","value":{"arguments":[{"name":"headStart","nativeSrc":"3923:9:29","nodeType":"YulIdentifier","src":"3923:9:29"},{"name":"offset","nativeSrc":"3934:6:29","nodeType":"YulIdentifier","src":"3934:6:29"}],"functionName":{"name":"add","nativeSrc":"3919:3:29","nodeType":"YulIdentifier","src":"3919:3:29"},"nativeSrc":"3919:22:29","nodeType":"YulFunctionCall","src":"3919:22:29"},"variables":[{"name":"_1","nativeSrc":"3913:2:29","nodeType":"YulTypedName","src":"3913:2:29","type":""}]},{"body":{"nativeSrc":"3989:16:29","nodeType":"YulBlock","src":"3989:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3998:1:29","nodeType":"YulLiteral","src":"3998:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"4001:1:29","nodeType":"YulLiteral","src":"4001:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3991:6:29","nodeType":"YulIdentifier","src":"3991:6:29"},"nativeSrc":"3991:12:29","nodeType":"YulFunctionCall","src":"3991:12:29"},"nativeSrc":"3991:12:29","nodeType":"YulExpressionStatement","src":"3991:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"3968:2:29","nodeType":"YulIdentifier","src":"3968:2:29"},{"kind":"number","nativeSrc":"3972:4:29","nodeType":"YulLiteral","src":"3972:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"3964:3:29","nodeType":"YulIdentifier","src":"3964:3:29"},"nativeSrc":"3964:13:29","nodeType":"YulFunctionCall","src":"3964:13:29"},{"name":"dataEnd","nativeSrc":"3979:7:29","nodeType":"YulIdentifier","src":"3979:7:29"}],"functionName":{"name":"slt","nativeSrc":"3960:3:29","nodeType":"YulIdentifier","src":"3960:3:29"},"nativeSrc":"3960:27:29","nodeType":"YulFunctionCall","src":"3960:27:29"}],"functionName":{"name":"iszero","nativeSrc":"3953:6:29","nodeType":"YulIdentifier","src":"3953:6:29"},"nativeSrc":"3953:35:29","nodeType":"YulFunctionCall","src":"3953:35:29"},"nativeSrc":"3950:55:29","nodeType":"YulIf","src":"3950:55:29"},{"nativeSrc":"4014:84:29","nodeType":"YulAssignment","src":"4014:84:29","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"4063:2:29","nodeType":"YulIdentifier","src":"4063:2:29"},{"kind":"number","nativeSrc":"4067:2:29","nodeType":"YulLiteral","src":"4067:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4059:3:29","nodeType":"YulIdentifier","src":"4059:3:29"},"nativeSrc":"4059:11:29","nodeType":"YulFunctionCall","src":"4059:11:29"},{"arguments":[{"name":"_1","nativeSrc":"4085:2:29","nodeType":"YulIdentifier","src":"4085:2:29"}],"functionName":{"name":"calldataload","nativeSrc":"4072:12:29","nodeType":"YulIdentifier","src":"4072:12:29"},"nativeSrc":"4072:16:29","nodeType":"YulFunctionCall","src":"4072:16:29"},{"name":"dataEnd","nativeSrc":"4090:7:29","nodeType":"YulIdentifier","src":"4090:7:29"}],"functionName":{"name":"abi_decode_available_length_string","nativeSrc":"4024:34:29","nodeType":"YulIdentifier","src":"4024:34:29"},"nativeSrc":"4024:74:29","nodeType":"YulFunctionCall","src":"4024:74:29"},"variableNames":[{"name":"value0","nativeSrc":"4014:6:29","nodeType":"YulIdentifier","src":"4014:6:29"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nativeSrc":"3653:451:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3699:9:29","nodeType":"YulTypedName","src":"3699:9:29","type":""},{"name":"dataEnd","nativeSrc":"3710:7:29","nodeType":"YulTypedName","src":"3710:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3722:6:29","nodeType":"YulTypedName","src":"3722:6:29","type":""}],"src":"3653:451:29"},{"body":{"nativeSrc":"4193:263:29","nodeType":"YulBlock","src":"4193:263:29","statements":[{"body":{"nativeSrc":"4239:16:29","nodeType":"YulBlock","src":"4239:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4248:1:29","nodeType":"YulLiteral","src":"4248:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"4251:1:29","nodeType":"YulLiteral","src":"4251:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4241:6:29","nodeType":"YulIdentifier","src":"4241:6:29"},"nativeSrc":"4241:12:29","nodeType":"YulFunctionCall","src":"4241:12:29"},"nativeSrc":"4241:12:29","nodeType":"YulExpressionStatement","src":"4241:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4214:7:29","nodeType":"YulIdentifier","src":"4214:7:29"},{"name":"headStart","nativeSrc":"4223:9:29","nodeType":"YulIdentifier","src":"4223:9:29"}],"functionName":{"name":"sub","nativeSrc":"4210:3:29","nodeType":"YulIdentifier","src":"4210:3:29"},"nativeSrc":"4210:23:29","nodeType":"YulFunctionCall","src":"4210:23:29"},{"kind":"number","nativeSrc":"4235:2:29","nodeType":"YulLiteral","src":"4235:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"4206:3:29","nodeType":"YulIdentifier","src":"4206:3:29"},"nativeSrc":"4206:32:29","nodeType":"YulFunctionCall","src":"4206:32:29"},"nativeSrc":"4203:52:29","nodeType":"YulIf","src":"4203:52:29"},{"nativeSrc":"4264:39:29","nodeType":"YulAssignment","src":"4264:39:29","value":{"arguments":[{"name":"headStart","nativeSrc":"4293:9:29","nodeType":"YulIdentifier","src":"4293:9:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"4274:18:29","nodeType":"YulIdentifier","src":"4274:18:29"},"nativeSrc":"4274:29:29","nodeType":"YulFunctionCall","src":"4274:29:29"},"variableNames":[{"name":"value0","nativeSrc":"4264:6:29","nodeType":"YulIdentifier","src":"4264:6:29"}]},{"nativeSrc":"4312:45:29","nodeType":"YulVariableDeclaration","src":"4312:45:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4342:9:29","nodeType":"YulIdentifier","src":"4342:9:29"},{"kind":"number","nativeSrc":"4353:2:29","nodeType":"YulLiteral","src":"4353:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4338:3:29","nodeType":"YulIdentifier","src":"4338:3:29"},"nativeSrc":"4338:18:29","nodeType":"YulFunctionCall","src":"4338:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"4325:12:29","nodeType":"YulIdentifier","src":"4325:12:29"},"nativeSrc":"4325:32:29","nodeType":"YulFunctionCall","src":"4325:32:29"},"variables":[{"name":"value","nativeSrc":"4316:5:29","nodeType":"YulTypedName","src":"4316:5:29","type":""}]},{"body":{"nativeSrc":"4410:16:29","nodeType":"YulBlock","src":"4410:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4419:1:29","nodeType":"YulLiteral","src":"4419:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"4422:1:29","nodeType":"YulLiteral","src":"4422:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4412:6:29","nodeType":"YulIdentifier","src":"4412:6:29"},"nativeSrc":"4412:12:29","nodeType":"YulFunctionCall","src":"4412:12:29"},"nativeSrc":"4412:12:29","nodeType":"YulExpressionStatement","src":"4412:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4379:5:29","nodeType":"YulIdentifier","src":"4379:5:29"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4400:5:29","nodeType":"YulIdentifier","src":"4400:5:29"}],"functionName":{"name":"iszero","nativeSrc":"4393:6:29","nodeType":"YulIdentifier","src":"4393:6:29"},"nativeSrc":"4393:13:29","nodeType":"YulFunctionCall","src":"4393:13:29"}],"functionName":{"name":"iszero","nativeSrc":"4386:6:29","nodeType":"YulIdentifier","src":"4386:6:29"},"nativeSrc":"4386:21:29","nodeType":"YulFunctionCall","src":"4386:21:29"}],"functionName":{"name":"eq","nativeSrc":"4376:2:29","nodeType":"YulIdentifier","src":"4376:2:29"},"nativeSrc":"4376:32:29","nodeType":"YulFunctionCall","src":"4376:32:29"}],"functionName":{"name":"iszero","nativeSrc":"4369:6:29","nodeType":"YulIdentifier","src":"4369:6:29"},"nativeSrc":"4369:40:29","nodeType":"YulFunctionCall","src":"4369:40:29"},"nativeSrc":"4366:60:29","nodeType":"YulIf","src":"4366:60:29"},{"nativeSrc":"4435:15:29","nodeType":"YulAssignment","src":"4435:15:29","value":{"name":"value","nativeSrc":"4445:5:29","nodeType":"YulIdentifier","src":"4445:5:29"},"variableNames":[{"name":"value1","nativeSrc":"4435:6:29","nodeType":"YulIdentifier","src":"4435:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nativeSrc":"4109:347:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4151:9:29","nodeType":"YulTypedName","src":"4151:9:29","type":""},{"name":"dataEnd","nativeSrc":"4162:7:29","nodeType":"YulTypedName","src":"4162:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4174:6:29","nodeType":"YulTypedName","src":"4174:6:29","type":""},{"name":"value1","nativeSrc":"4182:6:29","nodeType":"YulTypedName","src":"4182:6:29","type":""}],"src":"4109:347:29"},{"body":{"nativeSrc":"4591:537:29","nodeType":"YulBlock","src":"4591:537:29","statements":[{"body":{"nativeSrc":"4638:16:29","nodeType":"YulBlock","src":"4638:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4647:1:29","nodeType":"YulLiteral","src":"4647:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"4650:1:29","nodeType":"YulLiteral","src":"4650:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4640:6:29","nodeType":"YulIdentifier","src":"4640:6:29"},"nativeSrc":"4640:12:29","nodeType":"YulFunctionCall","src":"4640:12:29"},"nativeSrc":"4640:12:29","nodeType":"YulExpressionStatement","src":"4640:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4612:7:29","nodeType":"YulIdentifier","src":"4612:7:29"},{"name":"headStart","nativeSrc":"4621:9:29","nodeType":"YulIdentifier","src":"4621:9:29"}],"functionName":{"name":"sub","nativeSrc":"4608:3:29","nodeType":"YulIdentifier","src":"4608:3:29"},"nativeSrc":"4608:23:29","nodeType":"YulFunctionCall","src":"4608:23:29"},{"kind":"number","nativeSrc":"4633:3:29","nodeType":"YulLiteral","src":"4633:3:29","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"4604:3:29","nodeType":"YulIdentifier","src":"4604:3:29"},"nativeSrc":"4604:33:29","nodeType":"YulFunctionCall","src":"4604:33:29"},"nativeSrc":"4601:53:29","nodeType":"YulIf","src":"4601:53:29"},{"nativeSrc":"4663:39:29","nodeType":"YulAssignment","src":"4663:39:29","value":{"arguments":[{"name":"headStart","nativeSrc":"4692:9:29","nodeType":"YulIdentifier","src":"4692:9:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"4673:18:29","nodeType":"YulIdentifier","src":"4673:18:29"},"nativeSrc":"4673:29:29","nodeType":"YulFunctionCall","src":"4673:29:29"},"variableNames":[{"name":"value0","nativeSrc":"4663:6:29","nodeType":"YulIdentifier","src":"4663:6:29"}]},{"nativeSrc":"4711:48:29","nodeType":"YulAssignment","src":"4711:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4744:9:29","nodeType":"YulIdentifier","src":"4744:9:29"},{"kind":"number","nativeSrc":"4755:2:29","nodeType":"YulLiteral","src":"4755:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4740:3:29","nodeType":"YulIdentifier","src":"4740:3:29"},"nativeSrc":"4740:18:29","nodeType":"YulFunctionCall","src":"4740:18:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"4721:18:29","nodeType":"YulIdentifier","src":"4721:18:29"},"nativeSrc":"4721:38:29","nodeType":"YulFunctionCall","src":"4721:38:29"},"variableNames":[{"name":"value1","nativeSrc":"4711:6:29","nodeType":"YulIdentifier","src":"4711:6:29"}]},{"nativeSrc":"4768:42:29","nodeType":"YulAssignment","src":"4768:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4795:9:29","nodeType":"YulIdentifier","src":"4795:9:29"},{"kind":"number","nativeSrc":"4806:2:29","nodeType":"YulLiteral","src":"4806:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4791:3:29","nodeType":"YulIdentifier","src":"4791:3:29"},"nativeSrc":"4791:18:29","nodeType":"YulFunctionCall","src":"4791:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"4778:12:29","nodeType":"YulIdentifier","src":"4778:12:29"},"nativeSrc":"4778:32:29","nodeType":"YulFunctionCall","src":"4778:32:29"},"variableNames":[{"name":"value2","nativeSrc":"4768:6:29","nodeType":"YulIdentifier","src":"4768:6:29"}]},{"nativeSrc":"4819:46:29","nodeType":"YulVariableDeclaration","src":"4819:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4850:9:29","nodeType":"YulIdentifier","src":"4850:9:29"},{"kind":"number","nativeSrc":"4861:2:29","nodeType":"YulLiteral","src":"4861:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4846:3:29","nodeType":"YulIdentifier","src":"4846:3:29"},"nativeSrc":"4846:18:29","nodeType":"YulFunctionCall","src":"4846:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"4833:12:29","nodeType":"YulIdentifier","src":"4833:12:29"},"nativeSrc":"4833:32:29","nodeType":"YulFunctionCall","src":"4833:32:29"},"variables":[{"name":"offset","nativeSrc":"4823:6:29","nodeType":"YulTypedName","src":"4823:6:29","type":""}]},{"body":{"nativeSrc":"4908:16:29","nodeType":"YulBlock","src":"4908:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4917:1:29","nodeType":"YulLiteral","src":"4917:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"4920:1:29","nodeType":"YulLiteral","src":"4920:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4910:6:29","nodeType":"YulIdentifier","src":"4910:6:29"},"nativeSrc":"4910:12:29","nodeType":"YulFunctionCall","src":"4910:12:29"},"nativeSrc":"4910:12:29","nodeType":"YulExpressionStatement","src":"4910:12:29"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"4880:6:29","nodeType":"YulIdentifier","src":"4880:6:29"},{"kind":"number","nativeSrc":"4888:18:29","nodeType":"YulLiteral","src":"4888:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4877:2:29","nodeType":"YulIdentifier","src":"4877:2:29"},"nativeSrc":"4877:30:29","nodeType":"YulFunctionCall","src":"4877:30:29"},"nativeSrc":"4874:50:29","nodeType":"YulIf","src":"4874:50:29"},{"nativeSrc":"4933:32:29","nodeType":"YulVariableDeclaration","src":"4933:32:29","value":{"arguments":[{"name":"headStart","nativeSrc":"4947:9:29","nodeType":"YulIdentifier","src":"4947:9:29"},{"name":"offset","nativeSrc":"4958:6:29","nodeType":"YulIdentifier","src":"4958:6:29"}],"functionName":{"name":"add","nativeSrc":"4943:3:29","nodeType":"YulIdentifier","src":"4943:3:29"},"nativeSrc":"4943:22:29","nodeType":"YulFunctionCall","src":"4943:22:29"},"variables":[{"name":"_1","nativeSrc":"4937:2:29","nodeType":"YulTypedName","src":"4937:2:29","type":""}]},{"body":{"nativeSrc":"5013:16:29","nodeType":"YulBlock","src":"5013:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5022:1:29","nodeType":"YulLiteral","src":"5022:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"5025:1:29","nodeType":"YulLiteral","src":"5025:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5015:6:29","nodeType":"YulIdentifier","src":"5015:6:29"},"nativeSrc":"5015:12:29","nodeType":"YulFunctionCall","src":"5015:12:29"},"nativeSrc":"5015:12:29","nodeType":"YulExpressionStatement","src":"5015:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"4992:2:29","nodeType":"YulIdentifier","src":"4992:2:29"},{"kind":"number","nativeSrc":"4996:4:29","nodeType":"YulLiteral","src":"4996:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"4988:3:29","nodeType":"YulIdentifier","src":"4988:3:29"},"nativeSrc":"4988:13:29","nodeType":"YulFunctionCall","src":"4988:13:29"},{"name":"dataEnd","nativeSrc":"5003:7:29","nodeType":"YulIdentifier","src":"5003:7:29"}],"functionName":{"name":"slt","nativeSrc":"4984:3:29","nodeType":"YulIdentifier","src":"4984:3:29"},"nativeSrc":"4984:27:29","nodeType":"YulFunctionCall","src":"4984:27:29"}],"functionName":{"name":"iszero","nativeSrc":"4977:6:29","nodeType":"YulIdentifier","src":"4977:6:29"},"nativeSrc":"4977:35:29","nodeType":"YulFunctionCall","src":"4977:35:29"},"nativeSrc":"4974:55:29","nodeType":"YulIf","src":"4974:55:29"},{"nativeSrc":"5038:84:29","nodeType":"YulAssignment","src":"5038:84:29","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"5087:2:29","nodeType":"YulIdentifier","src":"5087:2:29"},{"kind":"number","nativeSrc":"5091:2:29","nodeType":"YulLiteral","src":"5091:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5083:3:29","nodeType":"YulIdentifier","src":"5083:3:29"},"nativeSrc":"5083:11:29","nodeType":"YulFunctionCall","src":"5083:11:29"},{"arguments":[{"name":"_1","nativeSrc":"5109:2:29","nodeType":"YulIdentifier","src":"5109:2:29"}],"functionName":{"name":"calldataload","nativeSrc":"5096:12:29","nodeType":"YulIdentifier","src":"5096:12:29"},"nativeSrc":"5096:16:29","nodeType":"YulFunctionCall","src":"5096:16:29"},{"name":"dataEnd","nativeSrc":"5114:7:29","nodeType":"YulIdentifier","src":"5114:7:29"}],"functionName":{"name":"abi_decode_available_length_string","nativeSrc":"5048:34:29","nodeType":"YulIdentifier","src":"5048:34:29"},"nativeSrc":"5048:74:29","nodeType":"YulFunctionCall","src":"5048:74:29"},"variableNames":[{"name":"value3","nativeSrc":"5038:6:29","nodeType":"YulIdentifier","src":"5038:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nativeSrc":"4461:667:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4533:9:29","nodeType":"YulTypedName","src":"4533:9:29","type":""},{"name":"dataEnd","nativeSrc":"4544:7:29","nodeType":"YulTypedName","src":"4544:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4556:6:29","nodeType":"YulTypedName","src":"4556:6:29","type":""},{"name":"value1","nativeSrc":"4564:6:29","nodeType":"YulTypedName","src":"4564:6:29","type":""},{"name":"value2","nativeSrc":"4572:6:29","nodeType":"YulTypedName","src":"4572:6:29","type":""},{"name":"value3","nativeSrc":"4580:6:29","nodeType":"YulTypedName","src":"4580:6:29","type":""}],"src":"4461:667:29"},{"body":{"nativeSrc":"5220:173:29","nodeType":"YulBlock","src":"5220:173:29","statements":[{"body":{"nativeSrc":"5266:16:29","nodeType":"YulBlock","src":"5266:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5275:1:29","nodeType":"YulLiteral","src":"5275:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"5278:1:29","nodeType":"YulLiteral","src":"5278:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5268:6:29","nodeType":"YulIdentifier","src":"5268:6:29"},"nativeSrc":"5268:12:29","nodeType":"YulFunctionCall","src":"5268:12:29"},"nativeSrc":"5268:12:29","nodeType":"YulExpressionStatement","src":"5268:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5241:7:29","nodeType":"YulIdentifier","src":"5241:7:29"},{"name":"headStart","nativeSrc":"5250:9:29","nodeType":"YulIdentifier","src":"5250:9:29"}],"functionName":{"name":"sub","nativeSrc":"5237:3:29","nodeType":"YulIdentifier","src":"5237:3:29"},"nativeSrc":"5237:23:29","nodeType":"YulFunctionCall","src":"5237:23:29"},{"kind":"number","nativeSrc":"5262:2:29","nodeType":"YulLiteral","src":"5262:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"5233:3:29","nodeType":"YulIdentifier","src":"5233:3:29"},"nativeSrc":"5233:32:29","nodeType":"YulFunctionCall","src":"5233:32:29"},"nativeSrc":"5230:52:29","nodeType":"YulIf","src":"5230:52:29"},{"nativeSrc":"5291:39:29","nodeType":"YulAssignment","src":"5291:39:29","value":{"arguments":[{"name":"headStart","nativeSrc":"5320:9:29","nodeType":"YulIdentifier","src":"5320:9:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"5301:18:29","nodeType":"YulIdentifier","src":"5301:18:29"},"nativeSrc":"5301:29:29","nodeType":"YulFunctionCall","src":"5301:29:29"},"variableNames":[{"name":"value0","nativeSrc":"5291:6:29","nodeType":"YulIdentifier","src":"5291:6:29"}]},{"nativeSrc":"5339:48:29","nodeType":"YulAssignment","src":"5339:48:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5372:9:29","nodeType":"YulIdentifier","src":"5372:9:29"},{"kind":"number","nativeSrc":"5383:2:29","nodeType":"YulLiteral","src":"5383:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5368:3:29","nodeType":"YulIdentifier","src":"5368:3:29"},"nativeSrc":"5368:18:29","nodeType":"YulFunctionCall","src":"5368:18:29"}],"functionName":{"name":"abi_decode_address","nativeSrc":"5349:18:29","nodeType":"YulIdentifier","src":"5349:18:29"},"nativeSrc":"5349:38:29","nodeType":"YulFunctionCall","src":"5349:38:29"},"variableNames":[{"name":"value1","nativeSrc":"5339:6:29","nodeType":"YulIdentifier","src":"5339:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"5133:260:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5178:9:29","nodeType":"YulTypedName","src":"5178:9:29","type":""},{"name":"dataEnd","nativeSrc":"5189:7:29","nodeType":"YulTypedName","src":"5189:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5201:6:29","nodeType":"YulTypedName","src":"5201:6:29","type":""},{"name":"value1","nativeSrc":"5209:6:29","nodeType":"YulTypedName","src":"5209:6:29","type":""}],"src":"5133:260:29"},{"body":{"nativeSrc":"5453:325:29","nodeType":"YulBlock","src":"5453:325:29","statements":[{"nativeSrc":"5463:22:29","nodeType":"YulAssignment","src":"5463:22:29","value":{"arguments":[{"kind":"number","nativeSrc":"5477:1:29","nodeType":"YulLiteral","src":"5477:1:29","type":"","value":"1"},{"name":"data","nativeSrc":"5480:4:29","nodeType":"YulIdentifier","src":"5480:4:29"}],"functionName":{"name":"shr","nativeSrc":"5473:3:29","nodeType":"YulIdentifier","src":"5473:3:29"},"nativeSrc":"5473:12:29","nodeType":"YulFunctionCall","src":"5473:12:29"},"variableNames":[{"name":"length","nativeSrc":"5463:6:29","nodeType":"YulIdentifier","src":"5463:6:29"}]},{"nativeSrc":"5494:38:29","nodeType":"YulVariableDeclaration","src":"5494:38:29","value":{"arguments":[{"name":"data","nativeSrc":"5524:4:29","nodeType":"YulIdentifier","src":"5524:4:29"},{"kind":"number","nativeSrc":"5530:1:29","nodeType":"YulLiteral","src":"5530:1:29","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"5520:3:29","nodeType":"YulIdentifier","src":"5520:3:29"},"nativeSrc":"5520:12:29","nodeType":"YulFunctionCall","src":"5520:12:29"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"5498:18:29","nodeType":"YulTypedName","src":"5498:18:29","type":""}]},{"body":{"nativeSrc":"5571:31:29","nodeType":"YulBlock","src":"5571:31:29","statements":[{"nativeSrc":"5573:27:29","nodeType":"YulAssignment","src":"5573:27:29","value":{"arguments":[{"name":"length","nativeSrc":"5587:6:29","nodeType":"YulIdentifier","src":"5587:6:29"},{"kind":"number","nativeSrc":"5595:4:29","nodeType":"YulLiteral","src":"5595:4:29","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"5583:3:29","nodeType":"YulIdentifier","src":"5583:3:29"},"nativeSrc":"5583:17:29","nodeType":"YulFunctionCall","src":"5583:17:29"},"variableNames":[{"name":"length","nativeSrc":"5573:6:29","nodeType":"YulIdentifier","src":"5573:6:29"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"5551:18:29","nodeType":"YulIdentifier","src":"5551:18:29"}],"functionName":{"name":"iszero","nativeSrc":"5544:6:29","nodeType":"YulIdentifier","src":"5544:6:29"},"nativeSrc":"5544:26:29","nodeType":"YulFunctionCall","src":"5544:26:29"},"nativeSrc":"5541:61:29","nodeType":"YulIf","src":"5541:61:29"},{"body":{"nativeSrc":"5661:111:29","nodeType":"YulBlock","src":"5661:111:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5682:1:29","nodeType":"YulLiteral","src":"5682:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"5689:3:29","nodeType":"YulLiteral","src":"5689:3:29","type":"","value":"224"},{"kind":"number","nativeSrc":"5694:10:29","nodeType":"YulLiteral","src":"5694:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"5685:3:29","nodeType":"YulIdentifier","src":"5685:3:29"},"nativeSrc":"5685:20:29","nodeType":"YulFunctionCall","src":"5685:20:29"}],"functionName":{"name":"mstore","nativeSrc":"5675:6:29","nodeType":"YulIdentifier","src":"5675:6:29"},"nativeSrc":"5675:31:29","nodeType":"YulFunctionCall","src":"5675:31:29"},"nativeSrc":"5675:31:29","nodeType":"YulExpressionStatement","src":"5675:31:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5726:1:29","nodeType":"YulLiteral","src":"5726:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"5729:4:29","nodeType":"YulLiteral","src":"5729:4:29","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"5719:6:29","nodeType":"YulIdentifier","src":"5719:6:29"},"nativeSrc":"5719:15:29","nodeType":"YulFunctionCall","src":"5719:15:29"},"nativeSrc":"5719:15:29","nodeType":"YulExpressionStatement","src":"5719:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5754:1:29","nodeType":"YulLiteral","src":"5754:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"5757:4:29","nodeType":"YulLiteral","src":"5757:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5747:6:29","nodeType":"YulIdentifier","src":"5747:6:29"},"nativeSrc":"5747:15:29","nodeType":"YulFunctionCall","src":"5747:15:29"},"nativeSrc":"5747:15:29","nodeType":"YulExpressionStatement","src":"5747:15:29"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"5617:18:29","nodeType":"YulIdentifier","src":"5617:18:29"},{"arguments":[{"name":"length","nativeSrc":"5640:6:29","nodeType":"YulIdentifier","src":"5640:6:29"},{"kind":"number","nativeSrc":"5648:2:29","nodeType":"YulLiteral","src":"5648:2:29","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"5637:2:29","nodeType":"YulIdentifier","src":"5637:2:29"},"nativeSrc":"5637:14:29","nodeType":"YulFunctionCall","src":"5637:14:29"}],"functionName":{"name":"eq","nativeSrc":"5614:2:29","nodeType":"YulIdentifier","src":"5614:2:29"},"nativeSrc":"5614:38:29","nodeType":"YulFunctionCall","src":"5614:38:29"},"nativeSrc":"5611:161:29","nodeType":"YulIf","src":"5611:161:29"}]},"name":"extract_byte_array_length","nativeSrc":"5398:380:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"5433:4:29","nodeType":"YulTypedName","src":"5433:4:29","type":""}],"returnVariables":[{"name":"length","nativeSrc":"5442:6:29","nodeType":"YulTypedName","src":"5442:6:29","type":""}],"src":"5398:380:29"},{"body":{"nativeSrc":"5940:218:29","nodeType":"YulBlock","src":"5940:218:29","statements":[{"nativeSrc":"5950:26:29","nodeType":"YulAssignment","src":"5950:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"5962:9:29","nodeType":"YulIdentifier","src":"5962:9:29"},{"kind":"number","nativeSrc":"5973:2:29","nodeType":"YulLiteral","src":"5973:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5958:3:29","nodeType":"YulIdentifier","src":"5958:3:29"},"nativeSrc":"5958:18:29","nodeType":"YulFunctionCall","src":"5958:18:29"},"variableNames":[{"name":"tail","nativeSrc":"5950:4:29","nodeType":"YulIdentifier","src":"5950:4:29"}]},{"nativeSrc":"5985:29:29","nodeType":"YulVariableDeclaration","src":"5985:29:29","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6003:3:29","nodeType":"YulLiteral","src":"6003:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"6008:1:29","nodeType":"YulLiteral","src":"6008:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"5999:3:29","nodeType":"YulIdentifier","src":"5999:3:29"},"nativeSrc":"5999:11:29","nodeType":"YulFunctionCall","src":"5999:11:29"},{"kind":"number","nativeSrc":"6012:1:29","nodeType":"YulLiteral","src":"6012:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"5995:3:29","nodeType":"YulIdentifier","src":"5995:3:29"},"nativeSrc":"5995:19:29","nodeType":"YulFunctionCall","src":"5995:19:29"},"variables":[{"name":"_1","nativeSrc":"5989:2:29","nodeType":"YulTypedName","src":"5989:2:29","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6030:9:29","nodeType":"YulIdentifier","src":"6030:9:29"},{"arguments":[{"name":"value0","nativeSrc":"6045:6:29","nodeType":"YulIdentifier","src":"6045:6:29"},{"name":"_1","nativeSrc":"6053:2:29","nodeType":"YulIdentifier","src":"6053:2:29"}],"functionName":{"name":"and","nativeSrc":"6041:3:29","nodeType":"YulIdentifier","src":"6041:3:29"},"nativeSrc":"6041:15:29","nodeType":"YulFunctionCall","src":"6041:15:29"}],"functionName":{"name":"mstore","nativeSrc":"6023:6:29","nodeType":"YulIdentifier","src":"6023:6:29"},"nativeSrc":"6023:34:29","nodeType":"YulFunctionCall","src":"6023:34:29"},"nativeSrc":"6023:34:29","nodeType":"YulExpressionStatement","src":"6023:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6077:9:29","nodeType":"YulIdentifier","src":"6077:9:29"},{"kind":"number","nativeSrc":"6088:2:29","nodeType":"YulLiteral","src":"6088:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6073:3:29","nodeType":"YulIdentifier","src":"6073:3:29"},"nativeSrc":"6073:18:29","nodeType":"YulFunctionCall","src":"6073:18:29"},{"name":"value1","nativeSrc":"6093:6:29","nodeType":"YulIdentifier","src":"6093:6:29"}],"functionName":{"name":"mstore","nativeSrc":"6066:6:29","nodeType":"YulIdentifier","src":"6066:6:29"},"nativeSrc":"6066:34:29","nodeType":"YulFunctionCall","src":"6066:34:29"},"nativeSrc":"6066:34:29","nodeType":"YulExpressionStatement","src":"6066:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6120:9:29","nodeType":"YulIdentifier","src":"6120:9:29"},{"kind":"number","nativeSrc":"6131:2:29","nodeType":"YulLiteral","src":"6131:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6116:3:29","nodeType":"YulIdentifier","src":"6116:3:29"},"nativeSrc":"6116:18:29","nodeType":"YulFunctionCall","src":"6116:18:29"},{"arguments":[{"name":"value2","nativeSrc":"6140:6:29","nodeType":"YulIdentifier","src":"6140:6:29"},{"name":"_1","nativeSrc":"6148:2:29","nodeType":"YulIdentifier","src":"6148:2:29"}],"functionName":{"name":"and","nativeSrc":"6136:3:29","nodeType":"YulIdentifier","src":"6136:3:29"},"nativeSrc":"6136:15:29","nodeType":"YulFunctionCall","src":"6136:15:29"}],"functionName":{"name":"mstore","nativeSrc":"6109:6:29","nodeType":"YulIdentifier","src":"6109:6:29"},"nativeSrc":"6109:43:29","nodeType":"YulFunctionCall","src":"6109:43:29"},"nativeSrc":"6109:43:29","nodeType":"YulExpressionStatement","src":"6109:43:29"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nativeSrc":"5783:375:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5893:9:29","nodeType":"YulTypedName","src":"5893:9:29","type":""},{"name":"value2","nativeSrc":"5904:6:29","nodeType":"YulTypedName","src":"5904:6:29","type":""},{"name":"value1","nativeSrc":"5912:6:29","nodeType":"YulTypedName","src":"5912:6:29","type":""},{"name":"value0","nativeSrc":"5920:6:29","nodeType":"YulTypedName","src":"5920:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5931:4:29","nodeType":"YulTypedName","src":"5931:4:29","type":""}],"src":"5783:375:29"},{"body":{"nativeSrc":"6211:174:29","nodeType":"YulBlock","src":"6211:174:29","statements":[{"nativeSrc":"6221:16:29","nodeType":"YulAssignment","src":"6221:16:29","value":{"arguments":[{"name":"x","nativeSrc":"6232:1:29","nodeType":"YulIdentifier","src":"6232:1:29"},{"name":"y","nativeSrc":"6235:1:29","nodeType":"YulIdentifier","src":"6235:1:29"}],"functionName":{"name":"add","nativeSrc":"6228:3:29","nodeType":"YulIdentifier","src":"6228:3:29"},"nativeSrc":"6228:9:29","nodeType":"YulFunctionCall","src":"6228:9:29"},"variableNames":[{"name":"sum","nativeSrc":"6221:3:29","nodeType":"YulIdentifier","src":"6221:3:29"}]},{"body":{"nativeSrc":"6268:111:29","nodeType":"YulBlock","src":"6268:111:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6289:1:29","nodeType":"YulLiteral","src":"6289:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"6296:3:29","nodeType":"YulLiteral","src":"6296:3:29","type":"","value":"224"},{"kind":"number","nativeSrc":"6301:10:29","nodeType":"YulLiteral","src":"6301:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"6292:3:29","nodeType":"YulIdentifier","src":"6292:3:29"},"nativeSrc":"6292:20:29","nodeType":"YulFunctionCall","src":"6292:20:29"}],"functionName":{"name":"mstore","nativeSrc":"6282:6:29","nodeType":"YulIdentifier","src":"6282:6:29"},"nativeSrc":"6282:31:29","nodeType":"YulFunctionCall","src":"6282:31:29"},"nativeSrc":"6282:31:29","nodeType":"YulExpressionStatement","src":"6282:31:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6333:1:29","nodeType":"YulLiteral","src":"6333:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"6336:4:29","nodeType":"YulLiteral","src":"6336:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"6326:6:29","nodeType":"YulIdentifier","src":"6326:6:29"},"nativeSrc":"6326:15:29","nodeType":"YulFunctionCall","src":"6326:15:29"},"nativeSrc":"6326:15:29","nodeType":"YulExpressionStatement","src":"6326:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6361:1:29","nodeType":"YulLiteral","src":"6361:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"6364:4:29","nodeType":"YulLiteral","src":"6364:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6354:6:29","nodeType":"YulIdentifier","src":"6354:6:29"},"nativeSrc":"6354:15:29","nodeType":"YulFunctionCall","src":"6354:15:29"},"nativeSrc":"6354:15:29","nodeType":"YulExpressionStatement","src":"6354:15:29"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"6252:1:29","nodeType":"YulIdentifier","src":"6252:1:29"},{"name":"sum","nativeSrc":"6255:3:29","nodeType":"YulIdentifier","src":"6255:3:29"}],"functionName":{"name":"gt","nativeSrc":"6249:2:29","nodeType":"YulIdentifier","src":"6249:2:29"},"nativeSrc":"6249:10:29","nodeType":"YulFunctionCall","src":"6249:10:29"},"nativeSrc":"6246:133:29","nodeType":"YulIf","src":"6246:133:29"}]},"name":"checked_add_t_uint256","nativeSrc":"6163:222:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"6194:1:29","nodeType":"YulTypedName","src":"6194:1:29","type":""},{"name":"y","nativeSrc":"6197:1:29","nodeType":"YulTypedName","src":"6197:1:29","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"6203:3:29","nodeType":"YulTypedName","src":"6203:3:29","type":""}],"src":"6163:222:29"},{"body":{"nativeSrc":"6446:65:29","nodeType":"YulBlock","src":"6446:65:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6463:1:29","nodeType":"YulLiteral","src":"6463:1:29","type":"","value":"0"},{"name":"ptr","nativeSrc":"6466:3:29","nodeType":"YulIdentifier","src":"6466:3:29"}],"functionName":{"name":"mstore","nativeSrc":"6456:6:29","nodeType":"YulIdentifier","src":"6456:6:29"},"nativeSrc":"6456:14:29","nodeType":"YulFunctionCall","src":"6456:14:29"},"nativeSrc":"6456:14:29","nodeType":"YulExpressionStatement","src":"6456:14:29"},{"nativeSrc":"6479:26:29","nodeType":"YulAssignment","src":"6479:26:29","value":{"arguments":[{"kind":"number","nativeSrc":"6497:1:29","nodeType":"YulLiteral","src":"6497:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"6500:4:29","nodeType":"YulLiteral","src":"6500:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"6487:9:29","nodeType":"YulIdentifier","src":"6487:9:29"},"nativeSrc":"6487:18:29","nodeType":"YulFunctionCall","src":"6487:18:29"},"variableNames":[{"name":"data","nativeSrc":"6479:4:29","nodeType":"YulIdentifier","src":"6479:4:29"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"6390:121:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"6429:3:29","nodeType":"YulTypedName","src":"6429:3:29","type":""}],"returnVariables":[{"name":"data","nativeSrc":"6437:4:29","nodeType":"YulTypedName","src":"6437:4:29","type":""}],"src":"6390:121:29"},{"body":{"nativeSrc":"6597:462:29","nodeType":"YulBlock","src":"6597:462:29","statements":[{"body":{"nativeSrc":"6630:423:29","nodeType":"YulBlock","src":"6630:423:29","statements":[{"nativeSrc":"6644:11:29","nodeType":"YulVariableDeclaration","src":"6644:11:29","value":{"kind":"number","nativeSrc":"6654:1:29","nodeType":"YulLiteral","src":"6654:1:29","type":"","value":"0"},"variables":[{"name":"_1","nativeSrc":"6648:2:29","nodeType":"YulTypedName","src":"6648:2:29","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6675:1:29","nodeType":"YulLiteral","src":"6675:1:29","type":"","value":"0"},{"name":"array","nativeSrc":"6678:5:29","nodeType":"YulIdentifier","src":"6678:5:29"}],"functionName":{"name":"mstore","nativeSrc":"6668:6:29","nodeType":"YulIdentifier","src":"6668:6:29"},"nativeSrc":"6668:16:29","nodeType":"YulFunctionCall","src":"6668:16:29"},"nativeSrc":"6668:16:29","nodeType":"YulExpressionStatement","src":"6668:16:29"},{"nativeSrc":"6697:30:29","nodeType":"YulVariableDeclaration","src":"6697:30:29","value":{"arguments":[{"kind":"number","nativeSrc":"6719:1:29","nodeType":"YulLiteral","src":"6719:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"6722:4:29","nodeType":"YulLiteral","src":"6722:4:29","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"6709:9:29","nodeType":"YulIdentifier","src":"6709:9:29"},"nativeSrc":"6709:18:29","nodeType":"YulFunctionCall","src":"6709:18:29"},"variables":[{"name":"data","nativeSrc":"6701:4:29","nodeType":"YulTypedName","src":"6701:4:29","type":""}]},{"nativeSrc":"6740:57:29","nodeType":"YulVariableDeclaration","src":"6740:57:29","value":{"arguments":[{"name":"data","nativeSrc":"6763:4:29","nodeType":"YulIdentifier","src":"6763:4:29"},{"arguments":[{"kind":"number","nativeSrc":"6773:1:29","nodeType":"YulLiteral","src":"6773:1:29","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"6780:10:29","nodeType":"YulIdentifier","src":"6780:10:29"},{"kind":"number","nativeSrc":"6792:2:29","nodeType":"YulLiteral","src":"6792:2:29","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"6776:3:29","nodeType":"YulIdentifier","src":"6776:3:29"},"nativeSrc":"6776:19:29","nodeType":"YulFunctionCall","src":"6776:19:29"}],"functionName":{"name":"shr","nativeSrc":"6769:3:29","nodeType":"YulIdentifier","src":"6769:3:29"},"nativeSrc":"6769:27:29","nodeType":"YulFunctionCall","src":"6769:27:29"}],"functionName":{"name":"add","nativeSrc":"6759:3:29","nodeType":"YulIdentifier","src":"6759:3:29"},"nativeSrc":"6759:38:29","nodeType":"YulFunctionCall","src":"6759:38:29"},"variables":[{"name":"deleteStart","nativeSrc":"6744:11:29","nodeType":"YulTypedName","src":"6744:11:29","type":""}]},{"body":{"nativeSrc":"6834:23:29","nodeType":"YulBlock","src":"6834:23:29","statements":[{"nativeSrc":"6836:19:29","nodeType":"YulAssignment","src":"6836:19:29","value":{"name":"data","nativeSrc":"6851:4:29","nodeType":"YulIdentifier","src":"6851:4:29"},"variableNames":[{"name":"deleteStart","nativeSrc":"6836:11:29","nodeType":"YulIdentifier","src":"6836:11:29"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"6816:10:29","nodeType":"YulIdentifier","src":"6816:10:29"},{"kind":"number","nativeSrc":"6828:4:29","nodeType":"YulLiteral","src":"6828:4:29","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"6813:2:29","nodeType":"YulIdentifier","src":"6813:2:29"},"nativeSrc":"6813:20:29","nodeType":"YulFunctionCall","src":"6813:20:29"},"nativeSrc":"6810:47:29","nodeType":"YulIf","src":"6810:47:29"},{"nativeSrc":"6870:41:29","nodeType":"YulVariableDeclaration","src":"6870:41:29","value":{"arguments":[{"name":"data","nativeSrc":"6884:4:29","nodeType":"YulIdentifier","src":"6884:4:29"},{"arguments":[{"kind":"number","nativeSrc":"6894:1:29","nodeType":"YulLiteral","src":"6894:1:29","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"6901:3:29","nodeType":"YulIdentifier","src":"6901:3:29"},{"kind":"number","nativeSrc":"6906:2:29","nodeType":"YulLiteral","src":"6906:2:29","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"6897:3:29","nodeType":"YulIdentifier","src":"6897:3:29"},"nativeSrc":"6897:12:29","nodeType":"YulFunctionCall","src":"6897:12:29"}],"functionName":{"name":"shr","nativeSrc":"6890:3:29","nodeType":"YulIdentifier","src":"6890:3:29"},"nativeSrc":"6890:20:29","nodeType":"YulFunctionCall","src":"6890:20:29"}],"functionName":{"name":"add","nativeSrc":"6880:3:29","nodeType":"YulIdentifier","src":"6880:3:29"},"nativeSrc":"6880:31:29","nodeType":"YulFunctionCall","src":"6880:31:29"},"variables":[{"name":"_2","nativeSrc":"6874:2:29","nodeType":"YulTypedName","src":"6874:2:29","type":""}]},{"nativeSrc":"6924:24:29","nodeType":"YulVariableDeclaration","src":"6924:24:29","value":{"name":"deleteStart","nativeSrc":"6937:11:29","nodeType":"YulIdentifier","src":"6937:11:29"},"variables":[{"name":"start","nativeSrc":"6928:5:29","nodeType":"YulTypedName","src":"6928:5:29","type":""}]},{"body":{"nativeSrc":"7022:21:29","nodeType":"YulBlock","src":"7022:21:29","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"7031:5:29","nodeType":"YulIdentifier","src":"7031:5:29"},{"name":"_1","nativeSrc":"7038:2:29","nodeType":"YulIdentifier","src":"7038:2:29"}],"functionName":{"name":"sstore","nativeSrc":"7024:6:29","nodeType":"YulIdentifier","src":"7024:6:29"},"nativeSrc":"7024:17:29","nodeType":"YulFunctionCall","src":"7024:17:29"},"nativeSrc":"7024:17:29","nodeType":"YulExpressionStatement","src":"7024:17:29"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"6972:5:29","nodeType":"YulIdentifier","src":"6972:5:29"},{"name":"_2","nativeSrc":"6979:2:29","nodeType":"YulIdentifier","src":"6979:2:29"}],"functionName":{"name":"lt","nativeSrc":"6969:2:29","nodeType":"YulIdentifier","src":"6969:2:29"},"nativeSrc":"6969:13:29","nodeType":"YulFunctionCall","src":"6969:13:29"},"nativeSrc":"6961:82:29","nodeType":"YulForLoop","post":{"nativeSrc":"6983:26:29","nodeType":"YulBlock","src":"6983:26:29","statements":[{"nativeSrc":"6985:22:29","nodeType":"YulAssignment","src":"6985:22:29","value":{"arguments":[{"name":"start","nativeSrc":"6998:5:29","nodeType":"YulIdentifier","src":"6998:5:29"},{"kind":"number","nativeSrc":"7005:1:29","nodeType":"YulLiteral","src":"7005:1:29","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6994:3:29","nodeType":"YulIdentifier","src":"6994:3:29"},"nativeSrc":"6994:13:29","nodeType":"YulFunctionCall","src":"6994:13:29"},"variableNames":[{"name":"start","nativeSrc":"6985:5:29","nodeType":"YulIdentifier","src":"6985:5:29"}]}]},"pre":{"nativeSrc":"6965:3:29","nodeType":"YulBlock","src":"6965:3:29","statements":[]},"src":"6961:82:29"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"6613:3:29","nodeType":"YulIdentifier","src":"6613:3:29"},{"kind":"number","nativeSrc":"6618:2:29","nodeType":"YulLiteral","src":"6618:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"6610:2:29","nodeType":"YulIdentifier","src":"6610:2:29"},"nativeSrc":"6610:11:29","nodeType":"YulFunctionCall","src":"6610:11:29"},"nativeSrc":"6607:446:29","nodeType":"YulIf","src":"6607:446:29"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"6516:543:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"6569:5:29","nodeType":"YulTypedName","src":"6569:5:29","type":""},{"name":"len","nativeSrc":"6576:3:29","nodeType":"YulTypedName","src":"6576:3:29","type":""},{"name":"startIndex","nativeSrc":"6581:10:29","nodeType":"YulTypedName","src":"6581:10:29","type":""}],"src":"6516:543:29"},{"body":{"nativeSrc":"7149:81:29","nodeType":"YulBlock","src":"7149:81:29","statements":[{"nativeSrc":"7159:65:29","nodeType":"YulAssignment","src":"7159:65:29","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"7174:4:29","nodeType":"YulIdentifier","src":"7174:4:29"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7192:1:29","nodeType":"YulLiteral","src":"7192:1:29","type":"","value":"3"},{"name":"len","nativeSrc":"7195:3:29","nodeType":"YulIdentifier","src":"7195:3:29"}],"functionName":{"name":"shl","nativeSrc":"7188:3:29","nodeType":"YulIdentifier","src":"7188:3:29"},"nativeSrc":"7188:11:29","nodeType":"YulFunctionCall","src":"7188:11:29"},{"arguments":[{"kind":"number","nativeSrc":"7205:1:29","nodeType":"YulLiteral","src":"7205:1:29","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"7201:3:29","nodeType":"YulIdentifier","src":"7201:3:29"},"nativeSrc":"7201:6:29","nodeType":"YulFunctionCall","src":"7201:6:29"}],"functionName":{"name":"shr","nativeSrc":"7184:3:29","nodeType":"YulIdentifier","src":"7184:3:29"},"nativeSrc":"7184:24:29","nodeType":"YulFunctionCall","src":"7184:24:29"}],"functionName":{"name":"not","nativeSrc":"7180:3:29","nodeType":"YulIdentifier","src":"7180:3:29"},"nativeSrc":"7180:29:29","nodeType":"YulFunctionCall","src":"7180:29:29"}],"functionName":{"name":"and","nativeSrc":"7170:3:29","nodeType":"YulIdentifier","src":"7170:3:29"},"nativeSrc":"7170:40:29","nodeType":"YulFunctionCall","src":"7170:40:29"},{"arguments":[{"kind":"number","nativeSrc":"7216:1:29","nodeType":"YulLiteral","src":"7216:1:29","type":"","value":"1"},{"name":"len","nativeSrc":"7219:3:29","nodeType":"YulIdentifier","src":"7219:3:29"}],"functionName":{"name":"shl","nativeSrc":"7212:3:29","nodeType":"YulIdentifier","src":"7212:3:29"},"nativeSrc":"7212:11:29","nodeType":"YulFunctionCall","src":"7212:11:29"}],"functionName":{"name":"or","nativeSrc":"7167:2:29","nodeType":"YulIdentifier","src":"7167:2:29"},"nativeSrc":"7167:57:29","nodeType":"YulFunctionCall","src":"7167:57:29"},"variableNames":[{"name":"used","nativeSrc":"7159:4:29","nodeType":"YulIdentifier","src":"7159:4:29"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"7064:166:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"7126:4:29","nodeType":"YulTypedName","src":"7126:4:29","type":""},{"name":"len","nativeSrc":"7132:3:29","nodeType":"YulTypedName","src":"7132:3:29","type":""}],"returnVariables":[{"name":"used","nativeSrc":"7140:4:29","nodeType":"YulTypedName","src":"7140:4:29","type":""}],"src":"7064:166:29"},{"body":{"nativeSrc":"7331:1249:29","nodeType":"YulBlock","src":"7331:1249:29","statements":[{"nativeSrc":"7341:24:29","nodeType":"YulVariableDeclaration","src":"7341:24:29","value":{"arguments":[{"name":"src","nativeSrc":"7361:3:29","nodeType":"YulIdentifier","src":"7361:3:29"}],"functionName":{"name":"mload","nativeSrc":"7355:5:29","nodeType":"YulIdentifier","src":"7355:5:29"},"nativeSrc":"7355:10:29","nodeType":"YulFunctionCall","src":"7355:10:29"},"variables":[{"name":"newLen","nativeSrc":"7345:6:29","nodeType":"YulTypedName","src":"7345:6:29","type":""}]},{"body":{"nativeSrc":"7408:22:29","nodeType":"YulBlock","src":"7408:22:29","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"7410:16:29","nodeType":"YulIdentifier","src":"7410:16:29"},"nativeSrc":"7410:18:29","nodeType":"YulFunctionCall","src":"7410:18:29"},"nativeSrc":"7410:18:29","nodeType":"YulExpressionStatement","src":"7410:18:29"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"7380:6:29","nodeType":"YulIdentifier","src":"7380:6:29"},{"kind":"number","nativeSrc":"7388:18:29","nodeType":"YulLiteral","src":"7388:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7377:2:29","nodeType":"YulIdentifier","src":"7377:2:29"},"nativeSrc":"7377:30:29","nodeType":"YulFunctionCall","src":"7377:30:29"},"nativeSrc":"7374:56:29","nodeType":"YulIf","src":"7374:56:29"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"7483:4:29","nodeType":"YulIdentifier","src":"7483:4:29"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"7521:4:29","nodeType":"YulIdentifier","src":"7521:4:29"}],"functionName":{"name":"sload","nativeSrc":"7515:5:29","nodeType":"YulIdentifier","src":"7515:5:29"},"nativeSrc":"7515:11:29","nodeType":"YulFunctionCall","src":"7515:11:29"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"7489:25:29","nodeType":"YulIdentifier","src":"7489:25:29"},"nativeSrc":"7489:38:29","nodeType":"YulFunctionCall","src":"7489:38:29"},{"name":"newLen","nativeSrc":"7529:6:29","nodeType":"YulIdentifier","src":"7529:6:29"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"7439:43:29","nodeType":"YulIdentifier","src":"7439:43:29"},"nativeSrc":"7439:97:29","nodeType":"YulFunctionCall","src":"7439:97:29"},"nativeSrc":"7439:97:29","nodeType":"YulExpressionStatement","src":"7439:97:29"},{"nativeSrc":"7545:18:29","nodeType":"YulVariableDeclaration","src":"7545:18:29","value":{"kind":"number","nativeSrc":"7562:1:29","nodeType":"YulLiteral","src":"7562:1:29","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"7549:9:29","nodeType":"YulTypedName","src":"7549:9:29","type":""}]},{"nativeSrc":"7572:23:29","nodeType":"YulVariableDeclaration","src":"7572:23:29","value":{"kind":"number","nativeSrc":"7591:4:29","nodeType":"YulLiteral","src":"7591:4:29","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nativeSrc":"7576:11:29","nodeType":"YulTypedName","src":"7576:11:29","type":""}]},{"nativeSrc":"7604:17:29","nodeType":"YulAssignment","src":"7604:17:29","value":{"kind":"number","nativeSrc":"7617:4:29","nodeType":"YulLiteral","src":"7617:4:29","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"7604:9:29","nodeType":"YulIdentifier","src":"7604:9:29"}]},{"cases":[{"body":{"nativeSrc":"7667:656:29","nodeType":"YulBlock","src":"7667:656:29","statements":[{"nativeSrc":"7681:35:29","nodeType":"YulVariableDeclaration","src":"7681:35:29","value":{"arguments":[{"name":"newLen","nativeSrc":"7700:6:29","nodeType":"YulIdentifier","src":"7700:6:29"},{"arguments":[{"kind":"number","nativeSrc":"7712:2:29","nodeType":"YulLiteral","src":"7712:2:29","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"7708:3:29","nodeType":"YulIdentifier","src":"7708:3:29"},"nativeSrc":"7708:7:29","nodeType":"YulFunctionCall","src":"7708:7:29"}],"functionName":{"name":"and","nativeSrc":"7696:3:29","nodeType":"YulIdentifier","src":"7696:3:29"},"nativeSrc":"7696:20:29","nodeType":"YulFunctionCall","src":"7696:20:29"},"variables":[{"name":"loopEnd","nativeSrc":"7685:7:29","nodeType":"YulTypedName","src":"7685:7:29","type":""}]},{"nativeSrc":"7729:49:29","nodeType":"YulVariableDeclaration","src":"7729:49:29","value":{"arguments":[{"name":"slot","nativeSrc":"7773:4:29","nodeType":"YulIdentifier","src":"7773:4:29"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"7743:29:29","nodeType":"YulIdentifier","src":"7743:29:29"},"nativeSrc":"7743:35:29","nodeType":"YulFunctionCall","src":"7743:35:29"},"variables":[{"name":"dstPtr","nativeSrc":"7733:6:29","nodeType":"YulTypedName","src":"7733:6:29","type":""}]},{"nativeSrc":"7791:10:29","nodeType":"YulVariableDeclaration","src":"7791:10:29","value":{"kind":"number","nativeSrc":"7800:1:29","nodeType":"YulLiteral","src":"7800:1:29","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"7795:1:29","nodeType":"YulTypedName","src":"7795:1:29","type":""}]},{"body":{"nativeSrc":"7878:172:29","nodeType":"YulBlock","src":"7878:172:29","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"7903:6:29","nodeType":"YulIdentifier","src":"7903:6:29"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"7921:3:29","nodeType":"YulIdentifier","src":"7921:3:29"},{"name":"srcOffset","nativeSrc":"7926:9:29","nodeType":"YulIdentifier","src":"7926:9:29"}],"functionName":{"name":"add","nativeSrc":"7917:3:29","nodeType":"YulIdentifier","src":"7917:3:29"},"nativeSrc":"7917:19:29","nodeType":"YulFunctionCall","src":"7917:19:29"}],"functionName":{"name":"mload","nativeSrc":"7911:5:29","nodeType":"YulIdentifier","src":"7911:5:29"},"nativeSrc":"7911:26:29","nodeType":"YulFunctionCall","src":"7911:26:29"}],"functionName":{"name":"sstore","nativeSrc":"7896:6:29","nodeType":"YulIdentifier","src":"7896:6:29"},"nativeSrc":"7896:42:29","nodeType":"YulFunctionCall","src":"7896:42:29"},"nativeSrc":"7896:42:29","nodeType":"YulExpressionStatement","src":"7896:42:29"},{"nativeSrc":"7955:24:29","nodeType":"YulAssignment","src":"7955:24:29","value":{"arguments":[{"name":"dstPtr","nativeSrc":"7969:6:29","nodeType":"YulIdentifier","src":"7969:6:29"},{"kind":"number","nativeSrc":"7977:1:29","nodeType":"YulLiteral","src":"7977:1:29","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7965:3:29","nodeType":"YulIdentifier","src":"7965:3:29"},"nativeSrc":"7965:14:29","nodeType":"YulFunctionCall","src":"7965:14:29"},"variableNames":[{"name":"dstPtr","nativeSrc":"7955:6:29","nodeType":"YulIdentifier","src":"7955:6:29"}]},{"nativeSrc":"7996:40:29","nodeType":"YulAssignment","src":"7996:40:29","value":{"arguments":[{"name":"srcOffset","nativeSrc":"8013:9:29","nodeType":"YulIdentifier","src":"8013:9:29"},{"name":"srcOffset_1","nativeSrc":"8024:11:29","nodeType":"YulIdentifier","src":"8024:11:29"}],"functionName":{"name":"add","nativeSrc":"8009:3:29","nodeType":"YulIdentifier","src":"8009:3:29"},"nativeSrc":"8009:27:29","nodeType":"YulFunctionCall","src":"8009:27:29"},"variableNames":[{"name":"srcOffset","nativeSrc":"7996:9:29","nodeType":"YulIdentifier","src":"7996:9:29"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"7825:1:29","nodeType":"YulIdentifier","src":"7825:1:29"},{"name":"loopEnd","nativeSrc":"7828:7:29","nodeType":"YulIdentifier","src":"7828:7:29"}],"functionName":{"name":"lt","nativeSrc":"7822:2:29","nodeType":"YulIdentifier","src":"7822:2:29"},"nativeSrc":"7822:14:29","nodeType":"YulFunctionCall","src":"7822:14:29"},"nativeSrc":"7814:236:29","nodeType":"YulForLoop","post":{"nativeSrc":"7837:28:29","nodeType":"YulBlock","src":"7837:28:29","statements":[{"nativeSrc":"7839:24:29","nodeType":"YulAssignment","src":"7839:24:29","value":{"arguments":[{"name":"i","nativeSrc":"7848:1:29","nodeType":"YulIdentifier","src":"7848:1:29"},{"name":"srcOffset_1","nativeSrc":"7851:11:29","nodeType":"YulIdentifier","src":"7851:11:29"}],"functionName":{"name":"add","nativeSrc":"7844:3:29","nodeType":"YulIdentifier","src":"7844:3:29"},"nativeSrc":"7844:19:29","nodeType":"YulFunctionCall","src":"7844:19:29"},"variableNames":[{"name":"i","nativeSrc":"7839:1:29","nodeType":"YulIdentifier","src":"7839:1:29"}]}]},"pre":{"nativeSrc":"7818:3:29","nodeType":"YulBlock","src":"7818:3:29","statements":[]},"src":"7814:236:29"},{"body":{"nativeSrc":"8098:166:29","nodeType":"YulBlock","src":"8098:166:29","statements":[{"nativeSrc":"8116:43:29","nodeType":"YulVariableDeclaration","src":"8116:43:29","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8143:3:29","nodeType":"YulIdentifier","src":"8143:3:29"},{"name":"srcOffset","nativeSrc":"8148:9:29","nodeType":"YulIdentifier","src":"8148:9:29"}],"functionName":{"name":"add","nativeSrc":"8139:3:29","nodeType":"YulIdentifier","src":"8139:3:29"},"nativeSrc":"8139:19:29","nodeType":"YulFunctionCall","src":"8139:19:29"}],"functionName":{"name":"mload","nativeSrc":"8133:5:29","nodeType":"YulIdentifier","src":"8133:5:29"},"nativeSrc":"8133:26:29","nodeType":"YulFunctionCall","src":"8133:26:29"},"variables":[{"name":"lastValue","nativeSrc":"8120:9:29","nodeType":"YulTypedName","src":"8120:9:29","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"8183:6:29","nodeType":"YulIdentifier","src":"8183:6:29"},{"arguments":[{"name":"lastValue","nativeSrc":"8195:9:29","nodeType":"YulIdentifier","src":"8195:9:29"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"8222:1:29","nodeType":"YulLiteral","src":"8222:1:29","type":"","value":"3"},{"name":"newLen","nativeSrc":"8225:6:29","nodeType":"YulIdentifier","src":"8225:6:29"}],"functionName":{"name":"shl","nativeSrc":"8218:3:29","nodeType":"YulIdentifier","src":"8218:3:29"},"nativeSrc":"8218:14:29","nodeType":"YulFunctionCall","src":"8218:14:29"},{"kind":"number","nativeSrc":"8234:3:29","nodeType":"YulLiteral","src":"8234:3:29","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"8214:3:29","nodeType":"YulIdentifier","src":"8214:3:29"},"nativeSrc":"8214:24:29","nodeType":"YulFunctionCall","src":"8214:24:29"},{"arguments":[{"kind":"number","nativeSrc":"8244:1:29","nodeType":"YulLiteral","src":"8244:1:29","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"8240:3:29","nodeType":"YulIdentifier","src":"8240:3:29"},"nativeSrc":"8240:6:29","nodeType":"YulFunctionCall","src":"8240:6:29"}],"functionName":{"name":"shr","nativeSrc":"8210:3:29","nodeType":"YulIdentifier","src":"8210:3:29"},"nativeSrc":"8210:37:29","nodeType":"YulFunctionCall","src":"8210:37:29"}],"functionName":{"name":"not","nativeSrc":"8206:3:29","nodeType":"YulIdentifier","src":"8206:3:29"},"nativeSrc":"8206:42:29","nodeType":"YulFunctionCall","src":"8206:42:29"}],"functionName":{"name":"and","nativeSrc":"8191:3:29","nodeType":"YulIdentifier","src":"8191:3:29"},"nativeSrc":"8191:58:29","nodeType":"YulFunctionCall","src":"8191:58:29"}],"functionName":{"name":"sstore","nativeSrc":"8176:6:29","nodeType":"YulIdentifier","src":"8176:6:29"},"nativeSrc":"8176:74:29","nodeType":"YulFunctionCall","src":"8176:74:29"},"nativeSrc":"8176:74:29","nodeType":"YulExpressionStatement","src":"8176:74:29"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"8069:7:29","nodeType":"YulIdentifier","src":"8069:7:29"},{"name":"newLen","nativeSrc":"8078:6:29","nodeType":"YulIdentifier","src":"8078:6:29"}],"functionName":{"name":"lt","nativeSrc":"8066:2:29","nodeType":"YulIdentifier","src":"8066:2:29"},"nativeSrc":"8066:19:29","nodeType":"YulFunctionCall","src":"8066:19:29"},"nativeSrc":"8063:201:29","nodeType":"YulIf","src":"8063:201:29"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"8284:4:29","nodeType":"YulIdentifier","src":"8284:4:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"8298:1:29","nodeType":"YulLiteral","src":"8298:1:29","type":"","value":"1"},{"name":"newLen","nativeSrc":"8301:6:29","nodeType":"YulIdentifier","src":"8301:6:29"}],"functionName":{"name":"shl","nativeSrc":"8294:3:29","nodeType":"YulIdentifier","src":"8294:3:29"},"nativeSrc":"8294:14:29","nodeType":"YulFunctionCall","src":"8294:14:29"},{"kind":"number","nativeSrc":"8310:1:29","nodeType":"YulLiteral","src":"8310:1:29","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"8290:3:29","nodeType":"YulIdentifier","src":"8290:3:29"},"nativeSrc":"8290:22:29","nodeType":"YulFunctionCall","src":"8290:22:29"}],"functionName":{"name":"sstore","nativeSrc":"8277:6:29","nodeType":"YulIdentifier","src":"8277:6:29"},"nativeSrc":"8277:36:29","nodeType":"YulFunctionCall","src":"8277:36:29"},"nativeSrc":"8277:36:29","nodeType":"YulExpressionStatement","src":"8277:36:29"}]},"nativeSrc":"7660:663:29","nodeType":"YulCase","src":"7660:663:29","value":{"kind":"number","nativeSrc":"7665:1:29","nodeType":"YulLiteral","src":"7665:1:29","type":"","value":"1"}},{"body":{"nativeSrc":"8340:234:29","nodeType":"YulBlock","src":"8340:234:29","statements":[{"nativeSrc":"8354:14:29","nodeType":"YulVariableDeclaration","src":"8354:14:29","value":{"kind":"number","nativeSrc":"8367:1:29","nodeType":"YulLiteral","src":"8367:1:29","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"8358:5:29","nodeType":"YulTypedName","src":"8358:5:29","type":""}]},{"body":{"nativeSrc":"8403:67:29","nodeType":"YulBlock","src":"8403:67:29","statements":[{"nativeSrc":"8421:35:29","nodeType":"YulAssignment","src":"8421:35:29","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8440:3:29","nodeType":"YulIdentifier","src":"8440:3:29"},{"name":"srcOffset","nativeSrc":"8445:9:29","nodeType":"YulIdentifier","src":"8445:9:29"}],"functionName":{"name":"add","nativeSrc":"8436:3:29","nodeType":"YulIdentifier","src":"8436:3:29"},"nativeSrc":"8436:19:29","nodeType":"YulFunctionCall","src":"8436:19:29"}],"functionName":{"name":"mload","nativeSrc":"8430:5:29","nodeType":"YulIdentifier","src":"8430:5:29"},"nativeSrc":"8430:26:29","nodeType":"YulFunctionCall","src":"8430:26:29"},"variableNames":[{"name":"value","nativeSrc":"8421:5:29","nodeType":"YulIdentifier","src":"8421:5:29"}]}]},"condition":{"name":"newLen","nativeSrc":"8384:6:29","nodeType":"YulIdentifier","src":"8384:6:29"},"nativeSrc":"8381:89:29","nodeType":"YulIf","src":"8381:89:29"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"8490:4:29","nodeType":"YulIdentifier","src":"8490:4:29"},{"arguments":[{"name":"value","nativeSrc":"8549:5:29","nodeType":"YulIdentifier","src":"8549:5:29"},{"name":"newLen","nativeSrc":"8556:6:29","nodeType":"YulIdentifier","src":"8556:6:29"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"8496:52:29","nodeType":"YulIdentifier","src":"8496:52:29"},"nativeSrc":"8496:67:29","nodeType":"YulFunctionCall","src":"8496:67:29"}],"functionName":{"name":"sstore","nativeSrc":"8483:6:29","nodeType":"YulIdentifier","src":"8483:6:29"},"nativeSrc":"8483:81:29","nodeType":"YulFunctionCall","src":"8483:81:29"},"nativeSrc":"8483:81:29","nodeType":"YulExpressionStatement","src":"8483:81:29"}]},"nativeSrc":"8332:242:29","nodeType":"YulCase","src":"8332:242:29","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"7640:6:29","nodeType":"YulIdentifier","src":"7640:6:29"},{"kind":"number","nativeSrc":"7648:2:29","nodeType":"YulLiteral","src":"7648:2:29","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"7637:2:29","nodeType":"YulIdentifier","src":"7637:2:29"},"nativeSrc":"7637:14:29","nodeType":"YulFunctionCall","src":"7637:14:29"},"nativeSrc":"7630:944:29","nodeType":"YulSwitch","src":"7630:944:29"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"7235:1345:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"7316:4:29","nodeType":"YulTypedName","src":"7316:4:29","type":""},{"name":"src","nativeSrc":"7322:3:29","nodeType":"YulTypedName","src":"7322:3:29","type":""}],"src":"7235:1345:29"},{"body":{"nativeSrc":"8772:309:29","nodeType":"YulBlock","src":"8772:309:29","statements":[{"nativeSrc":"8782:27:29","nodeType":"YulVariableDeclaration","src":"8782:27:29","value":{"arguments":[{"name":"value0","nativeSrc":"8802:6:29","nodeType":"YulIdentifier","src":"8802:6:29"}],"functionName":{"name":"mload","nativeSrc":"8796:5:29","nodeType":"YulIdentifier","src":"8796:5:29"},"nativeSrc":"8796:13:29","nodeType":"YulFunctionCall","src":"8796:13:29"},"variables":[{"name":"length","nativeSrc":"8786:6:29","nodeType":"YulTypedName","src":"8786:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"8857:6:29","nodeType":"YulIdentifier","src":"8857:6:29"},{"kind":"number","nativeSrc":"8865:4:29","nodeType":"YulLiteral","src":"8865:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8853:3:29","nodeType":"YulIdentifier","src":"8853:3:29"},"nativeSrc":"8853:17:29","nodeType":"YulFunctionCall","src":"8853:17:29"},{"name":"pos","nativeSrc":"8872:3:29","nodeType":"YulIdentifier","src":"8872:3:29"},{"name":"length","nativeSrc":"8877:6:29","nodeType":"YulIdentifier","src":"8877:6:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"8818:34:29","nodeType":"YulIdentifier","src":"8818:34:29"},"nativeSrc":"8818:66:29","nodeType":"YulFunctionCall","src":"8818:66:29"},"nativeSrc":"8818:66:29","nodeType":"YulExpressionStatement","src":"8818:66:29"},{"nativeSrc":"8893:29:29","nodeType":"YulVariableDeclaration","src":"8893:29:29","value":{"arguments":[{"name":"pos","nativeSrc":"8910:3:29","nodeType":"YulIdentifier","src":"8910:3:29"},{"name":"length","nativeSrc":"8915:6:29","nodeType":"YulIdentifier","src":"8915:6:29"}],"functionName":{"name":"add","nativeSrc":"8906:3:29","nodeType":"YulIdentifier","src":"8906:3:29"},"nativeSrc":"8906:16:29","nodeType":"YulFunctionCall","src":"8906:16:29"},"variables":[{"name":"end_1","nativeSrc":"8897:5:29","nodeType":"YulTypedName","src":"8897:5:29","type":""}]},{"nativeSrc":"8931:29:29","nodeType":"YulVariableDeclaration","src":"8931:29:29","value":{"arguments":[{"name":"value1","nativeSrc":"8953:6:29","nodeType":"YulIdentifier","src":"8953:6:29"}],"functionName":{"name":"mload","nativeSrc":"8947:5:29","nodeType":"YulIdentifier","src":"8947:5:29"},"nativeSrc":"8947:13:29","nodeType":"YulFunctionCall","src":"8947:13:29"},"variables":[{"name":"length_1","nativeSrc":"8935:8:29","nodeType":"YulTypedName","src":"8935:8:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nativeSrc":"9008:6:29","nodeType":"YulIdentifier","src":"9008:6:29"},{"kind":"number","nativeSrc":"9016:4:29","nodeType":"YulLiteral","src":"9016:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9004:3:29","nodeType":"YulIdentifier","src":"9004:3:29"},"nativeSrc":"9004:17:29","nodeType":"YulFunctionCall","src":"9004:17:29"},{"name":"end_1","nativeSrc":"9023:5:29","nodeType":"YulIdentifier","src":"9023:5:29"},{"name":"length_1","nativeSrc":"9030:8:29","nodeType":"YulIdentifier","src":"9030:8:29"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"8969:34:29","nodeType":"YulIdentifier","src":"8969:34:29"},"nativeSrc":"8969:70:29","nodeType":"YulFunctionCall","src":"8969:70:29"},"nativeSrc":"8969:70:29","nodeType":"YulExpressionStatement","src":"8969:70:29"},{"nativeSrc":"9048:27:29","nodeType":"YulAssignment","src":"9048:27:29","value":{"arguments":[{"name":"end_1","nativeSrc":"9059:5:29","nodeType":"YulIdentifier","src":"9059:5:29"},{"name":"length_1","nativeSrc":"9066:8:29","nodeType":"YulIdentifier","src":"9066:8:29"}],"functionName":{"name":"add","nativeSrc":"9055:3:29","nodeType":"YulIdentifier","src":"9055:3:29"},"nativeSrc":"9055:20:29","nodeType":"YulFunctionCall","src":"9055:20:29"},"variableNames":[{"name":"end","nativeSrc":"9048:3:29","nodeType":"YulIdentifier","src":"9048:3:29"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"8585:496:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"8740:3:29","nodeType":"YulTypedName","src":"8740:3:29","type":""},{"name":"value1","nativeSrc":"8745:6:29","nodeType":"YulTypedName","src":"8745:6:29","type":""},{"name":"value0","nativeSrc":"8753:6:29","nodeType":"YulTypedName","src":"8753:6:29","type":""}],"returnVariables":[{"name":"end","nativeSrc":"8764:3:29","nodeType":"YulTypedName","src":"8764:3:29","type":""}],"src":"8585:496:29"},{"body":{"nativeSrc":"9289:286:29","nodeType":"YulBlock","src":"9289:286:29","statements":[{"nativeSrc":"9299:29:29","nodeType":"YulVariableDeclaration","src":"9299:29:29","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9317:3:29","nodeType":"YulLiteral","src":"9317:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"9322:1:29","nodeType":"YulLiteral","src":"9322:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"9313:3:29","nodeType":"YulIdentifier","src":"9313:3:29"},"nativeSrc":"9313:11:29","nodeType":"YulFunctionCall","src":"9313:11:29"},{"kind":"number","nativeSrc":"9326:1:29","nodeType":"YulLiteral","src":"9326:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"9309:3:29","nodeType":"YulIdentifier","src":"9309:3:29"},"nativeSrc":"9309:19:29","nodeType":"YulFunctionCall","src":"9309:19:29"},"variables":[{"name":"_1","nativeSrc":"9303:2:29","nodeType":"YulTypedName","src":"9303:2:29","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9344:9:29","nodeType":"YulIdentifier","src":"9344:9:29"},{"arguments":[{"name":"value0","nativeSrc":"9359:6:29","nodeType":"YulIdentifier","src":"9359:6:29"},{"name":"_1","nativeSrc":"9367:2:29","nodeType":"YulIdentifier","src":"9367:2:29"}],"functionName":{"name":"and","nativeSrc":"9355:3:29","nodeType":"YulIdentifier","src":"9355:3:29"},"nativeSrc":"9355:15:29","nodeType":"YulFunctionCall","src":"9355:15:29"}],"functionName":{"name":"mstore","nativeSrc":"9337:6:29","nodeType":"YulIdentifier","src":"9337:6:29"},"nativeSrc":"9337:34:29","nodeType":"YulFunctionCall","src":"9337:34:29"},"nativeSrc":"9337:34:29","nodeType":"YulExpressionStatement","src":"9337:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9391:9:29","nodeType":"YulIdentifier","src":"9391:9:29"},{"kind":"number","nativeSrc":"9402:2:29","nodeType":"YulLiteral","src":"9402:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9387:3:29","nodeType":"YulIdentifier","src":"9387:3:29"},"nativeSrc":"9387:18:29","nodeType":"YulFunctionCall","src":"9387:18:29"},{"arguments":[{"name":"value1","nativeSrc":"9411:6:29","nodeType":"YulIdentifier","src":"9411:6:29"},{"name":"_1","nativeSrc":"9419:2:29","nodeType":"YulIdentifier","src":"9419:2:29"}],"functionName":{"name":"and","nativeSrc":"9407:3:29","nodeType":"YulIdentifier","src":"9407:3:29"},"nativeSrc":"9407:15:29","nodeType":"YulFunctionCall","src":"9407:15:29"}],"functionName":{"name":"mstore","nativeSrc":"9380:6:29","nodeType":"YulIdentifier","src":"9380:6:29"},"nativeSrc":"9380:43:29","nodeType":"YulFunctionCall","src":"9380:43:29"},"nativeSrc":"9380:43:29","nodeType":"YulExpressionStatement","src":"9380:43:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9443:9:29","nodeType":"YulIdentifier","src":"9443:9:29"},{"kind":"number","nativeSrc":"9454:2:29","nodeType":"YulLiteral","src":"9454:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9439:3:29","nodeType":"YulIdentifier","src":"9439:3:29"},"nativeSrc":"9439:18:29","nodeType":"YulFunctionCall","src":"9439:18:29"},{"name":"value2","nativeSrc":"9459:6:29","nodeType":"YulIdentifier","src":"9459:6:29"}],"functionName":{"name":"mstore","nativeSrc":"9432:6:29","nodeType":"YulIdentifier","src":"9432:6:29"},"nativeSrc":"9432:34:29","nodeType":"YulFunctionCall","src":"9432:34:29"},"nativeSrc":"9432:34:29","nodeType":"YulExpressionStatement","src":"9432:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9486:9:29","nodeType":"YulIdentifier","src":"9486:9:29"},{"kind":"number","nativeSrc":"9497:2:29","nodeType":"YulLiteral","src":"9497:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9482:3:29","nodeType":"YulIdentifier","src":"9482:3:29"},"nativeSrc":"9482:18:29","nodeType":"YulFunctionCall","src":"9482:18:29"},{"kind":"number","nativeSrc":"9502:3:29","nodeType":"YulLiteral","src":"9502:3:29","type":"","value":"128"}],"functionName":{"name":"mstore","nativeSrc":"9475:6:29","nodeType":"YulIdentifier","src":"9475:6:29"},"nativeSrc":"9475:31:29","nodeType":"YulFunctionCall","src":"9475:31:29"},"nativeSrc":"9475:31:29","nodeType":"YulExpressionStatement","src":"9475:31:29"},{"nativeSrc":"9515:54:29","nodeType":"YulAssignment","src":"9515:54:29","value":{"arguments":[{"name":"value3","nativeSrc":"9541:6:29","nodeType":"YulIdentifier","src":"9541:6:29"},{"arguments":[{"name":"headStart","nativeSrc":"9553:9:29","nodeType":"YulIdentifier","src":"9553:9:29"},{"kind":"number","nativeSrc":"9564:3:29","nodeType":"YulLiteral","src":"9564:3:29","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"9549:3:29","nodeType":"YulIdentifier","src":"9549:3:29"},"nativeSrc":"9549:19:29","nodeType":"YulFunctionCall","src":"9549:19:29"}],"functionName":{"name":"abi_encode_string","nativeSrc":"9523:17:29","nodeType":"YulIdentifier","src":"9523:17:29"},"nativeSrc":"9523:46:29","nodeType":"YulFunctionCall","src":"9523:46:29"},"variableNames":[{"name":"tail","nativeSrc":"9515:4:29","nodeType":"YulIdentifier","src":"9515:4:29"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"9086:489:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9234:9:29","nodeType":"YulTypedName","src":"9234:9:29","type":""},{"name":"value3","nativeSrc":"9245:6:29","nodeType":"YulTypedName","src":"9245:6:29","type":""},{"name":"value2","nativeSrc":"9253:6:29","nodeType":"YulTypedName","src":"9253:6:29","type":""},{"name":"value1","nativeSrc":"9261:6:29","nodeType":"YulTypedName","src":"9261:6:29","type":""},{"name":"value0","nativeSrc":"9269:6:29","nodeType":"YulTypedName","src":"9269:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9280:4:29","nodeType":"YulTypedName","src":"9280:4:29","type":""}],"src":"9086:489:29"},{"body":{"nativeSrc":"9660:169:29","nodeType":"YulBlock","src":"9660:169:29","statements":[{"body":{"nativeSrc":"9706:16:29","nodeType":"YulBlock","src":"9706:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9715:1:29","nodeType":"YulLiteral","src":"9715:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"9718:1:29","nodeType":"YulLiteral","src":"9718:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9708:6:29","nodeType":"YulIdentifier","src":"9708:6:29"},"nativeSrc":"9708:12:29","nodeType":"YulFunctionCall","src":"9708:12:29"},"nativeSrc":"9708:12:29","nodeType":"YulExpressionStatement","src":"9708:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9681:7:29","nodeType":"YulIdentifier","src":"9681:7:29"},{"name":"headStart","nativeSrc":"9690:9:29","nodeType":"YulIdentifier","src":"9690:9:29"}],"functionName":{"name":"sub","nativeSrc":"9677:3:29","nodeType":"YulIdentifier","src":"9677:3:29"},"nativeSrc":"9677:23:29","nodeType":"YulFunctionCall","src":"9677:23:29"},{"kind":"number","nativeSrc":"9702:2:29","nodeType":"YulLiteral","src":"9702:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"9673:3:29","nodeType":"YulIdentifier","src":"9673:3:29"},"nativeSrc":"9673:32:29","nodeType":"YulFunctionCall","src":"9673:32:29"},"nativeSrc":"9670:52:29","nodeType":"YulIf","src":"9670:52:29"},{"nativeSrc":"9731:29:29","nodeType":"YulVariableDeclaration","src":"9731:29:29","value":{"arguments":[{"name":"headStart","nativeSrc":"9750:9:29","nodeType":"YulIdentifier","src":"9750:9:29"}],"functionName":{"name":"mload","nativeSrc":"9744:5:29","nodeType":"YulIdentifier","src":"9744:5:29"},"nativeSrc":"9744:16:29","nodeType":"YulFunctionCall","src":"9744:16:29"},"variables":[{"name":"value","nativeSrc":"9735:5:29","nodeType":"YulTypedName","src":"9735:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"9793:5:29","nodeType":"YulIdentifier","src":"9793:5:29"}],"functionName":{"name":"validator_revert_bytes4","nativeSrc":"9769:23:29","nodeType":"YulIdentifier","src":"9769:23:29"},"nativeSrc":"9769:30:29","nodeType":"YulFunctionCall","src":"9769:30:29"},"nativeSrc":"9769:30:29","nodeType":"YulExpressionStatement","src":"9769:30:29"},{"nativeSrc":"9808:15:29","nodeType":"YulAssignment","src":"9808:15:29","value":{"name":"value","nativeSrc":"9818:5:29","nodeType":"YulIdentifier","src":"9818:5:29"},"variableNames":[{"name":"value0","nativeSrc":"9808:6:29","nodeType":"YulIdentifier","src":"9808:6:29"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nativeSrc":"9580:249:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9626:9:29","nodeType":"YulTypedName","src":"9626:9:29","type":""},{"name":"dataEnd","nativeSrc":"9637:7:29","nodeType":"YulTypedName","src":"9637:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9649:6:29","nodeType":"YulTypedName","src":"9649:6:29","type":""}],"src":"9580:249:29"},{"body":{"nativeSrc":"9866:95:29","nodeType":"YulBlock","src":"9866:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9883:1:29","nodeType":"YulLiteral","src":"9883:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"9890:3:29","nodeType":"YulLiteral","src":"9890:3:29","type":"","value":"224"},{"kind":"number","nativeSrc":"9895:10:29","nodeType":"YulLiteral","src":"9895:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"9886:3:29","nodeType":"YulIdentifier","src":"9886:3:29"},"nativeSrc":"9886:20:29","nodeType":"YulFunctionCall","src":"9886:20:29"}],"functionName":{"name":"mstore","nativeSrc":"9876:6:29","nodeType":"YulIdentifier","src":"9876:6:29"},"nativeSrc":"9876:31:29","nodeType":"YulFunctionCall","src":"9876:31:29"},"nativeSrc":"9876:31:29","nodeType":"YulExpressionStatement","src":"9876:31:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9923:1:29","nodeType":"YulLiteral","src":"9923:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"9926:4:29","nodeType":"YulLiteral","src":"9926:4:29","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"9916:6:29","nodeType":"YulIdentifier","src":"9916:6:29"},"nativeSrc":"9916:15:29","nodeType":"YulFunctionCall","src":"9916:15:29"},"nativeSrc":"9916:15:29","nodeType":"YulExpressionStatement","src":"9916:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9947:1:29","nodeType":"YulLiteral","src":"9947:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"9950:4:29","nodeType":"YulLiteral","src":"9950:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9940:6:29","nodeType":"YulIdentifier","src":"9940:6:29"},"nativeSrc":"9940:15:29","nodeType":"YulFunctionCall","src":"9940:15:29"},"nativeSrc":"9940:15:29","nodeType":"YulExpressionStatement","src":"9940:15:29"}]},"name":"panic_error_0x12","nativeSrc":"9834:127:29","nodeType":"YulFunctionDefinition","src":"9834:127:29"},{"body":{"nativeSrc":"10095:145:29","nodeType":"YulBlock","src":"10095:145:29","statements":[{"nativeSrc":"10105:26:29","nodeType":"YulAssignment","src":"10105:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"10117:9:29","nodeType":"YulIdentifier","src":"10117:9:29"},{"kind":"number","nativeSrc":"10128:2:29","nodeType":"YulLiteral","src":"10128:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10113:3:29","nodeType":"YulIdentifier","src":"10113:3:29"},"nativeSrc":"10113:18:29","nodeType":"YulFunctionCall","src":"10113:18:29"},"variableNames":[{"name":"tail","nativeSrc":"10105:4:29","nodeType":"YulIdentifier","src":"10105:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10147:9:29","nodeType":"YulIdentifier","src":"10147:9:29"},{"arguments":[{"name":"value0","nativeSrc":"10162:6:29","nodeType":"YulIdentifier","src":"10162:6:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"10178:3:29","nodeType":"YulLiteral","src":"10178:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"10183:1:29","nodeType":"YulLiteral","src":"10183:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"10174:3:29","nodeType":"YulIdentifier","src":"10174:3:29"},"nativeSrc":"10174:11:29","nodeType":"YulFunctionCall","src":"10174:11:29"},{"kind":"number","nativeSrc":"10187:1:29","nodeType":"YulLiteral","src":"10187:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"10170:3:29","nodeType":"YulIdentifier","src":"10170:3:29"},"nativeSrc":"10170:19:29","nodeType":"YulFunctionCall","src":"10170:19:29"}],"functionName":{"name":"and","nativeSrc":"10158:3:29","nodeType":"YulIdentifier","src":"10158:3:29"},"nativeSrc":"10158:32:29","nodeType":"YulFunctionCall","src":"10158:32:29"}],"functionName":{"name":"mstore","nativeSrc":"10140:6:29","nodeType":"YulIdentifier","src":"10140:6:29"},"nativeSrc":"10140:51:29","nodeType":"YulFunctionCall","src":"10140:51:29"},"nativeSrc":"10140:51:29","nodeType":"YulExpressionStatement","src":"10140:51:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10211:9:29","nodeType":"YulIdentifier","src":"10211:9:29"},{"kind":"number","nativeSrc":"10222:2:29","nodeType":"YulLiteral","src":"10222:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10207:3:29","nodeType":"YulIdentifier","src":"10207:3:29"},"nativeSrc":"10207:18:29","nodeType":"YulFunctionCall","src":"10207:18:29"},{"name":"value1","nativeSrc":"10227:6:29","nodeType":"YulIdentifier","src":"10227:6:29"}],"functionName":{"name":"mstore","nativeSrc":"10200:6:29","nodeType":"YulIdentifier","src":"10200:6:29"},"nativeSrc":"10200:34:29","nodeType":"YulFunctionCall","src":"10200:34:29"},"nativeSrc":"10200:34:29","nodeType":"YulExpressionStatement","src":"10200:34:29"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"9966:274:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10056:9:29","nodeType":"YulTypedName","src":"10056:9:29","type":""},{"name":"value1","nativeSrc":"10067:6:29","nodeType":"YulTypedName","src":"10067:6:29","type":""},{"name":"value0","nativeSrc":"10075:6:29","nodeType":"YulTypedName","src":"10075:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10086:4:29","nodeType":"YulTypedName","src":"10086:4:29","type":""}],"src":"9966:274:29"}]},"contents":"{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063a22cb46511610071578063a22cb46514610239578063b88d4fde1461024c578063c87b56dd1461025f578063e985e9c514610272578063f2fde38b1461028557600080fd5b806370a0823114610205578063715018a6146102185780638da5cb5b1461022057806395d89b411461023157600080fd5b806323b872dd116100e957806323b872dd1461019857806342842e0e146101ab57806354ba0f27146101be57806355f804b3146101df5780636352211e146101f257600080fd5b806301ffc9a71461011b57806306fdde0314610143578063081812fc14610158578063095ea7b314610183575b600080fd5b61012e610129366004610d82565b610298565b60405190151581526020015b60405180910390f35b61014b6102ea565b60405161013a9190610def565b61016b610166366004610e02565b61037c565b6040516001600160a01b03909116815260200161013a565b610196610191366004610e37565b6103a5565b005b6101966101a6366004610e61565b6103b4565b6101966101b9366004610e61565b610444565b6101d16101cc366004610e9d565b610464565b60405190815260200161013a565b6101966101ed366004610f44565b610482565b61016b610200366004610e02565b610496565b6101d1610213366004610e9d565b6104a1565b6101966104e9565b6006546001600160a01b031661016b565b61014b6104fd565b610196610247366004610f8d565b61050c565b61019661025a366004610fc9565b610517565b61014b61026d366004610e02565b61052f565b61012e610280366004611045565b610597565b610196610293366004610e9d565b6105c5565b60006001600160e01b031982166380ac58cd60e01b14806102c957506001600160e01b03198216635b5e139f60e01b145b806102e457506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102f990611078565b80601f016020809104026020016040519081016040528092919081815260200182805461032590611078565b80156103725780601f1061034757610100808354040283529160200191610372565b820191906000526020600020905b81548152906001019060200180831161035557829003601f168201915b5050505050905090565b600061038782610603565b506000828152600460205260409020546001600160a01b03166102e4565b6103b082823361063c565b5050565b6001600160a01b0382166103e357604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006103f0838333610649565b9050836001600160a01b0316816001600160a01b03161461043e576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016103da565b50505050565b61045f83838360405180602001604052806000815250610517565b505050565b600080600754600161047691906110b2565b90506102e48382610742565b61048a61075c565b60086103b0828261111b565b60006102e482610603565b60006001600160a01b0382166104cd576040516322718ad960e21b8152600060048201526024016103da565b506001600160a01b031660009081526003602052604090205490565b6104f161075c565b6104fb6000610789565b565b6060600180546102f990611078565b6103b03383836107db565b6105228484846103b4565b61043e338585858561087a565b606061053a82610603565b5060006105456109a5565b905060008151116105655760405180602001604052806000815250610590565b8061056f846109b4565b6040516020016105809291906111db565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6105cd61075c565b6001600160a01b0381166105f757604051631e4fbdf760e01b8152600060048201526024016103da565b61060081610789565b50565b6000818152600260205260408120546001600160a01b0316806102e457604051637e27328960e01b8152600481018490526024016103da565b61045f8383836001610a47565b6000828152600260205260408120546001600160a01b039081169083161561067657610676818486610b4d565b6001600160a01b038116156106b457610693600085600080610a47565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b038516156106e3576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6103b0828260405180602001604052806000815250610bb1565b6006546001600160a01b031633146104fb5760405163118cdaa760e01b81523360048201526024016103da565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661080d57604051630b61174360e31b81526001600160a01b03831660048201526024016103da565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561099e57604051630a85bd0160e11b81526001600160a01b0384169063150b7a02906108bc90889088908790879060040161120a565b6020604051808303816000875af19250505080156108f7575060408051601f3d908101601f191682019092526108f491810190611247565b60015b610960573d808015610925576040519150601f19603f3d011682016040523d82523d6000602084013e61092a565b606091505b50805160000361095857604051633250574960e11b81526001600160a01b03851660048201526024016103da565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b1461099c57604051633250574960e11b81526001600160a01b03851660048201526024016103da565b505b5050505050565b6060600880546102f990611078565b606060006109c183610bc9565b600101905060008167ffffffffffffffff8111156109e1576109e1610eb8565b6040519080825280601f01601f191660200182016040528015610a0b576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610a1557509392505050565b8080610a5b57506001600160a01b03821615155b15610b1d576000610a6b84610603565b90506001600160a01b03831615801590610a975750826001600160a01b0316816001600160a01b031614155b8015610aaa5750610aa88184610597565b155b15610ad35760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016103da565b8115610b1b5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610b58838383610ca1565b61045f576001600160a01b038316610b8657604051637e27328960e01b8152600481018290526024016103da565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016103da565b610bbb8383610d07565b61045f33600085858561087a565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610c085772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610c34576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610c5257662386f26fc10000830492506010015b6305f5e1008310610c6a576305f5e100830492506008015b6127108310610c7e57612710830492506004015b60648310610c90576064830492506002015b600a83106102e45760010192915050565b60006001600160a01b03831615801590610cff5750826001600160a01b0316846001600160a01b03161480610cdb5750610cdb8484610597565b80610cff57506000828152600460205260409020546001600160a01b038481169116145b949350505050565b6001600160a01b038216610d3157604051633250574960e11b8152600060048201526024016103da565b6000610d3f83836000610649565b90506001600160a01b0381161561045f576040516339e3563760e11b8152600060048201526024016103da565b6001600160e01b03198116811461060057600080fd5b600060208284031215610d9457600080fd5b813561059081610d6c565b60005b83811015610dba578181015183820152602001610da2565b50506000910152565b60008151808452610ddb816020860160208601610d9f565b601f01601f19169290920160200192915050565b6020815260006105906020830184610dc3565b600060208284031215610e1457600080fd5b5035919050565b80356001600160a01b0381168114610e3257600080fd5b919050565b60008060408385031215610e4a57600080fd5b610e5383610e1b565b946020939093013593505050565b600080600060608486031215610e7657600080fd5b610e7f84610e1b565b9250610e8d60208501610e1b565b9150604084013590509250925092565b600060208284031215610eaf57600080fd5b61059082610e1b565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115610ee957610ee9610eb8565b604051601f8501601f19908116603f01168101908282118183101715610f1157610f11610eb8565b81604052809350858152868686011115610f2a57600080fd5b858560208301376000602087830101525050509392505050565b600060208284031215610f5657600080fd5b813567ffffffffffffffff811115610f6d57600080fd5b8201601f81018413610f7e57600080fd5b610cff84823560208401610ece565b60008060408385031215610fa057600080fd5b610fa983610e1b565b915060208301358015158114610fbe57600080fd5b809150509250929050565b60008060008060808587031215610fdf57600080fd5b610fe885610e1b565b9350610ff660208601610e1b565b925060408501359150606085013567ffffffffffffffff81111561101957600080fd5b8501601f8101871361102a57600080fd5b61103987823560208401610ece565b91505092959194509250565b6000806040838503121561105857600080fd5b61106183610e1b565b915061106f60208401610e1b565b90509250929050565b600181811c9082168061108c57607f821691505b6020821081036110ac57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102e457634e487b7160e01b600052601160045260246000fd5b601f82111561045f576000816000526020600020601f850160051c810160208610156110fc5750805b601f850160051c820191505b8181101561099c57828155600101611108565b815167ffffffffffffffff81111561113557611135610eb8565b611149816111438454611078565b846110d3565b602080601f83116001811461117e57600084156111665750858301515b600019600386901b1c1916600185901b17855561099c565b600085815260208120601f198616915b828110156111ad5788860151825594840194600190910190840161118e565b50858210156111cb5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600083516111ed818460208801610d9f565b835190830190611201818360208801610d9f565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061123d90830184610dc3565b9695505050505050565b60006020828403121561125957600080fd5b815161059081610d6c56fea2646970667358221220ec1663fe6bf310f7d793178cfc003fd10929524c457983122905e42e608e998064736f6c63430008170033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x54BA0F27 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0xD82 JUMP JUMPDEST PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH2 0x2EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0xDEF JUMP JUMPDEST PUSH2 0x16B PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0xE02 JUMP JUMPDEST PUSH2 0x37C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13A JUMP JUMPDEST PUSH2 0x196 PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0xE37 JUMP JUMPDEST PUSH2 0x3A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x196 PUSH2 0x1A6 CALLDATASIZE PUSH1 0x4 PUSH2 0xE61 JUMP JUMPDEST PUSH2 0x3B4 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0xE61 JUMP JUMPDEST PUSH2 0x444 JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x1CC CALLDATASIZE PUSH1 0x4 PUSH2 0xE9D JUMP JUMPDEST PUSH2 0x464 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13A JUMP JUMPDEST PUSH2 0x196 PUSH2 0x1ED CALLDATASIZE PUSH1 0x4 PUSH2 0xF44 JUMP JUMPDEST PUSH2 0x482 JUMP JUMPDEST PUSH2 0x16B PUSH2 0x200 CALLDATASIZE PUSH1 0x4 PUSH2 0xE02 JUMP JUMPDEST PUSH2 0x496 JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0xE9D JUMP JUMPDEST PUSH2 0x4A1 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x4E9 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x16B JUMP JUMPDEST PUSH2 0x14B PUSH2 0x4FD JUMP JUMPDEST PUSH2 0x196 PUSH2 0x247 CALLDATASIZE PUSH1 0x4 PUSH2 0xF8D JUMP JUMPDEST PUSH2 0x50C JUMP JUMPDEST PUSH2 0x196 PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0xFC9 JUMP JUMPDEST PUSH2 0x517 JUMP JUMPDEST PUSH2 0x14B PUSH2 0x26D CALLDATASIZE PUSH1 0x4 PUSH2 0xE02 JUMP JUMPDEST PUSH2 0x52F JUMP JUMPDEST PUSH2 0x12E PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0x1045 JUMP JUMPDEST PUSH2 0x597 JUMP JUMPDEST PUSH2 0x196 PUSH2 0x293 CALLDATASIZE PUSH1 0x4 PUSH2 0xE9D JUMP JUMPDEST PUSH2 0x5C5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x2C9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x2E4 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x2F9 SWAP1 PUSH2 0x1078 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x325 SWAP1 PUSH2 0x1078 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x372 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x347 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x372 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x355 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x387 DUP3 PUSH2 0x603 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2E4 JUMP JUMPDEST PUSH2 0x3B0 DUP3 DUP3 CALLER PUSH2 0x63C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3E3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3F0 DUP4 DUP4 CALLER PUSH2 0x649 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x45F DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x517 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 SLOAD PUSH1 0x1 PUSH2 0x476 SWAP2 SWAP1 PUSH2 0x10B2 JUMP JUMPDEST SWAP1 POP PUSH2 0x2E4 DUP4 DUP3 PUSH2 0x742 JUMP JUMPDEST PUSH2 0x48A PUSH2 0x75C JUMP JUMPDEST PUSH1 0x8 PUSH2 0x3B0 DUP3 DUP3 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E4 DUP3 PUSH2 0x603 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4CD JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3DA JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4F1 PUSH2 0x75C JUMP JUMPDEST PUSH2 0x4FB PUSH1 0x0 PUSH2 0x789 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x2F9 SWAP1 PUSH2 0x1078 JUMP JUMPDEST PUSH2 0x3B0 CALLER DUP4 DUP4 PUSH2 0x7DB JUMP JUMPDEST PUSH2 0x522 DUP5 DUP5 DUP5 PUSH2 0x3B4 JUMP JUMPDEST PUSH2 0x43E CALLER DUP6 DUP6 DUP6 DUP6 PUSH2 0x87A JUMP JUMPDEST PUSH1 0x60 PUSH2 0x53A DUP3 PUSH2 0x603 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x545 PUSH2 0x9A5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x565 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x590 JUMP JUMPDEST DUP1 PUSH2 0x56F DUP5 PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x580 SWAP3 SWAP2 SWAP1 PUSH2 0x11DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x5CD PUSH2 0x75C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3DA JUMP JUMPDEST PUSH2 0x600 DUP2 PUSH2 0x789 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x2E4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3DA JUMP JUMPDEST PUSH2 0x45F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA47 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x676 JUMPI PUSH2 0x676 DUP2 DUP5 DUP7 PUSH2 0xB4D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x6B4 JUMPI PUSH2 0x693 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0xA47 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x6E3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x3B0 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xBB1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4FB JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x80D JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x99E JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x8BC SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x120A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x8F7 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x8F4 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1247 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x960 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x925 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x92A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x958 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3DA JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0x99C JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3DA JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD PUSH2 0x2F9 SWAP1 PUSH2 0x1078 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x9C1 DUP4 PUSH2 0xBC9 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9E1 JUMPI PUSH2 0x9E1 PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA0B JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xA15 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0xA5B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xB1D JUMPI PUSH1 0x0 PUSH2 0xA6B DUP5 PUSH2 0x603 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xA97 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xAAA JUMPI POP PUSH2 0xAA8 DUP2 DUP5 PUSH2 0x597 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xAD3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3DA JUMP JUMPDEST DUP2 ISZERO PUSH2 0xB1B JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xB58 DUP4 DUP4 DUP4 PUSH2 0xCA1 JUMP JUMPDEST PUSH2 0x45F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB86 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x3DA JUMP JUMPDEST PUSH2 0xBBB DUP4 DUP4 PUSH2 0xD07 JUMP JUMPDEST PUSH2 0x45F CALLER PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x87A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xC08 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xC34 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xC52 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xC6A JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xC7E JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xC90 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2E4 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xCFF JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xCDB JUMPI POP PUSH2 0xCDB DUP5 DUP5 PUSH2 0x597 JUMP JUMPDEST DUP1 PUSH2 0xCFF JUMPI POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD31 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD3F DUP4 DUP4 PUSH1 0x0 PUSH2 0x649 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x45F JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x600 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x590 DUP2 PUSH2 0xD6C JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDBA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xDA2 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xDDB DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD9F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x590 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDC3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE53 DUP4 PUSH2 0xE1B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7F DUP5 PUSH2 0xE1B JUMP JUMPDEST SWAP3 POP PUSH2 0xE8D PUSH1 0x20 DUP6 ADD PUSH2 0xE1B JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x590 DUP3 PUSH2 0xE1B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0xEE9 JUMPI PUSH2 0xEE9 PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF11 JUMPI PUSH2 0xF11 PUSH2 0xEB8 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0xF2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0xF7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCFF DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0xECE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFA9 DUP4 PUSH2 0xE1B JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xFBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xFDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFE8 DUP6 PUSH2 0xE1B JUMP JUMPDEST SWAP4 POP PUSH2 0xFF6 PUSH1 0x20 DUP7 ADD PUSH2 0xE1B JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1019 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x102A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1039 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0xECE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1058 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1061 DUP4 PUSH2 0xE1B JUMP JUMPDEST SWAP2 POP PUSH2 0x106F PUSH1 0x20 DUP5 ADD PUSH2 0xE1B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x108C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x10AC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2E4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x45F JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x10FC JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x99C JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1108 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1135 JUMPI PUSH2 0x1135 PUSH2 0xEB8 JUMP JUMPDEST PUSH2 0x1149 DUP2 PUSH2 0x1143 DUP5 SLOAD PUSH2 0x1078 JUMP JUMPDEST DUP5 PUSH2 0x10D3 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x117E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1166 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x99C JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x11AD JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x118E JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x11CB JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x11ED DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xD9F JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1201 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD9F JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x123D SWAP1 DUP4 ADD DUP5 PUSH2 0xDC3 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x590 DUP2 PUSH2 0xD6C JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEC AND PUSH4 0xFE6BF310 0xF7 0xD7 SWAP4 OR DUP13 0xFC STOP EXTCODEHASH 0xD1 MULMOD 0x29 MSTORE 0x4C GASLIMIT PUSH26 0x83122905E42E608E998064736F6C634300081700330000000000 ","sourceMap":"170:797:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1560:300:11;;;;;;:::i;:::-;;:::i;:::-;;;565:14:29;;558:22;540:41;;528:2;513:18;1560:300:11;;;;;;;;2364:89;;;:::i;:::-;;;;;;;:::i;3496:154::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:29;;;1679:51;;1667:2;1652:18;3496:154:11;1533:203:29;3322:113:11;;;;;;:::i;:::-;;:::i;:::-;;4142:578;;;;;;:::i;:::-;;:::i;4786:132::-;;;;;;:::i;:::-;;:::i;787:178:27:-;;;;;;:::i;:::-;;:::i;:::-;;;2848:25:29;;;2836:2;2821:18;787:178:27;2702:177:29;468:100:27;;;;;;:::i;:::-;;:::i;2184:118:11:-;;;;;;:::i;:::-;;:::i;1919:208::-;;;;;;:::i;:::-;;:::i;2293:101:6:-;;;:::i;1638:85::-;1710:6;;-1:-1:-1;;;;;1710:6:6;1638:85;;2517:93:11;;;:::i;3717:144::-;;;;;;:::i;:::-;;:::i;4984:233::-;;;;;;:::i;:::-;;:::i;2676:255::-;;;;;;:::i;:::-;;:::i;3927:153::-;;;;;;:::i;:::-;;:::i;2543:215:6:-;;;;;;:::i;:::-;;:::i;1560:300:11:-;1662:4;-1:-1:-1;;;;;;1697:40:11;;-1:-1:-1;;;1697:40:11;;:104;;-1:-1:-1;;;;;;;1753:48:11;;-1:-1:-1;;;1753:48:11;1697:104;:156;;;-1:-1:-1;;;;;;;;;;862:40:21;;;1817:36:11;1678:175;1560:300;-1:-1:-1;;1560:300:11:o;2364:89::-;2409:13;2441:5;2434:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2364:89;:::o;3496:154::-;3563:7;3582:22;3596:7;3582:13;:22::i;:::-;-1:-1:-1;6033:7:11;6059:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6059:24:11;3622:21;5963:127;3322:113;3393:35;3402:2;3406:7;735:10:16;3393:8:11;:35::i;:::-;3322:113;;:::o;4142:578::-;-1:-1:-1;;;;;4236:16:11;;4232:87;;4275:33;;-1:-1:-1;;;4275:33:11;;4305:1;4275:33;;;1679:51:29;1652:18;;4275:33:11;;;;;;;;4232:87;4537:21;4561:34;4569:2;4573:7;735:10:16;4561:7:11;:34::i;:::-;4537:58;;4626:4;-1:-1:-1;;;;;4609:21:11;:13;-1:-1:-1;;;;;4609:21:11;;4605:109;;4653:50;;-1:-1:-1;;;4653:50:11;;-1:-1:-1;;;;;6041:15:29;;;4653:50:11;;;6023:34:29;6073:18;;;6066:34;;;6136:15;;6116:18;;;6109:43;5958:18;;4653:50:11;5783:375:29;4605:109:11;4222:498;4142:578;;;:::o;4786:132::-;4872:39;4889:4;4895:2;4899:7;4872:39;;;;;;;;;;;;:16;:39::i;:::-;4786:132;;;:::o;787:178:27:-;839:7;858:17;878:9;;890:1;878:13;;;;:::i;:::-;858:33;;901:31;911:9;922;901;:31::i;468:100::-;1531:13:6;:11;:13::i;:::-;538::27::1;:23;554:7:::0;538:13;:23:::1;:::i;2184:118:11:-:0;2247:7;2273:22;2287:7;2273:13;:22::i;1919:208::-;1982:7;-1:-1:-1;;;;;2005:19:11;;2001:87;;2047:30;;-1:-1:-1;;;2047:30:11;;2074:1;2047:30;;;1679:51:29;1652:18;;2047:30:11;1533:203:29;2001:87:11;-1:-1:-1;;;;;;2104:16:11;;;;;:9;:16;;;;;;;1919:208::o;2293:101:6:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2517:93:11:-;2564:13;2596:7;2589:14;;;;;:::i;3717:144::-;3802:52;735:10:16;3835:8:11;3845;3802:18;:52::i;4984:233::-;5097:31;5110:4;5116:2;5120:7;5097:12;:31::i;:::-;5138:72;735:10:16;5186:4:11;5192:2;5196:7;5205:4;5138:33;:72::i;2676:255::-;2740:13;2765:22;2779:7;2765:13;:22::i;:::-;;2798:21;2822:10;:8;:10::i;:::-;2798:34;;2873:1;2855:7;2849:21;:25;:75;;;;;;;;;;;;;;;;;2891:7;2900:18;:7;:16;:18::i;:::-;2877:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2849:75;2842:82;2676:255;-1:-1:-1;;;2676:255:11:o;3927:153::-;-1:-1:-1;;;;;4038:25:11;;;4015:4;4038:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3927:153::o;2543:215:6:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:6;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:6;;2700:1:::1;2672:31;::::0;::::1;1679:51:29::0;1652:18;;2672:31:6::1;1533:203:29::0;2623:91:6::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;16212:241:11:-;16275:7;5824:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5824:16:11;;16337:88;;16383:31;;-1:-1:-1;;;16383:31:11;;;;;2848:25:29;;;2821:18;;16383:31:11;2702:177:29;14492:120:11;14572:33;14581:2;14585:7;14594:4;14600;14572:8;:33::i;8861:795::-;8947:7;5824:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5824:16:11;;;;9058:18;;;9054:86;;9092:37;9109:4;9115;9121:7;9092:16;:37::i;:::-;-1:-1:-1;;;;;9184:18:11;;;9180:256;;9300:48;9317:1;9321:7;9338:1;9342:5;9300:8;:48::i;:::-;-1:-1:-1;;;;;9391:15:11;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9391:20:11;;;9180:256;-1:-1:-1;;;;;9450:16:11;;;9446:107;;-1:-1:-1;;;;;9510:13:11;;;;;;:9;:13;;;;;:18;;9527:1;9510:18;;;9446:107;9563:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9563:21:11;-1:-1:-1;;;;;9563:21:11;;;;;;;;;9600:27;;9563:16;;9600:27;;;;;;;9645:4;8861:795;-1:-1:-1;;;;8861:795:11:o;10656:100::-;10723:26;10733:2;10737:7;10723:26;;;;;;;;;;;;:9;:26::i;1796:162:6:-;1710:6;;-1:-1:-1;;;;;1710:6:6;735:10:16;1855:23:6;1851:101;;1901:40;;-1:-1:-1;;;1901:40:6;;735:10:16;1901:40:6;;;1679:51:29;1652:18;;1901:40:6;1533:203:29;2912:187:6;3004:6;;;-1:-1:-1;;;;;3020:17:6;;;-1:-1:-1;;;;;;3020:17:6;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;15665:312:11:-;-1:-1:-1;;;;;15772:22:11;;15768:91;;15817:31;;-1:-1:-1;;;15817:31:11;;-1:-1:-1;;;;;1697:32:29;;15817:31:11;;;1679:51:29;1652:18;;15817:31:11;1533:203:29;15768:91:11;-1:-1:-1;;;;;15868:25:11;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15868:46:11;;;;;;;;;;15929:41;;540::29;;;15929::11;;513:18:29;15929:41:11;;;;;;;15665:312;;;:::o;985:924:15:-;-1:-1:-1;;;;;1165:14:15;;;:18;1161:742;;1203:67;;-1:-1:-1;;;1203:67:15;;-1:-1:-1;;;;;1203:36:15;;;;;:67;;1240:8;;1250:4;;1256:7;;1265:4;;1203:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1203:67:15;;;;;;;;-1:-1:-1;;1203:67:15;;;;;;;;;;;;:::i;:::-;;;1199:694;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1560:6;:13;1577:1;1560:18;1556:323;;1664:39;;-1:-1:-1;;;1664:39:15;;-1:-1:-1;;;;;1697:32:29;;1664:39:15;;;1679:51:29;1652:18;;1664:39:15;1533:203:29;1556:323:15;1831:6;1825:13;1816:6;1812:2;1808:15;1801:38;1199:694;-1:-1:-1;;;;;;1317:51:15;;-1:-1:-1;;;1317:51:15;1313:182;;1437:39;;-1:-1:-1;;;1437:39:15;;-1:-1:-1;;;;;1697:32:29;;1437:39:15;;;1679:51:29;1652:18;;1437:39:15;1533:203:29;1313:182:15;1271:238;1199:694;985:924;;;;;:::o;617:112:27:-;677:13;709;702:20;;;;;:::i;637:632:19:-;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:19;-1:-1:-1;794:41:19;-1:-1:-1;924:28:19;;;940:2;924:28;979:247;-1:-1:-1;;1010:5:19;-1:-1:-1;;;1109:2:19;1098:14;;1093:32;1010:5;1080:46;1170:2;1161:11;;;-1:-1:-1;1190:21:19;979:247;1190:21;-1:-1:-1;1246:6:19;637:632;-1:-1:-1;;;637:632:19:o;14794:662:11:-;14954:9;:31;;;-1:-1:-1;;;;;;14967:18:11;;;;14954:31;14950:460;;;15001:13;15017:22;15031:7;15017:13;:22::i;:::-;15001:38;-1:-1:-1;;;;;;15167:18:11;;;;;;:35;;;15198:4;-1:-1:-1;;;;;15189:13:11;:5;-1:-1:-1;;;;;15189:13:11;;;15167:35;:69;;;;;15207:29;15224:5;15231:4;15207:16;:29::i;:::-;15206:30;15167:69;15163:142;;;15263:27;;-1:-1:-1;;;15263:27:11;;-1:-1:-1;;;;;1697:32:29;;15263:27:11;;;1679:51:29;1652:18;;15263:27:11;1533:203:29;15163:142:11;15323:9;15319:81;;;15377:7;15373:2;-1:-1:-1;;;;;15357:28:11;15366:5;-1:-1:-1;;;;;15357:28:11;;;;;;;;;;;15319:81;14987:423;14950:460;-1:-1:-1;;15420:24:11;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15420:29:11;-1:-1:-1;;;;;15420:29:11;;;;;;;;;;14794:662::o;7105:368::-;7217:38;7231:5;7238:7;7247;7217:13;:38::i;:::-;7212:255;;-1:-1:-1;;;;;7275:19:11;;7271:186;;7321:31;;-1:-1:-1;;;7321:31:11;;;;;2848:25:29;;;2821:18;;7321:31:11;2702:177:29;7271:186:11;7398:44;;-1:-1:-1;;;7398:44:11;;-1:-1:-1;;;;;10158:32:29;;7398:44:11;;;10140:51:29;10207:18;;;10200:34;;;10113:18;;7398:44:11;9966:274:29;10977:207:11;11071:18;11077:2;11081:7;11071:5;:18::i;:::-;11099:78;735:10:16;11155:1:11;11159:2;11163:7;11172:4;11099:33;:78::i;25316:916:23:-;25369:7;;-1:-1:-1;;;25444:17:23;;25440:103;;-1:-1:-1;;;25481:17:23;;;-1:-1:-1;25526:2:23;25516:12;25440:103;25569:8;25560:5;:17;25556:103;;25606:8;25597:17;;;-1:-1:-1;25642:2:23;25632:12;25556:103;25685:8;25676:5;:17;25672:103;;25722:8;25713:17;;;-1:-1:-1;25758:2:23;25748:12;25672:103;25801:7;25792:5;:16;25788:100;;25837:7;25828:16;;;-1:-1:-1;25872:1:23;25862:11;25788:100;25914:7;25905:5;:16;25901:100;;25950:7;25941:16;;;-1:-1:-1;25985:1:23;25975:11;25901:100;26027:7;26018:5;:16;26014:100;;26063:7;26054:16;;;-1:-1:-1;26098:1:23;26088:11;26014:100;26140:7;26131:5;:16;26127:66;;26177:1;26167:11;26219:6;25316:916;-1:-1:-1;;25316:916:23:o;6401:272:11:-;6504:4;-1:-1:-1;;;;;6539:21:11;;;;;;:127;;;6586:7;-1:-1:-1;;;;;6577:16:11;:5;-1:-1:-1;;;;;6577:16:11;;:52;;;;6597:32;6614:5;6621:7;6597:16;:32::i;:::-;6577:88;;;-1:-1:-1;6033:7:11;6059:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6633:32:11;;;6059:24;;6633:32;6577:88;6520:146;6401:272;-1:-1:-1;;;;6401:272:11:o;9978:327::-;-1:-1:-1;;;;;10045:16:11;;10041:87;;10084:33;;-1:-1:-1;;;10084:33:11;;10114:1;10084:33;;;1679:51:29;1652:18;;10084:33:11;1533:203:29;10041:87:11;10137:21;10161:32;10169:2;10173:7;10190:1;10161:7;:32::i;:::-;10137:56;-1:-1:-1;;;;;;10207:27:11;;;10203:96;;10257:31;;-1:-1:-1;;;10257:31:11;;10285:1;10257:31;;;1679:51:29;1652:18;;10257:31:11;1533:203:29;14:131;-1:-1:-1;;;;;;88:32:29;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:29;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:29;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:29:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:29;;1348:180;-1:-1:-1;1348:180:29:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:29;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:29:o;2178:328::-;2255:6;2263;2271;2324:2;2312:9;2303:7;2299:23;2295:32;2292:52;;;2340:1;2337;2330:12;2292:52;2363:29;2382:9;2363:29;:::i;:::-;2353:39;;2411:38;2445:2;2434:9;2430:18;2411:38;:::i;:::-;2401:48;;2496:2;2485:9;2481:18;2468:32;2458:42;;2178:328;;;;;:::o;2511:186::-;2570:6;2623:2;2611:9;2602:7;2598:23;2594:32;2591:52;;;2639:1;2636;2629:12;2591:52;2662:29;2681:9;2662:29;:::i;2884:127::-;2945:10;2940:3;2936:20;2933:1;2926:31;2976:4;2973:1;2966:15;3000:4;2997:1;2990:15;3016:632;3081:5;3111:18;3152:2;3144:6;3141:14;3138:40;;;3158:18;;:::i;:::-;3233:2;3227:9;3201:2;3287:15;;-1:-1:-1;;3283:24:29;;;3309:2;3279:33;3275:42;3263:55;;;3333:18;;;3353:22;;;3330:46;3327:72;;;3379:18;;:::i;:::-;3419:10;3415:2;3408:22;3448:6;3439:15;;3478:6;3470;3463:22;3518:3;3509:6;3504:3;3500:16;3497:25;3494:45;;;3535:1;3532;3525:12;3494:45;3585:6;3580:3;3573:4;3565:6;3561:17;3548:44;3640:1;3633:4;3624:6;3616;3612:19;3608:30;3601:41;;;;3016:632;;;;;:::o;3653:451::-;3722:6;3775:2;3763:9;3754:7;3750:23;3746:32;3743:52;;;3791:1;3788;3781:12;3743:52;3831:9;3818:23;3864:18;3856:6;3853:30;3850:50;;;3896:1;3893;3886:12;3850:50;3919:22;;3972:4;3964:13;;3960:27;-1:-1:-1;3950:55:29;;4001:1;3998;3991:12;3950:55;4024:74;4090:7;4085:2;4072:16;4067:2;4063;4059:11;4024:74;:::i;4109:347::-;4174:6;4182;4235:2;4223:9;4214:7;4210:23;4206:32;4203:52;;;4251:1;4248;4241:12;4203:52;4274:29;4293:9;4274:29;:::i;:::-;4264:39;;4353:2;4342:9;4338:18;4325:32;4400:5;4393:13;4386:21;4379:5;4376:32;4366:60;;4422:1;4419;4412:12;4366:60;4445:5;4435:15;;;4109:347;;;;;:::o;4461:667::-;4556:6;4564;4572;4580;4633:3;4621:9;4612:7;4608:23;4604:33;4601:53;;;4650:1;4647;4640:12;4601:53;4673:29;4692:9;4673:29;:::i;:::-;4663:39;;4721:38;4755:2;4744:9;4740:18;4721:38;:::i;:::-;4711:48;;4806:2;4795:9;4791:18;4778:32;4768:42;;4861:2;4850:9;4846:18;4833:32;4888:18;4880:6;4877:30;4874:50;;;4920:1;4917;4910:12;4874:50;4943:22;;4996:4;4988:13;;4984:27;-1:-1:-1;4974:55:29;;5025:1;5022;5015:12;4974:55;5048:74;5114:7;5109:2;5096:16;5091:2;5087;5083:11;5048:74;:::i;:::-;5038:84;;;4461:667;;;;;;;:::o;5133:260::-;5201:6;5209;5262:2;5250:9;5241:7;5237:23;5233:32;5230:52;;;5278:1;5275;5268:12;5230:52;5301:29;5320:9;5301:29;:::i;:::-;5291:39;;5349:38;5383:2;5372:9;5368:18;5349:38;:::i;:::-;5339:48;;5133:260;;;;;:::o;5398:380::-;5477:1;5473:12;;;;5520;;;5541:61;;5595:4;5587:6;5583:17;5573:27;;5541:61;5648:2;5640:6;5637:14;5617:18;5614:38;5611:161;;5694:10;5689:3;5685:20;5682:1;5675:31;5729:4;5726:1;5719:15;5757:4;5754:1;5747:15;5611:161;;5398:380;;;:::o;6163:222::-;6228:9;;;6249:10;;;6246:133;;;6301:10;6296:3;6292:20;6289:1;6282:31;6336:4;6333:1;6326:15;6364:4;6361:1;6354:15;6516:543;6618:2;6613:3;6610:11;6607:446;;;6654:1;6678:5;6675:1;6668:16;6722:4;6719:1;6709:18;6792:2;6780:10;6776:19;6773:1;6769:27;6763:4;6759:38;6828:4;6816:10;6813:20;6810:47;;;-1:-1:-1;6851:4:29;6810:47;6906:2;6901:3;6897:12;6894:1;6890:20;6884:4;6880:31;6870:41;;6961:82;6979:2;6972:5;6969:13;6961:82;;;7024:17;;;7005:1;6994:13;6961:82;;7235:1345;7361:3;7355:10;7388:18;7380:6;7377:30;7374:56;;;7410:18;;:::i;:::-;7439:97;7529:6;7489:38;7521:4;7515:11;7489:38;:::i;:::-;7483:4;7439:97;:::i;:::-;7591:4;;7648:2;7637:14;;7665:1;7660:663;;;;8367:1;8384:6;8381:89;;;-1:-1:-1;8436:19:29;;;8430:26;8381:89;-1:-1:-1;;7192:1:29;7188:11;;;7184:24;7180:29;7170:40;7216:1;7212:11;;;7167:57;8483:81;;7630:944;;7660:663;6463:1;6456:14;;;6500:4;6487:18;;-1:-1:-1;;7696:20:29;;;7814:236;7828:7;7825:1;7822:14;7814:236;;;7917:19;;;7911:26;7896:42;;8009:27;;;;7977:1;7965:14;;;;7844:19;;7814:236;;;7818:3;8078:6;8069:7;8066:19;8063:201;;;8139:19;;;8133:26;-1:-1:-1;;8222:1:29;8218:14;;;8234:3;8214:24;8210:37;8206:42;8191:58;8176:74;;8063:201;-1:-1:-1;;;;;8310:1:29;8294:14;;;8290:22;8277:36;;-1:-1:-1;7235:1345:29:o;8585:496::-;8764:3;8802:6;8796:13;8818:66;8877:6;8872:3;8865:4;8857:6;8853:17;8818:66;:::i;:::-;8947:13;;8906:16;;;;8969:70;8947:13;8906:16;9016:4;9004:17;;8969:70;:::i;:::-;9055:20;;8585:496;-1:-1:-1;;;;8585:496:29:o;9086:489::-;-1:-1:-1;;;;;9355:15:29;;;9337:34;;9407:15;;9402:2;9387:18;;9380:43;9454:2;9439:18;;9432:34;;;9502:3;9497:2;9482:18;;9475:31;;;9280:4;;9523:46;;9549:19;;9541:6;9523:46;:::i;:::-;9515:54;9086:489;-1:-1:-1;;;;;;9086:489:29:o;9580:249::-;9649:6;9702:2;9690:9;9681:7;9677:23;9673:32;9670:52;;;9718:1;9715;9708:12;9670:52;9750:9;9744:16;9769:30;9793:5;9769:30;:::i"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","mintNFT(address)":"54ba0f27","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setBaseURI(string)":"55f804b3","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"mintNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SampleNFT.sol\":\"SampleNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0x40399695922383778f9f540a620bec475a2f8e0f08d41f0005682842e28a9855\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://746d295e403931aeb9d6065fd5a0871f43ab5459814a60623611e4b6641a09fd\",\"dweb:/ipfs/QmWrgT8YJrQ9FfD1o3YYArwo57e7MGdpFKuM74qJ4qE34E\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/SampleNFT.sol\":{\"keccak256\":\"0xfd880fb3f9fdebddbc16bc8ccbd6f6e3163810444b606a3129fb22b7930bb385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6cc12d51a08300f56b070bf9d0dd9f47ecf41da0aca09611670e356f9ec1b93\",\"dweb:/ipfs/QmRGnBuzrnN9Dc2uqxdA9XRHqyVucywSifAZjgR88SVQVJ\"]}},\"version\":1}"}},"contracts/SignatureVerifyingPaymaster.sol":{"SignatureVerifyingPaymaster":{"abi":[{"inputs":[{"internalType":"address","name":"_authorizedSigner","type":"address"},{"internalType":"address","name":"_entryPoint","type":"address"},{"internalType":"address","name":"_sbcToken","type":"address"},{"internalType":"uint256","name":"_requiredBalance","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"nonceHash","type":"bytes32"}],"name":"NonceUsed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"PaymasterDeposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"actualUserOpFeePerGas","type":"uint256"}],"name":"PaymasterPayment","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"PaymasterWithdrawal","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"newSigner","type":"address"}],"name":"SignerUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"MAX_EXPIRY_DURATION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REQUIRED_SBC_BALANCE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SBC_TOKEN","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"authorizedSigner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"internalType":"uint256","name":"actualUserOpFeePerGas","type":"uint256"}],"name":"postOp","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newSigner","type":"address"}],"name":"setSigner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"usedNonces","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple"},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawTo","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_2616":{"entryPoint":null,"id":2616,"parameterSlots":0,"returnSlots":0},"@_450":{"entryPoint":null,"id":450,"parameterSlots":1,"returnSlots":0},"@_7199":{"entryPoint":null,"id":7199,"parameterSlots":4,"returnSlots":0},"@_transferOwnership_546":{"entryPoint":501,"id":546,"parameterSlots":1,"returnSlots":0},"abi_decode_address_fromMemory":{"entryPoint":581,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_addresst_uint256_fromMemory":{"entryPoint":610,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4a73a5f1dae303024db18f321a348e9400bcbcc4f26b4977dda1d77e1580b91a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7ba039f2e5c1f7bb61f3fc17bbfabfe46dc6a0e877279b9521301539aa1e283f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bd439a42997d101650d4aa359dd62e89f1890f0be164a36e3edb3096e27e0b93__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d855b2d93307064cc81c5bde1af450b2b7b0dc078110db13366d856e1e12d1d2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:2246:29","nodeType":"YulBlock","src":"0:2246:29","statements":[{"nativeSrc":"6:3:29","nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nativeSrc":"74:117:29","nodeType":"YulBlock","src":"74:117:29","statements":[{"nativeSrc":"84:22:29","nodeType":"YulAssignment","src":"84:22:29","value":{"arguments":[{"name":"offset","nativeSrc":"99:6:29","nodeType":"YulIdentifier","src":"99:6:29"}],"functionName":{"name":"mload","nativeSrc":"93:5:29","nodeType":"YulIdentifier","src":"93:5:29"},"nativeSrc":"93:13:29","nodeType":"YulFunctionCall","src":"93:13:29"},"variableNames":[{"name":"value","nativeSrc":"84:5:29","nodeType":"YulIdentifier","src":"84:5:29"}]},{"body":{"nativeSrc":"169:16:29","nodeType":"YulBlock","src":"169:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"178:1:29","nodeType":"YulLiteral","src":"178:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"181:1:29","nodeType":"YulLiteral","src":"181:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"171:6:29","nodeType":"YulIdentifier","src":"171:6:29"},"nativeSrc":"171:12:29","nodeType":"YulFunctionCall","src":"171:12:29"},"nativeSrc":"171:12:29","nodeType":"YulExpressionStatement","src":"171:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"128:5:29","nodeType":"YulIdentifier","src":"128:5:29"},{"arguments":[{"name":"value","nativeSrc":"139:5:29","nodeType":"YulIdentifier","src":"139:5:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"154:3:29","nodeType":"YulLiteral","src":"154:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"159:1:29","nodeType":"YulLiteral","src":"159:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"150:3:29","nodeType":"YulIdentifier","src":"150:3:29"},"nativeSrc":"150:11:29","nodeType":"YulFunctionCall","src":"150:11:29"},{"kind":"number","nativeSrc":"163:1:29","nodeType":"YulLiteral","src":"163:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"146:3:29","nodeType":"YulIdentifier","src":"146:3:29"},"nativeSrc":"146:19:29","nodeType":"YulFunctionCall","src":"146:19:29"}],"functionName":{"name":"and","nativeSrc":"135:3:29","nodeType":"YulIdentifier","src":"135:3:29"},"nativeSrc":"135:31:29","nodeType":"YulFunctionCall","src":"135:31:29"}],"functionName":{"name":"eq","nativeSrc":"125:2:29","nodeType":"YulIdentifier","src":"125:2:29"},"nativeSrc":"125:42:29","nodeType":"YulFunctionCall","src":"125:42:29"}],"functionName":{"name":"iszero","nativeSrc":"118:6:29","nodeType":"YulIdentifier","src":"118:6:29"},"nativeSrc":"118:50:29","nodeType":"YulFunctionCall","src":"118:50:29"},"nativeSrc":"115:70:29","nodeType":"YulIf","src":"115:70:29"}]},"name":"abi_decode_address_fromMemory","nativeSrc":"14:177:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"53:6:29","nodeType":"YulTypedName","src":"53:6:29","type":""}],"returnVariables":[{"name":"value","nativeSrc":"64:5:29","nodeType":"YulTypedName","src":"64:5:29","type":""}],"src":"14:177:29"},{"body":{"nativeSrc":"328:308:29","nodeType":"YulBlock","src":"328:308:29","statements":[{"body":{"nativeSrc":"375:16:29","nodeType":"YulBlock","src":"375:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"384:1:29","nodeType":"YulLiteral","src":"384:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"387:1:29","nodeType":"YulLiteral","src":"387:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"377:6:29","nodeType":"YulIdentifier","src":"377:6:29"},"nativeSrc":"377:12:29","nodeType":"YulFunctionCall","src":"377:12:29"},"nativeSrc":"377:12:29","nodeType":"YulExpressionStatement","src":"377:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"349:7:29","nodeType":"YulIdentifier","src":"349:7:29"},{"name":"headStart","nativeSrc":"358:9:29","nodeType":"YulIdentifier","src":"358:9:29"}],"functionName":{"name":"sub","nativeSrc":"345:3:29","nodeType":"YulIdentifier","src":"345:3:29"},"nativeSrc":"345:23:29","nodeType":"YulFunctionCall","src":"345:23:29"},{"kind":"number","nativeSrc":"370:3:29","nodeType":"YulLiteral","src":"370:3:29","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"341:3:29","nodeType":"YulIdentifier","src":"341:3:29"},"nativeSrc":"341:33:29","nodeType":"YulFunctionCall","src":"341:33:29"},"nativeSrc":"338:53:29","nodeType":"YulIf","src":"338:53:29"},{"nativeSrc":"400:50:29","nodeType":"YulAssignment","src":"400:50:29","value":{"arguments":[{"name":"headStart","nativeSrc":"440:9:29","nodeType":"YulIdentifier","src":"440:9:29"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"410:29:29","nodeType":"YulIdentifier","src":"410:29:29"},"nativeSrc":"410:40:29","nodeType":"YulFunctionCall","src":"410:40:29"},"variableNames":[{"name":"value0","nativeSrc":"400:6:29","nodeType":"YulIdentifier","src":"400:6:29"}]},{"nativeSrc":"459:59:29","nodeType":"YulAssignment","src":"459:59:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"503:9:29","nodeType":"YulIdentifier","src":"503:9:29"},{"kind":"number","nativeSrc":"514:2:29","nodeType":"YulLiteral","src":"514:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"499:3:29","nodeType":"YulIdentifier","src":"499:3:29"},"nativeSrc":"499:18:29","nodeType":"YulFunctionCall","src":"499:18:29"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"469:29:29","nodeType":"YulIdentifier","src":"469:29:29"},"nativeSrc":"469:49:29","nodeType":"YulFunctionCall","src":"469:49:29"},"variableNames":[{"name":"value1","nativeSrc":"459:6:29","nodeType":"YulIdentifier","src":"459:6:29"}]},{"nativeSrc":"527:59:29","nodeType":"YulAssignment","src":"527:59:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"571:9:29","nodeType":"YulIdentifier","src":"571:9:29"},{"kind":"number","nativeSrc":"582:2:29","nodeType":"YulLiteral","src":"582:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"567:3:29","nodeType":"YulIdentifier","src":"567:3:29"},"nativeSrc":"567:18:29","nodeType":"YulFunctionCall","src":"567:18:29"}],"functionName":{"name":"abi_decode_address_fromMemory","nativeSrc":"537:29:29","nodeType":"YulIdentifier","src":"537:29:29"},"nativeSrc":"537:49:29","nodeType":"YulFunctionCall","src":"537:49:29"},"variableNames":[{"name":"value2","nativeSrc":"527:6:29","nodeType":"YulIdentifier","src":"527:6:29"}]},{"nativeSrc":"595:35:29","nodeType":"YulAssignment","src":"595:35:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"615:9:29","nodeType":"YulIdentifier","src":"615:9:29"},{"kind":"number","nativeSrc":"626:2:29","nodeType":"YulLiteral","src":"626:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"611:3:29","nodeType":"YulIdentifier","src":"611:3:29"},"nativeSrc":"611:18:29","nodeType":"YulFunctionCall","src":"611:18:29"}],"functionName":{"name":"mload","nativeSrc":"605:5:29","nodeType":"YulIdentifier","src":"605:5:29"},"nativeSrc":"605:25:29","nodeType":"YulFunctionCall","src":"605:25:29"},"variableNames":[{"name":"value3","nativeSrc":"595:6:29","nodeType":"YulIdentifier","src":"595:6:29"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_addresst_uint256_fromMemory","nativeSrc":"196:440:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"270:9:29","nodeType":"YulTypedName","src":"270:9:29","type":""},{"name":"dataEnd","nativeSrc":"281:7:29","nodeType":"YulTypedName","src":"281:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"293:6:29","nodeType":"YulTypedName","src":"293:6:29","type":""},{"name":"value1","nativeSrc":"301:6:29","nodeType":"YulTypedName","src":"301:6:29","type":""},{"name":"value2","nativeSrc":"309:6:29","nodeType":"YulTypedName","src":"309:6:29","type":""},{"name":"value3","nativeSrc":"317:6:29","nodeType":"YulTypedName","src":"317:6:29","type":""}],"src":"196:440:29"},{"body":{"nativeSrc":"742:102:29","nodeType":"YulBlock","src":"742:102:29","statements":[{"nativeSrc":"752:26:29","nodeType":"YulAssignment","src":"752:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"764:9:29","nodeType":"YulIdentifier","src":"764:9:29"},{"kind":"number","nativeSrc":"775:2:29","nodeType":"YulLiteral","src":"775:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"760:3:29","nodeType":"YulIdentifier","src":"760:3:29"},"nativeSrc":"760:18:29","nodeType":"YulFunctionCall","src":"760:18:29"},"variableNames":[{"name":"tail","nativeSrc":"752:4:29","nodeType":"YulIdentifier","src":"752:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"794:9:29","nodeType":"YulIdentifier","src":"794:9:29"},{"arguments":[{"name":"value0","nativeSrc":"809:6:29","nodeType":"YulIdentifier","src":"809:6:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"825:3:29","nodeType":"YulLiteral","src":"825:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"830:1:29","nodeType":"YulLiteral","src":"830:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"821:3:29","nodeType":"YulIdentifier","src":"821:3:29"},"nativeSrc":"821:11:29","nodeType":"YulFunctionCall","src":"821:11:29"},{"kind":"number","nativeSrc":"834:1:29","nodeType":"YulLiteral","src":"834:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"817:3:29","nodeType":"YulIdentifier","src":"817:3:29"},"nativeSrc":"817:19:29","nodeType":"YulFunctionCall","src":"817:19:29"}],"functionName":{"name":"and","nativeSrc":"805:3:29","nodeType":"YulIdentifier","src":"805:3:29"},"nativeSrc":"805:32:29","nodeType":"YulFunctionCall","src":"805:32:29"}],"functionName":{"name":"mstore","nativeSrc":"787:6:29","nodeType":"YulIdentifier","src":"787:6:29"},"nativeSrc":"787:51:29","nodeType":"YulFunctionCall","src":"787:51:29"},"nativeSrc":"787:51:29","nodeType":"YulExpressionStatement","src":"787:51:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"641:203:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"711:9:29","nodeType":"YulTypedName","src":"711:9:29","type":""},{"name":"value0","nativeSrc":"722:6:29","nodeType":"YulTypedName","src":"722:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"733:4:29","nodeType":"YulTypedName","src":"733:4:29","type":""}],"src":"641:203:29"},{"body":{"nativeSrc":"1023:169:29","nodeType":"YulBlock","src":"1023:169:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1040:9:29","nodeType":"YulIdentifier","src":"1040:9:29"},{"kind":"number","nativeSrc":"1051:2:29","nodeType":"YulLiteral","src":"1051:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"1033:6:29","nodeType":"YulIdentifier","src":"1033:6:29"},"nativeSrc":"1033:21:29","nodeType":"YulFunctionCall","src":"1033:21:29"},"nativeSrc":"1033:21:29","nodeType":"YulExpressionStatement","src":"1033:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1074:9:29","nodeType":"YulIdentifier","src":"1074:9:29"},{"kind":"number","nativeSrc":"1085:2:29","nodeType":"YulLiteral","src":"1085:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1070:3:29","nodeType":"YulIdentifier","src":"1070:3:29"},"nativeSrc":"1070:18:29","nodeType":"YulFunctionCall","src":"1070:18:29"},{"kind":"number","nativeSrc":"1090:2:29","nodeType":"YulLiteral","src":"1090:2:29","type":"","value":"19"}],"functionName":{"name":"mstore","nativeSrc":"1063:6:29","nodeType":"YulIdentifier","src":"1063:6:29"},"nativeSrc":"1063:30:29","nodeType":"YulFunctionCall","src":"1063:30:29"},"nativeSrc":"1063:30:29","nodeType":"YulExpressionStatement","src":"1063:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1113:9:29","nodeType":"YulIdentifier","src":"1113:9:29"},{"kind":"number","nativeSrc":"1124:2:29","nodeType":"YulLiteral","src":"1124:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1109:3:29","nodeType":"YulIdentifier","src":"1109:3:29"},"nativeSrc":"1109:18:29","nodeType":"YulFunctionCall","src":"1109:18:29"},{"hexValue":"5a65726f2061646472657373207369676e6572","kind":"string","nativeSrc":"1129:21:29","nodeType":"YulLiteral","src":"1129:21:29","type":"","value":"Zero address signer"}],"functionName":{"name":"mstore","nativeSrc":"1102:6:29","nodeType":"YulIdentifier","src":"1102:6:29"},"nativeSrc":"1102:49:29","nodeType":"YulFunctionCall","src":"1102:49:29"},"nativeSrc":"1102:49:29","nodeType":"YulExpressionStatement","src":"1102:49:29"},{"nativeSrc":"1160:26:29","nodeType":"YulAssignment","src":"1160:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"1172:9:29","nodeType":"YulIdentifier","src":"1172:9:29"},{"kind":"number","nativeSrc":"1183:2:29","nodeType":"YulLiteral","src":"1183:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1168:3:29","nodeType":"YulIdentifier","src":"1168:3:29"},"nativeSrc":"1168:18:29","nodeType":"YulFunctionCall","src":"1168:18:29"},"variableNames":[{"name":"tail","nativeSrc":"1160:4:29","nodeType":"YulIdentifier","src":"1160:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_d855b2d93307064cc81c5bde1af450b2b7b0dc078110db13366d856e1e12d1d2__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"849:343:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1000:9:29","nodeType":"YulTypedName","src":"1000:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1014:4:29","nodeType":"YulTypedName","src":"1014:4:29","type":""}],"src":"849:343:29"},{"body":{"nativeSrc":"1371:173:29","nodeType":"YulBlock","src":"1371:173:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1388:9:29","nodeType":"YulIdentifier","src":"1388:9:29"},{"kind":"number","nativeSrc":"1399:2:29","nodeType":"YulLiteral","src":"1399:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"1381:6:29","nodeType":"YulIdentifier","src":"1381:6:29"},"nativeSrc":"1381:21:29","nodeType":"YulFunctionCall","src":"1381:21:29"},"nativeSrc":"1381:21:29","nodeType":"YulExpressionStatement","src":"1381:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1422:9:29","nodeType":"YulIdentifier","src":"1422:9:29"},{"kind":"number","nativeSrc":"1433:2:29","nodeType":"YulLiteral","src":"1433:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1418:3:29","nodeType":"YulIdentifier","src":"1418:3:29"},"nativeSrc":"1418:18:29","nodeType":"YulFunctionCall","src":"1418:18:29"},{"kind":"number","nativeSrc":"1438:2:29","nodeType":"YulLiteral","src":"1438:2:29","type":"","value":"23"}],"functionName":{"name":"mstore","nativeSrc":"1411:6:29","nodeType":"YulIdentifier","src":"1411:6:29"},"nativeSrc":"1411:30:29","nodeType":"YulFunctionCall","src":"1411:30:29"},"nativeSrc":"1411:30:29","nodeType":"YulExpressionStatement","src":"1411:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1461:9:29","nodeType":"YulIdentifier","src":"1461:9:29"},{"kind":"number","nativeSrc":"1472:2:29","nodeType":"YulLiteral","src":"1472:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1457:3:29","nodeType":"YulIdentifier","src":"1457:3:29"},"nativeSrc":"1457:18:29","nodeType":"YulFunctionCall","src":"1457:18:29"},{"hexValue":"5a65726f206164647265737320656e747279506f696e74","kind":"string","nativeSrc":"1477:25:29","nodeType":"YulLiteral","src":"1477:25:29","type":"","value":"Zero address entryPoint"}],"functionName":{"name":"mstore","nativeSrc":"1450:6:29","nodeType":"YulIdentifier","src":"1450:6:29"},"nativeSrc":"1450:53:29","nodeType":"YulFunctionCall","src":"1450:53:29"},"nativeSrc":"1450:53:29","nodeType":"YulExpressionStatement","src":"1450:53:29"},{"nativeSrc":"1512:26:29","nodeType":"YulAssignment","src":"1512:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"1524:9:29","nodeType":"YulIdentifier","src":"1524:9:29"},{"kind":"number","nativeSrc":"1535:2:29","nodeType":"YulLiteral","src":"1535:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1520:3:29","nodeType":"YulIdentifier","src":"1520:3:29"},"nativeSrc":"1520:18:29","nodeType":"YulFunctionCall","src":"1520:18:29"},"variableNames":[{"name":"tail","nativeSrc":"1512:4:29","nodeType":"YulIdentifier","src":"1512:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_4a73a5f1dae303024db18f321a348e9400bcbcc4f26b4977dda1d77e1580b91a__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1197:347:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1348:9:29","nodeType":"YulTypedName","src":"1348:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1362:4:29","nodeType":"YulTypedName","src":"1362:4:29","type":""}],"src":"1197:347:29"},{"body":{"nativeSrc":"1723:168:29","nodeType":"YulBlock","src":"1723:168:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1740:9:29","nodeType":"YulIdentifier","src":"1740:9:29"},{"kind":"number","nativeSrc":"1751:2:29","nodeType":"YulLiteral","src":"1751:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"1733:6:29","nodeType":"YulIdentifier","src":"1733:6:29"},"nativeSrc":"1733:21:29","nodeType":"YulFunctionCall","src":"1733:21:29"},"nativeSrc":"1733:21:29","nodeType":"YulExpressionStatement","src":"1733:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1774:9:29","nodeType":"YulIdentifier","src":"1774:9:29"},{"kind":"number","nativeSrc":"1785:2:29","nodeType":"YulLiteral","src":"1785:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1770:3:29","nodeType":"YulIdentifier","src":"1770:3:29"},"nativeSrc":"1770:18:29","nodeType":"YulFunctionCall","src":"1770:18:29"},{"kind":"number","nativeSrc":"1790:2:29","nodeType":"YulLiteral","src":"1790:2:29","type":"","value":"18"}],"functionName":{"name":"mstore","nativeSrc":"1763:6:29","nodeType":"YulIdentifier","src":"1763:6:29"},"nativeSrc":"1763:30:29","nodeType":"YulFunctionCall","src":"1763:30:29"},"nativeSrc":"1763:30:29","nodeType":"YulExpressionStatement","src":"1763:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1813:9:29","nodeType":"YulIdentifier","src":"1813:9:29"},{"kind":"number","nativeSrc":"1824:2:29","nodeType":"YulLiteral","src":"1824:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1809:3:29","nodeType":"YulIdentifier","src":"1809:3:29"},"nativeSrc":"1809:18:29","nodeType":"YulFunctionCall","src":"1809:18:29"},{"hexValue":"5a65726f206164647265737320746f6b656e","kind":"string","nativeSrc":"1829:20:29","nodeType":"YulLiteral","src":"1829:20:29","type":"","value":"Zero address token"}],"functionName":{"name":"mstore","nativeSrc":"1802:6:29","nodeType":"YulIdentifier","src":"1802:6:29"},"nativeSrc":"1802:48:29","nodeType":"YulFunctionCall","src":"1802:48:29"},"nativeSrc":"1802:48:29","nodeType":"YulExpressionStatement","src":"1802:48:29"},{"nativeSrc":"1859:26:29","nodeType":"YulAssignment","src":"1859:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"1871:9:29","nodeType":"YulIdentifier","src":"1871:9:29"},{"kind":"number","nativeSrc":"1882:2:29","nodeType":"YulLiteral","src":"1882:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1867:3:29","nodeType":"YulIdentifier","src":"1867:3:29"},"nativeSrc":"1867:18:29","nodeType":"YulFunctionCall","src":"1867:18:29"},"variableNames":[{"name":"tail","nativeSrc":"1859:4:29","nodeType":"YulIdentifier","src":"1859:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_bd439a42997d101650d4aa359dd62e89f1890f0be164a36e3edb3096e27e0b93__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1549:342:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1700:9:29","nodeType":"YulTypedName","src":"1700:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1714:4:29","nodeType":"YulTypedName","src":"1714:4:29","type":""}],"src":"1549:342:29"},{"body":{"nativeSrc":"2070:174:29","nodeType":"YulBlock","src":"2070:174:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2087:9:29","nodeType":"YulIdentifier","src":"2087:9:29"},{"kind":"number","nativeSrc":"2098:2:29","nodeType":"YulLiteral","src":"2098:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"2080:6:29","nodeType":"YulIdentifier","src":"2080:6:29"},"nativeSrc":"2080:21:29","nodeType":"YulFunctionCall","src":"2080:21:29"},"nativeSrc":"2080:21:29","nodeType":"YulExpressionStatement","src":"2080:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2121:9:29","nodeType":"YulIdentifier","src":"2121:9:29"},{"kind":"number","nativeSrc":"2132:2:29","nodeType":"YulLiteral","src":"2132:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2117:3:29","nodeType":"YulIdentifier","src":"2117:3:29"},"nativeSrc":"2117:18:29","nodeType":"YulFunctionCall","src":"2117:18:29"},{"kind":"number","nativeSrc":"2137:2:29","nodeType":"YulLiteral","src":"2137:2:29","type":"","value":"24"}],"functionName":{"name":"mstore","nativeSrc":"2110:6:29","nodeType":"YulIdentifier","src":"2110:6:29"},"nativeSrc":"2110:30:29","nodeType":"YulFunctionCall","src":"2110:30:29"},"nativeSrc":"2110:30:29","nodeType":"YulExpressionStatement","src":"2110:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2160:9:29","nodeType":"YulIdentifier","src":"2160:9:29"},{"kind":"number","nativeSrc":"2171:2:29","nodeType":"YulLiteral","src":"2171:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2156:3:29","nodeType":"YulIdentifier","src":"2156:3:29"},"nativeSrc":"2156:18:29","nodeType":"YulFunctionCall","src":"2156:18:29"},{"hexValue":"5a65726f2062616c616e636520726571756972656d656e74","kind":"string","nativeSrc":"2176:26:29","nodeType":"YulLiteral","src":"2176:26:29","type":"","value":"Zero balance requirement"}],"functionName":{"name":"mstore","nativeSrc":"2149:6:29","nodeType":"YulIdentifier","src":"2149:6:29"},"nativeSrc":"2149:54:29","nodeType":"YulFunctionCall","src":"2149:54:29"},"nativeSrc":"2149:54:29","nodeType":"YulExpressionStatement","src":"2149:54:29"},{"nativeSrc":"2212:26:29","nodeType":"YulAssignment","src":"2212:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"2224:9:29","nodeType":"YulIdentifier","src":"2224:9:29"},{"kind":"number","nativeSrc":"2235:2:29","nodeType":"YulLiteral","src":"2235:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2220:3:29","nodeType":"YulIdentifier","src":"2220:3:29"},"nativeSrc":"2220:18:29","nodeType":"YulFunctionCall","src":"2220:18:29"},"variableNames":[{"name":"tail","nativeSrc":"2212:4:29","nodeType":"YulIdentifier","src":"2212:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_7ba039f2e5c1f7bb61f3fc17bbfabfe46dc6a0e877279b9521301539aa1e283f__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1896:348:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2047:9:29","nodeType":"YulTypedName","src":"2047:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2061:4:29","nodeType":"YulTypedName","src":"2061:4:29","type":""}],"src":"1896:348:29"}]},"contents":"{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_d855b2d93307064cc81c5bde1af450b2b7b0dc078110db13366d856e1e12d1d2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Zero address signer\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4a73a5f1dae303024db18f321a348e9400bcbcc4f26b4977dda1d77e1580b91a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Zero address entryPoint\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bd439a42997d101650d4aa359dd62e89f1890f0be164a36e3edb3096e27e0b93__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Zero address token\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7ba039f2e5c1f7bb61f3fc17bbfabfe46dc6a0e877279b9521301539aa1e283f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Zero balance requirement\")\n        tail := add(headStart, 96)\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60e06040523480156200001157600080fd5b50604051620017c9380380620017c9833981016040819052620000349162000262565b33806200005c57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6200006781620001f5565b506000805460ff60a01b191690556001600160a01b038416620000cd5760405162461bcd60e51b815260206004820152601360248201527f5a65726f2061646472657373207369676e657200000000000000000000000000604482015260640162000053565b6001600160a01b038316620001255760405162461bcd60e51b815260206004820152601760248201527f5a65726f206164647265737320656e747279506f696e74000000000000000000604482015260640162000053565b6001600160a01b038216620001725760405162461bcd60e51b81526020600482015260126024820152712d32b9379030b2323932b9b9903a37b5b2b760711b604482015260640162000053565b60008111620001c45760405162461bcd60e51b815260206004820152601860248201527f5a65726f2062616c616e636520726571756972656d656e740000000000000000604482015260640162000053565b600180546001600160a01b0319166001600160a01b0395861617905591831660c05290911660805260a052620002b4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200025d57600080fd5b919050565b600080600080608085870312156200027957600080fd5b620002848562000245565b9350620002946020860162000245565b9250620002a46040860162000245565b6060959095015193969295505050565b60805160a05160c0516114ad6200031c600039600081816102aa01528181610455015281816105210152818161059d01528181610b1b01528181610c550152610ce201526000818161020f0152610854015260008181610313015261087d01526114ad6000f3fe6080604052600436106101095760003560e01c80638456cb5911610095578063c771909c11610064578063c771909c146102e1578063ca1d7ba314610301578063d0e30db014610335578063f2fde38b1461033d578063feb617241461035d57600080fd5b80638456cb59146102515780638da5cb5b14610266578063b0d691fe14610298578063c399ec88146102cc57600080fd5b80635c975abb116100dc5780635c975abb1461019d5780636c19e783146101c8578063715018a6146101e8578063795112c9146101fd5780637c627b211461023157600080fd5b8063205c28781461010e5780633f4ba83a146101305780634fe11c8b1461014557806352b7512c1461016f575b600080fd5b34801561011a57600080fd5b5061012e6101293660046111f2565b61038d565b005b34801561013c57600080fd5b5061012e6104f8565b34801561015157600080fd5b5061015c62093a8081565b6040519081526020015b60405180910390f35b34801561017b57600080fd5b5061018f61018a36600461121e565b61050a565b604051610166929190611272565b3480156101a957600080fd5b50600054600160a01b900460ff165b6040519015158152602001610166565b3480156101d457600080fd5b5061012e6101e33660046112c7565b610a60565b3480156101f457600080fd5b5061012e610afe565b34801561020957600080fd5b5061015c7f000000000000000000000000000000000000000000000000000000000000000081565b34801561023d57600080fd5b5061012e61024c3660046112eb565b610b10565b34801561025d57600080fd5b5061012e610c2d565b34801561027257600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610166565b3480156102a457600080fd5b506102807f000000000000000000000000000000000000000000000000000000000000000081565b3480156102d857600080fd5b5061015c610c3d565b3480156102ed57600080fd5b50600154610280906001600160a01b031681565b34801561030d57600080fd5b506102807f000000000000000000000000000000000000000000000000000000000000000081565b61012e610ccd565b34801561034957600080fd5b5061012e6103583660046112c7565b610d80565b34801561036957600080fd5b506101b8610378366004611383565b60026020526000908152604090205460ff1681565b610395610dbe565b6001600160a01b0382166103e85760405162461bcd60e51b81526020600482015260156024820152745a65726f206164647265737320776974686472617760581b60448201526064015b60405180910390fd5b6000811161042f5760405162461bcd60e51b81526020600482015260146024820152735a65726f20616d6f756e7420776974686472617760601b60448201526064016103df565b60405163040b850f60e31b81526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063205c287890604401600060405180830381600087803b15801561049957600080fd5b505af11580156104ad573d6000803e3d6000fd5b50505050816001600160a01b03167fdc320249be6042385e00f08969a7a6f67f21fb2c393186199f265da66452750e826040516104ec91815260200190565b60405180910390a25050565b610500610dbe565b610508610deb565b565b60606000610516610e40565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105865760405162461bcd60e51b815260206004820152601560248201527410d85b1b195c881b9bdd08115b9d1c9e541bda5b9d605a1b60448201526064016103df565b6040516370a0823160e01b815230600482015283907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156105ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610610919061139c565b101561065e5760405162461bcd60e51b815260206004820152601e60248201527f496e73756666696369656e74207061796d6173746572206465706f736974000060448201526064016103df565b61066b60e08601866113b5565b90506095146106bc5760405162461bcd60e51b815260206004820152601f60248201527f496e76616c6964207061796d6173746572416e6444617461206c656e6774680060448201526064016103df565b60006106cb60e08701876113b5565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509394506107119250849150601490506020610e6b565b61071a90611403565b9050600061072b8360346020610e6b565b61073490611403565b60408051602081018590529192506000910160408051601f1981840301815291815281516020928301206000818152600290935291205490915060ff16156107b35760405162461bcd60e51b8152602060048201526012602482015271139bdb98d948185b1c9958591e481d5cd95960721b60448201526064016103df565b4282116107f65760405162461bcd60e51b815260206004820152601160248201527014da59db985d1d5c9948195e1c1a5c9959607a1b60448201526064016103df565b61080362093a804261142a565b8211156108525760405162461bcd60e51b815260206004820152601860248201527f45787069727920746f6f2066617220696e20667574757265000000000000000060448201526064016103df565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166370a082316108af60208d018d6112c7565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156108f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610917919061139c565b10156109655760405162461bcd60e51b815260206004820152601860248201527f496e73756666696369656e74205342432062616c616e6365000000000000000060448201526064016103df565b60006109748560546041610e6b565b905060004661098660208d018d6112c7565b6040805160208101939093526001600160a01b0390911690820152606081018690526080810185905260a081018b905260c00160405160208183030381529060405280519060200120905060006109dd8284610f1b565b6001549091506001600160a01b03808316911614610a315760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b60448201526064016103df565b60408051602081018690520160408051601f198184030181529190529c60009c509a5050505050505050505050565b610a68610dbe565b6001600160a01b038116610ab45760405162461bcd60e51b81526020600482015260136024820152722d32b9379030b2323932b9b99039b4b3b732b960691b60448201526064016103df565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c7390600090a250565b610b06610dbe565b6105086000610f47565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b805760405162461bcd60e51b815260206004820152601560248201527410d85b1b195c881b9bdd08115b9d1c9e541bda5b9d605a1b60448201526064016103df565b6000856002811115610b9457610b9461144b565b03610c26576000610ba784860186611383565b600081815260026020526040808220805460ff191660011790555191925082917f86e12680725060749e4481672cf4b5dde58e5f7222c1f01c7d94f40eba96e9239190a260408051848152602081018490527f127f277caf8451a4a4b3cc01664c207db03cf985a0bf7827592a33ba5e0823de910160405180910390a1505b5050505050565b610c35610dbe565b610508610f97565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610ca4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc8919061139c565b905090565b60405163b760faf960e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b760faf99034906024016000604051808303818588803b158015610d2f57600080fd5b505af1158015610d43573d6000803e3d6000fd5b50506040513481523393507f8c62601349aea45c56ebe7a2ec7c24eb877c26b369547dad762528da3ecf2ce59250602001905060405180910390a2565b610d88610dbe565b6001600160a01b038116610db257604051631e4fbdf760e01b8152600060048201526024016103df565b610dbb81610f47565b50565b6000546001600160a01b031633146105085760405163118cdaa760e01b81523360048201526024016103df565b610df3610fda565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600054600160a01b900460ff16156105085760405163d93c066560e01b815260040160405180910390fd5b8251606090610e7a838561142a565b1115610ebe5760405162461bcd60e51b8152602060048201526013602482015272536c696365206f7574206f6620626f756e647360681b60448201526064016103df565b60008267ffffffffffffffff811115610ed957610ed9611461565b6040519080825280601f01601f191660200182016040528015610f03576020820181803683370190505b50858501602090810151908201529150509392505050565b600080600080610f2b8686611004565b925092509250610f3b8282611051565b50909150505b92915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610f9f610e40565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610e233390565b600054600160a01b900460ff1661050857604051638dfc202b60e01b815260040160405180910390fd5b6000806000835160410361103e5760208401516040850151606086015160001a6110308882858561110e565b95509550955050505061104a565b50508151600091506002905b9250925092565b60008260038111156110655761106561144b565b0361106e575050565b60018260038111156110825761108261144b565b036110a05760405163f645eedf60e01b815260040160405180910390fd5b60028260038111156110b4576110b461144b565b036110d55760405163fce698f760e01b8152600481018290526024016103df565b60038260038111156110e9576110e961144b565b0361110a576040516335e2f38360e21b8152600481018290526024016103df565b5050565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084111561114957506000915060039050826111d3565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa15801561119d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166111c9575060009250600191508290506111d3565b9250600091508190505b9450945094915050565b6001600160a01b0381168114610dbb57600080fd5b6000806040838503121561120557600080fd5b8235611210816111dd565b946020939093013593505050565b60008060006060848603121561123357600080fd5b833567ffffffffffffffff81111561124a57600080fd5b8401610120818703121561125d57600080fd5b95602085013595506040909401359392505050565b604081526000835180604084015260005b818110156112a05760208187018101516060868401015201611283565b506000606082850101526060601f19601f8301168401019150508260208301529392505050565b6000602082840312156112d957600080fd5b81356112e4816111dd565b9392505050565b60008060008060006080868803121561130357600080fd5b85356003811061131257600080fd5b9450602086013567ffffffffffffffff8082111561132f57600080fd5b818801915088601f83011261134357600080fd5b81358181111561135257600080fd5b89602082850101111561136457600080fd5b9699602092909201985095966040810135965060600135945092505050565b60006020828403121561139557600080fd5b5035919050565b6000602082840312156113ae57600080fd5b5051919050565b6000808335601e198436030181126113cc57600080fd5b83018035915067ffffffffffffffff8211156113e757600080fd5b6020019150368190038213156113fc57600080fd5b9250929050565b80516020808301519190811015611424576000198160200360031b1b821691505b50919050565b80820180821115610f4157634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220562981f09c14b6f8d67b53eb128a3a431533b033d4b5d3717f9aadc3c68dfeb964736f6c63430008170033","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x17C9 CODESIZE SUB DUP1 PUSH3 0x17C9 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x262 JUMP JUMPDEST CALLER DUP1 PUSH3 0x5C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x67 DUP2 PUSH3 0x1F5 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0xCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A65726F2061646472657373207369676E657200000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x53 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x125 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A65726F206164647265737320656E747279506F696E74000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x53 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x172 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2D32B9379030B2323932B9B9903A37B5B2B7 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x53 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH3 0x1C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A65726F2062616C616E636520726571756972656D656E740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x53 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND OR SWAP1 SSTORE SWAP2 DUP4 AND PUSH1 0xC0 MSTORE SWAP1 SWAP2 AND PUSH1 0x80 MSTORE PUSH1 0xA0 MSTORE PUSH3 0x2B4 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x284 DUP6 PUSH3 0x245 JUMP JUMPDEST SWAP4 POP PUSH3 0x294 PUSH1 0x20 DUP7 ADD PUSH3 0x245 JUMP JUMPDEST SWAP3 POP PUSH3 0x2A4 PUSH1 0x40 DUP7 ADD PUSH3 0x245 JUMP JUMPDEST PUSH1 0x60 SWAP6 SWAP1 SWAP6 ADD MLOAD SWAP4 SWAP7 SWAP3 SWAP6 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x14AD PUSH3 0x31C PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x2AA ADD MSTORE DUP2 DUP2 PUSH2 0x455 ADD MSTORE DUP2 DUP2 PUSH2 0x521 ADD MSTORE DUP2 DUP2 PUSH2 0x59D ADD MSTORE DUP2 DUP2 PUSH2 0xB1B ADD MSTORE DUP2 DUP2 PUSH2 0xC55 ADD MSTORE PUSH2 0xCE2 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x20F ADD MSTORE PUSH2 0x854 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x313 ADD MSTORE PUSH2 0x87D ADD MSTORE PUSH2 0x14AD PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xC771909C GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC771909C EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0xCA1D7BA3 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0xFEB61724 EQ PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xC399EC88 EQ PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x6C19E783 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x795112C9 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x7C627B21 EQ PUSH2 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x205C2878 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x4FE11C8B EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x52B7512C EQ PUSH2 0x16F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x11F2 JUMP JUMPDEST PUSH2 0x38D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x4F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH3 0x93A80 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18F PUSH2 0x18A CALLDATASIZE PUSH1 0x4 PUSH2 0x121E JUMP JUMPDEST PUSH2 0x50A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP3 SWAP2 SWAP1 PUSH2 0x1272 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x12C7 JUMP JUMPDEST PUSH2 0xA60 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0xAFE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x12EB JUMP JUMPDEST PUSH2 0xB10 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0xC2D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH2 0xC3D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x280 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x12E PUSH2 0xCCD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x358 CALLDATASIZE PUSH1 0x4 PUSH2 0x12C7 JUMP JUMPDEST PUSH2 0xD80 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x378 CALLDATASIZE PUSH1 0x4 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x395 PUSH2 0xDBE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x5A65726F2061646472657373207769746864726177 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x42F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x5A65726F20616D6F756E74207769746864726177 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x40B850F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x205C2878 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x499 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDC320249BE6042385E00F08969A7A6F67F21FB2C393186199F265DA66452750E DUP3 PUSH1 0x40 MLOAD PUSH2 0x4EC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x500 PUSH2 0xDBE JUMP JUMPDEST PUSH2 0x508 PUSH2 0xDEB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x516 PUSH2 0xE40 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x586 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x10D85B1B195C881B9BDD08115B9D1C9E541BDA5B9D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP4 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x610 SWAP2 SWAP1 PUSH2 0x139C JUMP JUMPDEST LT ISZERO PUSH2 0x65E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74207061796D6173746572206465706F7369740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DF JUMP JUMPDEST PUSH2 0x66B PUSH1 0xE0 DUP7 ADD DUP7 PUSH2 0x13B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x95 EQ PUSH2 0x6BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207061796D6173746572416E6444617461206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6CB PUSH1 0xE0 DUP8 ADD DUP8 PUSH2 0x13B5 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 SWAP5 POP PUSH2 0x711 SWAP3 POP DUP5 SWAP2 POP PUSH1 0x14 SWAP1 POP PUSH1 0x20 PUSH2 0xE6B JUMP JUMPDEST PUSH2 0x71A SWAP1 PUSH2 0x1403 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x72B DUP4 PUSH1 0x34 PUSH1 0x20 PUSH2 0xE6B JUMP JUMPDEST PUSH2 0x734 SWAP1 PUSH2 0x1403 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x7B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BDB98D948185B1C9958591E481D5CD959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DF JUMP JUMPDEST TIMESTAMP DUP3 GT PUSH2 0x7F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x14DA59DB985D1D5C9948195E1C1A5C9959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DF JUMP JUMPDEST PUSH2 0x803 PUSH3 0x93A80 TIMESTAMP PUSH2 0x142A JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x852 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45787069727920746F6F2066617220696E206675747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DF JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH4 0x70A08231 PUSH2 0x8AF PUSH1 0x20 DUP14 ADD DUP14 PUSH2 0x12C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x917 SWAP2 SWAP1 PUSH2 0x139C JUMP JUMPDEST LT ISZERO PUSH2 0x965 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74205342432062616C616E63650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x974 DUP6 PUSH1 0x54 PUSH1 0x41 PUSH2 0xE6B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 CHAINID PUSH2 0x986 PUSH1 0x20 DUP14 ADD DUP14 PUSH2 0x12C7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x9DD DUP3 DUP5 PUSH2 0xF1B JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP2 AND EQ PUSH2 0xA31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE SWAP13 PUSH1 0x0 SWAP13 POP SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA68 PUSH2 0xDBE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2D32B9379030B2323932B9B99039B4B3B732B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x5553331329228FBD4123164423717A4A7539F6DFA1C3279A923B98FD681A6C73 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xB06 PUSH2 0xDBE JUMP JUMPDEST PUSH2 0x508 PUSH1 0x0 PUSH2 0xF47 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xB80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x10D85B1B195C881B9BDD08115B9D1C9E541BDA5B9D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB94 JUMPI PUSH2 0xB94 PUSH2 0x144B JUMP JUMPDEST SUB PUSH2 0xC26 JUMPI PUSH1 0x0 PUSH2 0xBA7 DUP5 DUP7 ADD DUP7 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP2 SWAP3 POP DUP3 SWAP2 PUSH32 0x86E12680725060749E4481672CF4B5DDE58E5F7222C1F01C7D94F40EBA96E923 SWAP2 SWAP1 LOG2 PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x127F277CAF8451A4A4B3CC01664C207DB03CF985A0BF7827592A33BA5E0823DE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC35 PUSH2 0xDBE JUMP JUMPDEST PUSH2 0x508 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCA4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCC8 SWAP2 SWAP1 PUSH2 0x139C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB760FAF9 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB760FAF9 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD43 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP4 POP PUSH32 0x8C62601349AEA45C56EBE7A2EC7C24EB877C26B369547DAD762528DA3ECF2CE5 SWAP3 POP PUSH1 0x20 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0xD88 PUSH2 0xDBE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xDB2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3DF JUMP JUMPDEST PUSH2 0xDBB DUP2 PUSH2 0xF47 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x508 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3DF JUMP JUMPDEST PUSH2 0xDF3 PUSH2 0xFDA JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x508 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x60 SWAP1 PUSH2 0xE7A DUP4 DUP6 PUSH2 0x142A JUMP JUMPDEST GT ISZERO PUSH2 0xEBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x536C696365206F7574206F6620626F756E6473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xED9 JUMPI PUSH2 0xED9 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF03 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP6 DUP6 ADD PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xF2B DUP7 DUP7 PUSH2 0x1004 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xF3B DUP3 DUP3 PUSH2 0x1051 JUMP JUMPDEST POP SWAP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xF9F PUSH2 0xE40 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xE23 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x508 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0x103E JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x1030 DUP9 DUP3 DUP6 DUP6 PUSH2 0x110E JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x104A JUMP JUMPDEST POP POP DUP2 MLOAD PUSH1 0x0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1065 JUMPI PUSH2 0x1065 PUSH2 0x144B JUMP JUMPDEST SUB PUSH2 0x106E JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1082 JUMPI PUSH2 0x1082 PUSH2 0x144B JUMP JUMPDEST SUB PUSH2 0x10A0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x10B4 JUMPI PUSH2 0x10B4 PUSH2 0x144B JUMP JUMPDEST SUB PUSH2 0x10D5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x10E9 JUMPI PUSH2 0x10E9 PUSH2 0x144B JUMP JUMPDEST SUB PUSH2 0x110A JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3DF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x1149 JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x119D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x11C9 JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x11D3 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1210 DUP2 PUSH2 0x11DD JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x124A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH2 0x120 DUP2 DUP8 SUB SLT ISZERO PUSH2 0x125D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x12A0 JUMPI PUSH1 0x20 DUP2 DUP8 ADD DUP2 ADD MLOAD PUSH1 0x60 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x1283 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x60 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x12E4 DUP2 PUSH2 0x11DD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x1312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x132F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP9 POP SWAP6 SWAP7 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP7 POP PUSH1 0x60 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x13CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x13E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x13FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x1424 JUMPI PUSH1 0x0 NOT DUP2 PUSH1 0x20 SUB PUSH1 0x3 SHL SHL DUP3 AND SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xF41 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP 0x29 DUP2 CREATE SWAP13 EQ 0xB6 0xF8 0xD6 PUSH28 0x53EB128A3A431533B033D4B5D3717F9AADC3C68DFEB964736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"861:9351:28:-:0;;;2405:926;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2735:10;;1269:95:6;;1322:31;;-1:-1:-1;;;1322:31:6;;1350:1;1322:31;;;787:51:29;760:18;;1322:31:6;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1241:5:18;1231:15;;-1:-1:-1;;;;1231:15:18;;;-1:-1:-1;;;;;2845:31:28;::::1;2837:63;;;::::0;-1:-1:-1;;;2837:63:28;;1051:2:29;2837:63:28::1;::::0;::::1;1033:21:29::0;1090:2;1070:18;;;1063:30;1129:21;1109:18;;;1102:49;1168:18;;2837:63:28::1;849:343:29::0;2837:63:28::1;-1:-1:-1::0;;;;;2918:25:28;::::1;2910:61;;;::::0;-1:-1:-1;;;2910:61:28;;1399:2:29;2910:61:28::1;::::0;::::1;1381:21:29::0;1438:2;1418:18;;;1411:30;1477:25;1457:18;;;1450:53;1520:18;;2910:61:28::1;1197:347:29::0;2910:61:28::1;-1:-1:-1::0;;;;;2989:23:28;::::1;2981:54;;;::::0;-1:-1:-1;;;2981:54:28;;1751:2:29;2981:54:28::1;::::0;::::1;1733:21:29::0;1790:2;1770:18;;;1763:30;-1:-1:-1;;;1809:18:29;;;1802:48;1867:18;;2981:54:28::1;1549:342:29::0;2981:54:28::1;3072:1;3053:16;:20;3045:57;;;::::0;-1:-1:-1;;;3045:57:28;;2098:2:29;3045:57:28::1;::::0;::::1;2080:21:29::0;2137:2;2117:18;;;2110:30;2176:26;2156:18;;;2149:54;2220:18;;3045:57:28::1;1896:348:29::0;3045:57:28::1;3161:16;:36:::0;;-1:-1:-1;;;;;;3161:36:28::1;-1:-1:-1::0;;;;;3161:36:28;;::::1;;::::0;;3207:37;;::::1;;::::0;3254:21;;::::1;;::::0;3285:39:::1;::::0;861:9351;;2912:187:6;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:6;;;-1:-1:-1;;;;;;3020:17:6;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:177:29:-;93:13;;-1:-1:-1;;;;;135:31:29;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:440::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;400:50;;469:49;514:2;503:9;499:18;469:49;:::i;:::-;459:59;;537:49;582:2;571:9;567:18;537:49;:::i;:::-;626:2;611:18;;;;605:25;196:440;;;;-1:-1:-1;;;196:440:29:o;1896:348::-;861:9351:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@MAX_EXPIRY_DURATION_7093":{"entryPoint":null,"id":7093,"parameterSlots":0,"returnSlots":0},"@REQUIRED_SBC_BALANCE_7090":{"entryPoint":null,"id":7090,"parameterSlots":0,"returnSlots":0},"@SBC_TOKEN_7088":{"entryPoint":null,"id":7088,"parameterSlots":0,"returnSlots":0},"@_checkOwner_484":{"entryPoint":3518,"id":484,"parameterSlots":0,"returnSlots":0},"@_msgSender_2512":{"entryPoint":null,"id":2512,"parameterSlots":0,"returnSlots":1},"@_pause_2682":{"entryPoint":3991,"id":2682,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_2653":{"entryPoint":3648,"id":2653,"parameterSlots":0,"returnSlots":0},"@_requirePaused_2666":{"entryPoint":4058,"id":2666,"parameterSlots":0,"returnSlots":0},"@_throwError_3366":{"entryPoint":4177,"id":3366,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_546":{"entryPoint":3911,"id":546,"parameterSlots":1,"returnSlots":0},"@_unpause_2698":{"entryPoint":3563,"id":2698,"parameterSlots":0,"returnSlots":0},"@authorizedSigner_7095":{"entryPoint":null,"id":7095,"parameterSlots":0,"returnSlots":0},"@deposit_7491":{"entryPoint":3277,"id":7491,"parameterSlots":0,"returnSlots":0},"@entryPoint_7102":{"entryPoint":null,"id":7102,"parameterSlots":0,"returnSlots":0},"@getDeposit_7546":{"entryPoint":3133,"id":7546,"parameterSlots":0,"returnSlots":1},"@owner_467":{"entryPoint":null,"id":467,"parameterSlots":0,"returnSlots":1},"@pause_7556":{"entryPoint":3117,"id":7556,"parameterSlots":0,"returnSlots":0},"@paused_2641":{"entryPoint":null,"id":2641,"parameterSlots":0,"returnSlots":1},"@postOp_7467":{"entryPoint":2832,"id":7467,"parameterSlots":5,"returnSlots":0},"@recover_3123":{"entryPoint":3867,"id":3123,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_498":{"entryPoint":2814,"id":498,"parameterSlots":0,"returnSlots":0},"@setSigner_7226":{"entryPoint":2656,"id":7226,"parameterSlots":1,"returnSlots":0},"@slice_7599":{"entryPoint":3691,"id":7599,"parameterSlots":3,"returnSlots":1},"@transferOwnership_526":{"entryPoint":3456,"id":526,"parameterSlots":1,"returnSlots":0},"@tryRecover_3093":{"entryPoint":4100,"id":3093,"parameterSlots":2,"returnSlots":3},"@tryRecover_3281":{"entryPoint":4366,"id":3281,"parameterSlots":4,"returnSlots":3},"@unpause_7566":{"entryPoint":1272,"id":7566,"parameterSlots":0,"returnSlots":0},"@usedNonces_7099":{"entryPoint":null,"id":7099,"parameterSlots":0,"returnSlots":0},"@validatePaymasterUserOp_7411":{"entryPoint":1290,"id":7411,"parameterSlots":3,"returnSlots":2},"@withdrawTo_7531":{"entryPoint":909,"id":7531,"parameterSlots":2,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":4807,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_payablet_uint256":{"entryPoint":4594,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":4995,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_enum$_PostOpMode_$244t_bytes_calldata_ptrt_uint256t_uint256":{"entryPoint":4843,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_struct$_PackedUserOperation_$399_calldata_ptrt_bytes32t_uint256":{"entryPoint":4638,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":5020,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":4722,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IEntryPoint_$217__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5dc47c422d9659e6766e8592ccdda1f843855cf468f696abb546c21a24e75228__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_80d90a95737f313c53d0bb6837e1fa3081c533ef624cd896bb37942cc6750a82__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_923b8cbbcee77e95e0614b96c81a4cbd157e2cc78e2937caa0bed8e1c5641a28__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c84ea879ba77ce28ba9dedf701fc36f58c603ac0dc3701d534f1f2611de4053f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cfe5951392790b135f98d77ba09049bfbc1a1776c53987baf509c661787d5e3b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d855b2d93307064cc81c5bde1af450b2b7b0dc078110db13366d856e1e12d1d2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ecfa266217da3a80d0171313986f68cbc4cac0cae9e6359310dca2ed53539b73__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f1c269d7eab972b2fd4d87a15c317e920493e7eea923de7e48c0ebcb7f611fa9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f789c796bc88b6644f4b1d82a40a6f90d1ada33aa23e9176f89c644271009430__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc544a183a74889e2f0f71a19573312cb640b492ec6195283ec98b45e5f0af57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256_t_bytes32__to_t_uint256_t_address_t_uint256_t_uint256_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"access_calldata_tail_t_bytes_calldata_ptr":{"entryPoint":5045,"id":null,"parameterSlots":2,"returnSlots":2},"checked_add_t_uint256":{"entryPoint":5162,"id":null,"parameterSlots":2,"returnSlots":1},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":5123,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x21":{"entryPoint":5195,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5217,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address_payable":{"entryPoint":4573,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:11126:29","nodeType":"YulBlock","src":"0:11126:29","statements":[{"nativeSrc":"6:3:29","nodeType":"YulBlock","src":"6:3:29","statements":[]},{"body":{"nativeSrc":"67:86:29","nodeType":"YulBlock","src":"67:86:29","statements":[{"body":{"nativeSrc":"131:16:29","nodeType":"YulBlock","src":"131:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"140:1:29","nodeType":"YulLiteral","src":"140:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"143:1:29","nodeType":"YulLiteral","src":"143:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"133:6:29","nodeType":"YulIdentifier","src":"133:6:29"},"nativeSrc":"133:12:29","nodeType":"YulFunctionCall","src":"133:12:29"},"nativeSrc":"133:12:29","nodeType":"YulExpressionStatement","src":"133:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"90:5:29","nodeType":"YulIdentifier","src":"90:5:29"},{"arguments":[{"name":"value","nativeSrc":"101:5:29","nodeType":"YulIdentifier","src":"101:5:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"116:3:29","nodeType":"YulLiteral","src":"116:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"121:1:29","nodeType":"YulLiteral","src":"121:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"112:3:29","nodeType":"YulIdentifier","src":"112:3:29"},"nativeSrc":"112:11:29","nodeType":"YulFunctionCall","src":"112:11:29"},{"kind":"number","nativeSrc":"125:1:29","nodeType":"YulLiteral","src":"125:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"108:3:29","nodeType":"YulIdentifier","src":"108:3:29"},"nativeSrc":"108:19:29","nodeType":"YulFunctionCall","src":"108:19:29"}],"functionName":{"name":"and","nativeSrc":"97:3:29","nodeType":"YulIdentifier","src":"97:3:29"},"nativeSrc":"97:31:29","nodeType":"YulFunctionCall","src":"97:31:29"}],"functionName":{"name":"eq","nativeSrc":"87:2:29","nodeType":"YulIdentifier","src":"87:2:29"},"nativeSrc":"87:42:29","nodeType":"YulFunctionCall","src":"87:42:29"}],"functionName":{"name":"iszero","nativeSrc":"80:6:29","nodeType":"YulIdentifier","src":"80:6:29"},"nativeSrc":"80:50:29","nodeType":"YulFunctionCall","src":"80:50:29"},"nativeSrc":"77:70:29","nodeType":"YulIf","src":"77:70:29"}]},"name":"validator_revert_address_payable","nativeSrc":"14:139:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"56:5:29","nodeType":"YulTypedName","src":"56:5:29","type":""}],"src":"14:139:29"},{"body":{"nativeSrc":"253:236:29","nodeType":"YulBlock","src":"253:236:29","statements":[{"body":{"nativeSrc":"299:16:29","nodeType":"YulBlock","src":"299:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"308:1:29","nodeType":"YulLiteral","src":"308:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"311:1:29","nodeType":"YulLiteral","src":"311:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"301:6:29","nodeType":"YulIdentifier","src":"301:6:29"},"nativeSrc":"301:12:29","nodeType":"YulFunctionCall","src":"301:12:29"},"nativeSrc":"301:12:29","nodeType":"YulExpressionStatement","src":"301:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"274:7:29","nodeType":"YulIdentifier","src":"274:7:29"},{"name":"headStart","nativeSrc":"283:9:29","nodeType":"YulIdentifier","src":"283:9:29"}],"functionName":{"name":"sub","nativeSrc":"270:3:29","nodeType":"YulIdentifier","src":"270:3:29"},"nativeSrc":"270:23:29","nodeType":"YulFunctionCall","src":"270:23:29"},{"kind":"number","nativeSrc":"295:2:29","nodeType":"YulLiteral","src":"295:2:29","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"266:3:29","nodeType":"YulIdentifier","src":"266:3:29"},"nativeSrc":"266:32:29","nodeType":"YulFunctionCall","src":"266:32:29"},"nativeSrc":"263:52:29","nodeType":"YulIf","src":"263:52:29"},{"nativeSrc":"324:36:29","nodeType":"YulVariableDeclaration","src":"324:36:29","value":{"arguments":[{"name":"headStart","nativeSrc":"350:9:29","nodeType":"YulIdentifier","src":"350:9:29"}],"functionName":{"name":"calldataload","nativeSrc":"337:12:29","nodeType":"YulIdentifier","src":"337:12:29"},"nativeSrc":"337:23:29","nodeType":"YulFunctionCall","src":"337:23:29"},"variables":[{"name":"value","nativeSrc":"328:5:29","nodeType":"YulTypedName","src":"328:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"402:5:29","nodeType":"YulIdentifier","src":"402:5:29"}],"functionName":{"name":"validator_revert_address_payable","nativeSrc":"369:32:29","nodeType":"YulIdentifier","src":"369:32:29"},"nativeSrc":"369:39:29","nodeType":"YulFunctionCall","src":"369:39:29"},"nativeSrc":"369:39:29","nodeType":"YulExpressionStatement","src":"369:39:29"},{"nativeSrc":"417:15:29","nodeType":"YulAssignment","src":"417:15:29","value":{"name":"value","nativeSrc":"427:5:29","nodeType":"YulIdentifier","src":"427:5:29"},"variableNames":[{"name":"value0","nativeSrc":"417:6:29","nodeType":"YulIdentifier","src":"417:6:29"}]},{"nativeSrc":"441:42:29","nodeType":"YulAssignment","src":"441:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"468:9:29","nodeType":"YulIdentifier","src":"468:9:29"},{"kind":"number","nativeSrc":"479:2:29","nodeType":"YulLiteral","src":"479:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"464:3:29","nodeType":"YulIdentifier","src":"464:3:29"},"nativeSrc":"464:18:29","nodeType":"YulFunctionCall","src":"464:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"451:12:29","nodeType":"YulIdentifier","src":"451:12:29"},"nativeSrc":"451:32:29","nodeType":"YulFunctionCall","src":"451:32:29"},"variableNames":[{"name":"value1","nativeSrc":"441:6:29","nodeType":"YulIdentifier","src":"441:6:29"}]}]},"name":"abi_decode_tuple_t_address_payablet_uint256","nativeSrc":"158:331:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"211:9:29","nodeType":"YulTypedName","src":"211:9:29","type":""},{"name":"dataEnd","nativeSrc":"222:7:29","nodeType":"YulTypedName","src":"222:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"234:6:29","nodeType":"YulTypedName","src":"234:6:29","type":""},{"name":"value1","nativeSrc":"242:6:29","nodeType":"YulTypedName","src":"242:6:29","type":""}],"src":"158:331:29"},{"body":{"nativeSrc":"595:76:29","nodeType":"YulBlock","src":"595:76:29","statements":[{"nativeSrc":"605:26:29","nodeType":"YulAssignment","src":"605:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"617:9:29","nodeType":"YulIdentifier","src":"617:9:29"},{"kind":"number","nativeSrc":"628:2:29","nodeType":"YulLiteral","src":"628:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"613:3:29","nodeType":"YulIdentifier","src":"613:3:29"},"nativeSrc":"613:18:29","nodeType":"YulFunctionCall","src":"613:18:29"},"variableNames":[{"name":"tail","nativeSrc":"605:4:29","nodeType":"YulIdentifier","src":"605:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"647:9:29","nodeType":"YulIdentifier","src":"647:9:29"},{"name":"value0","nativeSrc":"658:6:29","nodeType":"YulIdentifier","src":"658:6:29"}],"functionName":{"name":"mstore","nativeSrc":"640:6:29","nodeType":"YulIdentifier","src":"640:6:29"},"nativeSrc":"640:25:29","nodeType":"YulFunctionCall","src":"640:25:29"},"nativeSrc":"640:25:29","nodeType":"YulExpressionStatement","src":"640:25:29"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"494:177:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"564:9:29","nodeType":"YulTypedName","src":"564:9:29","type":""},{"name":"value0","nativeSrc":"575:6:29","nodeType":"YulTypedName","src":"575:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"586:4:29","nodeType":"YulTypedName","src":"586:4:29","type":""}],"src":"494:177:29"},{"body":{"nativeSrc":"818:392:29","nodeType":"YulBlock","src":"818:392:29","statements":[{"body":{"nativeSrc":"864:16:29","nodeType":"YulBlock","src":"864:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"873:1:29","nodeType":"YulLiteral","src":"873:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"876:1:29","nodeType":"YulLiteral","src":"876:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"866:6:29","nodeType":"YulIdentifier","src":"866:6:29"},"nativeSrc":"866:12:29","nodeType":"YulFunctionCall","src":"866:12:29"},"nativeSrc":"866:12:29","nodeType":"YulExpressionStatement","src":"866:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"839:7:29","nodeType":"YulIdentifier","src":"839:7:29"},{"name":"headStart","nativeSrc":"848:9:29","nodeType":"YulIdentifier","src":"848:9:29"}],"functionName":{"name":"sub","nativeSrc":"835:3:29","nodeType":"YulIdentifier","src":"835:3:29"},"nativeSrc":"835:23:29","nodeType":"YulFunctionCall","src":"835:23:29"},{"kind":"number","nativeSrc":"860:2:29","nodeType":"YulLiteral","src":"860:2:29","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"831:3:29","nodeType":"YulIdentifier","src":"831:3:29"},"nativeSrc":"831:32:29","nodeType":"YulFunctionCall","src":"831:32:29"},"nativeSrc":"828:52:29","nodeType":"YulIf","src":"828:52:29"},{"nativeSrc":"889:37:29","nodeType":"YulVariableDeclaration","src":"889:37:29","value":{"arguments":[{"name":"headStart","nativeSrc":"916:9:29","nodeType":"YulIdentifier","src":"916:9:29"}],"functionName":{"name":"calldataload","nativeSrc":"903:12:29","nodeType":"YulIdentifier","src":"903:12:29"},"nativeSrc":"903:23:29","nodeType":"YulFunctionCall","src":"903:23:29"},"variables":[{"name":"offset","nativeSrc":"893:6:29","nodeType":"YulTypedName","src":"893:6:29","type":""}]},{"body":{"nativeSrc":"969:16:29","nodeType":"YulBlock","src":"969:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"978:1:29","nodeType":"YulLiteral","src":"978:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"981:1:29","nodeType":"YulLiteral","src":"981:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"971:6:29","nodeType":"YulIdentifier","src":"971:6:29"},"nativeSrc":"971:12:29","nodeType":"YulFunctionCall","src":"971:12:29"},"nativeSrc":"971:12:29","nodeType":"YulExpressionStatement","src":"971:12:29"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"941:6:29","nodeType":"YulIdentifier","src":"941:6:29"},{"kind":"number","nativeSrc":"949:18:29","nodeType":"YulLiteral","src":"949:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"938:2:29","nodeType":"YulIdentifier","src":"938:2:29"},"nativeSrc":"938:30:29","nodeType":"YulFunctionCall","src":"938:30:29"},"nativeSrc":"935:50:29","nodeType":"YulIf","src":"935:50:29"},{"nativeSrc":"994:32:29","nodeType":"YulVariableDeclaration","src":"994:32:29","value":{"arguments":[{"name":"headStart","nativeSrc":"1008:9:29","nodeType":"YulIdentifier","src":"1008:9:29"},{"name":"offset","nativeSrc":"1019:6:29","nodeType":"YulIdentifier","src":"1019:6:29"}],"functionName":{"name":"add","nativeSrc":"1004:3:29","nodeType":"YulIdentifier","src":"1004:3:29"},"nativeSrc":"1004:22:29","nodeType":"YulFunctionCall","src":"1004:22:29"},"variables":[{"name":"_1","nativeSrc":"998:2:29","nodeType":"YulTypedName","src":"998:2:29","type":""}]},{"body":{"nativeSrc":"1065:16:29","nodeType":"YulBlock","src":"1065:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1074:1:29","nodeType":"YulLiteral","src":"1074:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"1077:1:29","nodeType":"YulLiteral","src":"1077:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1067:6:29","nodeType":"YulIdentifier","src":"1067:6:29"},"nativeSrc":"1067:12:29","nodeType":"YulFunctionCall","src":"1067:12:29"},"nativeSrc":"1067:12:29","nodeType":"YulExpressionStatement","src":"1067:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1046:7:29","nodeType":"YulIdentifier","src":"1046:7:29"},{"name":"_1","nativeSrc":"1055:2:29","nodeType":"YulIdentifier","src":"1055:2:29"}],"functionName":{"name":"sub","nativeSrc":"1042:3:29","nodeType":"YulIdentifier","src":"1042:3:29"},"nativeSrc":"1042:16:29","nodeType":"YulFunctionCall","src":"1042:16:29"},{"kind":"number","nativeSrc":"1060:3:29","nodeType":"YulLiteral","src":"1060:3:29","type":"","value":"288"}],"functionName":{"name":"slt","nativeSrc":"1038:3:29","nodeType":"YulIdentifier","src":"1038:3:29"},"nativeSrc":"1038:26:29","nodeType":"YulFunctionCall","src":"1038:26:29"},"nativeSrc":"1035:46:29","nodeType":"YulIf","src":"1035:46:29"},{"nativeSrc":"1090:12:29","nodeType":"YulAssignment","src":"1090:12:29","value":{"name":"_1","nativeSrc":"1100:2:29","nodeType":"YulIdentifier","src":"1100:2:29"},"variableNames":[{"name":"value0","nativeSrc":"1090:6:29","nodeType":"YulIdentifier","src":"1090:6:29"}]},{"nativeSrc":"1111:42:29","nodeType":"YulAssignment","src":"1111:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1138:9:29","nodeType":"YulIdentifier","src":"1138:9:29"},{"kind":"number","nativeSrc":"1149:2:29","nodeType":"YulLiteral","src":"1149:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1134:3:29","nodeType":"YulIdentifier","src":"1134:3:29"},"nativeSrc":"1134:18:29","nodeType":"YulFunctionCall","src":"1134:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"1121:12:29","nodeType":"YulIdentifier","src":"1121:12:29"},"nativeSrc":"1121:32:29","nodeType":"YulFunctionCall","src":"1121:32:29"},"variableNames":[{"name":"value1","nativeSrc":"1111:6:29","nodeType":"YulIdentifier","src":"1111:6:29"}]},{"nativeSrc":"1162:42:29","nodeType":"YulAssignment","src":"1162:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1189:9:29","nodeType":"YulIdentifier","src":"1189:9:29"},{"kind":"number","nativeSrc":"1200:2:29","nodeType":"YulLiteral","src":"1200:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1185:3:29","nodeType":"YulIdentifier","src":"1185:3:29"},"nativeSrc":"1185:18:29","nodeType":"YulFunctionCall","src":"1185:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"1172:12:29","nodeType":"YulIdentifier","src":"1172:12:29"},"nativeSrc":"1172:32:29","nodeType":"YulFunctionCall","src":"1172:32:29"},"variableNames":[{"name":"value2","nativeSrc":"1162:6:29","nodeType":"YulIdentifier","src":"1162:6:29"}]}]},"name":"abi_decode_tuple_t_struct$_PackedUserOperation_$399_calldata_ptrt_bytes32t_uint256","nativeSrc":"676:534:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"768:9:29","nodeType":"YulTypedName","src":"768:9:29","type":""},{"name":"dataEnd","nativeSrc":"779:7:29","nodeType":"YulTypedName","src":"779:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"791:6:29","nodeType":"YulTypedName","src":"791:6:29","type":""},{"name":"value1","nativeSrc":"799:6:29","nodeType":"YulTypedName","src":"799:6:29","type":""},{"name":"value2","nativeSrc":"807:6:29","nodeType":"YulTypedName","src":"807:6:29","type":""}],"src":"676:534:29"},{"body":{"nativeSrc":"1362:455:29","nodeType":"YulBlock","src":"1362:455:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1379:9:29","nodeType":"YulIdentifier","src":"1379:9:29"},{"kind":"number","nativeSrc":"1390:2:29","nodeType":"YulLiteral","src":"1390:2:29","type":"","value":"64"}],"functionName":{"name":"mstore","nativeSrc":"1372:6:29","nodeType":"YulIdentifier","src":"1372:6:29"},"nativeSrc":"1372:21:29","nodeType":"YulFunctionCall","src":"1372:21:29"},"nativeSrc":"1372:21:29","nodeType":"YulExpressionStatement","src":"1372:21:29"},{"nativeSrc":"1402:27:29","nodeType":"YulVariableDeclaration","src":"1402:27:29","value":{"arguments":[{"name":"value0","nativeSrc":"1422:6:29","nodeType":"YulIdentifier","src":"1422:6:29"}],"functionName":{"name":"mload","nativeSrc":"1416:5:29","nodeType":"YulIdentifier","src":"1416:5:29"},"nativeSrc":"1416:13:29","nodeType":"YulFunctionCall","src":"1416:13:29"},"variables":[{"name":"length","nativeSrc":"1406:6:29","nodeType":"YulTypedName","src":"1406:6:29","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1449:9:29","nodeType":"YulIdentifier","src":"1449:9:29"},{"kind":"number","nativeSrc":"1460:2:29","nodeType":"YulLiteral","src":"1460:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"1445:3:29","nodeType":"YulIdentifier","src":"1445:3:29"},"nativeSrc":"1445:18:29","nodeType":"YulFunctionCall","src":"1445:18:29"},{"name":"length","nativeSrc":"1465:6:29","nodeType":"YulIdentifier","src":"1465:6:29"}],"functionName":{"name":"mstore","nativeSrc":"1438:6:29","nodeType":"YulIdentifier","src":"1438:6:29"},"nativeSrc":"1438:34:29","nodeType":"YulFunctionCall","src":"1438:34:29"},"nativeSrc":"1438:34:29","nodeType":"YulExpressionStatement","src":"1438:34:29"},{"nativeSrc":"1481:10:29","nodeType":"YulVariableDeclaration","src":"1481:10:29","value":{"kind":"number","nativeSrc":"1490:1:29","nodeType":"YulLiteral","src":"1490:1:29","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1485:1:29","nodeType":"YulTypedName","src":"1485:1:29","type":""}]},{"body":{"nativeSrc":"1552:92:29","nodeType":"YulBlock","src":"1552:92:29","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1581:9:29","nodeType":"YulIdentifier","src":"1581:9:29"},{"name":"i","nativeSrc":"1592:1:29","nodeType":"YulIdentifier","src":"1592:1:29"}],"functionName":{"name":"add","nativeSrc":"1577:3:29","nodeType":"YulIdentifier","src":"1577:3:29"},"nativeSrc":"1577:17:29","nodeType":"YulFunctionCall","src":"1577:17:29"},{"kind":"number","nativeSrc":"1596:2:29","nodeType":"YulLiteral","src":"1596:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1573:3:29","nodeType":"YulIdentifier","src":"1573:3:29"},"nativeSrc":"1573:26:29","nodeType":"YulFunctionCall","src":"1573:26:29"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"1615:6:29","nodeType":"YulIdentifier","src":"1615:6:29"},{"name":"i","nativeSrc":"1623:1:29","nodeType":"YulIdentifier","src":"1623:1:29"}],"functionName":{"name":"add","nativeSrc":"1611:3:29","nodeType":"YulIdentifier","src":"1611:3:29"},"nativeSrc":"1611:14:29","nodeType":"YulFunctionCall","src":"1611:14:29"},{"kind":"number","nativeSrc":"1627:4:29","nodeType":"YulLiteral","src":"1627:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1607:3:29","nodeType":"YulIdentifier","src":"1607:3:29"},"nativeSrc":"1607:25:29","nodeType":"YulFunctionCall","src":"1607:25:29"}],"functionName":{"name":"mload","nativeSrc":"1601:5:29","nodeType":"YulIdentifier","src":"1601:5:29"},"nativeSrc":"1601:32:29","nodeType":"YulFunctionCall","src":"1601:32:29"}],"functionName":{"name":"mstore","nativeSrc":"1566:6:29","nodeType":"YulIdentifier","src":"1566:6:29"},"nativeSrc":"1566:68:29","nodeType":"YulFunctionCall","src":"1566:68:29"},"nativeSrc":"1566:68:29","nodeType":"YulExpressionStatement","src":"1566:68:29"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1511:1:29","nodeType":"YulIdentifier","src":"1511:1:29"},{"name":"length","nativeSrc":"1514:6:29","nodeType":"YulIdentifier","src":"1514:6:29"}],"functionName":{"name":"lt","nativeSrc":"1508:2:29","nodeType":"YulIdentifier","src":"1508:2:29"},"nativeSrc":"1508:13:29","nodeType":"YulFunctionCall","src":"1508:13:29"},"nativeSrc":"1500:144:29","nodeType":"YulForLoop","post":{"nativeSrc":"1522:21:29","nodeType":"YulBlock","src":"1522:21:29","statements":[{"nativeSrc":"1524:17:29","nodeType":"YulAssignment","src":"1524:17:29","value":{"arguments":[{"name":"i","nativeSrc":"1533:1:29","nodeType":"YulIdentifier","src":"1533:1:29"},{"kind":"number","nativeSrc":"1536:4:29","nodeType":"YulLiteral","src":"1536:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1529:3:29","nodeType":"YulIdentifier","src":"1529:3:29"},"nativeSrc":"1529:12:29","nodeType":"YulFunctionCall","src":"1529:12:29"},"variableNames":[{"name":"i","nativeSrc":"1524:1:29","nodeType":"YulIdentifier","src":"1524:1:29"}]}]},"pre":{"nativeSrc":"1504:3:29","nodeType":"YulBlock","src":"1504:3:29","statements":[]},"src":"1500:144:29"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1668:9:29","nodeType":"YulIdentifier","src":"1668:9:29"},{"name":"length","nativeSrc":"1679:6:29","nodeType":"YulIdentifier","src":"1679:6:29"}],"functionName":{"name":"add","nativeSrc":"1664:3:29","nodeType":"YulIdentifier","src":"1664:3:29"},"nativeSrc":"1664:22:29","nodeType":"YulFunctionCall","src":"1664:22:29"},{"kind":"number","nativeSrc":"1688:2:29","nodeType":"YulLiteral","src":"1688:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1660:3:29","nodeType":"YulIdentifier","src":"1660:3:29"},"nativeSrc":"1660:31:29","nodeType":"YulFunctionCall","src":"1660:31:29"},{"kind":"number","nativeSrc":"1693:1:29","nodeType":"YulLiteral","src":"1693:1:29","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"1653:6:29","nodeType":"YulIdentifier","src":"1653:6:29"},"nativeSrc":"1653:42:29","nodeType":"YulFunctionCall","src":"1653:42:29"},"nativeSrc":"1653:42:29","nodeType":"YulExpressionStatement","src":"1653:42:29"},{"nativeSrc":"1704:62:29","nodeType":"YulAssignment","src":"1704:62:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1720:9:29","nodeType":"YulIdentifier","src":"1720:9:29"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"1739:6:29","nodeType":"YulIdentifier","src":"1739:6:29"},{"kind":"number","nativeSrc":"1747:2:29","nodeType":"YulLiteral","src":"1747:2:29","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1735:3:29","nodeType":"YulIdentifier","src":"1735:3:29"},"nativeSrc":"1735:15:29","nodeType":"YulFunctionCall","src":"1735:15:29"},{"arguments":[{"kind":"number","nativeSrc":"1756:2:29","nodeType":"YulLiteral","src":"1756:2:29","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1752:3:29","nodeType":"YulIdentifier","src":"1752:3:29"},"nativeSrc":"1752:7:29","nodeType":"YulFunctionCall","src":"1752:7:29"}],"functionName":{"name":"and","nativeSrc":"1731:3:29","nodeType":"YulIdentifier","src":"1731:3:29"},"nativeSrc":"1731:29:29","nodeType":"YulFunctionCall","src":"1731:29:29"}],"functionName":{"name":"add","nativeSrc":"1716:3:29","nodeType":"YulIdentifier","src":"1716:3:29"},"nativeSrc":"1716:45:29","nodeType":"YulFunctionCall","src":"1716:45:29"},{"kind":"number","nativeSrc":"1763:2:29","nodeType":"YulLiteral","src":"1763:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"1712:3:29","nodeType":"YulIdentifier","src":"1712:3:29"},"nativeSrc":"1712:54:29","nodeType":"YulFunctionCall","src":"1712:54:29"},"variableNames":[{"name":"tail","nativeSrc":"1704:4:29","nodeType":"YulIdentifier","src":"1704:4:29"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1786:9:29","nodeType":"YulIdentifier","src":"1786:9:29"},{"kind":"number","nativeSrc":"1797:4:29","nodeType":"YulLiteral","src":"1797:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1782:3:29","nodeType":"YulIdentifier","src":"1782:3:29"},"nativeSrc":"1782:20:29","nodeType":"YulFunctionCall","src":"1782:20:29"},{"name":"value1","nativeSrc":"1804:6:29","nodeType":"YulIdentifier","src":"1804:6:29"}],"functionName":{"name":"mstore","nativeSrc":"1775:6:29","nodeType":"YulIdentifier","src":"1775:6:29"},"nativeSrc":"1775:36:29","nodeType":"YulFunctionCall","src":"1775:36:29"},"nativeSrc":"1775:36:29","nodeType":"YulExpressionStatement","src":"1775:36:29"}]},"name":"abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed","nativeSrc":"1215:602:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1323:9:29","nodeType":"YulTypedName","src":"1323:9:29","type":""},{"name":"value1","nativeSrc":"1334:6:29","nodeType":"YulTypedName","src":"1334:6:29","type":""},{"name":"value0","nativeSrc":"1342:6:29","nodeType":"YulTypedName","src":"1342:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1353:4:29","nodeType":"YulTypedName","src":"1353:4:29","type":""}],"src":"1215:602:29"},{"body":{"nativeSrc":"1917:92:29","nodeType":"YulBlock","src":"1917:92:29","statements":[{"nativeSrc":"1927:26:29","nodeType":"YulAssignment","src":"1927:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"1939:9:29","nodeType":"YulIdentifier","src":"1939:9:29"},{"kind":"number","nativeSrc":"1950:2:29","nodeType":"YulLiteral","src":"1950:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1935:3:29","nodeType":"YulIdentifier","src":"1935:3:29"},"nativeSrc":"1935:18:29","nodeType":"YulFunctionCall","src":"1935:18:29"},"variableNames":[{"name":"tail","nativeSrc":"1927:4:29","nodeType":"YulIdentifier","src":"1927:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1969:9:29","nodeType":"YulIdentifier","src":"1969:9:29"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"1994:6:29","nodeType":"YulIdentifier","src":"1994:6:29"}],"functionName":{"name":"iszero","nativeSrc":"1987:6:29","nodeType":"YulIdentifier","src":"1987:6:29"},"nativeSrc":"1987:14:29","nodeType":"YulFunctionCall","src":"1987:14:29"}],"functionName":{"name":"iszero","nativeSrc":"1980:6:29","nodeType":"YulIdentifier","src":"1980:6:29"},"nativeSrc":"1980:22:29","nodeType":"YulFunctionCall","src":"1980:22:29"}],"functionName":{"name":"mstore","nativeSrc":"1962:6:29","nodeType":"YulIdentifier","src":"1962:6:29"},"nativeSrc":"1962:41:29","nodeType":"YulFunctionCall","src":"1962:41:29"},"nativeSrc":"1962:41:29","nodeType":"YulExpressionStatement","src":"1962:41:29"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1822:187:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1886:9:29","nodeType":"YulTypedName","src":"1886:9:29","type":""},{"name":"value0","nativeSrc":"1897:6:29","nodeType":"YulTypedName","src":"1897:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1908:4:29","nodeType":"YulTypedName","src":"1908:4:29","type":""}],"src":"1822:187:29"},{"body":{"nativeSrc":"2084:185:29","nodeType":"YulBlock","src":"2084:185:29","statements":[{"body":{"nativeSrc":"2130:16:29","nodeType":"YulBlock","src":"2130:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2139:1:29","nodeType":"YulLiteral","src":"2139:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"2142:1:29","nodeType":"YulLiteral","src":"2142:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2132:6:29","nodeType":"YulIdentifier","src":"2132:6:29"},"nativeSrc":"2132:12:29","nodeType":"YulFunctionCall","src":"2132:12:29"},"nativeSrc":"2132:12:29","nodeType":"YulExpressionStatement","src":"2132:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2105:7:29","nodeType":"YulIdentifier","src":"2105:7:29"},{"name":"headStart","nativeSrc":"2114:9:29","nodeType":"YulIdentifier","src":"2114:9:29"}],"functionName":{"name":"sub","nativeSrc":"2101:3:29","nodeType":"YulIdentifier","src":"2101:3:29"},"nativeSrc":"2101:23:29","nodeType":"YulFunctionCall","src":"2101:23:29"},{"kind":"number","nativeSrc":"2126:2:29","nodeType":"YulLiteral","src":"2126:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2097:3:29","nodeType":"YulIdentifier","src":"2097:3:29"},"nativeSrc":"2097:32:29","nodeType":"YulFunctionCall","src":"2097:32:29"},"nativeSrc":"2094:52:29","nodeType":"YulIf","src":"2094:52:29"},{"nativeSrc":"2155:36:29","nodeType":"YulVariableDeclaration","src":"2155:36:29","value":{"arguments":[{"name":"headStart","nativeSrc":"2181:9:29","nodeType":"YulIdentifier","src":"2181:9:29"}],"functionName":{"name":"calldataload","nativeSrc":"2168:12:29","nodeType":"YulIdentifier","src":"2168:12:29"},"nativeSrc":"2168:23:29","nodeType":"YulFunctionCall","src":"2168:23:29"},"variables":[{"name":"value","nativeSrc":"2159:5:29","nodeType":"YulTypedName","src":"2159:5:29","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2233:5:29","nodeType":"YulIdentifier","src":"2233:5:29"}],"functionName":{"name":"validator_revert_address_payable","nativeSrc":"2200:32:29","nodeType":"YulIdentifier","src":"2200:32:29"},"nativeSrc":"2200:39:29","nodeType":"YulFunctionCall","src":"2200:39:29"},"nativeSrc":"2200:39:29","nodeType":"YulExpressionStatement","src":"2200:39:29"},{"nativeSrc":"2248:15:29","nodeType":"YulAssignment","src":"2248:15:29","value":{"name":"value","nativeSrc":"2258:5:29","nodeType":"YulIdentifier","src":"2258:5:29"},"variableNames":[{"name":"value0","nativeSrc":"2248:6:29","nodeType":"YulIdentifier","src":"2248:6:29"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"2014:255:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2050:9:29","nodeType":"YulTypedName","src":"2050:9:29","type":""},{"name":"dataEnd","nativeSrc":"2061:7:29","nodeType":"YulTypedName","src":"2061:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2073:6:29","nodeType":"YulTypedName","src":"2073:6:29","type":""}],"src":"2014:255:29"},{"body":{"nativeSrc":"2428:732:29","nodeType":"YulBlock","src":"2428:732:29","statements":[{"body":{"nativeSrc":"2475:16:29","nodeType":"YulBlock","src":"2475:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2484:1:29","nodeType":"YulLiteral","src":"2484:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"2487:1:29","nodeType":"YulLiteral","src":"2487:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2477:6:29","nodeType":"YulIdentifier","src":"2477:6:29"},"nativeSrc":"2477:12:29","nodeType":"YulFunctionCall","src":"2477:12:29"},"nativeSrc":"2477:12:29","nodeType":"YulExpressionStatement","src":"2477:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2449:7:29","nodeType":"YulIdentifier","src":"2449:7:29"},{"name":"headStart","nativeSrc":"2458:9:29","nodeType":"YulIdentifier","src":"2458:9:29"}],"functionName":{"name":"sub","nativeSrc":"2445:3:29","nodeType":"YulIdentifier","src":"2445:3:29"},"nativeSrc":"2445:23:29","nodeType":"YulFunctionCall","src":"2445:23:29"},{"kind":"number","nativeSrc":"2470:3:29","nodeType":"YulLiteral","src":"2470:3:29","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"2441:3:29","nodeType":"YulIdentifier","src":"2441:3:29"},"nativeSrc":"2441:33:29","nodeType":"YulFunctionCall","src":"2441:33:29"},"nativeSrc":"2438:53:29","nodeType":"YulIf","src":"2438:53:29"},{"nativeSrc":"2500:36:29","nodeType":"YulVariableDeclaration","src":"2500:36:29","value":{"arguments":[{"name":"headStart","nativeSrc":"2526:9:29","nodeType":"YulIdentifier","src":"2526:9:29"}],"functionName":{"name":"calldataload","nativeSrc":"2513:12:29","nodeType":"YulIdentifier","src":"2513:12:29"},"nativeSrc":"2513:23:29","nodeType":"YulFunctionCall","src":"2513:23:29"},"variables":[{"name":"value","nativeSrc":"2504:5:29","nodeType":"YulTypedName","src":"2504:5:29","type":""}]},{"body":{"nativeSrc":"2569:16:29","nodeType":"YulBlock","src":"2569:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2578:1:29","nodeType":"YulLiteral","src":"2578:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"2581:1:29","nodeType":"YulLiteral","src":"2581:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2571:6:29","nodeType":"YulIdentifier","src":"2571:6:29"},"nativeSrc":"2571:12:29","nodeType":"YulFunctionCall","src":"2571:12:29"},"nativeSrc":"2571:12:29","nodeType":"YulExpressionStatement","src":"2571:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2558:5:29","nodeType":"YulIdentifier","src":"2558:5:29"},{"kind":"number","nativeSrc":"2565:1:29","nodeType":"YulLiteral","src":"2565:1:29","type":"","value":"3"}],"functionName":{"name":"lt","nativeSrc":"2555:2:29","nodeType":"YulIdentifier","src":"2555:2:29"},"nativeSrc":"2555:12:29","nodeType":"YulFunctionCall","src":"2555:12:29"}],"functionName":{"name":"iszero","nativeSrc":"2548:6:29","nodeType":"YulIdentifier","src":"2548:6:29"},"nativeSrc":"2548:20:29","nodeType":"YulFunctionCall","src":"2548:20:29"},"nativeSrc":"2545:40:29","nodeType":"YulIf","src":"2545:40:29"},{"nativeSrc":"2594:15:29","nodeType":"YulAssignment","src":"2594:15:29","value":{"name":"value","nativeSrc":"2604:5:29","nodeType":"YulIdentifier","src":"2604:5:29"},"variableNames":[{"name":"value0","nativeSrc":"2594:6:29","nodeType":"YulIdentifier","src":"2594:6:29"}]},{"nativeSrc":"2618:46:29","nodeType":"YulVariableDeclaration","src":"2618:46:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2649:9:29","nodeType":"YulIdentifier","src":"2649:9:29"},{"kind":"number","nativeSrc":"2660:2:29","nodeType":"YulLiteral","src":"2660:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2645:3:29","nodeType":"YulIdentifier","src":"2645:3:29"},"nativeSrc":"2645:18:29","nodeType":"YulFunctionCall","src":"2645:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"2632:12:29","nodeType":"YulIdentifier","src":"2632:12:29"},"nativeSrc":"2632:32:29","nodeType":"YulFunctionCall","src":"2632:32:29"},"variables":[{"name":"offset","nativeSrc":"2622:6:29","nodeType":"YulTypedName","src":"2622:6:29","type":""}]},{"nativeSrc":"2673:28:29","nodeType":"YulVariableDeclaration","src":"2673:28:29","value":{"kind":"number","nativeSrc":"2683:18:29","nodeType":"YulLiteral","src":"2683:18:29","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"2677:2:29","nodeType":"YulTypedName","src":"2677:2:29","type":""}]},{"body":{"nativeSrc":"2728:16:29","nodeType":"YulBlock","src":"2728:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2737:1:29","nodeType":"YulLiteral","src":"2737:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"2740:1:29","nodeType":"YulLiteral","src":"2740:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2730:6:29","nodeType":"YulIdentifier","src":"2730:6:29"},"nativeSrc":"2730:12:29","nodeType":"YulFunctionCall","src":"2730:12:29"},"nativeSrc":"2730:12:29","nodeType":"YulExpressionStatement","src":"2730:12:29"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"2716:6:29","nodeType":"YulIdentifier","src":"2716:6:29"},{"name":"_1","nativeSrc":"2724:2:29","nodeType":"YulIdentifier","src":"2724:2:29"}],"functionName":{"name":"gt","nativeSrc":"2713:2:29","nodeType":"YulIdentifier","src":"2713:2:29"},"nativeSrc":"2713:14:29","nodeType":"YulFunctionCall","src":"2713:14:29"},"nativeSrc":"2710:34:29","nodeType":"YulIf","src":"2710:34:29"},{"nativeSrc":"2753:32:29","nodeType":"YulVariableDeclaration","src":"2753:32:29","value":{"arguments":[{"name":"headStart","nativeSrc":"2767:9:29","nodeType":"YulIdentifier","src":"2767:9:29"},{"name":"offset","nativeSrc":"2778:6:29","nodeType":"YulIdentifier","src":"2778:6:29"}],"functionName":{"name":"add","nativeSrc":"2763:3:29","nodeType":"YulIdentifier","src":"2763:3:29"},"nativeSrc":"2763:22:29","nodeType":"YulFunctionCall","src":"2763:22:29"},"variables":[{"name":"_2","nativeSrc":"2757:2:29","nodeType":"YulTypedName","src":"2757:2:29","type":""}]},{"body":{"nativeSrc":"2833:16:29","nodeType":"YulBlock","src":"2833:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2842:1:29","nodeType":"YulLiteral","src":"2842:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"2845:1:29","nodeType":"YulLiteral","src":"2845:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2835:6:29","nodeType":"YulIdentifier","src":"2835:6:29"},"nativeSrc":"2835:12:29","nodeType":"YulFunctionCall","src":"2835:12:29"},"nativeSrc":"2835:12:29","nodeType":"YulExpressionStatement","src":"2835:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"2812:2:29","nodeType":"YulIdentifier","src":"2812:2:29"},{"kind":"number","nativeSrc":"2816:4:29","nodeType":"YulLiteral","src":"2816:4:29","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"2808:3:29","nodeType":"YulIdentifier","src":"2808:3:29"},"nativeSrc":"2808:13:29","nodeType":"YulFunctionCall","src":"2808:13:29"},{"name":"dataEnd","nativeSrc":"2823:7:29","nodeType":"YulIdentifier","src":"2823:7:29"}],"functionName":{"name":"slt","nativeSrc":"2804:3:29","nodeType":"YulIdentifier","src":"2804:3:29"},"nativeSrc":"2804:27:29","nodeType":"YulFunctionCall","src":"2804:27:29"}],"functionName":{"name":"iszero","nativeSrc":"2797:6:29","nodeType":"YulIdentifier","src":"2797:6:29"},"nativeSrc":"2797:35:29","nodeType":"YulFunctionCall","src":"2797:35:29"},"nativeSrc":"2794:55:29","nodeType":"YulIf","src":"2794:55:29"},{"nativeSrc":"2858:30:29","nodeType":"YulVariableDeclaration","src":"2858:30:29","value":{"arguments":[{"name":"_2","nativeSrc":"2885:2:29","nodeType":"YulIdentifier","src":"2885:2:29"}],"functionName":{"name":"calldataload","nativeSrc":"2872:12:29","nodeType":"YulIdentifier","src":"2872:12:29"},"nativeSrc":"2872:16:29","nodeType":"YulFunctionCall","src":"2872:16:29"},"variables":[{"name":"length","nativeSrc":"2862:6:29","nodeType":"YulTypedName","src":"2862:6:29","type":""}]},{"body":{"nativeSrc":"2915:16:29","nodeType":"YulBlock","src":"2915:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2924:1:29","nodeType":"YulLiteral","src":"2924:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"2927:1:29","nodeType":"YulLiteral","src":"2927:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2917:6:29","nodeType":"YulIdentifier","src":"2917:6:29"},"nativeSrc":"2917:12:29","nodeType":"YulFunctionCall","src":"2917:12:29"},"nativeSrc":"2917:12:29","nodeType":"YulExpressionStatement","src":"2917:12:29"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"2903:6:29","nodeType":"YulIdentifier","src":"2903:6:29"},{"name":"_1","nativeSrc":"2911:2:29","nodeType":"YulIdentifier","src":"2911:2:29"}],"functionName":{"name":"gt","nativeSrc":"2900:2:29","nodeType":"YulIdentifier","src":"2900:2:29"},"nativeSrc":"2900:14:29","nodeType":"YulFunctionCall","src":"2900:14:29"},"nativeSrc":"2897:34:29","nodeType":"YulIf","src":"2897:34:29"},{"body":{"nativeSrc":"2981:16:29","nodeType":"YulBlock","src":"2981:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2990:1:29","nodeType":"YulLiteral","src":"2990:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"2993:1:29","nodeType":"YulLiteral","src":"2993:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2983:6:29","nodeType":"YulIdentifier","src":"2983:6:29"},"nativeSrc":"2983:12:29","nodeType":"YulFunctionCall","src":"2983:12:29"},"nativeSrc":"2983:12:29","nodeType":"YulExpressionStatement","src":"2983:12:29"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nativeSrc":"2954:2:29","nodeType":"YulIdentifier","src":"2954:2:29"},{"name":"length","nativeSrc":"2958:6:29","nodeType":"YulIdentifier","src":"2958:6:29"}],"functionName":{"name":"add","nativeSrc":"2950:3:29","nodeType":"YulIdentifier","src":"2950:3:29"},"nativeSrc":"2950:15:29","nodeType":"YulFunctionCall","src":"2950:15:29"},{"kind":"number","nativeSrc":"2967:2:29","nodeType":"YulLiteral","src":"2967:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2946:3:29","nodeType":"YulIdentifier","src":"2946:3:29"},"nativeSrc":"2946:24:29","nodeType":"YulFunctionCall","src":"2946:24:29"},{"name":"dataEnd","nativeSrc":"2972:7:29","nodeType":"YulIdentifier","src":"2972:7:29"}],"functionName":{"name":"gt","nativeSrc":"2943:2:29","nodeType":"YulIdentifier","src":"2943:2:29"},"nativeSrc":"2943:37:29","nodeType":"YulFunctionCall","src":"2943:37:29"},"nativeSrc":"2940:57:29","nodeType":"YulIf","src":"2940:57:29"},{"nativeSrc":"3006:21:29","nodeType":"YulAssignment","src":"3006:21:29","value":{"arguments":[{"name":"_2","nativeSrc":"3020:2:29","nodeType":"YulIdentifier","src":"3020:2:29"},{"kind":"number","nativeSrc":"3024:2:29","nodeType":"YulLiteral","src":"3024:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3016:3:29","nodeType":"YulIdentifier","src":"3016:3:29"},"nativeSrc":"3016:11:29","nodeType":"YulFunctionCall","src":"3016:11:29"},"variableNames":[{"name":"value1","nativeSrc":"3006:6:29","nodeType":"YulIdentifier","src":"3006:6:29"}]},{"nativeSrc":"3036:16:29","nodeType":"YulAssignment","src":"3036:16:29","value":{"name":"length","nativeSrc":"3046:6:29","nodeType":"YulIdentifier","src":"3046:6:29"},"variableNames":[{"name":"value2","nativeSrc":"3036:6:29","nodeType":"YulIdentifier","src":"3036:6:29"}]},{"nativeSrc":"3061:42:29","nodeType":"YulAssignment","src":"3061:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3088:9:29","nodeType":"YulIdentifier","src":"3088:9:29"},{"kind":"number","nativeSrc":"3099:2:29","nodeType":"YulLiteral","src":"3099:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3084:3:29","nodeType":"YulIdentifier","src":"3084:3:29"},"nativeSrc":"3084:18:29","nodeType":"YulFunctionCall","src":"3084:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"3071:12:29","nodeType":"YulIdentifier","src":"3071:12:29"},"nativeSrc":"3071:32:29","nodeType":"YulFunctionCall","src":"3071:32:29"},"variableNames":[{"name":"value3","nativeSrc":"3061:6:29","nodeType":"YulIdentifier","src":"3061:6:29"}]},{"nativeSrc":"3112:42:29","nodeType":"YulAssignment","src":"3112:42:29","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3139:9:29","nodeType":"YulIdentifier","src":"3139:9:29"},{"kind":"number","nativeSrc":"3150:2:29","nodeType":"YulLiteral","src":"3150:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"3135:3:29","nodeType":"YulIdentifier","src":"3135:3:29"},"nativeSrc":"3135:18:29","nodeType":"YulFunctionCall","src":"3135:18:29"}],"functionName":{"name":"calldataload","nativeSrc":"3122:12:29","nodeType":"YulIdentifier","src":"3122:12:29"},"nativeSrc":"3122:32:29","nodeType":"YulFunctionCall","src":"3122:32:29"},"variableNames":[{"name":"value4","nativeSrc":"3112:6:29","nodeType":"YulIdentifier","src":"3112:6:29"}]}]},"name":"abi_decode_tuple_t_enum$_PostOpMode_$244t_bytes_calldata_ptrt_uint256t_uint256","nativeSrc":"2274:886:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2362:9:29","nodeType":"YulTypedName","src":"2362:9:29","type":""},{"name":"dataEnd","nativeSrc":"2373:7:29","nodeType":"YulTypedName","src":"2373:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2385:6:29","nodeType":"YulTypedName","src":"2385:6:29","type":""},{"name":"value1","nativeSrc":"2393:6:29","nodeType":"YulTypedName","src":"2393:6:29","type":""},{"name":"value2","nativeSrc":"2401:6:29","nodeType":"YulTypedName","src":"2401:6:29","type":""},{"name":"value3","nativeSrc":"2409:6:29","nodeType":"YulTypedName","src":"2409:6:29","type":""},{"name":"value4","nativeSrc":"2417:6:29","nodeType":"YulTypedName","src":"2417:6:29","type":""}],"src":"2274:886:29"},{"body":{"nativeSrc":"3266:102:29","nodeType":"YulBlock","src":"3266:102:29","statements":[{"nativeSrc":"3276:26:29","nodeType":"YulAssignment","src":"3276:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"3288:9:29","nodeType":"YulIdentifier","src":"3288:9:29"},{"kind":"number","nativeSrc":"3299:2:29","nodeType":"YulLiteral","src":"3299:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3284:3:29","nodeType":"YulIdentifier","src":"3284:3:29"},"nativeSrc":"3284:18:29","nodeType":"YulFunctionCall","src":"3284:18:29"},"variableNames":[{"name":"tail","nativeSrc":"3276:4:29","nodeType":"YulIdentifier","src":"3276:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3318:9:29","nodeType":"YulIdentifier","src":"3318:9:29"},{"arguments":[{"name":"value0","nativeSrc":"3333:6:29","nodeType":"YulIdentifier","src":"3333:6:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3349:3:29","nodeType":"YulLiteral","src":"3349:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"3354:1:29","nodeType":"YulLiteral","src":"3354:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3345:3:29","nodeType":"YulIdentifier","src":"3345:3:29"},"nativeSrc":"3345:11:29","nodeType":"YulFunctionCall","src":"3345:11:29"},{"kind":"number","nativeSrc":"3358:1:29","nodeType":"YulLiteral","src":"3358:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3341:3:29","nodeType":"YulIdentifier","src":"3341:3:29"},"nativeSrc":"3341:19:29","nodeType":"YulFunctionCall","src":"3341:19:29"}],"functionName":{"name":"and","nativeSrc":"3329:3:29","nodeType":"YulIdentifier","src":"3329:3:29"},"nativeSrc":"3329:32:29","nodeType":"YulFunctionCall","src":"3329:32:29"}],"functionName":{"name":"mstore","nativeSrc":"3311:6:29","nodeType":"YulIdentifier","src":"3311:6:29"},"nativeSrc":"3311:51:29","nodeType":"YulFunctionCall","src":"3311:51:29"},"nativeSrc":"3311:51:29","nodeType":"YulExpressionStatement","src":"3311:51:29"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"3165:203:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3235:9:29","nodeType":"YulTypedName","src":"3235:9:29","type":""},{"name":"value0","nativeSrc":"3246:6:29","nodeType":"YulTypedName","src":"3246:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3257:4:29","nodeType":"YulTypedName","src":"3257:4:29","type":""}],"src":"3165:203:29"},{"body":{"nativeSrc":"3493:102:29","nodeType":"YulBlock","src":"3493:102:29","statements":[{"nativeSrc":"3503:26:29","nodeType":"YulAssignment","src":"3503:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"3515:9:29","nodeType":"YulIdentifier","src":"3515:9:29"},{"kind":"number","nativeSrc":"3526:2:29","nodeType":"YulLiteral","src":"3526:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3511:3:29","nodeType":"YulIdentifier","src":"3511:3:29"},"nativeSrc":"3511:18:29","nodeType":"YulFunctionCall","src":"3511:18:29"},"variableNames":[{"name":"tail","nativeSrc":"3503:4:29","nodeType":"YulIdentifier","src":"3503:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3545:9:29","nodeType":"YulIdentifier","src":"3545:9:29"},{"arguments":[{"name":"value0","nativeSrc":"3560:6:29","nodeType":"YulIdentifier","src":"3560:6:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3576:3:29","nodeType":"YulLiteral","src":"3576:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"3581:1:29","nodeType":"YulLiteral","src":"3581:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"3572:3:29","nodeType":"YulIdentifier","src":"3572:3:29"},"nativeSrc":"3572:11:29","nodeType":"YulFunctionCall","src":"3572:11:29"},{"kind":"number","nativeSrc":"3585:1:29","nodeType":"YulLiteral","src":"3585:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"3568:3:29","nodeType":"YulIdentifier","src":"3568:3:29"},"nativeSrc":"3568:19:29","nodeType":"YulFunctionCall","src":"3568:19:29"}],"functionName":{"name":"and","nativeSrc":"3556:3:29","nodeType":"YulIdentifier","src":"3556:3:29"},"nativeSrc":"3556:32:29","nodeType":"YulFunctionCall","src":"3556:32:29"}],"functionName":{"name":"mstore","nativeSrc":"3538:6:29","nodeType":"YulIdentifier","src":"3538:6:29"},"nativeSrc":"3538:51:29","nodeType":"YulFunctionCall","src":"3538:51:29"},"nativeSrc":"3538:51:29","nodeType":"YulExpressionStatement","src":"3538:51:29"}]},"name":"abi_encode_tuple_t_contract$_IEntryPoint_$217__to_t_address__fromStack_reversed","nativeSrc":"3373:222:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3462:9:29","nodeType":"YulTypedName","src":"3462:9:29","type":""},{"name":"value0","nativeSrc":"3473:6:29","nodeType":"YulTypedName","src":"3473:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3484:4:29","nodeType":"YulTypedName","src":"3484:4:29","type":""}],"src":"3373:222:29"},{"body":{"nativeSrc":"3670:110:29","nodeType":"YulBlock","src":"3670:110:29","statements":[{"body":{"nativeSrc":"3716:16:29","nodeType":"YulBlock","src":"3716:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3725:1:29","nodeType":"YulLiteral","src":"3725:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"3728:1:29","nodeType":"YulLiteral","src":"3728:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3718:6:29","nodeType":"YulIdentifier","src":"3718:6:29"},"nativeSrc":"3718:12:29","nodeType":"YulFunctionCall","src":"3718:12:29"},"nativeSrc":"3718:12:29","nodeType":"YulExpressionStatement","src":"3718:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3691:7:29","nodeType":"YulIdentifier","src":"3691:7:29"},{"name":"headStart","nativeSrc":"3700:9:29","nodeType":"YulIdentifier","src":"3700:9:29"}],"functionName":{"name":"sub","nativeSrc":"3687:3:29","nodeType":"YulIdentifier","src":"3687:3:29"},"nativeSrc":"3687:23:29","nodeType":"YulFunctionCall","src":"3687:23:29"},{"kind":"number","nativeSrc":"3712:2:29","nodeType":"YulLiteral","src":"3712:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3683:3:29","nodeType":"YulIdentifier","src":"3683:3:29"},"nativeSrc":"3683:32:29","nodeType":"YulFunctionCall","src":"3683:32:29"},"nativeSrc":"3680:52:29","nodeType":"YulIf","src":"3680:52:29"},{"nativeSrc":"3741:33:29","nodeType":"YulAssignment","src":"3741:33:29","value":{"arguments":[{"name":"headStart","nativeSrc":"3764:9:29","nodeType":"YulIdentifier","src":"3764:9:29"}],"functionName":{"name":"calldataload","nativeSrc":"3751:12:29","nodeType":"YulIdentifier","src":"3751:12:29"},"nativeSrc":"3751:23:29","nodeType":"YulFunctionCall","src":"3751:23:29"},"variableNames":[{"name":"value0","nativeSrc":"3741:6:29","nodeType":"YulIdentifier","src":"3741:6:29"}]}]},"name":"abi_decode_tuple_t_bytes32","nativeSrc":"3600:180:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3636:9:29","nodeType":"YulTypedName","src":"3636:9:29","type":""},{"name":"dataEnd","nativeSrc":"3647:7:29","nodeType":"YulTypedName","src":"3647:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3659:6:29","nodeType":"YulTypedName","src":"3659:6:29","type":""}],"src":"3600:180:29"},{"body":{"nativeSrc":"3959:171:29","nodeType":"YulBlock","src":"3959:171:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3976:9:29","nodeType":"YulIdentifier","src":"3976:9:29"},{"kind":"number","nativeSrc":"3987:2:29","nodeType":"YulLiteral","src":"3987:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3969:6:29","nodeType":"YulIdentifier","src":"3969:6:29"},"nativeSrc":"3969:21:29","nodeType":"YulFunctionCall","src":"3969:21:29"},"nativeSrc":"3969:21:29","nodeType":"YulExpressionStatement","src":"3969:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4010:9:29","nodeType":"YulIdentifier","src":"4010:9:29"},{"kind":"number","nativeSrc":"4021:2:29","nodeType":"YulLiteral","src":"4021:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4006:3:29","nodeType":"YulIdentifier","src":"4006:3:29"},"nativeSrc":"4006:18:29","nodeType":"YulFunctionCall","src":"4006:18:29"},{"kind":"number","nativeSrc":"4026:2:29","nodeType":"YulLiteral","src":"4026:2:29","type":"","value":"21"}],"functionName":{"name":"mstore","nativeSrc":"3999:6:29","nodeType":"YulIdentifier","src":"3999:6:29"},"nativeSrc":"3999:30:29","nodeType":"YulFunctionCall","src":"3999:30:29"},"nativeSrc":"3999:30:29","nodeType":"YulExpressionStatement","src":"3999:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4049:9:29","nodeType":"YulIdentifier","src":"4049:9:29"},{"kind":"number","nativeSrc":"4060:2:29","nodeType":"YulLiteral","src":"4060:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4045:3:29","nodeType":"YulIdentifier","src":"4045:3:29"},"nativeSrc":"4045:18:29","nodeType":"YulFunctionCall","src":"4045:18:29"},{"hexValue":"5a65726f2061646472657373207769746864726177","kind":"string","nativeSrc":"4065:23:29","nodeType":"YulLiteral","src":"4065:23:29","type":"","value":"Zero address withdraw"}],"functionName":{"name":"mstore","nativeSrc":"4038:6:29","nodeType":"YulIdentifier","src":"4038:6:29"},"nativeSrc":"4038:51:29","nodeType":"YulFunctionCall","src":"4038:51:29"},"nativeSrc":"4038:51:29","nodeType":"YulExpressionStatement","src":"4038:51:29"},{"nativeSrc":"4098:26:29","nodeType":"YulAssignment","src":"4098:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"4110:9:29","nodeType":"YulIdentifier","src":"4110:9:29"},{"kind":"number","nativeSrc":"4121:2:29","nodeType":"YulLiteral","src":"4121:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4106:3:29","nodeType":"YulIdentifier","src":"4106:3:29"},"nativeSrc":"4106:18:29","nodeType":"YulFunctionCall","src":"4106:18:29"},"variableNames":[{"name":"tail","nativeSrc":"4098:4:29","nodeType":"YulIdentifier","src":"4098:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_f789c796bc88b6644f4b1d82a40a6f90d1ada33aa23e9176f89c644271009430__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3785:345:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3936:9:29","nodeType":"YulTypedName","src":"3936:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3950:4:29","nodeType":"YulTypedName","src":"3950:4:29","type":""}],"src":"3785:345:29"},{"body":{"nativeSrc":"4309:170:29","nodeType":"YulBlock","src":"4309:170:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4326:9:29","nodeType":"YulIdentifier","src":"4326:9:29"},{"kind":"number","nativeSrc":"4337:2:29","nodeType":"YulLiteral","src":"4337:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4319:6:29","nodeType":"YulIdentifier","src":"4319:6:29"},"nativeSrc":"4319:21:29","nodeType":"YulFunctionCall","src":"4319:21:29"},"nativeSrc":"4319:21:29","nodeType":"YulExpressionStatement","src":"4319:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4360:9:29","nodeType":"YulIdentifier","src":"4360:9:29"},{"kind":"number","nativeSrc":"4371:2:29","nodeType":"YulLiteral","src":"4371:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4356:3:29","nodeType":"YulIdentifier","src":"4356:3:29"},"nativeSrc":"4356:18:29","nodeType":"YulFunctionCall","src":"4356:18:29"},{"kind":"number","nativeSrc":"4376:2:29","nodeType":"YulLiteral","src":"4376:2:29","type":"","value":"20"}],"functionName":{"name":"mstore","nativeSrc":"4349:6:29","nodeType":"YulIdentifier","src":"4349:6:29"},"nativeSrc":"4349:30:29","nodeType":"YulFunctionCall","src":"4349:30:29"},"nativeSrc":"4349:30:29","nodeType":"YulExpressionStatement","src":"4349:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4399:9:29","nodeType":"YulIdentifier","src":"4399:9:29"},{"kind":"number","nativeSrc":"4410:2:29","nodeType":"YulLiteral","src":"4410:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4395:3:29","nodeType":"YulIdentifier","src":"4395:3:29"},"nativeSrc":"4395:18:29","nodeType":"YulFunctionCall","src":"4395:18:29"},{"hexValue":"5a65726f20616d6f756e74207769746864726177","kind":"string","nativeSrc":"4415:22:29","nodeType":"YulLiteral","src":"4415:22:29","type":"","value":"Zero amount withdraw"}],"functionName":{"name":"mstore","nativeSrc":"4388:6:29","nodeType":"YulIdentifier","src":"4388:6:29"},"nativeSrc":"4388:50:29","nodeType":"YulFunctionCall","src":"4388:50:29"},"nativeSrc":"4388:50:29","nodeType":"YulExpressionStatement","src":"4388:50:29"},{"nativeSrc":"4447:26:29","nodeType":"YulAssignment","src":"4447:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"4459:9:29","nodeType":"YulIdentifier","src":"4459:9:29"},{"kind":"number","nativeSrc":"4470:2:29","nodeType":"YulLiteral","src":"4470:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4455:3:29","nodeType":"YulIdentifier","src":"4455:3:29"},"nativeSrc":"4455:18:29","nodeType":"YulFunctionCall","src":"4455:18:29"},"variableNames":[{"name":"tail","nativeSrc":"4447:4:29","nodeType":"YulIdentifier","src":"4447:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_c84ea879ba77ce28ba9dedf701fc36f58c603ac0dc3701d534f1f2611de4053f__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4135:344:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4286:9:29","nodeType":"YulTypedName","src":"4286:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4300:4:29","nodeType":"YulTypedName","src":"4300:4:29","type":""}],"src":"4135:344:29"},{"body":{"nativeSrc":"4629:145:29","nodeType":"YulBlock","src":"4629:145:29","statements":[{"nativeSrc":"4639:26:29","nodeType":"YulAssignment","src":"4639:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"4651:9:29","nodeType":"YulIdentifier","src":"4651:9:29"},{"kind":"number","nativeSrc":"4662:2:29","nodeType":"YulLiteral","src":"4662:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4647:3:29","nodeType":"YulIdentifier","src":"4647:3:29"},"nativeSrc":"4647:18:29","nodeType":"YulFunctionCall","src":"4647:18:29"},"variableNames":[{"name":"tail","nativeSrc":"4639:4:29","nodeType":"YulIdentifier","src":"4639:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4681:9:29","nodeType":"YulIdentifier","src":"4681:9:29"},{"arguments":[{"name":"value0","nativeSrc":"4696:6:29","nodeType":"YulIdentifier","src":"4696:6:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4712:3:29","nodeType":"YulLiteral","src":"4712:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"4717:1:29","nodeType":"YulLiteral","src":"4717:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"4708:3:29","nodeType":"YulIdentifier","src":"4708:3:29"},"nativeSrc":"4708:11:29","nodeType":"YulFunctionCall","src":"4708:11:29"},{"kind":"number","nativeSrc":"4721:1:29","nodeType":"YulLiteral","src":"4721:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4704:3:29","nodeType":"YulIdentifier","src":"4704:3:29"},"nativeSrc":"4704:19:29","nodeType":"YulFunctionCall","src":"4704:19:29"}],"functionName":{"name":"and","nativeSrc":"4692:3:29","nodeType":"YulIdentifier","src":"4692:3:29"},"nativeSrc":"4692:32:29","nodeType":"YulFunctionCall","src":"4692:32:29"}],"functionName":{"name":"mstore","nativeSrc":"4674:6:29","nodeType":"YulIdentifier","src":"4674:6:29"},"nativeSrc":"4674:51:29","nodeType":"YulFunctionCall","src":"4674:51:29"},"nativeSrc":"4674:51:29","nodeType":"YulExpressionStatement","src":"4674:51:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4745:9:29","nodeType":"YulIdentifier","src":"4745:9:29"},{"kind":"number","nativeSrc":"4756:2:29","nodeType":"YulLiteral","src":"4756:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4741:3:29","nodeType":"YulIdentifier","src":"4741:3:29"},"nativeSrc":"4741:18:29","nodeType":"YulFunctionCall","src":"4741:18:29"},{"name":"value1","nativeSrc":"4761:6:29","nodeType":"YulIdentifier","src":"4761:6:29"}],"functionName":{"name":"mstore","nativeSrc":"4734:6:29","nodeType":"YulIdentifier","src":"4734:6:29"},"nativeSrc":"4734:34:29","nodeType":"YulFunctionCall","src":"4734:34:29"},"nativeSrc":"4734:34:29","nodeType":"YulExpressionStatement","src":"4734:34:29"}]},"name":"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed","nativeSrc":"4484:290:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4590:9:29","nodeType":"YulTypedName","src":"4590:9:29","type":""},{"name":"value1","nativeSrc":"4601:6:29","nodeType":"YulTypedName","src":"4601:6:29","type":""},{"name":"value0","nativeSrc":"4609:6:29","nodeType":"YulTypedName","src":"4609:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4620:4:29","nodeType":"YulTypedName","src":"4620:4:29","type":""}],"src":"4484:290:29"},{"body":{"nativeSrc":"4953:171:29","nodeType":"YulBlock","src":"4953:171:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4970:9:29","nodeType":"YulIdentifier","src":"4970:9:29"},{"kind":"number","nativeSrc":"4981:2:29","nodeType":"YulLiteral","src":"4981:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"4963:6:29","nodeType":"YulIdentifier","src":"4963:6:29"},"nativeSrc":"4963:21:29","nodeType":"YulFunctionCall","src":"4963:21:29"},"nativeSrc":"4963:21:29","nodeType":"YulExpressionStatement","src":"4963:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5004:9:29","nodeType":"YulIdentifier","src":"5004:9:29"},{"kind":"number","nativeSrc":"5015:2:29","nodeType":"YulLiteral","src":"5015:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5000:3:29","nodeType":"YulIdentifier","src":"5000:3:29"},"nativeSrc":"5000:18:29","nodeType":"YulFunctionCall","src":"5000:18:29"},{"kind":"number","nativeSrc":"5020:2:29","nodeType":"YulLiteral","src":"5020:2:29","type":"","value":"21"}],"functionName":{"name":"mstore","nativeSrc":"4993:6:29","nodeType":"YulIdentifier","src":"4993:6:29"},"nativeSrc":"4993:30:29","nodeType":"YulFunctionCall","src":"4993:30:29"},"nativeSrc":"4993:30:29","nodeType":"YulExpressionStatement","src":"4993:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5043:9:29","nodeType":"YulIdentifier","src":"5043:9:29"},{"kind":"number","nativeSrc":"5054:2:29","nodeType":"YulLiteral","src":"5054:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5039:3:29","nodeType":"YulIdentifier","src":"5039:3:29"},"nativeSrc":"5039:18:29","nodeType":"YulFunctionCall","src":"5039:18:29"},{"hexValue":"43616c6c6572206e6f7420456e747279506f696e74","kind":"string","nativeSrc":"5059:23:29","nodeType":"YulLiteral","src":"5059:23:29","type":"","value":"Caller not EntryPoint"}],"functionName":{"name":"mstore","nativeSrc":"5032:6:29","nodeType":"YulIdentifier","src":"5032:6:29"},"nativeSrc":"5032:51:29","nodeType":"YulFunctionCall","src":"5032:51:29"},"nativeSrc":"5032:51:29","nodeType":"YulExpressionStatement","src":"5032:51:29"},{"nativeSrc":"5092:26:29","nodeType":"YulAssignment","src":"5092:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"5104:9:29","nodeType":"YulIdentifier","src":"5104:9:29"},{"kind":"number","nativeSrc":"5115:2:29","nodeType":"YulLiteral","src":"5115:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5100:3:29","nodeType":"YulIdentifier","src":"5100:3:29"},"nativeSrc":"5100:18:29","nodeType":"YulFunctionCall","src":"5100:18:29"},"variableNames":[{"name":"tail","nativeSrc":"5092:4:29","nodeType":"YulIdentifier","src":"5092:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc544a183a74889e2f0f71a19573312cb640b492ec6195283ec98b45e5f0af57__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4779:345:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4930:9:29","nodeType":"YulTypedName","src":"4930:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4944:4:29","nodeType":"YulTypedName","src":"4944:4:29","type":""}],"src":"4779:345:29"},{"body":{"nativeSrc":"5210:103:29","nodeType":"YulBlock","src":"5210:103:29","statements":[{"body":{"nativeSrc":"5256:16:29","nodeType":"YulBlock","src":"5256:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5265:1:29","nodeType":"YulLiteral","src":"5265:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"5268:1:29","nodeType":"YulLiteral","src":"5268:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5258:6:29","nodeType":"YulIdentifier","src":"5258:6:29"},"nativeSrc":"5258:12:29","nodeType":"YulFunctionCall","src":"5258:12:29"},"nativeSrc":"5258:12:29","nodeType":"YulExpressionStatement","src":"5258:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5231:7:29","nodeType":"YulIdentifier","src":"5231:7:29"},{"name":"headStart","nativeSrc":"5240:9:29","nodeType":"YulIdentifier","src":"5240:9:29"}],"functionName":{"name":"sub","nativeSrc":"5227:3:29","nodeType":"YulIdentifier","src":"5227:3:29"},"nativeSrc":"5227:23:29","nodeType":"YulFunctionCall","src":"5227:23:29"},{"kind":"number","nativeSrc":"5252:2:29","nodeType":"YulLiteral","src":"5252:2:29","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5223:3:29","nodeType":"YulIdentifier","src":"5223:3:29"},"nativeSrc":"5223:32:29","nodeType":"YulFunctionCall","src":"5223:32:29"},"nativeSrc":"5220:52:29","nodeType":"YulIf","src":"5220:52:29"},{"nativeSrc":"5281:26:29","nodeType":"YulAssignment","src":"5281:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"5297:9:29","nodeType":"YulIdentifier","src":"5297:9:29"}],"functionName":{"name":"mload","nativeSrc":"5291:5:29","nodeType":"YulIdentifier","src":"5291:5:29"},"nativeSrc":"5291:16:29","nodeType":"YulFunctionCall","src":"5291:16:29"},"variableNames":[{"name":"value0","nativeSrc":"5281:6:29","nodeType":"YulIdentifier","src":"5281:6:29"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"5129:184:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5176:9:29","nodeType":"YulTypedName","src":"5176:9:29","type":""},{"name":"dataEnd","nativeSrc":"5187:7:29","nodeType":"YulTypedName","src":"5187:7:29","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5199:6:29","nodeType":"YulTypedName","src":"5199:6:29","type":""}],"src":"5129:184:29"},{"body":{"nativeSrc":"5492:180:29","nodeType":"YulBlock","src":"5492:180:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"5509:9:29","nodeType":"YulIdentifier","src":"5509:9:29"},{"kind":"number","nativeSrc":"5520:2:29","nodeType":"YulLiteral","src":"5520:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"5502:6:29","nodeType":"YulIdentifier","src":"5502:6:29"},"nativeSrc":"5502:21:29","nodeType":"YulFunctionCall","src":"5502:21:29"},"nativeSrc":"5502:21:29","nodeType":"YulExpressionStatement","src":"5502:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5543:9:29","nodeType":"YulIdentifier","src":"5543:9:29"},{"kind":"number","nativeSrc":"5554:2:29","nodeType":"YulLiteral","src":"5554:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5539:3:29","nodeType":"YulIdentifier","src":"5539:3:29"},"nativeSrc":"5539:18:29","nodeType":"YulFunctionCall","src":"5539:18:29"},{"kind":"number","nativeSrc":"5559:2:29","nodeType":"YulLiteral","src":"5559:2:29","type":"","value":"30"}],"functionName":{"name":"mstore","nativeSrc":"5532:6:29","nodeType":"YulIdentifier","src":"5532:6:29"},"nativeSrc":"5532:30:29","nodeType":"YulFunctionCall","src":"5532:30:29"},"nativeSrc":"5532:30:29","nodeType":"YulExpressionStatement","src":"5532:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5582:9:29","nodeType":"YulIdentifier","src":"5582:9:29"},{"kind":"number","nativeSrc":"5593:2:29","nodeType":"YulLiteral","src":"5593:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5578:3:29","nodeType":"YulIdentifier","src":"5578:3:29"},"nativeSrc":"5578:18:29","nodeType":"YulFunctionCall","src":"5578:18:29"},{"hexValue":"496e73756666696369656e74207061796d6173746572206465706f736974","kind":"string","nativeSrc":"5598:32:29","nodeType":"YulLiteral","src":"5598:32:29","type":"","value":"Insufficient paymaster deposit"}],"functionName":{"name":"mstore","nativeSrc":"5571:6:29","nodeType":"YulIdentifier","src":"5571:6:29"},"nativeSrc":"5571:60:29","nodeType":"YulFunctionCall","src":"5571:60:29"},"nativeSrc":"5571:60:29","nodeType":"YulExpressionStatement","src":"5571:60:29"},{"nativeSrc":"5640:26:29","nodeType":"YulAssignment","src":"5640:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"5652:9:29","nodeType":"YulIdentifier","src":"5652:9:29"},{"kind":"number","nativeSrc":"5663:2:29","nodeType":"YulLiteral","src":"5663:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5648:3:29","nodeType":"YulIdentifier","src":"5648:3:29"},"nativeSrc":"5648:18:29","nodeType":"YulFunctionCall","src":"5648:18:29"},"variableNames":[{"name":"tail","nativeSrc":"5640:4:29","nodeType":"YulIdentifier","src":"5640:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_80d90a95737f313c53d0bb6837e1fa3081c533ef624cd896bb37942cc6750a82__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5318:354:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5469:9:29","nodeType":"YulTypedName","src":"5469:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5483:4:29","nodeType":"YulTypedName","src":"5483:4:29","type":""}],"src":"5318:354:29"},{"body":{"nativeSrc":"5771:427:29","nodeType":"YulBlock","src":"5771:427:29","statements":[{"nativeSrc":"5781:51:29","nodeType":"YulVariableDeclaration","src":"5781:51:29","value":{"arguments":[{"name":"ptr_to_tail","nativeSrc":"5820:11:29","nodeType":"YulIdentifier","src":"5820:11:29"}],"functionName":{"name":"calldataload","nativeSrc":"5807:12:29","nodeType":"YulIdentifier","src":"5807:12:29"},"nativeSrc":"5807:25:29","nodeType":"YulFunctionCall","src":"5807:25:29"},"variables":[{"name":"rel_offset_of_tail","nativeSrc":"5785:18:29","nodeType":"YulTypedName","src":"5785:18:29","type":""}]},{"body":{"nativeSrc":"5921:16:29","nodeType":"YulBlock","src":"5921:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5930:1:29","nodeType":"YulLiteral","src":"5930:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"5933:1:29","nodeType":"YulLiteral","src":"5933:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5923:6:29","nodeType":"YulIdentifier","src":"5923:6:29"},"nativeSrc":"5923:12:29","nodeType":"YulFunctionCall","src":"5923:12:29"},"nativeSrc":"5923:12:29","nodeType":"YulExpressionStatement","src":"5923:12:29"}]},"condition":{"arguments":[{"arguments":[{"name":"rel_offset_of_tail","nativeSrc":"5855:18:29","nodeType":"YulIdentifier","src":"5855:18:29"},{"arguments":[{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"5883:12:29","nodeType":"YulIdentifier","src":"5883:12:29"},"nativeSrc":"5883:14:29","nodeType":"YulFunctionCall","src":"5883:14:29"},{"name":"base_ref","nativeSrc":"5899:8:29","nodeType":"YulIdentifier","src":"5899:8:29"}],"functionName":{"name":"sub","nativeSrc":"5879:3:29","nodeType":"YulIdentifier","src":"5879:3:29"},"nativeSrc":"5879:29:29","nodeType":"YulFunctionCall","src":"5879:29:29"},{"arguments":[{"kind":"number","nativeSrc":"5914:2:29","nodeType":"YulLiteral","src":"5914:2:29","type":"","value":"30"}],"functionName":{"name":"not","nativeSrc":"5910:3:29","nodeType":"YulIdentifier","src":"5910:3:29"},"nativeSrc":"5910:7:29","nodeType":"YulFunctionCall","src":"5910:7:29"}],"functionName":{"name":"add","nativeSrc":"5875:3:29","nodeType":"YulIdentifier","src":"5875:3:29"},"nativeSrc":"5875:43:29","nodeType":"YulFunctionCall","src":"5875:43:29"}],"functionName":{"name":"slt","nativeSrc":"5851:3:29","nodeType":"YulIdentifier","src":"5851:3:29"},"nativeSrc":"5851:68:29","nodeType":"YulFunctionCall","src":"5851:68:29"}],"functionName":{"name":"iszero","nativeSrc":"5844:6:29","nodeType":"YulIdentifier","src":"5844:6:29"},"nativeSrc":"5844:76:29","nodeType":"YulFunctionCall","src":"5844:76:29"},"nativeSrc":"5841:96:29","nodeType":"YulIf","src":"5841:96:29"},{"nativeSrc":"5946:47:29","nodeType":"YulVariableDeclaration","src":"5946:47:29","value":{"arguments":[{"name":"base_ref","nativeSrc":"5964:8:29","nodeType":"YulIdentifier","src":"5964:8:29"},{"name":"rel_offset_of_tail","nativeSrc":"5974:18:29","nodeType":"YulIdentifier","src":"5974:18:29"}],"functionName":{"name":"add","nativeSrc":"5960:3:29","nodeType":"YulIdentifier","src":"5960:3:29"},"nativeSrc":"5960:33:29","nodeType":"YulFunctionCall","src":"5960:33:29"},"variables":[{"name":"addr_1","nativeSrc":"5950:6:29","nodeType":"YulTypedName","src":"5950:6:29","type":""}]},{"nativeSrc":"6002:30:29","nodeType":"YulAssignment","src":"6002:30:29","value":{"arguments":[{"name":"addr_1","nativeSrc":"6025:6:29","nodeType":"YulIdentifier","src":"6025:6:29"}],"functionName":{"name":"calldataload","nativeSrc":"6012:12:29","nodeType":"YulIdentifier","src":"6012:12:29"},"nativeSrc":"6012:20:29","nodeType":"YulFunctionCall","src":"6012:20:29"},"variableNames":[{"name":"length","nativeSrc":"6002:6:29","nodeType":"YulIdentifier","src":"6002:6:29"}]},{"body":{"nativeSrc":"6075:16:29","nodeType":"YulBlock","src":"6075:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6084:1:29","nodeType":"YulLiteral","src":"6084:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"6087:1:29","nodeType":"YulLiteral","src":"6087:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6077:6:29","nodeType":"YulIdentifier","src":"6077:6:29"},"nativeSrc":"6077:12:29","nodeType":"YulFunctionCall","src":"6077:12:29"},"nativeSrc":"6077:12:29","nodeType":"YulExpressionStatement","src":"6077:12:29"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"6047:6:29","nodeType":"YulIdentifier","src":"6047:6:29"},{"kind":"number","nativeSrc":"6055:18:29","nodeType":"YulLiteral","src":"6055:18:29","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6044:2:29","nodeType":"YulIdentifier","src":"6044:2:29"},"nativeSrc":"6044:30:29","nodeType":"YulFunctionCall","src":"6044:30:29"},"nativeSrc":"6041:50:29","nodeType":"YulIf","src":"6041:50:29"},{"nativeSrc":"6100:25:29","nodeType":"YulAssignment","src":"6100:25:29","value":{"arguments":[{"name":"addr_1","nativeSrc":"6112:6:29","nodeType":"YulIdentifier","src":"6112:6:29"},{"kind":"number","nativeSrc":"6120:4:29","nodeType":"YulLiteral","src":"6120:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6108:3:29","nodeType":"YulIdentifier","src":"6108:3:29"},"nativeSrc":"6108:17:29","nodeType":"YulFunctionCall","src":"6108:17:29"},"variableNames":[{"name":"addr","nativeSrc":"6100:4:29","nodeType":"YulIdentifier","src":"6100:4:29"}]},{"body":{"nativeSrc":"6176:16:29","nodeType":"YulBlock","src":"6176:16:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6185:1:29","nodeType":"YulLiteral","src":"6185:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"6188:1:29","nodeType":"YulLiteral","src":"6188:1:29","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6178:6:29","nodeType":"YulIdentifier","src":"6178:6:29"},"nativeSrc":"6178:12:29","nodeType":"YulFunctionCall","src":"6178:12:29"},"nativeSrc":"6178:12:29","nodeType":"YulExpressionStatement","src":"6178:12:29"}]},"condition":{"arguments":[{"name":"addr","nativeSrc":"6141:4:29","nodeType":"YulIdentifier","src":"6141:4:29"},{"arguments":[{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"6151:12:29","nodeType":"YulIdentifier","src":"6151:12:29"},"nativeSrc":"6151:14:29","nodeType":"YulFunctionCall","src":"6151:14:29"},{"name":"length","nativeSrc":"6167:6:29","nodeType":"YulIdentifier","src":"6167:6:29"}],"functionName":{"name":"sub","nativeSrc":"6147:3:29","nodeType":"YulIdentifier","src":"6147:3:29"},"nativeSrc":"6147:27:29","nodeType":"YulFunctionCall","src":"6147:27:29"}],"functionName":{"name":"sgt","nativeSrc":"6137:3:29","nodeType":"YulIdentifier","src":"6137:3:29"},"nativeSrc":"6137:38:29","nodeType":"YulFunctionCall","src":"6137:38:29"},"nativeSrc":"6134:58:29","nodeType":"YulIf","src":"6134:58:29"}]},"name":"access_calldata_tail_t_bytes_calldata_ptr","nativeSrc":"5677:521:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"base_ref","nativeSrc":"5728:8:29","nodeType":"YulTypedName","src":"5728:8:29","type":""},{"name":"ptr_to_tail","nativeSrc":"5738:11:29","nodeType":"YulTypedName","src":"5738:11:29","type":""}],"returnVariables":[{"name":"addr","nativeSrc":"5754:4:29","nodeType":"YulTypedName","src":"5754:4:29","type":""},{"name":"length","nativeSrc":"5760:6:29","nodeType":"YulTypedName","src":"5760:6:29","type":""}],"src":"5677:521:29"},{"body":{"nativeSrc":"6377:181:29","nodeType":"YulBlock","src":"6377:181:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6394:9:29","nodeType":"YulIdentifier","src":"6394:9:29"},{"kind":"number","nativeSrc":"6405:2:29","nodeType":"YulLiteral","src":"6405:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6387:6:29","nodeType":"YulIdentifier","src":"6387:6:29"},"nativeSrc":"6387:21:29","nodeType":"YulFunctionCall","src":"6387:21:29"},"nativeSrc":"6387:21:29","nodeType":"YulExpressionStatement","src":"6387:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6428:9:29","nodeType":"YulIdentifier","src":"6428:9:29"},{"kind":"number","nativeSrc":"6439:2:29","nodeType":"YulLiteral","src":"6439:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6424:3:29","nodeType":"YulIdentifier","src":"6424:3:29"},"nativeSrc":"6424:18:29","nodeType":"YulFunctionCall","src":"6424:18:29"},{"kind":"number","nativeSrc":"6444:2:29","nodeType":"YulLiteral","src":"6444:2:29","type":"","value":"31"}],"functionName":{"name":"mstore","nativeSrc":"6417:6:29","nodeType":"YulIdentifier","src":"6417:6:29"},"nativeSrc":"6417:30:29","nodeType":"YulFunctionCall","src":"6417:30:29"},"nativeSrc":"6417:30:29","nodeType":"YulExpressionStatement","src":"6417:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6467:9:29","nodeType":"YulIdentifier","src":"6467:9:29"},{"kind":"number","nativeSrc":"6478:2:29","nodeType":"YulLiteral","src":"6478:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6463:3:29","nodeType":"YulIdentifier","src":"6463:3:29"},"nativeSrc":"6463:18:29","nodeType":"YulFunctionCall","src":"6463:18:29"},{"hexValue":"496e76616c6964207061796d6173746572416e6444617461206c656e677468","kind":"string","nativeSrc":"6483:33:29","nodeType":"YulLiteral","src":"6483:33:29","type":"","value":"Invalid paymasterAndData length"}],"functionName":{"name":"mstore","nativeSrc":"6456:6:29","nodeType":"YulIdentifier","src":"6456:6:29"},"nativeSrc":"6456:61:29","nodeType":"YulFunctionCall","src":"6456:61:29"},"nativeSrc":"6456:61:29","nodeType":"YulExpressionStatement","src":"6456:61:29"},{"nativeSrc":"6526:26:29","nodeType":"YulAssignment","src":"6526:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"6538:9:29","nodeType":"YulIdentifier","src":"6538:9:29"},{"kind":"number","nativeSrc":"6549:2:29","nodeType":"YulLiteral","src":"6549:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6534:3:29","nodeType":"YulIdentifier","src":"6534:3:29"},"nativeSrc":"6534:18:29","nodeType":"YulFunctionCall","src":"6534:18:29"},"variableNames":[{"name":"tail","nativeSrc":"6526:4:29","nodeType":"YulIdentifier","src":"6526:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_cfe5951392790b135f98d77ba09049bfbc1a1776c53987baf509c661787d5e3b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6203:355:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6354:9:29","nodeType":"YulTypedName","src":"6354:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6368:4:29","nodeType":"YulTypedName","src":"6368:4:29","type":""}],"src":"6203:355:29"},{"body":{"nativeSrc":"6657:203:29","nodeType":"YulBlock","src":"6657:203:29","statements":[{"nativeSrc":"6667:26:29","nodeType":"YulVariableDeclaration","src":"6667:26:29","value":{"arguments":[{"name":"array","nativeSrc":"6687:5:29","nodeType":"YulIdentifier","src":"6687:5:29"}],"functionName":{"name":"mload","nativeSrc":"6681:5:29","nodeType":"YulIdentifier","src":"6681:5:29"},"nativeSrc":"6681:12:29","nodeType":"YulFunctionCall","src":"6681:12:29"},"variables":[{"name":"length","nativeSrc":"6671:6:29","nodeType":"YulTypedName","src":"6671:6:29","type":""}]},{"nativeSrc":"6702:32:29","nodeType":"YulAssignment","src":"6702:32:29","value":{"arguments":[{"arguments":[{"name":"array","nativeSrc":"6721:5:29","nodeType":"YulIdentifier","src":"6721:5:29"},{"kind":"number","nativeSrc":"6728:4:29","nodeType":"YulLiteral","src":"6728:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6717:3:29","nodeType":"YulIdentifier","src":"6717:3:29"},"nativeSrc":"6717:16:29","nodeType":"YulFunctionCall","src":"6717:16:29"}],"functionName":{"name":"mload","nativeSrc":"6711:5:29","nodeType":"YulIdentifier","src":"6711:5:29"},"nativeSrc":"6711:23:29","nodeType":"YulFunctionCall","src":"6711:23:29"},"variableNames":[{"name":"value","nativeSrc":"6702:5:29","nodeType":"YulIdentifier","src":"6702:5:29"}]},{"body":{"nativeSrc":"6771:83:29","nodeType":"YulBlock","src":"6771:83:29","statements":[{"nativeSrc":"6785:59:29","nodeType":"YulAssignment","src":"6785:59:29","value":{"arguments":[{"name":"value","nativeSrc":"6798:5:29","nodeType":"YulIdentifier","src":"6798:5:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6813:1:29","nodeType":"YulLiteral","src":"6813:1:29","type":"","value":"3"},{"arguments":[{"kind":"number","nativeSrc":"6820:4:29","nodeType":"YulLiteral","src":"6820:4:29","type":"","value":"0x20"},{"name":"length","nativeSrc":"6826:6:29","nodeType":"YulIdentifier","src":"6826:6:29"}],"functionName":{"name":"sub","nativeSrc":"6816:3:29","nodeType":"YulIdentifier","src":"6816:3:29"},"nativeSrc":"6816:17:29","nodeType":"YulFunctionCall","src":"6816:17:29"}],"functionName":{"name":"shl","nativeSrc":"6809:3:29","nodeType":"YulIdentifier","src":"6809:3:29"},"nativeSrc":"6809:25:29","nodeType":"YulFunctionCall","src":"6809:25:29"},{"arguments":[{"kind":"number","nativeSrc":"6840:1:29","nodeType":"YulLiteral","src":"6840:1:29","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"6836:3:29","nodeType":"YulIdentifier","src":"6836:3:29"},"nativeSrc":"6836:6:29","nodeType":"YulFunctionCall","src":"6836:6:29"}],"functionName":{"name":"shl","nativeSrc":"6805:3:29","nodeType":"YulIdentifier","src":"6805:3:29"},"nativeSrc":"6805:38:29","nodeType":"YulFunctionCall","src":"6805:38:29"}],"functionName":{"name":"and","nativeSrc":"6794:3:29","nodeType":"YulIdentifier","src":"6794:3:29"},"nativeSrc":"6794:50:29","nodeType":"YulFunctionCall","src":"6794:50:29"},"variableNames":[{"name":"value","nativeSrc":"6785:5:29","nodeType":"YulIdentifier","src":"6785:5:29"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"6749:6:29","nodeType":"YulIdentifier","src":"6749:6:29"},{"kind":"number","nativeSrc":"6757:4:29","nodeType":"YulLiteral","src":"6757:4:29","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"6746:2:29","nodeType":"YulIdentifier","src":"6746:2:29"},"nativeSrc":"6746:16:29","nodeType":"YulFunctionCall","src":"6746:16:29"},"nativeSrc":"6743:111:29","nodeType":"YulIf","src":"6743:111:29"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nativeSrc":"6563:297:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"6637:5:29","nodeType":"YulTypedName","src":"6637:5:29","type":""}],"returnVariables":[{"name":"value","nativeSrc":"6647:5:29","nodeType":"YulTypedName","src":"6647:5:29","type":""}],"src":"6563:297:29"},{"body":{"nativeSrc":"7039:168:29","nodeType":"YulBlock","src":"7039:168:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7056:9:29","nodeType":"YulIdentifier","src":"7056:9:29"},{"kind":"number","nativeSrc":"7067:2:29","nodeType":"YulLiteral","src":"7067:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7049:6:29","nodeType":"YulIdentifier","src":"7049:6:29"},"nativeSrc":"7049:21:29","nodeType":"YulFunctionCall","src":"7049:21:29"},"nativeSrc":"7049:21:29","nodeType":"YulExpressionStatement","src":"7049:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7090:9:29","nodeType":"YulIdentifier","src":"7090:9:29"},{"kind":"number","nativeSrc":"7101:2:29","nodeType":"YulLiteral","src":"7101:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7086:3:29","nodeType":"YulIdentifier","src":"7086:3:29"},"nativeSrc":"7086:18:29","nodeType":"YulFunctionCall","src":"7086:18:29"},{"kind":"number","nativeSrc":"7106:2:29","nodeType":"YulLiteral","src":"7106:2:29","type":"","value":"18"}],"functionName":{"name":"mstore","nativeSrc":"7079:6:29","nodeType":"YulIdentifier","src":"7079:6:29"},"nativeSrc":"7079:30:29","nodeType":"YulFunctionCall","src":"7079:30:29"},"nativeSrc":"7079:30:29","nodeType":"YulExpressionStatement","src":"7079:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7129:9:29","nodeType":"YulIdentifier","src":"7129:9:29"},{"kind":"number","nativeSrc":"7140:2:29","nodeType":"YulLiteral","src":"7140:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7125:3:29","nodeType":"YulIdentifier","src":"7125:3:29"},"nativeSrc":"7125:18:29","nodeType":"YulFunctionCall","src":"7125:18:29"},{"hexValue":"4e6f6e636520616c72656164792075736564","kind":"string","nativeSrc":"7145:20:29","nodeType":"YulLiteral","src":"7145:20:29","type":"","value":"Nonce already used"}],"functionName":{"name":"mstore","nativeSrc":"7118:6:29","nodeType":"YulIdentifier","src":"7118:6:29"},"nativeSrc":"7118:48:29","nodeType":"YulFunctionCall","src":"7118:48:29"},"nativeSrc":"7118:48:29","nodeType":"YulExpressionStatement","src":"7118:48:29"},{"nativeSrc":"7175:26:29","nodeType":"YulAssignment","src":"7175:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"7187:9:29","nodeType":"YulIdentifier","src":"7187:9:29"},{"kind":"number","nativeSrc":"7198:2:29","nodeType":"YulLiteral","src":"7198:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7183:3:29","nodeType":"YulIdentifier","src":"7183:3:29"},"nativeSrc":"7183:18:29","nodeType":"YulFunctionCall","src":"7183:18:29"},"variableNames":[{"name":"tail","nativeSrc":"7175:4:29","nodeType":"YulIdentifier","src":"7175:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_923b8cbbcee77e95e0614b96c81a4cbd157e2cc78e2937caa0bed8e1c5641a28__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6865:342:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7016:9:29","nodeType":"YulTypedName","src":"7016:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7030:4:29","nodeType":"YulTypedName","src":"7030:4:29","type":""}],"src":"6865:342:29"},{"body":{"nativeSrc":"7386:167:29","nodeType":"YulBlock","src":"7386:167:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7403:9:29","nodeType":"YulIdentifier","src":"7403:9:29"},{"kind":"number","nativeSrc":"7414:2:29","nodeType":"YulLiteral","src":"7414:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7396:6:29","nodeType":"YulIdentifier","src":"7396:6:29"},"nativeSrc":"7396:21:29","nodeType":"YulFunctionCall","src":"7396:21:29"},"nativeSrc":"7396:21:29","nodeType":"YulExpressionStatement","src":"7396:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7437:9:29","nodeType":"YulIdentifier","src":"7437:9:29"},{"kind":"number","nativeSrc":"7448:2:29","nodeType":"YulLiteral","src":"7448:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7433:3:29","nodeType":"YulIdentifier","src":"7433:3:29"},"nativeSrc":"7433:18:29","nodeType":"YulFunctionCall","src":"7433:18:29"},{"kind":"number","nativeSrc":"7453:2:29","nodeType":"YulLiteral","src":"7453:2:29","type":"","value":"17"}],"functionName":{"name":"mstore","nativeSrc":"7426:6:29","nodeType":"YulIdentifier","src":"7426:6:29"},"nativeSrc":"7426:30:29","nodeType":"YulFunctionCall","src":"7426:30:29"},"nativeSrc":"7426:30:29","nodeType":"YulExpressionStatement","src":"7426:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7476:9:29","nodeType":"YulIdentifier","src":"7476:9:29"},{"kind":"number","nativeSrc":"7487:2:29","nodeType":"YulLiteral","src":"7487:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7472:3:29","nodeType":"YulIdentifier","src":"7472:3:29"},"nativeSrc":"7472:18:29","nodeType":"YulFunctionCall","src":"7472:18:29"},{"hexValue":"5369676e61747572652065787069726564","kind":"string","nativeSrc":"7492:19:29","nodeType":"YulLiteral","src":"7492:19:29","type":"","value":"Signature expired"}],"functionName":{"name":"mstore","nativeSrc":"7465:6:29","nodeType":"YulIdentifier","src":"7465:6:29"},"nativeSrc":"7465:47:29","nodeType":"YulFunctionCall","src":"7465:47:29"},"nativeSrc":"7465:47:29","nodeType":"YulExpressionStatement","src":"7465:47:29"},{"nativeSrc":"7521:26:29","nodeType":"YulAssignment","src":"7521:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"7533:9:29","nodeType":"YulIdentifier","src":"7533:9:29"},{"kind":"number","nativeSrc":"7544:2:29","nodeType":"YulLiteral","src":"7544:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7529:3:29","nodeType":"YulIdentifier","src":"7529:3:29"},"nativeSrc":"7529:18:29","nodeType":"YulFunctionCall","src":"7529:18:29"},"variableNames":[{"name":"tail","nativeSrc":"7521:4:29","nodeType":"YulIdentifier","src":"7521:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7212:341:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7363:9:29","nodeType":"YulTypedName","src":"7363:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7377:4:29","nodeType":"YulTypedName","src":"7377:4:29","type":""}],"src":"7212:341:29"},{"body":{"nativeSrc":"7606:174:29","nodeType":"YulBlock","src":"7606:174:29","statements":[{"nativeSrc":"7616:16:29","nodeType":"YulAssignment","src":"7616:16:29","value":{"arguments":[{"name":"x","nativeSrc":"7627:1:29","nodeType":"YulIdentifier","src":"7627:1:29"},{"name":"y","nativeSrc":"7630:1:29","nodeType":"YulIdentifier","src":"7630:1:29"}],"functionName":{"name":"add","nativeSrc":"7623:3:29","nodeType":"YulIdentifier","src":"7623:3:29"},"nativeSrc":"7623:9:29","nodeType":"YulFunctionCall","src":"7623:9:29"},"variableNames":[{"name":"sum","nativeSrc":"7616:3:29","nodeType":"YulIdentifier","src":"7616:3:29"}]},{"body":{"nativeSrc":"7663:111:29","nodeType":"YulBlock","src":"7663:111:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7684:1:29","nodeType":"YulLiteral","src":"7684:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"7691:3:29","nodeType":"YulLiteral","src":"7691:3:29","type":"","value":"224"},{"kind":"number","nativeSrc":"7696:10:29","nodeType":"YulLiteral","src":"7696:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"7687:3:29","nodeType":"YulIdentifier","src":"7687:3:29"},"nativeSrc":"7687:20:29","nodeType":"YulFunctionCall","src":"7687:20:29"}],"functionName":{"name":"mstore","nativeSrc":"7677:6:29","nodeType":"YulIdentifier","src":"7677:6:29"},"nativeSrc":"7677:31:29","nodeType":"YulFunctionCall","src":"7677:31:29"},"nativeSrc":"7677:31:29","nodeType":"YulExpressionStatement","src":"7677:31:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7728:1:29","nodeType":"YulLiteral","src":"7728:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"7731:4:29","nodeType":"YulLiteral","src":"7731:4:29","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"7721:6:29","nodeType":"YulIdentifier","src":"7721:6:29"},"nativeSrc":"7721:15:29","nodeType":"YulFunctionCall","src":"7721:15:29"},"nativeSrc":"7721:15:29","nodeType":"YulExpressionStatement","src":"7721:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7756:1:29","nodeType":"YulLiteral","src":"7756:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"7759:4:29","nodeType":"YulLiteral","src":"7759:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7749:6:29","nodeType":"YulIdentifier","src":"7749:6:29"},"nativeSrc":"7749:15:29","nodeType":"YulFunctionCall","src":"7749:15:29"},"nativeSrc":"7749:15:29","nodeType":"YulExpressionStatement","src":"7749:15:29"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"7647:1:29","nodeType":"YulIdentifier","src":"7647:1:29"},{"name":"sum","nativeSrc":"7650:3:29","nodeType":"YulIdentifier","src":"7650:3:29"}],"functionName":{"name":"gt","nativeSrc":"7644:2:29","nodeType":"YulIdentifier","src":"7644:2:29"},"nativeSrc":"7644:10:29","nodeType":"YulFunctionCall","src":"7644:10:29"},"nativeSrc":"7641:133:29","nodeType":"YulIf","src":"7641:133:29"}]},"name":"checked_add_t_uint256","nativeSrc":"7558:222:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"7589:1:29","nodeType":"YulTypedName","src":"7589:1:29","type":""},{"name":"y","nativeSrc":"7592:1:29","nodeType":"YulTypedName","src":"7592:1:29","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"7598:3:29","nodeType":"YulTypedName","src":"7598:3:29","type":""}],"src":"7558:222:29"},{"body":{"nativeSrc":"7959:174:29","nodeType":"YulBlock","src":"7959:174:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7976:9:29","nodeType":"YulIdentifier","src":"7976:9:29"},{"kind":"number","nativeSrc":"7987:2:29","nodeType":"YulLiteral","src":"7987:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"7969:6:29","nodeType":"YulIdentifier","src":"7969:6:29"},"nativeSrc":"7969:21:29","nodeType":"YulFunctionCall","src":"7969:21:29"},"nativeSrc":"7969:21:29","nodeType":"YulExpressionStatement","src":"7969:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8010:9:29","nodeType":"YulIdentifier","src":"8010:9:29"},{"kind":"number","nativeSrc":"8021:2:29","nodeType":"YulLiteral","src":"8021:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8006:3:29","nodeType":"YulIdentifier","src":"8006:3:29"},"nativeSrc":"8006:18:29","nodeType":"YulFunctionCall","src":"8006:18:29"},{"kind":"number","nativeSrc":"8026:2:29","nodeType":"YulLiteral","src":"8026:2:29","type":"","value":"24"}],"functionName":{"name":"mstore","nativeSrc":"7999:6:29","nodeType":"YulIdentifier","src":"7999:6:29"},"nativeSrc":"7999:30:29","nodeType":"YulFunctionCall","src":"7999:30:29"},"nativeSrc":"7999:30:29","nodeType":"YulExpressionStatement","src":"7999:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8049:9:29","nodeType":"YulIdentifier","src":"8049:9:29"},{"kind":"number","nativeSrc":"8060:2:29","nodeType":"YulLiteral","src":"8060:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8045:3:29","nodeType":"YulIdentifier","src":"8045:3:29"},"nativeSrc":"8045:18:29","nodeType":"YulFunctionCall","src":"8045:18:29"},{"hexValue":"45787069727920746f6f2066617220696e20667574757265","kind":"string","nativeSrc":"8065:26:29","nodeType":"YulLiteral","src":"8065:26:29","type":"","value":"Expiry too far in future"}],"functionName":{"name":"mstore","nativeSrc":"8038:6:29","nodeType":"YulIdentifier","src":"8038:6:29"},"nativeSrc":"8038:54:29","nodeType":"YulFunctionCall","src":"8038:54:29"},"nativeSrc":"8038:54:29","nodeType":"YulExpressionStatement","src":"8038:54:29"},{"nativeSrc":"8101:26:29","nodeType":"YulAssignment","src":"8101:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"8113:9:29","nodeType":"YulIdentifier","src":"8113:9:29"},{"kind":"number","nativeSrc":"8124:2:29","nodeType":"YulLiteral","src":"8124:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8109:3:29","nodeType":"YulIdentifier","src":"8109:3:29"},"nativeSrc":"8109:18:29","nodeType":"YulFunctionCall","src":"8109:18:29"},"variableNames":[{"name":"tail","nativeSrc":"8101:4:29","nodeType":"YulIdentifier","src":"8101:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_ecfa266217da3a80d0171313986f68cbc4cac0cae9e6359310dca2ed53539b73__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7785:348:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7936:9:29","nodeType":"YulTypedName","src":"7936:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7950:4:29","nodeType":"YulTypedName","src":"7950:4:29","type":""}],"src":"7785:348:29"},{"body":{"nativeSrc":"8312:174:29","nodeType":"YulBlock","src":"8312:174:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8329:9:29","nodeType":"YulIdentifier","src":"8329:9:29"},{"kind":"number","nativeSrc":"8340:2:29","nodeType":"YulLiteral","src":"8340:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"8322:6:29","nodeType":"YulIdentifier","src":"8322:6:29"},"nativeSrc":"8322:21:29","nodeType":"YulFunctionCall","src":"8322:21:29"},"nativeSrc":"8322:21:29","nodeType":"YulExpressionStatement","src":"8322:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8363:9:29","nodeType":"YulIdentifier","src":"8363:9:29"},{"kind":"number","nativeSrc":"8374:2:29","nodeType":"YulLiteral","src":"8374:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8359:3:29","nodeType":"YulIdentifier","src":"8359:3:29"},"nativeSrc":"8359:18:29","nodeType":"YulFunctionCall","src":"8359:18:29"},{"kind":"number","nativeSrc":"8379:2:29","nodeType":"YulLiteral","src":"8379:2:29","type":"","value":"24"}],"functionName":{"name":"mstore","nativeSrc":"8352:6:29","nodeType":"YulIdentifier","src":"8352:6:29"},"nativeSrc":"8352:30:29","nodeType":"YulFunctionCall","src":"8352:30:29"},"nativeSrc":"8352:30:29","nodeType":"YulExpressionStatement","src":"8352:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8402:9:29","nodeType":"YulIdentifier","src":"8402:9:29"},{"kind":"number","nativeSrc":"8413:2:29","nodeType":"YulLiteral","src":"8413:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8398:3:29","nodeType":"YulIdentifier","src":"8398:3:29"},"nativeSrc":"8398:18:29","nodeType":"YulFunctionCall","src":"8398:18:29"},{"hexValue":"496e73756666696369656e74205342432062616c616e6365","kind":"string","nativeSrc":"8418:26:29","nodeType":"YulLiteral","src":"8418:26:29","type":"","value":"Insufficient SBC balance"}],"functionName":{"name":"mstore","nativeSrc":"8391:6:29","nodeType":"YulIdentifier","src":"8391:6:29"},"nativeSrc":"8391:54:29","nodeType":"YulFunctionCall","src":"8391:54:29"},"nativeSrc":"8391:54:29","nodeType":"YulExpressionStatement","src":"8391:54:29"},{"nativeSrc":"8454:26:29","nodeType":"YulAssignment","src":"8454:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"8466:9:29","nodeType":"YulIdentifier","src":"8466:9:29"},{"kind":"number","nativeSrc":"8477:2:29","nodeType":"YulLiteral","src":"8477:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8462:3:29","nodeType":"YulIdentifier","src":"8462:3:29"},"nativeSrc":"8462:18:29","nodeType":"YulFunctionCall","src":"8462:18:29"},"variableNames":[{"name":"tail","nativeSrc":"8454:4:29","nodeType":"YulIdentifier","src":"8454:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_5dc47c422d9659e6766e8592ccdda1f843855cf468f696abb546c21a24e75228__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8138:348:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8289:9:29","nodeType":"YulTypedName","src":"8289:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8303:4:29","nodeType":"YulTypedName","src":"8303:4:29","type":""}],"src":"8138:348:29"},{"body":{"nativeSrc":"8704:276:29","nodeType":"YulBlock","src":"8704:276:29","statements":[{"nativeSrc":"8714:27:29","nodeType":"YulAssignment","src":"8714:27:29","value":{"arguments":[{"name":"headStart","nativeSrc":"8726:9:29","nodeType":"YulIdentifier","src":"8726:9:29"},{"kind":"number","nativeSrc":"8737:3:29","nodeType":"YulLiteral","src":"8737:3:29","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"8722:3:29","nodeType":"YulIdentifier","src":"8722:3:29"},"nativeSrc":"8722:19:29","nodeType":"YulFunctionCall","src":"8722:19:29"},"variableNames":[{"name":"tail","nativeSrc":"8714:4:29","nodeType":"YulIdentifier","src":"8714:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8757:9:29","nodeType":"YulIdentifier","src":"8757:9:29"},{"name":"value0","nativeSrc":"8768:6:29","nodeType":"YulIdentifier","src":"8768:6:29"}],"functionName":{"name":"mstore","nativeSrc":"8750:6:29","nodeType":"YulIdentifier","src":"8750:6:29"},"nativeSrc":"8750:25:29","nodeType":"YulFunctionCall","src":"8750:25:29"},"nativeSrc":"8750:25:29","nodeType":"YulExpressionStatement","src":"8750:25:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8795:9:29","nodeType":"YulIdentifier","src":"8795:9:29"},{"kind":"number","nativeSrc":"8806:2:29","nodeType":"YulLiteral","src":"8806:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8791:3:29","nodeType":"YulIdentifier","src":"8791:3:29"},"nativeSrc":"8791:18:29","nodeType":"YulFunctionCall","src":"8791:18:29"},{"arguments":[{"name":"value1","nativeSrc":"8815:6:29","nodeType":"YulIdentifier","src":"8815:6:29"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"8831:3:29","nodeType":"YulLiteral","src":"8831:3:29","type":"","value":"160"},{"kind":"number","nativeSrc":"8836:1:29","nodeType":"YulLiteral","src":"8836:1:29","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"8827:3:29","nodeType":"YulIdentifier","src":"8827:3:29"},"nativeSrc":"8827:11:29","nodeType":"YulFunctionCall","src":"8827:11:29"},{"kind":"number","nativeSrc":"8840:1:29","nodeType":"YulLiteral","src":"8840:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"8823:3:29","nodeType":"YulIdentifier","src":"8823:3:29"},"nativeSrc":"8823:19:29","nodeType":"YulFunctionCall","src":"8823:19:29"}],"functionName":{"name":"and","nativeSrc":"8811:3:29","nodeType":"YulIdentifier","src":"8811:3:29"},"nativeSrc":"8811:32:29","nodeType":"YulFunctionCall","src":"8811:32:29"}],"functionName":{"name":"mstore","nativeSrc":"8784:6:29","nodeType":"YulIdentifier","src":"8784:6:29"},"nativeSrc":"8784:60:29","nodeType":"YulFunctionCall","src":"8784:60:29"},"nativeSrc":"8784:60:29","nodeType":"YulExpressionStatement","src":"8784:60:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8864:9:29","nodeType":"YulIdentifier","src":"8864:9:29"},{"kind":"number","nativeSrc":"8875:2:29","nodeType":"YulLiteral","src":"8875:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8860:3:29","nodeType":"YulIdentifier","src":"8860:3:29"},"nativeSrc":"8860:18:29","nodeType":"YulFunctionCall","src":"8860:18:29"},{"name":"value2","nativeSrc":"8880:6:29","nodeType":"YulIdentifier","src":"8880:6:29"}],"functionName":{"name":"mstore","nativeSrc":"8853:6:29","nodeType":"YulIdentifier","src":"8853:6:29"},"nativeSrc":"8853:34:29","nodeType":"YulFunctionCall","src":"8853:34:29"},"nativeSrc":"8853:34:29","nodeType":"YulExpressionStatement","src":"8853:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8907:9:29","nodeType":"YulIdentifier","src":"8907:9:29"},{"kind":"number","nativeSrc":"8918:2:29","nodeType":"YulLiteral","src":"8918:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8903:3:29","nodeType":"YulIdentifier","src":"8903:3:29"},"nativeSrc":"8903:18:29","nodeType":"YulFunctionCall","src":"8903:18:29"},{"name":"value3","nativeSrc":"8923:6:29","nodeType":"YulIdentifier","src":"8923:6:29"}],"functionName":{"name":"mstore","nativeSrc":"8896:6:29","nodeType":"YulIdentifier","src":"8896:6:29"},"nativeSrc":"8896:34:29","nodeType":"YulFunctionCall","src":"8896:34:29"},"nativeSrc":"8896:34:29","nodeType":"YulExpressionStatement","src":"8896:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8950:9:29","nodeType":"YulIdentifier","src":"8950:9:29"},{"kind":"number","nativeSrc":"8961:3:29","nodeType":"YulLiteral","src":"8961:3:29","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8946:3:29","nodeType":"YulIdentifier","src":"8946:3:29"},"nativeSrc":"8946:19:29","nodeType":"YulFunctionCall","src":"8946:19:29"},{"name":"value4","nativeSrc":"8967:6:29","nodeType":"YulIdentifier","src":"8967:6:29"}],"functionName":{"name":"mstore","nativeSrc":"8939:6:29","nodeType":"YulIdentifier","src":"8939:6:29"},"nativeSrc":"8939:35:29","nodeType":"YulFunctionCall","src":"8939:35:29"},"nativeSrc":"8939:35:29","nodeType":"YulExpressionStatement","src":"8939:35:29"}]},"name":"abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256_t_bytes32__to_t_uint256_t_address_t_uint256_t_uint256_t_bytes32__fromStack_reversed","nativeSrc":"8491:489:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8641:9:29","nodeType":"YulTypedName","src":"8641:9:29","type":""},{"name":"value4","nativeSrc":"8652:6:29","nodeType":"YulTypedName","src":"8652:6:29","type":""},{"name":"value3","nativeSrc":"8660:6:29","nodeType":"YulTypedName","src":"8660:6:29","type":""},{"name":"value2","nativeSrc":"8668:6:29","nodeType":"YulTypedName","src":"8668:6:29","type":""},{"name":"value1","nativeSrc":"8676:6:29","nodeType":"YulTypedName","src":"8676:6:29","type":""},{"name":"value0","nativeSrc":"8684:6:29","nodeType":"YulTypedName","src":"8684:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8695:4:29","nodeType":"YulTypedName","src":"8695:4:29","type":""}],"src":"8491:489:29"},{"body":{"nativeSrc":"9159:167:29","nodeType":"YulBlock","src":"9159:167:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9176:9:29","nodeType":"YulIdentifier","src":"9176:9:29"},{"kind":"number","nativeSrc":"9187:2:29","nodeType":"YulLiteral","src":"9187:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"9169:6:29","nodeType":"YulIdentifier","src":"9169:6:29"},"nativeSrc":"9169:21:29","nodeType":"YulFunctionCall","src":"9169:21:29"},"nativeSrc":"9169:21:29","nodeType":"YulExpressionStatement","src":"9169:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9210:9:29","nodeType":"YulIdentifier","src":"9210:9:29"},{"kind":"number","nativeSrc":"9221:2:29","nodeType":"YulLiteral","src":"9221:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9206:3:29","nodeType":"YulIdentifier","src":"9206:3:29"},"nativeSrc":"9206:18:29","nodeType":"YulFunctionCall","src":"9206:18:29"},{"kind":"number","nativeSrc":"9226:2:29","nodeType":"YulLiteral","src":"9226:2:29","type":"","value":"17"}],"functionName":{"name":"mstore","nativeSrc":"9199:6:29","nodeType":"YulIdentifier","src":"9199:6:29"},"nativeSrc":"9199:30:29","nodeType":"YulFunctionCall","src":"9199:30:29"},"nativeSrc":"9199:30:29","nodeType":"YulExpressionStatement","src":"9199:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9249:9:29","nodeType":"YulIdentifier","src":"9249:9:29"},{"kind":"number","nativeSrc":"9260:2:29","nodeType":"YulLiteral","src":"9260:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9245:3:29","nodeType":"YulIdentifier","src":"9245:3:29"},"nativeSrc":"9245:18:29","nodeType":"YulFunctionCall","src":"9245:18:29"},{"hexValue":"496e76616c6964207369676e6174757265","kind":"string","nativeSrc":"9265:19:29","nodeType":"YulLiteral","src":"9265:19:29","type":"","value":"Invalid signature"}],"functionName":{"name":"mstore","nativeSrc":"9238:6:29","nodeType":"YulIdentifier","src":"9238:6:29"},"nativeSrc":"9238:47:29","nodeType":"YulFunctionCall","src":"9238:47:29"},"nativeSrc":"9238:47:29","nodeType":"YulExpressionStatement","src":"9238:47:29"},{"nativeSrc":"9294:26:29","nodeType":"YulAssignment","src":"9294:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"9306:9:29","nodeType":"YulIdentifier","src":"9306:9:29"},{"kind":"number","nativeSrc":"9317:2:29","nodeType":"YulLiteral","src":"9317:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9302:3:29","nodeType":"YulIdentifier","src":"9302:3:29"},"nativeSrc":"9302:18:29","nodeType":"YulFunctionCall","src":"9302:18:29"},"variableNames":[{"name":"tail","nativeSrc":"9294:4:29","nodeType":"YulIdentifier","src":"9294:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8985:341:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9136:9:29","nodeType":"YulTypedName","src":"9136:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9150:4:29","nodeType":"YulTypedName","src":"9150:4:29","type":""}],"src":"8985:341:29"},{"body":{"nativeSrc":"9432:76:29","nodeType":"YulBlock","src":"9432:76:29","statements":[{"nativeSrc":"9442:26:29","nodeType":"YulAssignment","src":"9442:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"9454:9:29","nodeType":"YulIdentifier","src":"9454:9:29"},{"kind":"number","nativeSrc":"9465:2:29","nodeType":"YulLiteral","src":"9465:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9450:3:29","nodeType":"YulIdentifier","src":"9450:3:29"},"nativeSrc":"9450:18:29","nodeType":"YulFunctionCall","src":"9450:18:29"},"variableNames":[{"name":"tail","nativeSrc":"9442:4:29","nodeType":"YulIdentifier","src":"9442:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9484:9:29","nodeType":"YulIdentifier","src":"9484:9:29"},{"name":"value0","nativeSrc":"9495:6:29","nodeType":"YulIdentifier","src":"9495:6:29"}],"functionName":{"name":"mstore","nativeSrc":"9477:6:29","nodeType":"YulIdentifier","src":"9477:6:29"},"nativeSrc":"9477:25:29","nodeType":"YulFunctionCall","src":"9477:25:29"},"nativeSrc":"9477:25:29","nodeType":"YulExpressionStatement","src":"9477:25:29"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"9331:177:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9401:9:29","nodeType":"YulTypedName","src":"9401:9:29","type":""},{"name":"value0","nativeSrc":"9412:6:29","nodeType":"YulTypedName","src":"9412:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9423:4:29","nodeType":"YulTypedName","src":"9423:4:29","type":""}],"src":"9331:177:29"},{"body":{"nativeSrc":"9687:169:29","nodeType":"YulBlock","src":"9687:169:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9704:9:29","nodeType":"YulIdentifier","src":"9704:9:29"},{"kind":"number","nativeSrc":"9715:2:29","nodeType":"YulLiteral","src":"9715:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"9697:6:29","nodeType":"YulIdentifier","src":"9697:6:29"},"nativeSrc":"9697:21:29","nodeType":"YulFunctionCall","src":"9697:21:29"},"nativeSrc":"9697:21:29","nodeType":"YulExpressionStatement","src":"9697:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9738:9:29","nodeType":"YulIdentifier","src":"9738:9:29"},{"kind":"number","nativeSrc":"9749:2:29","nodeType":"YulLiteral","src":"9749:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9734:3:29","nodeType":"YulIdentifier","src":"9734:3:29"},"nativeSrc":"9734:18:29","nodeType":"YulFunctionCall","src":"9734:18:29"},{"kind":"number","nativeSrc":"9754:2:29","nodeType":"YulLiteral","src":"9754:2:29","type":"","value":"19"}],"functionName":{"name":"mstore","nativeSrc":"9727:6:29","nodeType":"YulIdentifier","src":"9727:6:29"},"nativeSrc":"9727:30:29","nodeType":"YulFunctionCall","src":"9727:30:29"},"nativeSrc":"9727:30:29","nodeType":"YulExpressionStatement","src":"9727:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9777:9:29","nodeType":"YulIdentifier","src":"9777:9:29"},{"kind":"number","nativeSrc":"9788:2:29","nodeType":"YulLiteral","src":"9788:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9773:3:29","nodeType":"YulIdentifier","src":"9773:3:29"},"nativeSrc":"9773:18:29","nodeType":"YulFunctionCall","src":"9773:18:29"},{"hexValue":"5a65726f2061646472657373207369676e6572","kind":"string","nativeSrc":"9793:21:29","nodeType":"YulLiteral","src":"9793:21:29","type":"","value":"Zero address signer"}],"functionName":{"name":"mstore","nativeSrc":"9766:6:29","nodeType":"YulIdentifier","src":"9766:6:29"},"nativeSrc":"9766:49:29","nodeType":"YulFunctionCall","src":"9766:49:29"},"nativeSrc":"9766:49:29","nodeType":"YulExpressionStatement","src":"9766:49:29"},{"nativeSrc":"9824:26:29","nodeType":"YulAssignment","src":"9824:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"9836:9:29","nodeType":"YulIdentifier","src":"9836:9:29"},{"kind":"number","nativeSrc":"9847:2:29","nodeType":"YulLiteral","src":"9847:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9832:3:29","nodeType":"YulIdentifier","src":"9832:3:29"},"nativeSrc":"9832:18:29","nodeType":"YulFunctionCall","src":"9832:18:29"},"variableNames":[{"name":"tail","nativeSrc":"9824:4:29","nodeType":"YulIdentifier","src":"9824:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_d855b2d93307064cc81c5bde1af450b2b7b0dc078110db13366d856e1e12d1d2__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9513:343:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9664:9:29","nodeType":"YulTypedName","src":"9664:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9678:4:29","nodeType":"YulTypedName","src":"9678:4:29","type":""}],"src":"9513:343:29"},{"body":{"nativeSrc":"9893:95:29","nodeType":"YulBlock","src":"9893:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9910:1:29","nodeType":"YulLiteral","src":"9910:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"9917:3:29","nodeType":"YulLiteral","src":"9917:3:29","type":"","value":"224"},{"kind":"number","nativeSrc":"9922:10:29","nodeType":"YulLiteral","src":"9922:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"9913:3:29","nodeType":"YulIdentifier","src":"9913:3:29"},"nativeSrc":"9913:20:29","nodeType":"YulFunctionCall","src":"9913:20:29"}],"functionName":{"name":"mstore","nativeSrc":"9903:6:29","nodeType":"YulIdentifier","src":"9903:6:29"},"nativeSrc":"9903:31:29","nodeType":"YulFunctionCall","src":"9903:31:29"},"nativeSrc":"9903:31:29","nodeType":"YulExpressionStatement","src":"9903:31:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9950:1:29","nodeType":"YulLiteral","src":"9950:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"9953:4:29","nodeType":"YulLiteral","src":"9953:4:29","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"9943:6:29","nodeType":"YulIdentifier","src":"9943:6:29"},"nativeSrc":"9943:15:29","nodeType":"YulFunctionCall","src":"9943:15:29"},"nativeSrc":"9943:15:29","nodeType":"YulExpressionStatement","src":"9943:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9974:1:29","nodeType":"YulLiteral","src":"9974:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"9977:4:29","nodeType":"YulLiteral","src":"9977:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9967:6:29","nodeType":"YulIdentifier","src":"9967:6:29"},"nativeSrc":"9967:15:29","nodeType":"YulFunctionCall","src":"9967:15:29"},"nativeSrc":"9967:15:29","nodeType":"YulExpressionStatement","src":"9967:15:29"}]},"name":"panic_error_0x21","nativeSrc":"9861:127:29","nodeType":"YulFunctionDefinition","src":"9861:127:29"},{"body":{"nativeSrc":"10122:119:29","nodeType":"YulBlock","src":"10122:119:29","statements":[{"nativeSrc":"10132:26:29","nodeType":"YulAssignment","src":"10132:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"10144:9:29","nodeType":"YulIdentifier","src":"10144:9:29"},{"kind":"number","nativeSrc":"10155:2:29","nodeType":"YulLiteral","src":"10155:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10140:3:29","nodeType":"YulIdentifier","src":"10140:3:29"},"nativeSrc":"10140:18:29","nodeType":"YulFunctionCall","src":"10140:18:29"},"variableNames":[{"name":"tail","nativeSrc":"10132:4:29","nodeType":"YulIdentifier","src":"10132:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10174:9:29","nodeType":"YulIdentifier","src":"10174:9:29"},{"name":"value0","nativeSrc":"10185:6:29","nodeType":"YulIdentifier","src":"10185:6:29"}],"functionName":{"name":"mstore","nativeSrc":"10167:6:29","nodeType":"YulIdentifier","src":"10167:6:29"},"nativeSrc":"10167:25:29","nodeType":"YulFunctionCall","src":"10167:25:29"},"nativeSrc":"10167:25:29","nodeType":"YulExpressionStatement","src":"10167:25:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10212:9:29","nodeType":"YulIdentifier","src":"10212:9:29"},{"kind":"number","nativeSrc":"10223:2:29","nodeType":"YulLiteral","src":"10223:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10208:3:29","nodeType":"YulIdentifier","src":"10208:3:29"},"nativeSrc":"10208:18:29","nodeType":"YulFunctionCall","src":"10208:18:29"},{"name":"value1","nativeSrc":"10228:6:29","nodeType":"YulIdentifier","src":"10228:6:29"}],"functionName":{"name":"mstore","nativeSrc":"10201:6:29","nodeType":"YulIdentifier","src":"10201:6:29"},"nativeSrc":"10201:34:29","nodeType":"YulFunctionCall","src":"10201:34:29"},"nativeSrc":"10201:34:29","nodeType":"YulExpressionStatement","src":"10201:34:29"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"9993:248:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10083:9:29","nodeType":"YulTypedName","src":"10083:9:29","type":""},{"name":"value1","nativeSrc":"10094:6:29","nodeType":"YulTypedName","src":"10094:6:29","type":""},{"name":"value0","nativeSrc":"10102:6:29","nodeType":"YulTypedName","src":"10102:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10113:4:29","nodeType":"YulTypedName","src":"10113:4:29","type":""}],"src":"9993:248:29"},{"body":{"nativeSrc":"10420:169:29","nodeType":"YulBlock","src":"10420:169:29","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10437:9:29","nodeType":"YulIdentifier","src":"10437:9:29"},{"kind":"number","nativeSrc":"10448:2:29","nodeType":"YulLiteral","src":"10448:2:29","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"10430:6:29","nodeType":"YulIdentifier","src":"10430:6:29"},"nativeSrc":"10430:21:29","nodeType":"YulFunctionCall","src":"10430:21:29"},"nativeSrc":"10430:21:29","nodeType":"YulExpressionStatement","src":"10430:21:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10471:9:29","nodeType":"YulIdentifier","src":"10471:9:29"},{"kind":"number","nativeSrc":"10482:2:29","nodeType":"YulLiteral","src":"10482:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10467:3:29","nodeType":"YulIdentifier","src":"10467:3:29"},"nativeSrc":"10467:18:29","nodeType":"YulFunctionCall","src":"10467:18:29"},{"kind":"number","nativeSrc":"10487:2:29","nodeType":"YulLiteral","src":"10487:2:29","type":"","value":"19"}],"functionName":{"name":"mstore","nativeSrc":"10460:6:29","nodeType":"YulIdentifier","src":"10460:6:29"},"nativeSrc":"10460:30:29","nodeType":"YulFunctionCall","src":"10460:30:29"},"nativeSrc":"10460:30:29","nodeType":"YulExpressionStatement","src":"10460:30:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10510:9:29","nodeType":"YulIdentifier","src":"10510:9:29"},{"kind":"number","nativeSrc":"10521:2:29","nodeType":"YulLiteral","src":"10521:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10506:3:29","nodeType":"YulIdentifier","src":"10506:3:29"},"nativeSrc":"10506:18:29","nodeType":"YulFunctionCall","src":"10506:18:29"},{"hexValue":"536c696365206f7574206f6620626f756e6473","kind":"string","nativeSrc":"10526:21:29","nodeType":"YulLiteral","src":"10526:21:29","type":"","value":"Slice out of bounds"}],"functionName":{"name":"mstore","nativeSrc":"10499:6:29","nodeType":"YulIdentifier","src":"10499:6:29"},"nativeSrc":"10499:49:29","nodeType":"YulFunctionCall","src":"10499:49:29"},"nativeSrc":"10499:49:29","nodeType":"YulExpressionStatement","src":"10499:49:29"},{"nativeSrc":"10557:26:29","nodeType":"YulAssignment","src":"10557:26:29","value":{"arguments":[{"name":"headStart","nativeSrc":"10569:9:29","nodeType":"YulIdentifier","src":"10569:9:29"},{"kind":"number","nativeSrc":"10580:2:29","nodeType":"YulLiteral","src":"10580:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10565:3:29","nodeType":"YulIdentifier","src":"10565:3:29"},"nativeSrc":"10565:18:29","nodeType":"YulFunctionCall","src":"10565:18:29"},"variableNames":[{"name":"tail","nativeSrc":"10557:4:29","nodeType":"YulIdentifier","src":"10557:4:29"}]}]},"name":"abi_encode_tuple_t_stringliteral_f1c269d7eab972b2fd4d87a15c317e920493e7eea923de7e48c0ebcb7f611fa9__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"10246:343:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10397:9:29","nodeType":"YulTypedName","src":"10397:9:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10411:4:29","nodeType":"YulTypedName","src":"10411:4:29","type":""}],"src":"10246:343:29"},{"body":{"nativeSrc":"10626:95:29","nodeType":"YulBlock","src":"10626:95:29","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10643:1:29","nodeType":"YulLiteral","src":"10643:1:29","type":"","value":"0"},{"arguments":[{"kind":"number","nativeSrc":"10650:3:29","nodeType":"YulLiteral","src":"10650:3:29","type":"","value":"224"},{"kind":"number","nativeSrc":"10655:10:29","nodeType":"YulLiteral","src":"10655:10:29","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nativeSrc":"10646:3:29","nodeType":"YulIdentifier","src":"10646:3:29"},"nativeSrc":"10646:20:29","nodeType":"YulFunctionCall","src":"10646:20:29"}],"functionName":{"name":"mstore","nativeSrc":"10636:6:29","nodeType":"YulIdentifier","src":"10636:6:29"},"nativeSrc":"10636:31:29","nodeType":"YulFunctionCall","src":"10636:31:29"},"nativeSrc":"10636:31:29","nodeType":"YulExpressionStatement","src":"10636:31:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10683:1:29","nodeType":"YulLiteral","src":"10683:1:29","type":"","value":"4"},{"kind":"number","nativeSrc":"10686:4:29","nodeType":"YulLiteral","src":"10686:4:29","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"10676:6:29","nodeType":"YulIdentifier","src":"10676:6:29"},"nativeSrc":"10676:15:29","nodeType":"YulFunctionCall","src":"10676:15:29"},"nativeSrc":"10676:15:29","nodeType":"YulExpressionStatement","src":"10676:15:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10707:1:29","nodeType":"YulLiteral","src":"10707:1:29","type":"","value":"0"},{"kind":"number","nativeSrc":"10710:4:29","nodeType":"YulLiteral","src":"10710:4:29","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"10700:6:29","nodeType":"YulIdentifier","src":"10700:6:29"},"nativeSrc":"10700:15:29","nodeType":"YulFunctionCall","src":"10700:15:29"},"nativeSrc":"10700:15:29","nodeType":"YulExpressionStatement","src":"10700:15:29"}]},"name":"panic_error_0x41","nativeSrc":"10594:127:29","nodeType":"YulFunctionDefinition","src":"10594:127:29"},{"body":{"nativeSrc":"10907:217:29","nodeType":"YulBlock","src":"10907:217:29","statements":[{"nativeSrc":"10917:27:29","nodeType":"YulAssignment","src":"10917:27:29","value":{"arguments":[{"name":"headStart","nativeSrc":"10929:9:29","nodeType":"YulIdentifier","src":"10929:9:29"},{"kind":"number","nativeSrc":"10940:3:29","nodeType":"YulLiteral","src":"10940:3:29","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"10925:3:29","nodeType":"YulIdentifier","src":"10925:3:29"},"nativeSrc":"10925:19:29","nodeType":"YulFunctionCall","src":"10925:19:29"},"variableNames":[{"name":"tail","nativeSrc":"10917:4:29","nodeType":"YulIdentifier","src":"10917:4:29"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10960:9:29","nodeType":"YulIdentifier","src":"10960:9:29"},{"name":"value0","nativeSrc":"10971:6:29","nodeType":"YulIdentifier","src":"10971:6:29"}],"functionName":{"name":"mstore","nativeSrc":"10953:6:29","nodeType":"YulIdentifier","src":"10953:6:29"},"nativeSrc":"10953:25:29","nodeType":"YulFunctionCall","src":"10953:25:29"},"nativeSrc":"10953:25:29","nodeType":"YulExpressionStatement","src":"10953:25:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10998:9:29","nodeType":"YulIdentifier","src":"10998:9:29"},{"kind":"number","nativeSrc":"11009:2:29","nodeType":"YulLiteral","src":"11009:2:29","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10994:3:29","nodeType":"YulIdentifier","src":"10994:3:29"},"nativeSrc":"10994:18:29","nodeType":"YulFunctionCall","src":"10994:18:29"},{"arguments":[{"name":"value1","nativeSrc":"11018:6:29","nodeType":"YulIdentifier","src":"11018:6:29"},{"kind":"number","nativeSrc":"11026:4:29","nodeType":"YulLiteral","src":"11026:4:29","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"11014:3:29","nodeType":"YulIdentifier","src":"11014:3:29"},"nativeSrc":"11014:17:29","nodeType":"YulFunctionCall","src":"11014:17:29"}],"functionName":{"name":"mstore","nativeSrc":"10987:6:29","nodeType":"YulIdentifier","src":"10987:6:29"},"nativeSrc":"10987:45:29","nodeType":"YulFunctionCall","src":"10987:45:29"},"nativeSrc":"10987:45:29","nodeType":"YulExpressionStatement","src":"10987:45:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11052:9:29","nodeType":"YulIdentifier","src":"11052:9:29"},{"kind":"number","nativeSrc":"11063:2:29","nodeType":"YulLiteral","src":"11063:2:29","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11048:3:29","nodeType":"YulIdentifier","src":"11048:3:29"},"nativeSrc":"11048:18:29","nodeType":"YulFunctionCall","src":"11048:18:29"},{"name":"value2","nativeSrc":"11068:6:29","nodeType":"YulIdentifier","src":"11068:6:29"}],"functionName":{"name":"mstore","nativeSrc":"11041:6:29","nodeType":"YulIdentifier","src":"11041:6:29"},"nativeSrc":"11041:34:29","nodeType":"YulFunctionCall","src":"11041:34:29"},"nativeSrc":"11041:34:29","nodeType":"YulExpressionStatement","src":"11041:34:29"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11095:9:29","nodeType":"YulIdentifier","src":"11095:9:29"},{"kind":"number","nativeSrc":"11106:2:29","nodeType":"YulLiteral","src":"11106:2:29","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11091:3:29","nodeType":"YulIdentifier","src":"11091:3:29"},"nativeSrc":"11091:18:29","nodeType":"YulFunctionCall","src":"11091:18:29"},{"name":"value3","nativeSrc":"11111:6:29","nodeType":"YulIdentifier","src":"11111:6:29"}],"functionName":{"name":"mstore","nativeSrc":"11084:6:29","nodeType":"YulIdentifier","src":"11084:6:29"},"nativeSrc":"11084:34:29","nodeType":"YulFunctionCall","src":"11084:34:29"},"nativeSrc":"11084:34:29","nodeType":"YulExpressionStatement","src":"11084:34:29"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"10726:398:29","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10852:9:29","nodeType":"YulTypedName","src":"10852:9:29","type":""},{"name":"value3","nativeSrc":"10863:6:29","nodeType":"YulTypedName","src":"10863:6:29","type":""},{"name":"value2","nativeSrc":"10871:6:29","nodeType":"YulTypedName","src":"10871:6:29","type":""},{"name":"value1","nativeSrc":"10879:6:29","nodeType":"YulTypedName","src":"10879:6:29","type":""},{"name":"value0","nativeSrc":"10887:6:29","nodeType":"YulTypedName","src":"10887:6:29","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10898:4:29","nodeType":"YulTypedName","src":"10898:4:29","type":""}],"src":"10726:398:29"}]},"contents":"{\n    { }\n    function validator_revert_address_payable(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address_payable(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_struct$_PackedUserOperation_$399_calldata_ptrt_bytes32t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if slt(sub(dataEnd, _1), 288) { revert(0, 0) }\n        value0 := _1\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let length := mload(value0)\n        mstore(add(headStart, 64), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(add(headStart, i), 96), mload(add(add(value0, i), 0x20)))\n        }\n        mstore(add(add(headStart, length), 96), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 96)\n        mstore(add(headStart, 0x20), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address_payable(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_enum$_PostOpMode_$244t_bytes_calldata_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(lt(value, 3)) { revert(0, 0) }\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n        value3 := calldataload(add(headStart, 64))\n        value4 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IEntryPoint_$217__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_f789c796bc88b6644f4b1d82a40a6f90d1ada33aa23e9176f89c644271009430__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Zero address withdraw\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c84ea879ba77ce28ba9dedf701fc36f58c603ac0dc3701d534f1f2611de4053f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Zero amount withdraw\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_payable_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_fc544a183a74889e2f0f71a19573312cb640b492ec6195283ec98b45e5f0af57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Caller not EntryPoint\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_80d90a95737f313c53d0bb6837e1fa3081c533ef624cd896bb37942cc6750a82__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Insufficient paymaster deposit\")\n        tail := add(headStart, 96)\n    }\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n        let addr_1 := add(base_ref, rel_offset_of_tail)\n        length := calldataload(addr_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr_1, 0x20)\n        if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n    }\n    function abi_encode_tuple_t_stringliteral_cfe5951392790b135f98d77ba09049bfbc1a1776c53987baf509c661787d5e3b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Invalid paymasterAndData length\")\n        tail := add(headStart, 96)\n    }\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value\n    {\n        let length := mload(array)\n        value := mload(add(array, 0x20))\n        if lt(length, 0x20)\n        {\n            value := and(value, shl(shl(3, sub(0x20, length)), not(0)))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_923b8cbbcee77e95e0614b96c81a4cbd157e2cc78e2937caa0bed8e1c5641a28__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Nonce already used\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_99132f8bb903a5d9600420e3899938d8bfd8aa30795f8fee460656e87dd9c517__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Signature expired\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_ecfa266217da3a80d0171313986f68cbc4cac0cae9e6359310dca2ed53539b73__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Expiry too far in future\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5dc47c422d9659e6766e8592ccdda1f843855cf468f696abb546c21a24e75228__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Insufficient SBC balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256_t_bytes32__to_t_uint256_t_address_t_uint256_t_uint256_t_bytes32__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_d855b2d93307064cc81c5bde1af450b2b7b0dc078110db13366d856e1e12d1d2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Zero address signer\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_f1c269d7eab972b2fd4d87a15c317e920493e7eea923de7e48c0ebcb7f611fa9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Slice out of bounds\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n}","id":29,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"7088":[{"length":32,"start":787},{"length":32,"start":2173}],"7090":[{"length":32,"start":527},{"length":32,"start":2132}],"7102":[{"length":32,"start":682},{"length":32,"start":1109},{"length":32,"start":1313},{"length":32,"start":1437},{"length":32,"start":2843},{"length":32,"start":3157},{"length":32,"start":3298}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xC771909C GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC771909C EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0xCA1D7BA3 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0xFEB61724 EQ PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0xB0D691FE EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xC399EC88 EQ PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x6C19E783 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x795112C9 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x7C627B21 EQ PUSH2 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x205C2878 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x4FE11C8B EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x52B7512C EQ PUSH2 0x16F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x11F2 JUMP JUMPDEST PUSH2 0x38D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x4F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH3 0x93A80 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18F PUSH2 0x18A CALLDATASIZE PUSH1 0x4 PUSH2 0x121E JUMP JUMPDEST PUSH2 0x50A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP3 SWAP2 SWAP1 PUSH2 0x1272 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x12C7 JUMP JUMPDEST PUSH2 0xA60 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0xAFE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x12EB JUMP JUMPDEST PUSH2 0xB10 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0xC2D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x166 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH2 0xC3D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x280 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x12E PUSH2 0xCCD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x349 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x358 CALLDATASIZE PUSH1 0x4 PUSH2 0x12C7 JUMP JUMPDEST PUSH2 0xD80 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B8 PUSH2 0x378 CALLDATASIZE PUSH1 0x4 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x395 PUSH2 0xDBE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x5A65726F2061646472657373207769746864726177 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x42F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x5A65726F20616D6F756E74207769746864726177 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x40B850F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x205C2878 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x499 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4AD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDC320249BE6042385E00F08969A7A6F67F21FB2C393186199F265DA66452750E DUP3 PUSH1 0x40 MLOAD PUSH2 0x4EC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x500 PUSH2 0xDBE JUMP JUMPDEST PUSH2 0x508 PUSH2 0xDEB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x516 PUSH2 0xE40 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x586 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x10D85B1B195C881B9BDD08115B9D1C9E541BDA5B9D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP4 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x610 SWAP2 SWAP1 PUSH2 0x139C JUMP JUMPDEST LT ISZERO PUSH2 0x65E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74207061796D6173746572206465706F7369740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DF JUMP JUMPDEST PUSH2 0x66B PUSH1 0xE0 DUP7 ADD DUP7 PUSH2 0x13B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x95 EQ PUSH2 0x6BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207061796D6173746572416E6444617461206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6CB PUSH1 0xE0 DUP8 ADD DUP8 PUSH2 0x13B5 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 SWAP5 POP PUSH2 0x711 SWAP3 POP DUP5 SWAP2 POP PUSH1 0x14 SWAP1 POP PUSH1 0x20 PUSH2 0xE6B JUMP JUMPDEST PUSH2 0x71A SWAP1 PUSH2 0x1403 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x72B DUP4 PUSH1 0x34 PUSH1 0x20 PUSH2 0xE6B JUMP JUMPDEST PUSH2 0x734 SWAP1 PUSH2 0x1403 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x7B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BDB98D948185B1C9958591E481D5CD959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DF JUMP JUMPDEST TIMESTAMP DUP3 GT PUSH2 0x7F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x14DA59DB985D1D5C9948195E1C1A5C9959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DF JUMP JUMPDEST PUSH2 0x803 PUSH3 0x93A80 TIMESTAMP PUSH2 0x142A JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x852 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45787069727920746F6F2066617220696E206675747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DF JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH4 0x70A08231 PUSH2 0x8AF PUSH1 0x20 DUP14 ADD DUP14 PUSH2 0x12C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x917 SWAP2 SWAP1 PUSH2 0x139C JUMP JUMPDEST LT ISZERO PUSH2 0x965 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74205342432062616C616E63650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x974 DUP6 PUSH1 0x54 PUSH1 0x41 PUSH2 0xE6B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 CHAINID PUSH2 0x986 PUSH1 0x20 DUP14 ADD DUP14 PUSH2 0x12C7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP12 SWAP1 MSTORE PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x9DD DUP3 DUP5 PUSH2 0xF1B JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP2 AND EQ PUSH2 0xA31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE SWAP13 PUSH1 0x0 SWAP13 POP SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA68 PUSH2 0xDBE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2D32B9379030B2323932B9B99039B4B3B732B9 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x5553331329228FBD4123164423717A4A7539F6DFA1C3279A923B98FD681A6C73 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xB06 PUSH2 0xDBE JUMP JUMPDEST PUSH2 0x508 PUSH1 0x0 PUSH2 0xF47 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xB80 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x10D85B1B195C881B9BDD08115B9D1C9E541BDA5B9D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB94 JUMPI PUSH2 0xB94 PUSH2 0x144B JUMP JUMPDEST SUB PUSH2 0xC26 JUMPI PUSH1 0x0 PUSH2 0xBA7 DUP5 DUP7 ADD DUP7 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD SWAP2 SWAP3 POP DUP3 SWAP2 PUSH32 0x86E12680725060749E4481672CF4B5DDE58E5F7222C1F01C7D94F40EBA96E923 SWAP2 SWAP1 LOG2 PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x127F277CAF8451A4A4B3CC01664C207DB03CF985A0BF7827592A33BA5E0823DE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC35 PUSH2 0xDBE JUMP JUMPDEST PUSH2 0x508 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCA4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCC8 SWAP2 SWAP1 PUSH2 0x139C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB760FAF9 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB760FAF9 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD43 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP4 POP PUSH32 0x8C62601349AEA45C56EBE7A2EC7C24EB877C26B369547DAD762528DA3ECF2CE5 SWAP3 POP PUSH1 0x20 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0xD88 PUSH2 0xDBE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xDB2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3DF JUMP JUMPDEST PUSH2 0xDBB DUP2 PUSH2 0xF47 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x508 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3DF JUMP JUMPDEST PUSH2 0xDF3 PUSH2 0xFDA JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x508 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x60 SWAP1 PUSH2 0xE7A DUP4 DUP6 PUSH2 0x142A JUMP JUMPDEST GT ISZERO PUSH2 0xEBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x536C696365206F7574206F6620626F756E6473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xED9 JUMPI PUSH2 0xED9 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xF03 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP6 DUP6 ADD PUSH1 0x20 SWAP1 DUP2 ADD MLOAD SWAP1 DUP3 ADD MSTORE SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xF2B DUP7 DUP7 PUSH2 0x1004 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xF3B DUP3 DUP3 PUSH2 0x1051 JUMP JUMPDEST POP SWAP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xF9F PUSH2 0xE40 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xE23 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x508 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0x103E JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x1030 DUP9 DUP3 DUP6 DUP6 PUSH2 0x110E JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x104A JUMP JUMPDEST POP POP DUP2 MLOAD PUSH1 0x0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1065 JUMPI PUSH2 0x1065 PUSH2 0x144B JUMP JUMPDEST SUB PUSH2 0x106E JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1082 JUMPI PUSH2 0x1082 PUSH2 0x144B JUMP JUMPDEST SUB PUSH2 0x10A0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x10B4 JUMPI PUSH2 0x10B4 PUSH2 0x144B JUMP JUMPDEST SUB PUSH2 0x10D5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x10E9 JUMPI PUSH2 0x10E9 PUSH2 0x144B JUMP JUMPDEST SUB PUSH2 0x110A JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3DF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x1149 JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x119D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x11C9 JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x11D3 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1210 DUP2 PUSH2 0x11DD JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x124A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 ADD PUSH2 0x120 DUP2 DUP8 SUB SLT ISZERO PUSH2 0x125D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x12A0 JUMPI PUSH1 0x20 DUP2 DUP8 ADD DUP2 ADD MLOAD PUSH1 0x60 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x1283 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x60 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x60 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x12E4 DUP2 PUSH2 0x11DD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x1312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x132F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP9 POP SWAP6 SWAP7 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP7 POP PUSH1 0x60 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x13CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x13E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x13FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x1424 JUMPI PUSH1 0x0 NOT DUP2 PUSH1 0x20 SUB PUSH1 0x3 SHL SHL DUP3 AND SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xF41 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP 0x29 DUP2 CREATE SWAP13 EQ 0xB6 0xF8 0xD6 PUSH28 0x53EB128A3A431533B033D4B5D3717F9AADC3C68DFEB964736F6C6343 STOP ADDMOD OR STOP CALLER ","sourceMap":"861:9351:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8511:336;;;;;;;;;;-1:-1:-1;8511:336:28;;;;;:::i;:::-;;:::i;:::-;;9291:65;;;;;;;;;;;;;:::i;1342:52::-;;;;;;;;;;;;1388:6;1342:52;;;;;640:25:29;;;628:2;613:18;1342:52:28;;;;;;;;4111:2744;;;;;;;;;;-1:-1:-1;4111:2744:28;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1850:84:18:-;;;;;;;;;;-1:-1:-1;1897:4:18;1920:7;-1:-1:-1;;;1920:7:18;;;;1850:84;;;1987:14:29;;1980:22;1962:41;;1950:2;1935:18;1850:84:18;1822:187:29;3469:210:28;;;;;;;;;;-1:-1:-1;3469:210:28;;;;;:::i;:::-;;:::i;2293:101:6:-;;;;;;;;;;;;;:::i;1233:45:28:-;;;;;;;;;;;;;;;7229:835;;;;;;;;;;-1:-1:-1;7229:835:28;;;;;:::i;:::-;;:::i;9164:61::-;;;;;;;;;;;;;:::i;1638:85:6:-;;;;;;;;;;-1:-1:-1;1684:7:6;1710:6;-1:-1:-1;;;;;1710:6:6;1638:85;;;-1:-1:-1;;;;;3329:32:29;;;3311:51;;3299:2;3284:18;1638:85:6;3165:203:29;1687:39:28;;;;;;;;;;;;;;;8976:111;;;;;;;;;;;;;:::i;1459:31::-;;;;;;;;;;-1:-1:-1;1459:31:28;;;;-1:-1:-1;;;;;1459:31:28;;;1118:34;;;;;;;;;;;;;;;8150:160;;;:::i;2543:215:6:-;;;;;;;;;;-1:-1:-1;2543:215:6;;;;;:::i;:::-;;:::i;1558:42:28:-;;;;;;;;;;-1:-1:-1;1558:42:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;8511:336;1531:13:6;:11;:13::i;:::-;-1:-1:-1;;;;;8617:29:28;::::1;8609:63;;;::::0;-1:-1:-1;;;8609:63:28;;3987:2:29;8609:63:28::1;::::0;::::1;3969:21:29::0;4026:2;4006:18;;;3999:30;-1:-1:-1;;;4045:18:29;;;4038:51;4106:18;;8609:63:28::1;;;;;;;;;8699:1;8690:6;:10;8682:43;;;::::0;-1:-1:-1;;;8682:43:28;;4337:2:29;8682:43:28::1;::::0;::::1;4319:21:29::0;4376:2;4356:18;;;4349:30;-1:-1:-1;;;4395:18:29;;;4388:50;4455:18;;8682:43:28::1;4135:344:29::0;8682:43:28::1;8735:46;::::0;-1:-1:-1;;;8735:46:28;;-1:-1:-1;;;;;4692:32:29;;;8735:46:28::1;::::0;::::1;4674:51:29::0;4741:18;;;4734:34;;;8735:10:28::1;:21;::::0;::::1;::::0;4647:18:29;;8735:46:28::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;8816:15;-1:-1:-1::0;;;;;8796:44:28::1;;8833:6;8796:44;;;;640:25:29::0;;628:2;613:18;;494:177;8796:44:28::1;;;;;;;;8511:336:::0;;:::o;9291:65::-;1531:13:6;:11;:13::i;:::-;9339:10:28::1;:8;:10::i;:::-;9291:65::o:0;4111:2744::-;4438:20;4460:22;1474:19:18;:17;:19::i;:::-;4563:10:28::1;-1:-1:-1::0;;;;;4585:10:28::1;4563:33;;4555:67;;;::::0;-1:-1:-1;;;4555:67:28;;4981:2:29;4555:67:28::1;::::0;::::1;4963:21:29::0;5020:2;5000:18;;;4993:30;-1:-1:-1;;;5039:18:29;;;5032:51;5100:18;;4555:67:28::1;4779:345:29::0;4555:67:28::1;4719:35;::::0;-1:-1:-1;;;4719:35:28;;4748:4:::1;4719:35;::::0;::::1;3311:51:29::0;4758:7:28;;4719:10:::1;-1:-1:-1::0;;;;;4719:20:28::1;::::0;::::1;::::0;3284:18:29;;4719:35:28::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;;4711:89;;;::::0;-1:-1:-1;;;4711:89:28;;5520:2:29;4711:89:28::1;::::0;::::1;5502:21:29::0;5559:2;5539:18;;;5532:30;5598:32;5578:18;;;5571:60;5648:18;;4711:89:28::1;5318:354:29::0;4711:89:28::1;4970:23;;::::0;::::1;:6:::0;:23:::1;:::i;:::-;:30;;5004:3;4970:37;4962:81;;;::::0;-1:-1:-1;;;4962:81:28;;6405:2:29;4962:81:28::1;::::0;::::1;6387:21:29::0;6444:2;6424:18;;;6417:30;6483:33;6463:18;;;6456:61;6534:18;;4962:81:28::1;6203:355:29::0;4962:81:28::1;5053:29;5085:23;;::::0;::::1;:6:::0;:23:::1;:::i;:::-;5053:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;-1:-1:-1;5053:55:28;;-1:-1:-1;5216:31:28::1;::::0;-1:-1:-1;5053:55:28;;-1:-1:-1;5240:2:28::1;::::0;-1:-1:-1;5244:2:28::1;5216:5;:31::i;:::-;5208:40;;;:::i;:::-;5200:49:::0;-1:-1:-1;5200:49:28::1;5338:31;5344:16:::0;5362:2:::1;5366;5338:5;:31::i;:::-;5330:40;;;:::i;:::-;5511:17;::::0;;::::1;::::0;::::1;640:25:29::0;;;5322:49:28;;-1:-1:-1;5322:49:28::1;::::0;613:18:29;5511:17:28::1;::::0;;-1:-1:-1;;5511:17:28;;::::1;::::0;;;;;;5501:28;;5511:17:::1;5501:28:::0;;::::1;::::0;5548:21:::1;::::0;;;:10:::1;:21:::0;;;;;;5501:28;;-1:-1:-1;5548:21:28::1;;5547:22;5539:53;;;::::0;-1:-1:-1;;;5539:53:28;;7067:2:29;5539:53:28::1;::::0;::::1;7049:21:29::0;7106:2;7086:18;;;7079:30;-1:-1:-1;;;7125:18:29;;;7118:48;7183:18;;5539:53:28::1;6865:342:29::0;5539:53:28::1;5663:15;5654:6;:24;5646:54;;;::::0;-1:-1:-1;;;5646:54:28;;7414:2:29;5646:54:28::1;::::0;::::1;7396:21:29::0;7453:2;7433:18;;;7426:30;-1:-1:-1;;;7472:18:29;;;7465:47;7529:18;;5646:54:28::1;7212:341:29::0;5646:54:28::1;5728:37;1388:6;5728:15;:37;:::i;:::-;5718:6;:47;;5710:84;;;::::0;-1:-1:-1;;;5710:84:28;;7987:2:29;5710:84:28::1;::::0;::::1;7969:21:29::0;8026:2;8006:18;;;7999:30;8065:26;8045:18;;;8038:54;8109:18;;5710:84:28::1;7785:348:29::0;5710:84:28::1;5924:20;-1:-1:-1::0;;;;;5885:9:28::1;5878:27;;5906:13;;::::0;::::1;:6:::0;:13:::1;:::i;:::-;5878:42;::::0;-1:-1:-1;;;;;;5878:42:28::1;::::0;;;;;;-1:-1:-1;;;;;3329:32:29;;;5878:42:28::1;::::0;::::1;3311:51:29::0;3284:18;;5878:42:28::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:66;;5857:137;;;::::0;-1:-1:-1;;;5857:137:28;;8340:2:29;5857:137:28::1;::::0;::::1;8322:21:29::0;8379:2;8359:18;;;8352:30;8418:26;8398:18;;;8391:54;8462:18;;5857:137:28::1;8138:348:29::0;5857:137:28::1;6051:22;6076:31;6082:16;6100:2;6104;6076:5;:31::i;:::-;6051:56:::0;-1:-1:-1;6269:19:28::1;6325:13;6352;;::::0;::::1;:6:::0;:13:::1;:::i;:::-;6301:137;::::0;;::::1;::::0;::::1;8750:25:29::0;;;;-1:-1:-1;;;;;8811:32:29;;;8791:18;;;8784:60;8860:18;;;8853:34;;;8903:18;;;8896:34;;;8946:19;;;8939:35;;;8722:19;;6301:137:28::1;;;;;;;;;;;;6291:148;;;;;;6269:170;;6511:17;6531:37;6545:11;6558:9;6531:13;:37::i;:::-;6599:16;::::0;6511:57;;-1:-1:-1;;;;;;6586:29:28;;::::1;6599:16:::0;::::1;6586:29;6578:59;;;::::0;-1:-1:-1;;;6578:59:28;;9187:2:29;6578:59:28::1;::::0;::::1;9169:21:29::0;9226:2;9206:18;;;9199:30;-1:-1:-1;;;9245:18:29;;;9238:47;9302:18;;6578:59:28::1;8985:341:29::0;6578:59:28::1;6718:21;::::0;;::::1;::::0;::::1;640:25:29::0;;;613:18;6718:21:28::1;::::0;;-1:-1:-1;;6718:21:28;;::::1;::::0;;;;;;;6766:1:::1;::::0;-1:-1:-1;4111:2744:28;-1:-1:-1;;;;;;;;;;;4111:2744:28:o;3469:210::-;1531:13:6;:11;:13::i;:::-;-1:-1:-1;;;;;3545:24:28;::::1;3537:56;;;::::0;-1:-1:-1;;;3537:56:28;;9715:2:29;3537:56:28::1;::::0;::::1;9697:21:29::0;9754:2;9734:18;;;9727:30;-1:-1:-1;;;9773:18:29;;;9766:49;9832:18;;3537:56:28::1;9513:343:29::0;3537:56:28::1;3603:16;:29:::0;;-1:-1:-1;;;;;;3603:29:28::1;-1:-1:-1::0;;;;;3603:29:28;::::1;::::0;;::::1;::::0;;;3647:25:::1;::::0;::::1;::::0;-1:-1:-1;;3647:25:28::1;3469:210:::0;:::o;2293:101:6:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;7229:835:28:-:0;7657:10;-1:-1:-1;;;;;7679:10:28;7657:33;;7649:67;;;;-1:-1:-1;;;7649:67:28;;4981:2:29;7649:67:28;;;4963:21:29;5020:2;5000:18;;;4993:30;-1:-1:-1;;;5039:18:29;;;5032:51;5100:18;;7649:67:28;4779:345:29;7649:67:28;7805:22;7797:4;:30;;;;;;;;:::i;:::-;;7793:265;;7843:17;7863:30;;;;7874:7;7863:30;:::i;:::-;7907:21;;;;:10;:21;;;;;;:28;;-1:-1:-1;;7907:28:28;7931:4;7907:28;;;7954:20;7843:50;;-1:-1:-1;7843:50:28;;7954:20;;7907:21;7954:20;7993:54;;;10167:25:29;;;10223:2;10208:18;;10201:34;;;7993:54:28;;10140:18:29;7993:54:28;;;;;;;7829:229;7793:265;7229:835;;;;;:::o;9164:61::-;1531:13:6;:11;:13::i;:::-;9210:8:28::1;:6;:8::i;8976:111::-:0;9045:35;;-1:-1:-1;;;9045:35:28;;9074:4;9045:35;;;3311:51:29;9019:7:28;;9045:10;-1:-1:-1;;;;;9045:20:28;;;;3284:18:29;;9045:35:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9038:42;;8976:111;:::o;8150:160::-;8196:53;;-1:-1:-1;;;8196:53:28;;8243:4;8196:53;;;3311:51:29;8196:10:28;-1:-1:-1;;;;;8196:20:28;;;;8224:9;;3284:18:29;;8196:53:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8264:39:28;;8293:9;640:25:29;;8281:10:28;;-1:-1:-1;8264:39:28;;-1:-1:-1;628:2:29;613:18;;-1:-1:-1;8264:39:28;;;;;;;8150:160::o;2543:215:6:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:6;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:6;;2700:1:::1;2672:31;::::0;::::1;3311:51:29::0;3284:18;;2672:31:6::1;3165:203:29::0;2623:91:6::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:6;735:10:16;1855:23:6;1851:101;;1901:40;;-1:-1:-1;;;1901:40:6;;735:10:16;1901:40:6;;;3311:51:29;3284:18;;1901:40:6;3165:203:29;2710:117:18;1721:16;:14;:16::i;:::-;2778:5:::1;2768:15:::0;;-1:-1:-1;;;;2768:15:18::1;::::0;;2798:22:::1;735:10:16::0;2807:12:18::1;2798:22;::::0;-1:-1:-1;;;;;3329:32:29;;;3311:51;;3299:2;3284:18;2798:22:18::1;;;;;;;2710:117::o:0;2002:128::-;1897:4;1920:7;-1:-1:-1;;;1920:7:18;;;;2063:61;;;2098:15;;-1:-1:-1;;;2098:15:18;;;;;;;;;;;9615:595:28;9753:11;;9703:12;;9735:14;9743:6;9735:5;:14;:::i;:::-;:29;;9727:61;;;;-1:-1:-1;;;9727:61:28;;10448:2:29;9727:61:28;;;10430:21:29;10487:2;10467:18;;;10460:30;-1:-1:-1;;;10506:18:29;;;10499:49;10565:18;;9727:61:28;10246:343:29;9727:61:28;9798:19;9830:6;9820:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9820:17:28;-1:-1:-1;10008:25:28;;;9947:2;10008:25;;;10156:14;9935:15;;;10138:33;9798:39;-1:-1:-1;;9615:595:28;;;;;:::o;3714:255:20:-;3792:7;3812:17;3831:18;3851:16;3871:27;3882:4;3888:9;3871:10;:27::i;:::-;3811:87;;;;;;3908:28;3920:5;3927:8;3908:11;:28::i;:::-;-1:-1:-1;3953:9:20;;-1:-1:-1;;3714:255:20;;;;;:::o;2912:187:6:-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:6;;;-1:-1:-1;;;;;;3020:17:6;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;2463:115:18:-;1474:19;:17;:19::i;:::-;2522:7:::1;:14:::0;;-1:-1:-1;;;;2522:14:18::1;-1:-1:-1::0;;;2522:14:18::1;::::0;;2551:20:::1;2558:12;735:10:16::0;;656:96;2202:126:18;1897:4;1920:7;-1:-1:-1;;;1920:7:18;;;;2260:62;;2296:15;;-1:-1:-1;;;2296:15:18;;;;;;;;;;;2129:778:20;2232:17;2251:16;2269:14;2299:9;:16;2319:2;2299:22;2295:606;;2604:4;2589:20;;2583:27;2653:4;2638:20;;2632:27;2710:4;2695:20;;2689:27;2337:9;2681:36;2751:25;2762:4;2681:36;2583:27;2632;2751:10;:25::i;:::-;2744:32;;;;;;;;;;;2295:606;-1:-1:-1;;2872:16:20;;2823:1;;-1:-1:-1;2827:35:20;;2295:606;2129:778;;;;;:::o;7280:532::-;7375:20;7366:5;:29;;;;;;;;:::i;:::-;;7362:444;;7280:532;;:::o;7362:444::-;7471:29;7462:5;:38;;;;;;;;:::i;:::-;;7458:348;;7523:23;;-1:-1:-1;;;7523:23:20;;;;;;;;;;;7458:348;7576:35;7567:5;:44;;;;;;;;:::i;:::-;;7563:243;;7634:46;;-1:-1:-1;;;7634:46:20;;;;;640:25:29;;;613:18;;7634:46:20;494:177:29;7563:243:20;7710:30;7701:5;:39;;;;;;;;:::i;:::-;;7697:109;;7763:32;;-1:-1:-1;;;7763:32:20;;;;;640:25:29;;;613:18;;7763:32:20;494:177:29;7697:109:20;7280:532;;:::o;5203:1551::-;5329:17;;;6283:66;6270:79;;6266:164;;;-1:-1:-1;6381:1:20;;-1:-1:-1;6385:30:20;;-1:-1:-1;6417:1:20;6365:54;;6266:164;6541:24;;;6524:14;6541:24;;;;;;;;;10953:25:29;;;11026:4;11014:17;;10994:18;;;10987:45;;;;11048:18;;;11041:34;;;11091:18;;;11084:34;;;6541:24:20;;10925:19:29;;6541:24:20;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6541:24:20;;-1:-1:-1;;6541:24:20;;;-1:-1:-1;;;;;;;6579:20:20;;6575:113;;-1:-1:-1;6631:1:20;;-1:-1:-1;6635:29:20;;-1:-1:-1;6631:1:20;;-1:-1:-1;6615:62:20;;6575:113;6706:6;-1:-1:-1;6714:20:20;;-1:-1:-1;6714:20:20;;-1:-1:-1;5203:1551:20;;;;;;;;;:::o;14:139:29:-;-1:-1:-1;;;;;97:31:29;;87:42;;77:70;;143:1;140;133:12;158:331;234:6;242;295:2;283:9;274:7;270:23;266:32;263:52;;;311:1;308;301:12;263:52;350:9;337:23;369:39;402:5;369:39;:::i;:::-;427:5;479:2;464:18;;;;451:32;;-1:-1:-1;;;158:331:29:o;676:534::-;791:6;799;807;860:2;848:9;839:7;835:23;831:32;828:52;;;876:1;873;866:12;828:52;916:9;903:23;949:18;941:6;938:30;935:50;;;981:1;978;971:12;935:50;1004:22;;1060:3;1042:16;;;1038:26;1035:46;;;1077:1;1074;1067:12;1035:46;1100:2;1149;1134:18;;1121:32;;-1:-1:-1;1200:2:29;1185:18;;;1172:32;;676:534;-1:-1:-1;;;676:534:29:o;1215:602::-;1390:2;1379:9;1372:21;1353:4;1422:6;1416:13;1465:6;1460:2;1449:9;1445:18;1438:34;1490:1;1500:144;1514:6;1511:1;1508:13;1500:144;;;1627:4;1611:14;;;1607:25;;1601:32;1596:2;1577:17;;;1573:26;1566:68;1529:12;1500:144;;;1504:3;1693:1;1688:2;1679:6;1668:9;1664:22;1660:31;1653:42;1763:2;1756;1752:7;1747:2;1739:6;1735:15;1731:29;1720:9;1716:45;1712:54;1704:62;;;1804:6;1797:4;1786:9;1782:20;1775:36;1215:602;;;;;:::o;2014:255::-;2073:6;2126:2;2114:9;2105:7;2101:23;2097:32;2094:52;;;2142:1;2139;2132:12;2094:52;2181:9;2168:23;2200:39;2233:5;2200:39;:::i;:::-;2258:5;2014:255;-1:-1:-1;;;2014:255:29:o;2274:886::-;2385:6;2393;2401;2409;2417;2470:3;2458:9;2449:7;2445:23;2441:33;2438:53;;;2487:1;2484;2477:12;2438:53;2526:9;2513:23;2565:1;2558:5;2555:12;2545:40;;2581:1;2578;2571:12;2545:40;2604:5;-1:-1:-1;2660:2:29;2645:18;;2632:32;2683:18;2713:14;;;2710:34;;;2740:1;2737;2730:12;2710:34;2778:6;2767:9;2763:22;2753:32;;2823:7;2816:4;2812:2;2808:13;2804:27;2794:55;;2845:1;2842;2835:12;2794:55;2885:2;2872:16;2911:2;2903:6;2900:14;2897:34;;;2927:1;2924;2917:12;2897:34;2972:7;2967:2;2958:6;2954:2;2950:15;2946:24;2943:37;2940:57;;;2993:1;2990;2983:12;2940:57;2274:886;;3024:2;3016:11;;;;;-1:-1:-1;3046:6:29;;3099:2;3084:18;;3071:32;;-1:-1:-1;3150:2:29;3135:18;3122:32;;-1:-1:-1;2274:886:29;-1:-1:-1;;;2274:886:29:o;3600:180::-;3659:6;3712:2;3700:9;3691:7;3687:23;3683:32;3680:52;;;3728:1;3725;3718:12;3680:52;-1:-1:-1;3751:23:29;;3600:180;-1:-1:-1;3600:180:29:o;5129:184::-;5199:6;5252:2;5240:9;5231:7;5227:23;5223:32;5220:52;;;5268:1;5265;5258:12;5220:52;-1:-1:-1;5291:16:29;;5129:184;-1:-1:-1;5129:184:29:o;5677:521::-;5754:4;5760:6;5820:11;5807:25;5914:2;5910:7;5899:8;5883:14;5879:29;5875:43;5855:18;5851:68;5841:96;;5933:1;5930;5923:12;5841:96;5960:33;;6012:20;;;-1:-1:-1;6055:18:29;6044:30;;6041:50;;;6087:1;6084;6077:12;6041:50;6120:4;6108:17;;-1:-1:-1;6151:14:29;6147:27;;;6137:38;;6134:58;;;6188:1;6185;6178:12;6134:58;5677:521;;;;;:::o;6563:297::-;6681:12;;6728:4;6717:16;;;6711:23;;6681:12;6746:16;;6743:111;;;6840:1;6836:6;6826;6820:4;6816:17;6813:1;6809:25;6805:38;6798:5;6794:50;6785:59;;6743:111;;6563:297;;;:::o;7558:222::-;7623:9;;;7644:10;;;7641:133;;;7696:10;7691:3;7687:20;7684:1;7677:31;7731:4;7728:1;7721:15;7759:4;7756:1;7749:15;9861:127;9922:10;9917:3;9913:20;9910:1;9903:31;9953:4;9950:1;9943:15;9977:4;9974:1;9967:15;10594:127;10655:10;10650:3;10646:20;10643:1;10636:31;10686:4;10683:1;10676:15;10710:4;10707:1;10700:15"},"methodIdentifiers":{"MAX_EXPIRY_DURATION()":"4fe11c8b","REQUIRED_SBC_BALANCE()":"795112c9","SBC_TOKEN()":"ca1d7ba3","authorizedSigner()":"c771909c","deposit()":"d0e30db0","entryPoint()":"b0d691fe","getDeposit()":"c399ec88","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","postOp(uint8,bytes,uint256,uint256)":"7c627b21","renounceOwnership()":"715018a6","setSigner(address)":"6c19e783","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a","usedNonces(bytes32)":"feb61724","validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":"52b7512c","withdrawTo(address,uint256)":"205c2878"}},"metadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_authorizedSigner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_entryPoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sbcToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_requiredBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"nonceHash\",\"type\":\"bytes32\"}],\"name\":\"NonceUsed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PaymasterDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualUserOpFeePerGas\",\"type\":\"uint256\"}],\"name\":\"PaymasterPayment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PaymasterWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSigner\",\"type\":\"address\"}],\"name\":\"SignerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_EXPIRY_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REQUIRED_SBC_BALANCE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SBC_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authorizedSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualUserOpFeePerGas\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newSigner\",\"type\":\"address\"}],\"name\":\"setSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedNonces\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"getDeposit()\":{\"returns\":{\"_0\":\"Current deposit balance\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"postOp(uint8,bytes,uint256,uint256)\":{\"params\":{\"actualGasCost\":\"- Actual gas cost of the operation (unused)\",\"actualUserOpFeePerGas\":\"- Actual gas price used (unused)\",\"context\":\"- Context data passed from validatePaymasterUserOp\",\"mode\":\"- Success/failure status of the operation\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setSigner(address)\":{\"params\":{\"_newSigner\":\"- New authorized signer address\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"- Maximum cost of this operation (unused in this implementation)\",\"userOp\":\"- The user operation to validate\",\"userOpHash\":\"- Hash of the user operation (excluding signatures)\"},\"returns\":{\"context\":\"- Data to be passed to postOp\",\"validationData\":\"- Packed validation data (0 means success)\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"- Amount of ETH to withdraw\",\"withdrawAddress\":\"- Address to send the withdrawn ETH\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit()\":{\"notice\":\"Allow anyone to deposit ETH to fund paymaster operations\"},\"getDeposit()\":{\"notice\":\"View function to check current deposit balance in EntryPoint\"},\"pause()\":{\"notice\":\"Allow owner to pause the paymaster in emergency\"},\"postOp(uint8,bytes,uint256,uint256)\":{\"notice\":\"Post-operation handler called by EntryPoint after operation execution\"},\"setSigner(address)\":{\"notice\":\"Allow owner to update the authorized signer address\"},\"unpause()\":{\"notice\":\"Allow owner to unpause the paymaster\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Main validation function called by the EntryPoint contract\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Allow owner to withdraw ETH from the paymaster's deposit\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SignatureVerifyingPaymaster.sol\":\"SignatureVerifyingPaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155\",\"dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5\"]},\"@account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9\",\"dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe\"]},\"@account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3\",\"dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk\"]},\"@account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x49d8dbf8a85b006bcd89bbc40e4e9e113997cc016007de85263bdae70572d07f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bc0d83804c1b795d5c216b3518cd176c48f90db28550f267cbd89746d6b476c8\",\"dweb:/ipfs/QmNdCm4c6hnt7f6Q8q21QjtCNZWWRUaMVEYnQHEv68VnKt\"]},\"@account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00\",\"dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj\"]},\"@account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"contracts/SignatureVerifyingPaymaster.sol\":{\"keccak256\":\"0x960c5ca1dfe087aabbb84401b316b5abb6ac6d978954fd6ef42c26b09ff42d74\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f688f04b7141a28a9ee6805e4458dcc41ce12eef6e4ed2e4b5fb083b5dacf6bb\",\"dweb:/ipfs/QmeEjuEquq4usHiBbVG2kjwFU8jn7fhHo2bzRDBNhPs7Bx\"]}},\"version\":1}"}}}}}