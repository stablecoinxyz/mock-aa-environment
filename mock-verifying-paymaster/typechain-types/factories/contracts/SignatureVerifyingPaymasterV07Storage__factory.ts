/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  SignatureVerifyingPaymasterV07Storage,
  SignatureVerifyingPaymasterV07StorageInterface,
} from "../../contracts/SignatureVerifyingPaymasterV07Storage";

const _abi = [
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "verifyingSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class SignatureVerifyingPaymasterV07Storage__factory {
  static readonly abi = _abi;
  static createInterface(): SignatureVerifyingPaymasterV07StorageInterface {
    return new Interface(
      _abi
    ) as SignatureVerifyingPaymasterV07StorageInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SignatureVerifyingPaymasterV07Storage {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SignatureVerifyingPaymasterV07Storage;
  }
}
