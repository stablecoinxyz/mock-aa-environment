/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SignatureVerifyingPaymasterV07,
  SignatureVerifyingPaymasterV07Interface,
} from "../../contracts/SignatureVerifyingPaymasterV07";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPaymasterData",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "InvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recovered",
        type: "address",
      },
      {
        internalType: "address",
        name: "expected",
        type: "address",
      },
    ],
    name: "SignerMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    inputs: [],
    name: "UnauthorizedUpgrade",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newEntryPoint",
        type: "address",
      },
    ],
    name: "EntryPointChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        indexed: false,
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
    ],
    name: "Validated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldSigner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newSigner",
        type: "address",
      },
    ],
    name: "VerifyingSignerUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
      {
        internalType: "address",
        name: "paymasterAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "senderAddress",
        type: "address",
      },
    ],
    name: "getHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifyingSigner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "paymasterData",
        type: "bytes",
      },
    ],
    name: "parsePaymasterData",
    outputs: [
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actualUserOpFeePerGas",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifyingSigner",
        type: "address",
      },
    ],
    name: "setVerifyingSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifyingSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c0604052306080523480156200001557600080fd5b5060405162001f4538038062001f4583398101604081905262000038916200025b565b8033806200006157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6200006c8162000095565b506200007881620000e5565b6001600160a01b031660a0526200008e620001a8565b50620002b1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516301ffc9a760e01b815263122a0e9b60e31b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa15801562000131573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200015791906200028d565b620001a55760405162461bcd60e51b815260206004820152601e60248201527f49456e747279506f696e7420696e74657266616365206d69736d617463680000604482015260640162000058565b50565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620001f95760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620001a55780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a150565b6000602082840312156200026e57600080fd5b81516001600160a01b03811681146200028657600080fd5b9392505050565b600060208284031215620002a057600080fd5b815180151581146200028657600080fd5b60805160a051611c2f620003166000396000818161037d0152818161045b015281816104e50152818161057c0152818161082a015281816108c4015281816109200152610c2f015260008181610ac001528181610ae901526110470152611c2f6000f3fe60806040526004361061012e5760003560e01c80638224225c116100ab578063c23a5cea1161006f578063c23a5cea146103b4578063c399ec88146103d4578063d0e30db0146103e9578063f2fde38b146103f1578063f5cba98c14610411578063ffa1ad741461043157600080fd5b80638224225c1461029b5780638da5cb5b1461030f578063ad3cb1cc1461032d578063b0d691fe1461036b578063bb9fe6bf1461039f57600080fd5b806352b7512c116100f257806352b7512c146101e557806352d1902d14610213578063715018a6146102365780637c627b211461024b57806381e4d81d1461026b57600080fd5b80630396cb6014610142578063205c28781461015557806323d9ac9b14610175578063485cc955146101b25780634f1ef286146101d257600080fd5b3661013d5761013b610446565b005b600080fd5b61013b61015036600461161e565b6104c3565b34801561016157600080fd5b5061013b610170366004611659565b61054e565b34801561018157600080fd5b50600154610195906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101be57600080fd5b5061013b6101cd366004611685565b6105c0565b61013b6101e03660046116d4565b6106f4565b3480156101f157600080fd5b50610205610200366004611798565b610713565b6040516101a992919061183c565b34801561021f57600080fd5b50610228610737565b6040519081526020016101a9565b34801561024257600080fd5b5061013b610754565b34801561025757600080fd5b5061013b6102663660046118a7565b610768565b34801561027757600080fd5b5061028b610286366004611912565b61077d565b6040516101a99493929190611954565b3480156102a757600080fd5b506102286102b63660046119bb565b6040805165ffffffffffff95861660208083019190915294909516858201524660608601526001600160a01b039283166080860152911660a0808501919091528151808503909101815260c09093019052815191012090565b34801561031b57600080fd5b506000546001600160a01b0316610195565b34801561033957600080fd5b5061035e604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516101a99190611a13565b34801561037757600080fd5b506101957f000000000000000000000000000000000000000000000000000000000000000081565b3480156103ab57600080fd5b5061013b610820565b3480156103c057600080fd5b5061013b6103cf366004611a26565b61089d565b3480156103e057600080fd5b50610228610908565b61013b610446565b3480156103fd57600080fd5b5061013b61040c366004611a26565b610998565b34801561041d57600080fd5b5061013b61042c366004611a26565b6109d6565b34801561043d57600080fd5b50610228600281565b60405163b760faf960e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b760faf99034906024016000604051808303818588803b1580156104a857600080fd5b505af11580156104bc573d6000803e3d6000fd5b5050505050565b6104cb610a30565b604051621cb65b60e51b815263ffffffff821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690630396cb609034906024016000604051808303818588803b15801561053257600080fd5b505af1158015610546573d6000803e3d6000fd5b505050505050565b610556610a30565b60405163040b850f60e31b81526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063205c287890604401600060405180830381600087803b15801561053257600080fd5b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156106065750825b905060008267ffffffffffffffff1660011480156106235750303b155b905081158015610631575080155b1561064f5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561067957845460ff60401b1916600160401b1785555b610681610a5d565b600180546001600160a01b0319166001600160a01b0389161790556106a586610a65565b83156106eb57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050565b6106fc610ab5565b61070582610b5a565b61070f8282610b62565b5050565b6060600061071f610c24565b61072a858585610c94565b915091505b935093915050565b600061074161103c565b50600080516020611bda83398151915290565b61075c610a30565b6107666000610a65565b565b610770610c24565b6104bc8585858585611085565b6000803681604d8510156107a45760405163097637e960e21b815260040160405180910390fd5b6107b2600660008789611a43565b6107bb91611a6d565b60d01c93506107ce600c60068789611a43565b6107d791611a6d565b60d01c92506107e985600c8189611a43565b9092509050604181146108175760405163058676ad60e31b8152600481018290526024015b60405180910390fd5b92959194509250565b610828610a30565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561088357600080fd5b505af1158015610897573d6000803e3d6000fd5b50505050565b6108a5610a30565b60405163611d2e7560e11b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063c23a5cea90602401600060405180830381600087803b1580156104a857600080fd5b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561096f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109939190611a9d565b905090565b6109a0610a30565b6001600160a01b0381166109ca57604051631e4fbdf760e01b81526000600482015260240161080e565b6109d381610a65565b50565b6109de610a30565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907fdeee0b46266dc0734b009b2ca66e2ac28d5fd72d38506a3fe462865f00c5df4e90600090a35050565b6000546001600160a01b031633146107665760405163118cdaa760e01b815233600482015260240161080e565b6107666110d0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610b3c57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610b30600080516020611bda833981519152546001600160a01b031690565b6001600160a01b031614155b156107665760405163703e46dd60e11b815260040160405180910390fd5b6109d3610a30565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610bbc575060408051601f3d908101601f19168201909252610bb991810190611a9d565b60015b610be457604051634c9c8ce360e01b81526001600160a01b038316600482015260240161080e565b600080516020611bda8339815191528114610c1557604051632a87526960e21b81526004810182905260240161080e565b610c1f8383611119565b505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107665760405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b604482015260640161080e565b60606000610cd66040518060400160405280601f81526020017f5f76616c69646174655061796d6173746572557365724f702063616c6c65640081525061116f565b366000610ce660e0880188611ab6565b610cf4916034908290611a43565b91509150600080366000610d08868661077d565b93509350935093506000610d2b8585308f60000160208101906102b69190611a26565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c829052603c8120919250506000610da08286868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506111b292505050565b9050610dd5604051806040016040528060118152602001702932b1b7bb32b932b21039b4b3b732b91d60791b815250826111dc565b60408051808201909152601081526f22bc3832b1ba32b21039b4b3b732b91d60811b6020820152600154610e1291906001600160a01b03166111dc565b6001546001600160a01b03828116911614610e9457610e656040518060400160405280601d81526020017f5369676e617475726520766572696669636174696f6e206661696c656400000081525061116f565b610e7160018888611221565b60405180602001604052806000815250909a509a5050505050505050505061072f565b610eb5604051806060016040528060258152602001611bb56025913961116f565b4265ffffffffffff808216908916111580610ee95750610ed681603c611b13565b65ffffffffffff168865ffffffffffff16105b15610efd57610efa81610e10611b13565b97505b8065ffffffffffff168765ffffffffffff161115610f3a57603c8165ffffffffffff1611610f2c576000610f37565b610f37603c82611b39565b96505b610f75604051806040016040528060118152602001702334b730b6103b30b634b22ab73a34b61d60791b8152508965ffffffffffff1661125b565b610fb0604051806040016040528060118152602001702334b730b6103b30b634b220b33a32b91d60791b8152508865ffffffffffff1661125b565b604080518f8152602081018f905265ffffffffffff8a8116828401528916606082015290517fa832915335bfbcdcce15f4da2c2a11df06a8f97105e9be5968c9f6f42bd103669181900360800190a160408051602081018f90520160405160208183030381529060405261102660008a8a611221565b9b509b5050505050505050505050935093915050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107665760405163703e46dd60e11b815260040160405180910390fd5b6104bc604051806040016040528060158152602001742fb837b9ba27b81031b0b63632b2161036b7b2329d60591b8152508660028111156110c8576110c8611b58565b60ff1661125b565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661076657604051631afcd79f60e31b815260040160405180910390fd5b611122826112a0565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a280511561116757610c1f8282611305565b61070f61137b565b6109d3816040516024016111839190611a13565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b17905261139a565b6000806000806111c286866113a3565b9250925092506111d282826113f0565b5090949350505050565b61070f82826040516024016111f2929190611b6e565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b17905261139a565b600060d08265ffffffffffff16901b60a08465ffffffffffff16901b8561124957600061124c565b60015b60ff16171790505b9392505050565b61070f828260405160240161127192919061183c565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b17905261139a565b806001600160a01b03163b6000036112d657604051634c9c8ce360e01b81526001600160a01b038216600482015260240161080e565b600080516020611bda83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b0316846040516113229190611b98565b600060405180830381855af49150503d806000811461135d576040519150601f19603f3d011682016040523d82523d6000602084013e611362565b606091505b50915091506113728583836114a9565b95945050505050565b34156107665760405163b398979f60e01b815260040160405180910390fd5b6109d381611505565b600080600083516041036113dd5760208401516040850151606086015160001a6113cf88828585611526565b9550955095505050506113e9565b50508151600091506002905b9250925092565b600082600381111561140457611404611b58565b0361140d575050565b600182600381111561142157611421611b58565b0361143f5760405163f645eedf60e01b815260040160405180910390fd5b600282600381111561145357611453611b58565b036114745760405163fce698f760e01b81526004810182905260240161080e565b600382600381111561148857611488611b58565b0361070f576040516335e2f38360e21b81526004810182905260240161080e565b6060826114be576114b9826115f5565b611254565b81511580156114d557506001600160a01b0384163b155b156114fe57604051639996b31560e01b81526001600160a01b038516600482015260240161080e565b5080611254565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084111561156157506000915060039050826115eb565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa1580156115b5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166115e1575060009250600191508290506115eb565b9250600091508190505b9450945094915050565b8051156116055780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b60006020828403121561163057600080fd5b813563ffffffff8116811461125457600080fd5b6001600160a01b03811681146109d357600080fd5b6000806040838503121561166c57600080fd5b823561167781611644565b946020939093013593505050565b6000806040838503121561169857600080fd5b82356116a381611644565b915060208301356116b381611644565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156116e757600080fd5b82356116f281611644565b9150602083013567ffffffffffffffff8082111561170f57600080fd5b818501915085601f83011261172357600080fd5b813581811115611735576117356116be565b604051601f8201601f19908116603f0116810190838211818310171561175d5761175d6116be565b8160405282815288602084870101111561177657600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000806000606084860312156117ad57600080fd5b833567ffffffffffffffff8111156117c457600080fd5b840161012081870312156117d757600080fd5b95602085013595506040909401359392505050565b60005b838110156118075781810151838201526020016117ef565b50506000910152565b600081518084526118288160208601602086016117ec565b601f01601f19169290920160200192915050565b60408152600061184f6040830185611810565b90508260208301529392505050565b60008083601f84011261187057600080fd5b50813567ffffffffffffffff81111561188857600080fd5b6020830191508360208285010111156118a057600080fd5b9250929050565b6000806000806000608086880312156118bf57600080fd5b8535600381106118ce57600080fd5b9450602086013567ffffffffffffffff8111156118ea57600080fd5b6118f68882890161185e565b9699909850959660408101359660609091013595509350505050565b6000806020838503121561192557600080fd5b823567ffffffffffffffff81111561193c57600080fd5b6119488582860161185e565b90969095509350505050565b600065ffffffffffff808716835280861660208401525060606040830152826060830152828460808401376000608084840101526080601f19601f850116830101905095945050505050565b803565ffffffffffff811681146119b657600080fd5b919050565b600080600080608085870312156119d157600080fd5b6119da856119a0565b93506119e8602086016119a0565b925060408501356119f881611644565b91506060850135611a0881611644565b939692955090935050565b6020815260006112546020830184611810565b600060208284031215611a3857600080fd5b813561125481611644565b60008085851115611a5357600080fd5b83861115611a6057600080fd5b5050820193919092039150565b6001600160d01b03198135818116916006851015611a955780818660060360031b1b83161692505b505092915050565b600060208284031215611aaf57600080fd5b5051919050565b6000808335601e19843603018112611acd57600080fd5b83018035915067ffffffffffffffff821115611ae857600080fd5b6020019150368190038213156118a057600080fd5b634e487b7160e01b600052601160045260246000fd5b65ffffffffffff818116838216019080821115611b3257611b32611afd565b5092915050565b65ffffffffffff828116828216039080821115611b3257611b32611afd565b634e487b7160e01b600052602160045260246000fd5b604081526000611b816040830185611810565b905060018060a01b03831660208301529392505050565b60008251611baa8184602087016117ec565b919091019291505056fe5369676e61747572652076616c69642c2061646a757374696e672074696d657374616d7073360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220f498af4abe4e4c09858e876ae7b0bcb171c0cb6e55471e74ba12adb6adb682f264736f6c63430008170033";

type SignatureVerifyingPaymasterV07ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SignatureVerifyingPaymasterV07ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SignatureVerifyingPaymasterV07__factory extends ContractFactory {
  constructor(...args: SignatureVerifyingPaymasterV07ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _entryPoint: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_entryPoint, overrides || {});
  }
  override deploy(
    _entryPoint: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_entryPoint, overrides || {}) as Promise<
      SignatureVerifyingPaymasterV07 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): SignatureVerifyingPaymasterV07__factory {
    return super.connect(runner) as SignatureVerifyingPaymasterV07__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignatureVerifyingPaymasterV07Interface {
    return new Interface(_abi) as SignatureVerifyingPaymasterV07Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SignatureVerifyingPaymasterV07 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SignatureVerifyingPaymasterV07;
  }
}
