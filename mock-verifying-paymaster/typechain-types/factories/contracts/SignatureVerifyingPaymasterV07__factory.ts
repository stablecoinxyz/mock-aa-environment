/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SignatureVerifyingPaymasterV07,
  SignatureVerifyingPaymasterV07Interface,
} from "../../contracts/SignatureVerifyingPaymasterV07";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "entryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPaymasterData",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "InvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recovered",
        type: "address",
      },
      {
        internalType: "address",
        name: "expected",
        type: "address",
      },
    ],
    name: "SignerMismatch",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
      {
        internalType: "address",
        name: "paymasterAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "senderAddress",
        type: "address",
      },
    ],
    name: "getHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "verifyingSigner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "paymasterData",
        type: "bytes",
      },
    ],
    name: "parsePaymasterData",
    outputs: [
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actualUserOpFeePerGas",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifyingSigner",
        type: "address",
      },
    ],
    name: "setVerifyingSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifyingSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620016e7380380620016e783398101604081905262000034916200019c565b8033806200005d57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000688162000087565b506200007481620000d9565b6001600160a01b031660805250620001f2565b603180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6040516301ffc9a760e01b815263122a0e9b60e31b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa15801562000125573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200014b9190620001ce565b620001995760405162461bcd60e51b815260206004820152601e60248201527f49456e747279506f696e7420696e74657266616365206d69736d617463680000604482015260640162000054565b50565b600060208284031215620001af57600080fd5b81516001600160a01b0381168114620001c757600080fd5b9392505050565b600060208284031215620001e157600080fd5b81518015158114620001c757600080fd5b6080516114a162000246600039600081816102da015281816103b001528181610447015281816106910152818161072b0152818161079b015281816108280152818161094501526109cf01526114a16000f3fe6080604052600436106100fe5760003560e01c80638224225c11610095578063c23a5cea11610064578063c23a5cea14610311578063c399ec8814610331578063d0e30db014610346578063f2fde38b1461034e578063f5cba98c1461036e57600080fd5b80638224225c146102285780638da5cb5b146102aa578063b0d691fe146102c8578063bb9fe6bf146102fc57600080fd5b806352b7512c116100d157806352b7512c14610195578063715018a6146101c35780637c627b21146101d857806381e4d81d146101f857600080fd5b80630396cb6014610103578063205c28781461011857806323d9ac9b14610138578063485cc95514610175575b600080fd5b610116610111366004610f55565b61038e565b005b34801561012457600080fd5b50610116610133366004610f8e565b610419565b34801561014457600080fd5b50600054610158906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561018157600080fd5b50610116610190366004610fba565b61048b565b3480156101a157600080fd5b506101b56101b0366004610ff3565b61059d565b60405161016c929190611047565b3480156101cf57600080fd5b506101166105c1565b3480156101e457600080fd5b506101166101f33660046110e5565b6105d5565b34801561020457600080fd5b50610218610213366004611150565b6105e4565b60405161016c9493929190611192565b34801561023457600080fd5b5061029c6102433660046111f2565b6040805165ffffffffffff95861660208083019190915294909516858201524660608601526001600160a01b039283166080860152911660a0808501919091528151808503909101815260c09093019052815191012090565b60405190815260200161016c565b3480156102b657600080fd5b506031546001600160a01b0316610158565b3480156102d457600080fd5b506101587f000000000000000000000000000000000000000000000000000000000000000081565b34801561030857600080fd5b50610116610687565b34801561031d57600080fd5b5061011661032c36600461124e565b610704565b34801561033d57600080fd5b5061029c610783565b610116610813565b34801561035a57600080fd5b5061011661036936600461124e565b610875565b34801561037a57600080fd5b5061011661038936600461124e565b6108b3565b6103966108dd565b604051621cb65b60e51b815263ffffffff821660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690630396cb609034906024016000604051808303818588803b1580156103fd57600080fd5b505af1158015610411573d6000803e3d6000fd5b505050505050565b6104216108dd565b60405163040b850f60e31b81526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063205c287890604401600060405180830381600087803b1580156103fd57600080fd5b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156104d15750825b905060008267ffffffffffffffff1660011480156104ee5750303b155b9050811580156104fc575080155b1561051a5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561054457845460ff60401b1916600160401b1785555b61054e878761090a565b831561059457845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050565b606060006105a961093a565b6105b48585856109aa565b915091505b935093915050565b6105c96108dd565b6105d36000610c71565b565b6105dd61093a565b5050505050565b6000803681604d85101561060b5760405163097637e960e21b815260040160405180910390fd5b61061960066000878961126b565b61062291611295565b60d01c9350610635600c6006878961126b565b61063e91611295565b60d01c925061065085600c818961126b565b90925090506041811461067e5760405163058676ad60e31b8152600481018290526024015b60405180910390fd5b92959194509250565b61068f6108dd565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156106ea57600080fd5b505af11580156106fe573d6000803e3d6000fd5b50505050565b61070c6108dd565b60405163611d2e7560e11b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063c23a5cea90602401600060405180830381600087803b15801561076f57600080fd5b505af11580156105dd573d6000803e3d6000fd5b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156107ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080e91906112c5565b905090565b60405163b760faf960e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b760faf99034906024016000604051808303818588803b15801561076f57600080fd5b61087d6108dd565b6001600160a01b0381166108a757604051631e4fbdf760e01b815260006004820152602401610675565b6108b081610c71565b50565b6108bb6108dd565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6031546001600160a01b031633146105d35760405163118cdaa760e01b8152336004820152602401610675565b610912610cc3565b600080546001600160a01b0319166001600160a01b03841617905561093681610c71565b5050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105d35760405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b6044820152606401610675565b604051632943e70960e11b815230600482015260609060009083906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635287ce129060240160a060405180830381865afa158015610a16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3a9190611317565b511015610a9e5760405162461bcd60e51b815260206004820152602c60248201527f5369676e6174757265566572696679696e675061796d61737465723a2064657060448201526b6f73697420746f6f206c6f7760a01b6064820152608401610675565b366000610aae60e08801886113b3565b610abc91603490829061126b565b91509150600080366000610ad086866105e4565b93509350935093506000610af38585308f6000016020810190610243919061124e565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c829052603c8120919250506000610b688286868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610d0c92505050565b6000549091506001600160a01b03808316911614610baf57610b8c60018888610d36565b60405180602001604052806000815250909a509a505050505050505050506105b9565b4265ffffffffffff808216908916111580610be35750610bd081603c611410565b65ffffffffffff168865ffffffffffff16105b15610bf757610bf481610e10611410565b97505b8065ffffffffffff168765ffffffffffff161115610c3457603c8165ffffffffffff1611610c26576000610c31565b610c31603c82611436565b96505b60408051602081018f905201604051602081830303815290604052610c5b60008a8a610d36565b9b509b5050505050505050505050935093915050565b603180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166105d357604051631afcd79f60e31b815260040160405180910390fd5b600080600080610d1c8686610d6e565b925092509250610d2c8282610dbb565b5090949350505050565b600060d08265ffffffffffff16901b60a08465ffffffffffff16901b85610d5e576000610d61565b60015b60ff161717949350505050565b60008060008351604103610da85760208401516040850151606086015160001a610d9a88828585610e74565b955095509550505050610db4565b50508151600091506002905b9250925092565b6000826003811115610dcf57610dcf611455565b03610dd8575050565b6001826003811115610dec57610dec611455565b03610e0a5760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115610e1e57610e1e611455565b03610e3f5760405163fce698f760e01b815260048101829052602401610675565b6003826003811115610e5357610e53611455565b03610936576040516335e2f38360e21b815260048101829052602401610675565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610eaf5750600091506003905082610f39565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015610f03573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610f2f57506000925060019150829050610f39565b9250600091508190505b9450945094915050565b63ffffffff811681146108b057600080fd5b600060208284031215610f6757600080fd5b8135610f7281610f43565b9392505050565b6001600160a01b03811681146108b057600080fd5b60008060408385031215610fa157600080fd5b8235610fac81610f79565b946020939093013593505050565b60008060408385031215610fcd57600080fd5b8235610fd881610f79565b91506020830135610fe881610f79565b809150509250929050565b60008060006060848603121561100857600080fd5b833567ffffffffffffffff81111561101f57600080fd5b8401610120818703121561103257600080fd5b95602085013595506040909401359392505050565b604081526000835180604084015260005b818110156110755760208187018101516060868401015201611058565b506000606082850101526060601f19601f8301168401019150508260208301529392505050565b60008083601f8401126110ae57600080fd5b50813567ffffffffffffffff8111156110c657600080fd5b6020830191508360208285010111156110de57600080fd5b9250929050565b6000806000806000608086880312156110fd57600080fd5b85356003811061110c57600080fd5b9450602086013567ffffffffffffffff81111561112857600080fd5b6111348882890161109c565b9699909850959660408101359660609091013595509350505050565b6000806020838503121561116357600080fd5b823567ffffffffffffffff81111561117a57600080fd5b6111868582860161109c565b90969095509350505050565b600065ffffffffffff808716835280861660208401525060606040830152826060830152828460808401376000608084840101526080601f19601f850116830101905095945050505050565b65ffffffffffff811681146108b057600080fd5b6000806000806080858703121561120857600080fd5b8435611213816111de565b93506020850135611223816111de565b9250604085013561123381610f79565b9150606085013561124381610f79565b939692955090935050565b60006020828403121561126057600080fd5b8135610f7281610f79565b6000808585111561127b57600080fd5b8386111561128857600080fd5b5050820193919092039150565b6001600160d01b031981358181169160068510156112bd5780818660060360031b1b83161692505b505092915050565b6000602082840312156112d757600080fd5b5051919050565b80516dffffffffffffffffffffffffffff811681146112fc57600080fd5b919050565b80516112fc81610f43565b80516112fc816111de565b600060a0828403121561132957600080fd5b60405160a0810181811067ffffffffffffffff8211171561135a57634e487b7160e01b600052604160045260246000fd5b604052825181526020830151801515811461137457600080fd5b6020820152611385604084016112de565b604082015261139660608401611301565b60608201526113a76080840161130c565b60808201529392505050565b6000808335601e198436030181126113ca57600080fd5b83018035915067ffffffffffffffff8211156113e557600080fd5b6020019150368190038213156110de57600080fd5b634e487b7160e01b600052601160045260246000fd5b65ffffffffffff81811683821601908082111561142f5761142f6113fa565b5092915050565b65ffffffffffff82811682821603908082111561142f5761142f6113fa565b634e487b7160e01b600052602160045260246000fdfea264697066735822122070f83acd085aacc9d16b80a58390289fcea4f566898e2b3b5ed76d9ad4b97a5064736f6c63430008170033";

type SignatureVerifyingPaymasterV07ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SignatureVerifyingPaymasterV07ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SignatureVerifyingPaymasterV07__factory extends ContractFactory {
  constructor(...args: SignatureVerifyingPaymasterV07ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    entryPoint: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(entryPoint, overrides || {});
  }
  override deploy(
    entryPoint: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(entryPoint, overrides || {}) as Promise<
      SignatureVerifyingPaymasterV07 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): SignatureVerifyingPaymasterV07__factory {
    return super.connect(runner) as SignatureVerifyingPaymasterV07__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignatureVerifyingPaymasterV07Interface {
    return new Interface(_abi) as SignatureVerifyingPaymasterV07Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SignatureVerifyingPaymasterV07 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SignatureVerifyingPaymasterV07;
  }
}
