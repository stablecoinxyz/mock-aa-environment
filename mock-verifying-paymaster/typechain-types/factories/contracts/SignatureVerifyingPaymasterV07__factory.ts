/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SignatureVerifyingPaymasterV07,
  SignatureVerifyingPaymasterV07Interface,
} from "../../contracts/SignatureVerifyingPaymasterV07";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requested",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxAllowed",
        type: "uint256",
      },
    ],
    name: "GasCostTooHigh",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPaymasterData",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "InvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recovered",
        type: "address",
      },
      {
        internalType: "address",
        name: "expected",
        type: "address",
      },
    ],
    name: "SignerMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    inputs: [],
    name: "UnauthorizedUpgrade",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newEntryPoint",
        type: "address",
      },
    ],
    name: "EntryPointChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldLimit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newLimit",
        type: "uint256",
      },
    ],
    name: "MaxAllowedGasCostUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        indexed: false,
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
    ],
    name: "Validated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldSigner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newSigner",
        type: "address",
      },
    ],
    name: "VerifyingSignerUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "domainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDomainName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getDomainVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
      {
        internalType: "address",
        name: "senderAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "calldataHash",
        type: "bytes32",
      },
    ],
    name: "getHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifyingSigner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxAllowedGasCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actualUserOpFeePerGas",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxAllowedGasCost",
        type: "uint256",
      },
    ],
    name: "reinitializeGasCost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxAllowedGasCost",
        type: "uint256",
      },
    ],
    name: "setMaxAllowedGasCost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifyingSigner",
        type: "address",
      },
    ],
    name: "setVerifyingSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifyingSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c0604090808252346200027857806200202780380380916200002382856200027d565b83396020928391810103126200027857516001600160a01b03808216908183036200027857306080523315620002605760008054336001600160a01b031982168117835587519492938793869360249385939091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08880a36301ffc9a760e01b825263122a0e9b60e31b60048301525afa918215620002545781926200020c575b505015620001c95760a0527ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009081549160ff83851c16620001b8576001600160401b03906002600160401b03198483160162000175575b8451611d6f9081620002b882396080518181816108b301526109d7015260a05181818161037201528181610424015281816104b701528181610527015281816110e401528181611169015281816114e901526115d10152f35b6001600160401b0319909316811790925582519182527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d291a1388080806200011c565b835163f92ee8a960e01b8152600490fd5b50606491519062461bcd60e51b82526004820152601e60248201527f49456e747279506f696e7420696e74657266616365206d69736d6174636800006044820152fd5b9091508381813d83116200024c575b6200022781836200027d565b810103126200024857519081151582036200024557503880620000c5565b80fd5b5080fd5b503d6200021b565b508451903d90823e3d90fd5b8451631e4fbdf760e01b815260006004820152602490fd5b600080fd5b601f909101601f19168101906001600160401b03821190821017620002a157604052565b634e487b7160e01b600052604160045260246000fdfe604060808152600480361015610027575b5050361561001d57600080fd5b6100256114e7565b005b600091823560e01c8063030aa0c3146111cc5780630396cb601461114157838163205c2878146110b75750806323d9ac9b1461108e578063485cc95514610bc85780634f1ef2861461098857806352b7512c1461091757806352d1902d1461089e5780636ae8de0b146107e0578063715018a61461078657806372403331146107685780637c627b211461070a57806384b0196e146105c35780638da5cb5b1461059b578063ad3cb1cc14610556578063b0d691fe1461051257838163bb9fe6bf1461049a578163c23a5cea146103f657508063c399ec8814610345578063c8b2feb214610310578063d0e30db0146102fc578063d29b068d146102dd578063dee796131461026b578063f2fde38b14610215578063f5cba98c146101a7578063f698da251461017f5763ffa1ad74146101615750610010565b3461017b578260031936011261017b576020925051908152f35b8280fd5b8382346101a357816003193601126101a35760209061019c611a60565b9051908152f35b5080fd5b8334610212576020366003190112610212576101c1611227565b6101c961155c565b600180546001600160a01b039283166001600160a01b0319821681179092559091167fdeee0b46266dc0734b009b2ca66e2ac28d5fd72d38506a3fe462865f00c5df4e8380a380f35b80fd5b50903461017b57602036600319011261017b57610230611227565b9161023961155c565b6001600160a01b03831615610255578361025284611588565b80f35b51631e4fbdf760e01b8152908101839052602490fd5b503461017b57602036600319011261017b577f264b162d0bab716ddc0e70a414b75d9edca1aea7c04b9a14b8bafe80236db22891356102a861155c565b6102b381151561144f565b6102c7670de0b6b3a764000082111561149b565b600254908060025582519182526020820152a180f35b8382346101a357816003193601126101a3576020906002549051908152f35b8380600319360112610212576102526114e7565b8382346101a357816003193601126101a3576103419061032e611432565b9051918291602083526020830190611314565b0390f35b503461017b578260031936011261017b5780516370a0823160e01b815230928101929092526020826024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9182156103ec5783926103b4575b6020838351908152f35b9091506020813d6020116103e4575b816103d06020938361129f565b8101031261017b57602092505190386103aa565b3d91506103c3565b81513d85823e3d90fd5b8084843461049657602036600319011261049657610412611227565b61041a61155c565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116803b15610492578592836024928651978895869463611d2e7560e11b865216908401525af190811561048957506104795750f35b6104829061123d565b6102125780f35b513d84823e3d90fd5b8580fd5b5050fd5b808484346104965782600319360112610496576104b561155c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691823b1561050d57815163bb9fe6bf60e01b81529284918491829084905af190811561048957506104795750f35b505050fd5b8382346101a357816003193601126101a357517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b8382346101a357816003193601126101a35780516103419161057782611283565b60058252640352e302e360dc1b602083015251918291602083526020830190611314565b8382346101a357816003193601126101a357905490516001600160a01b039091168152602090f35b50903461017b578260031936011261017b577fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1005415806106e1575b156106a75761064b8383610610611876565b9161061961195e565b61065883519361062885611267565b8385526020928151978897600f60f81b895260e060208a015260e0890190611314565b9187830390880152611314565b904660608601523060808601528260a086015284820360c0860152602080855193848152019401925b82811061069057505050500390f35b835185528695509381019392810192600101610681565b6020606492519162461bcd60e51b835282015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b6044820152fd5b507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10154156105fe565b5050346101a35760803660031901126101a3576003813510156101a3576024359067ffffffffffffffff9081831161076457366023840112156107645782013590811161017b5736910160240111610212576102526115cf565b8380fd5b8382346101a357816003193601126101a3576103419061032e6113f9565b833461021257806003193601126102125761079f61155c565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50903461017b57602036600319011261017b578035906107fe61155c565b60025461085b575090816108347f264b162d0bab716ddc0e70a414b75d9edca1aea7c04b9a14b8bafe80236db22893151561144f565b610848670de0b6b3a764000082111561149b565b806002558151908482526020820152a180f35b606490602084519162461bcd60e51b8352820152601c60248201527f47617320636f737420616c726561647920696e697469616c697a6564000000006044820152fd5b508234610212578060031936011261021257507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316300361090a57602090517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b5163703e46dd60e11b8152fd5b50903461017b57600319906060368301126107645780359167ffffffffffffffff8311610984576101209083360301126107645790610966916109586115cf565b604435916024359101611671565b825183815292839261097a91840190611314565b9060208301520390f35b8480fd5b508060031936011261017b5761099c611227565b9060243567ffffffffffffffff81116109845736602382011215610984576109cd90369060248187013591016112dd565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116308114908115610b9a575b50610b8a57610a1061155c565b82516352d1902d60e01b81529084169360209182818881895afa889181610b57575b50610a4e578451634c9c8ce360e01b8152808801879052602490fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc96929591939690818103610b415750833b15610b2a5780546001600160a01b0319168217905583518792917fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8480a2865115610b0d575050808585610aff97519101845af4913d15610b03573d610af1610ae8826112c1565b9251928361129f565b81528581943d92013e611c46565b5080f35b5060609250611c46565b9450945050505034610b1e57505080f35b63b398979f60e01b8152fd5b8451634c9c8ce360e01b8152808401839052602490fd5b83602491875191632a87526960e21b8352820152fd5b9091508381813d8311610b83575b610b6f818361129f565b81010312610b7f57519038610a32565b8880fd5b503d610b65565b825163703e46dd60e11b81528590fd5b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141538610a03565b50903461017b578160031936011261017b57610be2611227565b6001600160a01b03916024358084169003611089577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009283549260ff84871c16159267ffffffffffffffff80861695861580611082575b60018098149081611078575b15908161106f575b5061105f5767ffffffffffffffff1981168717885585611040575b50610c71611a1f565b610c796113f9565b91610c82611432565b92610c8b611a1f565b610c93611a1f565b805183811161102d57808c7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10293610cca855461183c565b85601f8211610fb6575b5050602091601f8411600114610f395792610f2e575b5050600019600383901b1c191690891b1790555b8251918211610f1b5750807fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10392610d35845461183c565b601f8111610eac575b50602090601f8311600114610e2f578b92610e24575b5050600019600383901b1c191690861b1790555b867fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10055867fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d10155166bffffffffffffffffffffffff60a01b835416178255662386f26fc10000600255610ddb602435611588565b610de3578380f35b7fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29260209268ff000000000000000019815416905551908152a13880808380f35b015190503880610d54565b848c528893507f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b759190601f1984168d5b818110610e9457508411610e7b575b505050811b019055610d68565b015160001960f88460031b161c19169055388080610e6e565b8284015185558b969094019360209384019301610e5f565b909150838b527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b75601f840160051c81019160208510610f11575b84939291601f8b920160051c01915b828110610f03575050610d3e565b8d81558594508a9101610ef5565b9091508190610ee6565b634e487b7160e01b8a5260419052602489fd5b015190503880610cea565b91908c9450601f1984168684527f42ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57d935b818110610f9e57508411610f85575b505050811b019055610cfe565b015160001960f88460031b161c19169055388080610f78565b8284015185558e969094019360209384019301610f69565b91935091527f42ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57d601f840160051c81019160208510611023575b918f92859492601f8f920160051c01915b82811061100f57505085610cd4565b809294919395505501918e918c8594611000565b9091508190610fef565b634e487b7160e01b8c526041835260248cfd5b68ffffffffffffffffff19166801000000000000000117875538610c68565b885163f92ee8a960e01b81528390fd5b90501538610c4d565b303b159150610c45565b5085610c39565b600080fd5b8382346101a357816003193601126101a35760015490516001600160a01b039091168152602090f35b808484346104965780600319360112610496576110d2611227565b6110da61155c565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116803b15610492578592836044928651978895869463040b850f60e31b8652169084015260243560248401525af190811561048957506104795750f35b50602036600319011261017b5782823563ffffffff81168091036101a35761116761155c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031693843b1561017b5760249084519586938492621cb65b60e51b845283015234905af190811561048957506111c3575080f35b6102529061123d565b50903461017b5760a036600319011261017b573565ffffffffffff92838216820361021257602435938416840361021257604435906001600160a01b038216820361021257509261019c916020946084359260643592611354565b600435906001600160a01b038216820361108957565b67ffffffffffffffff811161125157604052565b634e487b7160e01b600052604160045260246000fd5b6020810190811067ffffffffffffffff82111761125157604052565b6040810190811067ffffffffffffffff82111761125157604052565b90601f8019910116810190811067ffffffffffffffff82111761125157604052565b67ffffffffffffffff811161125157601f01601f191660200190565b9291926112e9826112c1565b916112f7604051938461129f565b829481845281830111611089578281602093846000960137010152565b919082519283825260005b848110611340575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161131f565b93919290926040519460208601947f30557ab04611e84b0a19f25c0d489ab1ae601b717428d689231b0865ec5c08ce865265ffffffffffff809216604088015216606086015260018060a01b0316608085015260a084015260c083015260c0825260e082019180831067ffffffffffffffff841117611251576042926040525190206113de611a60565b906040519161190160f01b8352600283015260228201522090565b6040519061140682611283565b601b82527f5369676e6174757265566572696679696e675061796d617374657200000000006020830152565b6040519061143f82611283565b60018252600d60fa1b6020830152565b1561145657565b60405162461bcd60e51b815260206004820152601d60248201527f47617320636f7374206c696d69742063616e6e6f74206265207a65726f0000006044820152606490fd5b156114a257565b60405162461bcd60e51b815260206004820152601760248201527f47617320636f7374206c696d697420746f6f20686967680000000000000000006044820152606490fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156110895760006024916040519283809263b760faf960e01b825230600483015234905af18015611550576115455750565b61154e9061123d565b565b6040513d6000823e3d90fd5b6000546001600160a01b0316330361157057565b60405163118cdaa760e01b8152336004820152602490fd5b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361160157565b60405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b6044820152606490fd5b903590601e1981360301821215611089570180359067ffffffffffffffff82116110895760200191813603831361108957565b90929161168160e083018361163e565b90948160341161108957603319820193604d851061182a5784600611611089576034870135948560d01c90600c1161108957603a880135978860d01c92604095603f190160418103611813576001600160a01b0391803591908383168303611089576117359461171c8261172c95602061170b611704606061172698018561163e565b36916112dd565b818151910120920135908b8b611354565b928a3692016112dd565b90611ad6565b90939193611b12565b80600154169116036117da576002548086116117bd5750916080917fa832915335bfbcdcce15f4da2c2a11df06a8f97105e9be5968c9f6f42bd10366938551928352866020840152858301526060820152a1519060208201526020815261179b81611283565b9260309190911c65ffffffffffff60a01b166001600160d01b03199091161790565b856044918651916332e1243560e11b835260048301526024820152fd5b5050506001929150516117ec81611267565b600081529360309190911c65ffffffffffff60a01b166001600160d01b0319909116171790565b60249087519063058676ad60e31b82526004820152fd5b60405163097637e960e21b8152600490fd5b90600182811c9216801561186c575b602083101461185657565b634e487b7160e01b600052602260045260246000fd5b91607f169161184b565b604051906000827fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d102918254926118ab8461183c565b8084529360209160019182811690811561193857506001146118d7575b50505061154e9250038361129f565b60009081527f42ad5d3e1f2e6e70edcf6d991b8a3023d3fca8047a131592f9edb9fd9b89d57d9590935091905b828410611920575061154e9450505081016020013880806118c8565b85548885018301529485019487945092810192611904565b925050506020925061154e94915060ff191682840152151560051b8201013880806118c8565b604051906000827fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103918254926119938461183c565b8084529360209160019182811690811561193857506001146119be5750505061154e9250038361129f565b60009081527f5f9ce34815f8e11431c7bb75a8e6886a91478f7ffc1dbb0a98dc240fddd76b759590935091905b828410611a07575061154e9450505081016020013880806118c8565b855488850183015294850194879450928101926119eb565b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c1615611a4e57565b604051631afcd79f60e31b8152600490fd5b611a68611b97565b611a70611c01565b6040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff8211176112515760405251902090565b8151919060418303611b0757611b0092506020820151906060604084015193015160001a90611ca9565b9192909190565b505060009160029190565b6004811015611b815780611b24575050565b60018103611b3e5760405163f645eedf60e01b8152600490fd5b60028103611b5f5760405163fce698f760e01b815260048101839052602490fd5b600314611b695750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b600052602160045260246000fd5b611b9f611876565b8051908115611baf576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100548015611bdc5790565b507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47090565b611c0961195e565b8051908115611c19576020012090565b50507fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d101548015611bdc5790565b90611c6d5750805115611c5b57805190602001fd5b60405163d6bda27560e01b8152600490fd5b81511580611ca0575b611c7e575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15611c76565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411611d2d57926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa15611d215780516001600160a01b03811615611d1857918190565b50809160019190565b604051903d90823e3d90fd5b5050506000916003919056fea264697066735822122034c940f2c8fb1b323b4894be19a5f3b308250e5c1dc8559f24c14ab894edd2a764736f6c63430008170033";

type SignatureVerifyingPaymasterV07ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SignatureVerifyingPaymasterV07ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SignatureVerifyingPaymasterV07__factory extends ContractFactory {
  constructor(...args: SignatureVerifyingPaymasterV07ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _entryPoint: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_entryPoint, overrides || {});
  }
  override deploy(
    _entryPoint: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_entryPoint, overrides || {}) as Promise<
      SignatureVerifyingPaymasterV07 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): SignatureVerifyingPaymasterV07__factory {
    return super.connect(runner) as SignatureVerifyingPaymasterV07__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignatureVerifyingPaymasterV07Interface {
    return new Interface(_abi) as SignatureVerifyingPaymasterV07Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SignatureVerifyingPaymasterV07 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SignatureVerifyingPaymasterV07;
  }
}
