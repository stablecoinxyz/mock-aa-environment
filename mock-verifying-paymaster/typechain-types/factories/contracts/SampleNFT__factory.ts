/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { SampleNFT, SampleNFTInterface } from "../../contracts/SampleNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "mintNFT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234620003825762001735803803806200001d8162000387565b9283398101604082820312620003825781516001600160401b0392908381116200038257826200004f918301620003ad565b906020928382015185811162000382576200006b9201620003ad565b9281518181116200036c576000938454916001948584811c9416801562000361575b838510146200034d578190601f94858111620002fa575b508390858311600114620002965788926200028a575b5050600019600383901b1c191690851b1785555b8551928311620002765783548481811c911680156200026b575b8282101462000257578281116200020f575b5080918311600114620001a957508394829394926200019d575b5050600019600383901b1c191690821b1790555b3315620001855760068054336001600160a01b031982168117909255604051926001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36113159081620004208239f35b60249060405190631e4fbdf760e01b82526004820152fd5b01519050388062000114565b90601f198316958486528286209286905b888210620001f75750508385969710620001dd575b505050811b01905562000128565b015160001960f88460031b161c19169055388080620001cf565b808785968294968601518155019501930190620001ba565b8486528186208380860160051c8201928487106200024d575b0160051c019085905b82811062000241575050620000fa565b87815501859062000231565b9250819262000228565b634e487b7160e01b86526022600452602486fd5b90607f1690620000e8565b634e487b7160e01b85526041600452602485fd5b015190503880620000ba565b8880528489208894509190601f1984168a5b87828210620002e35750508411620002c9575b505050811b018555620000ce565b015160001960f88460031b161c19169055388080620002bb565b8385015186558b97909501949384019301620002a8565b9091508780528388208580850160051c82019286861062000343575b918991869594930160051c01915b82811062000334575050620000a4565b8a815585945089910162000324565b9250819262000316565b634e487b7160e01b87526022600452602487fd5b93607f16936200008d565b634e487b7160e01b600052604160045260246000fd5b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200036c57604052565b919080601f84011215620003825782516001600160401b0381116200036c57602090620003e3601f8201601f1916830162000387565b92818452828287010111620003825760005b8181106200040b57508260009394955001015290565b8581018301518482018401528201620003f556fe6080604081815260048036101561001557600080fd5b600092833560e01c90816301ffc9a714610d935750806306fdde0314610ce2578063081812fc14610ca7578063095ea7b314610bcb57806323b872dd14610bb357806342842e0e14610b8457806354ba0f271461092a57806355f804b3146107865780636352211e1461075557806370a0823114610700578063715018a6146106a35780638da5cb5b1461067a57806395d89b411461059e578063a22cb465146104fd578063b88d4fde1461048a578063c87b56dd146101cd578063e985e9c51461017b5763f2fde38b146100e957600080fd5b3461017757602036600319011261017757610102610e47565b9061010b611168565b6001600160a01b03918216928315610161575050600654826bffffffffffffffffffffffff60a01b821617600655167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b5050346101c957806003193601126101c95760ff8160209361019b610e47565b6101a3610e62565b6001600160a01b0391821683526005875283832091168252855220549151911615158152f35b5080fd5b508290346101c957602091826003193601126104875782908483356101f18161112d565b5081519483916008548761020482610f54565b94858252888201956001938a60018216918260001461046a575050600114610411575b5090610234910389610edf565b8751156103f25781809387917a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000090818110156103e5575b5050886d04ee2d6d415b85acef8100000000808710156103d6575b5050662386f26fc10000808610156103c7575b506305f5e100808610156103b8575b50612710808610156103ac575b5050606484101561039e575b602190600a80951015610396575b90816102f3600185969594016102eb6102e282610f01565b9a519a8b610edf565b808a52610f01565b888b019990601f1901368b3750870101905b610360575b505050509361034b92610330949261033f61035c978a5197889551809288880190610dff565b84019151809386840190610dff565b01038084520182610edf565b925b51928284938452830190610e22565b0390f35b600019019083906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a83530491821561039157919082610305565b61030a565b6001016102ca565b6064909304926002016102bc565b90940493018b806102b0565b6008919295049401908c6102a3565b6010919295049401908c610294565b9091929504940190888d610281565b0494508691508c80610266565b5050505090915061035c9250519061040982610ead565b81529261034d565b600889528891507ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee35b81831061044f57505081018801610234610227565b8054838d018c01528c9a8e99508c945090920191840161043a565b60ff1916895291151560051b840190910191506102349050610227565b80fd5b8382346101c95760803660031901126101c9576104a5610e47565b6104ad610e62565b6044359060643567ffffffffffffffff81116104f957366023820112156104f9576104f6948160246104e493369301359101610f1d565b926104f0838383610f8e565b33611194565b80f35b8580fd5b509034610177578060031936011261017757610517610e47565b906024359182151580930361059a576001600160a01b03169283156105855750338452600560205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b836024925191630b61174360e31b8352820152fd5b8480fd5b8284346104875780600319360112610487578151918282600193600154946105c586610f54565b91828552602096876001821691826000146106535750506001146105f7575b50505061035c929161034d910385610edf565b9190869350600183527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b82841061063b575050508201018161034d61035c6105e4565b8054848a018601528895508794909301928101610622565b60ff19168782015293151560051b8601909301935084925061034d915061035c90506105e4565b5050346101c957816003193601126101c95760065490516001600160a01b039091168152602090f35b83346104875780600319360112610487576106bc611168565b600680546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b509134610487576020366003190112610487576001600160a01b03610723610e47565b169283156107405750806020938392526003845220549051908152f35b91516322718ad960e21b815291820152602490fd5b50913461048757602036600319011261048757506107756020923561112d565b90516001600160a01b039091168152f35b508234610487576020806003193601126101c95767ffffffffffffffff9083358281116109265736602382011215610926576107cb9036906024818801359101610f1d565b936107d4611168565b845192831161091357506107e9600854610f54565b601f81116108b0575b50602090601f831160011461082f57508293829392610824575b50508160011b916000199060031b1c19161760085580f35b01519050838061080c565b60088452601f198316947ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3929185905b87821061089857505083600195961061087f575b505050811b0160085580f35b015160001960f88460031b161c19169055838080610873565b8060018596829496860151815501950193019061085f565b600884527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3601f840160051c81019160208510610909575b601f0160051c01905b8181106108fe57506107f2565b8481556001016108f1565b90915081906108e8565b634e487b7160e01b845260419052602483fd5b8380fd5b509190346101c9576020928360031936011261017757610948610e47565b6007549360018501809511610b7157835161096281610ead565b8181526001600160a01b0383811693908415610b5a5787845260028952868420541687858215159283610b27575b81875260038c528987208054600101905582875260028c5289872080546001600160a01b031916831790557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8780a4610b10573b6109f3575b5050505051908152f35b84939591929451878180610a2e630a85bd0160e11b95868352338c840152886024840152876044840152608060648401526084830190610e22565b0381878a5af1849181610ad0575b50610a9a575050503d600014610a92573d610a5681610f01565b90610a6384519283610edf565b81528091863d92013e5b80519485610a8c57505051633250574960e11b81529182015260249150fd5b85925001fd5b506060610a6d565b9195939492506001600160e01b031990911603610abc575050388080806109e9565b6024925191633250574960e11b8352820152fd5b9091508881813d8311610b09575b610ae88183610edf565b8101031261059a57516001600160e01b03198116810361059a579038610a3c565b503d610ade565b85516339e3563760e11b8152808601849052602490fd5b600083815260046020526040902080546001600160a01b031916905580875260038c528987208054600019019055610990565b8651633250574960e11b8152808701859052602490fd5b634e487b7160e01b815260118352602490fd5b5050346101c9576104f690610b9836610e78565b91925192610ba584610ead565b8584526104f0838383610f8e565b8334610487576104f6610bc536610e78565b91610f8e565b509034610177578060031936011261017757610be5610e47565b91602435610bf28161112d565b33151580610c94575b80610c6b575b610c55576001600160a01b039485169482918691167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258880a48452602052822080546001600160a01b031916909117905580f35b835163a9fbf51f60e01b81523381850152602490fd5b506001600160a01b03811686526005602090815284872033885290528386205460ff1615610c01565b506001600160a01b038116331415610bfb565b503461017757602036600319011261017757918260209335610cc88161112d565b50825283528190205490516001600160a01b039091168152f35b82843461048757806003193601126104875781519182828354610d0481610f54565b9081845260209560019187600182169182600014610653575050600114610d385750505061035c929161034d910385610edf565b91908693508280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b828410610d7b575050508201018161034d61035c6105e4565b8054848a018601528895508794909301928101610d62565b92505034610177576020366003190112610177573563ffffffff60e01b811680910361017757602092506380ac58cd60e01b8114908115610dee575b8115610ddd575b5015158152f35b6301ffc9a760e01b14905038610dd6565b635b5e139f60e01b81149150610dcf565b60005b838110610e125750506000910152565b8181015183820152602001610e02565b90602091610e3b81518092818552858086019101610dff565b601f01601f1916010190565b600435906001600160a01b0382168203610e5d57565b600080fd5b602435906001600160a01b0382168203610e5d57565b6060906003190112610e5d576001600160a01b03906004358281168103610e5d57916024359081168103610e5d579060443590565b6020810190811067ffffffffffffffff821117610ec957604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610ec957604052565b67ffffffffffffffff8111610ec957601f01601f191660200190565b929192610f2982610f01565b91610f376040519384610edf565b829481845281830111610e5d578281602093846000960137010152565b90600182811c92168015610f84575b6020831014610f6e57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610f63565b6001600160a01b0391821692909183156111145760009282845282602095600287526040968488882054169687913315158061107e575b509060027fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef928461104b575b858352600381528b8320805460010190558683525289812080546001600160a01b0319168517905580a4169283830361102a5750505050565b6064945051926364283d7b60e01b8452600484015260248301526044820152fd5b600087815260046020526040902080546001600160a01b0319169055848352600381528b83208054600019019055610ff1565b919394509150806110d3575b1561109a57859291879138610fc5565b8786886110b7576024915190637e27328960e01b82526004820152fd5b604491519063177e802f60e01b82523360048301526024820152fd5b5033871480156110f8575b8061108a575085825260048152338589842054161461108a565b5086825260058152878220338352815260ff88832054166110de565b604051633250574960e11b815260006004820152602490fd5b6000818152600260205260409020546001600160a01b0316908115611150575090565b60249060405190637e27328960e01b82526004820152fd5b6006546001600160a01b0316330361117c57565b60405163118cdaa760e01b8152336004820152602490fd5b909192833b6111a5575b5050505050565b604051630a85bd0160e11b8082526001600160a01b0393841660048301529383166024820152604481019190915260806064820152602095919093169390919083906111f5906084830190610e22565b039285816000958187895af184918161129f575b50611269575050503d600014611261573d61122381610f01565b906112316040519283610edf565b81528091843d92013e5b8051928361125c57604051633250574960e11b815260048101849052602490fd5b019050fd5b50606061123b565b919450915063ffffffff60e01b16036112875750388080808061119e565b60249060405190633250574960e11b82526004820152fd5b9091508681813d83116112d8575b6112b78183610edf565b8101031261059a57516001600160e01b03198116810361059a579038611209565b503d6112ad56fea26469706673582212207ad175ea9ef62474c26371eea3e7d2d50888613533f9418c1dcebe58449d899e64736f6c63430008170033";

type SampleNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SampleNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SampleNFT__factory extends ContractFactory {
  constructor(...args: SampleNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  override deploy(
    name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name, symbol, overrides || {}) as Promise<
      SampleNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SampleNFT__factory {
    return super.connect(runner) as SampleNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SampleNFTInterface {
    return new Interface(_abi) as SampleNFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SampleNFT {
    return new Contract(address, _abi, runner) as unknown as SampleNFT;
  }
}
